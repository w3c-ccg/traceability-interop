{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9ecd1318-33ab-46c3-b9c2-d7a3a37bc21e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "86d4569e-9142-4424-ab6a-efc8fa18661a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e93de90-7164-46e3-9b51-d8fb13a8b05f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5de26fb6-3d56-4beb-94df-c64438b03e1e"
                }
              }
            ]
          },
          {
            "id": "abcd5777-f6eb-46ad-8db3-ea5d9d20a6cd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f67a5df-64ad-4bda-9ca3-e2ec21a8cde7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5dbe888-c6b0-4e14-aaaa-87b9dc2dc020"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6f58c6ca-ee09-4ae9-8912-b2a1df5e7eac",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b47985aa-0763-4c20-9b8c-8f60a210f63c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e6153ab-a561-4514-83d3-ac128fbeb167",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "042d89a4-f42e-41f4-b02d-5404fb15034b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bf4c8e5-477d-472b-9c3e-21371f4ff607"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b46de0c-0821-44ec-9df1-c67aea297707",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3947acd1-31cb-457a-81f1-faf14c6e1f33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6674bd23-c2ab-4d04-a309-481eb339a418",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "217e49ba-b3f3-4435-974e-3a2313f63cf0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31bc9496-0ab6-47a6-bb64-1fb813910d22",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e73947e5-7154-4c52-b0e8-cc4cfec2ee6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26ccaaeb-0bf2-4159-b8f7-7a756d1e75af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6dcf1d1-bc78-493d-9fe1-9f6327bc036f"
            }
          }
        ]
      },
      {
        "id": "cae511e9-0541-436b-b254-0de7ec4f9bb0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "11537d00-dad6-4007-9271-43e6eed86f59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dd22f2c-0816-4ebf-9268-795088a64c65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d944987-2f31-42b5-8e94-e8d0a2c566fc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e945053-81b0-4913-9abf-155b2d474c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b328e22e-0df6-4b90-9f6e-2e538ed7bb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aca41d-9221-42bc-931d-ea61e8e65ce4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b25f7aa-2543-4db9-aa4e-4c8c686f307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33f4f00a-c575-49cf-9f0f-43653ef627f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f8ce12-8e1b-4100-afd9-d1f49b9880d7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16de145-4fea-4e13-b7a6-d75fe8eab49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "447a0c86-d3ae-4ea5-bce8-9806dcb3f982"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3e69f4a-50da-4369-91cc-30bc052c8ba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ae3d2e4-e64c-4434-88cb-aff351b2b7dd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e350116-889b-4b97-9afc-df28500ccedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8273ea2e-4e1a-4d3c-b8e4-d178b3b3c6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861dcd5b-bfe4-44f7-9f02-098ab47ff7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08d7a46-2cb9-48b7-9c8b-30c95ea3c288"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de2a7ca6-e38b-42ea-9507-2cf32d1221d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33d5e7ef-4aa4-435f-87d3-bcb01295d1e2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c5f4875-4fa9-4b6c-86e8-02b11762a672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "091d8a41-56b0-4e0d-b0f8-7c63cdcc3ef8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c288bcad-b916-4d98-9072-929859e1abe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7ea4d15d-a011-431e-96dd-0c2acfdd1e32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32f2705b-0fae-49db-9be1-d52609f6c8a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d00912c-9d11-4fcc-b15c-2ea3b8dbad2b"
            }
          }
        ]
      },
      {
        "id": "e1fe096a-76c9-4bf8-b2b4-8807ec512167",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f6c05269-b89a-418a-98f6-74c4039e201b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7447bbc3-0155-48c7-bbc5-baae69d6eb8f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9224f8e1-3dbc-4af2-bc54-683d0416ff00",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ce1344-f4ea-485e-a2d3-4c3ad4eab7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fa1d65-a61b-49e3-bb64-d417ed5a4c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4d1aa2-43f4-4e5f-a700-c13b082ee652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a62b944a-133b-4f67-bb3f-38a9c161bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc789b9e-bb1d-4b0d-b553-32675bbd3b4f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24206d9-d9b2-44f3-acfd-08f9cb03de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a873f6-291f-4c88-9c09-5139f1bf65bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc824b0-828a-4764-901b-26c4c348d104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81ea50be-e36d-4dea-be06-44a782f35050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49505c4b-de9c-4a91-8665-da708dae9ff7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac277a7f-816f-4041-8bb1-9020754ee7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e003c34-f9dc-4834-a62e-b2d0ef6351d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18cd9a9-fdf1-4956-a682-b0ba42bfaf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c69e99b-3fd3-49be-b324-aa11b3d12cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51a4878-ae23-4df0-bff6-cdb13199ab89",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bb6f9e-b349-4d35-8252-bd4dc15be9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cd0d7c-921a-4187-b069-828aba6d0da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a7b44-6965-4fff-9b63-f095552783e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa424db-1bcf-468d-b5d2-a66adc7b727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa85c76-08ba-4329-aa74-16b85dadfd82",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8628b566-7c13-4d47-905c-67b1603f4b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2335c94-5bcf-47cb-b86d-3254de1e38ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc5746b-39ee-43e4-9de1-b830a969d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c06ddb82-8546-4d0c-bc07-8a0fe766060f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6230ae1-7706-4b23-ae3d-fb65c6d17552",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e53f4-14b4-446a-bb0a-4ff5cfc7dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd05d8ca-3782-443c-9888-4033e6454923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df42260c-16c1-47f3-a430-b99c675be09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c20db90-1c5a-4ccc-85ae-d42cbf2bfd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2cff63-5337-4337-a166-193bcb5d67a1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8609df2-3898-4bbb-b87a-4ed9bba611aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f47f9f-593f-4670-b543-aff3a2ae45e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80047de6-47d3-4652-9d0b-9cc7a0f73621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e7905a-fe29-4a02-97ff-333d049e768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3d096a-7df1-4c2f-ab8c-fdf55a334313",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a5e010-d4c4-4aad-b5e1-6b20c1fd18eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864aad72-7330-4b1c-b400-d6532f384f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b3f5c-2664-4cbd-a750-05062c1587ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6abca3f9-4078-444e-8c60-ff1ee922ad2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99b4590-456c-436c-8466-f4c8b5028075",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a524ca-dd25-4ad9-aa82-f030dc095ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc5e992-12ac-4364-96e5-572090403b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc636092-360e-482a-9b15-dfe6a1f34d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88cd7d1e-f9e4-483b-8e59-d2df9b279e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237b4c7-74f8-4f29-8f8e-06fb86f37bec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4345c9bb-db68-4e7c-bfc0-29430667b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af843e6b-08ab-4412-bdca-f6aea3fb44fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272029b-22e7-430d-8b10-cb6dbdf680a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7cc92d-4832-4b68-9705-12a35b6967d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0911c338-6d9c-4058-b1e1-035a2d499d1c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90a82c-9a5a-4fbf-b8c3-4b7244be8532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f35f1a-4b4b-45d3-aa67-d23fd45cabe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130ac5c9-12a3-4e86-bf23-4593161a1c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5edb85f-3513-42f6-9f66-f90bda505666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617eff79-3259-4b9e-9742-9cfc38168951",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f104f45-3184-430f-b60a-a51a70000867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e88a47-0ae2-45c3-9202-229768d1f26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce239ee8-bbb6-4405-899e-3f6f467e6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f31cee44-4378-4d8e-b925-cea767ddcd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8707d2c3-8884-4374-bc2e-5d41ca56e45d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f01c834-a798-40c4-8d8e-c9a7edafe754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1233a6-8e8b-48df-b0c8-ea8b420bbd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de90c529-d0f7-4d9f-b4e4-cc134e55d724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f8a7146-473b-4dfe-af93-e5bf65003677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e9dd4-416e-40ea-868b-33b2ec457537",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e5f9d-48cb-43fe-b904-83c1cb0247a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1c6fd4-cbd3-46be-9984-39a22abcc700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7cf30a-530b-4c35-a3a9-61dd7d7f4336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "880310e8-ccf5-427b-9d52-8a7c13a2b8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19500e05-37b6-46c2-94f2-9450c5147c38",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ba501-7cc7-4734-8d00-0ad2417d5177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79369d8d-1ac0-4482-99b0-bc1f8fabb852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a440fd-cd9a-4e8e-9def-eec303e9fa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f704218b-e368-4b87-9aee-001ab1c6edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e080fe-3081-4df1-b33f-202755e0a704",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2965875-f11f-4396-936b-b80cdbab180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf1b19b-7ab0-4d05-a459-482aeb526953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc69d5e-aed6-4371-b2ae-4e0af50bd033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeaac6e9-65c7-462e-a061-42348cf426aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a03437-48cb-4d5d-aa47-e6fd6afc9a85",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0974e43-aaa9-4ede-ab2f-9c8c64de32ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52846f6d-cb20-4601-b757-453f1f8f97bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e45374-977b-46e8-8521-1a0f3d0277f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f64b5071-8d71-4219-b72d-e95ea71b9e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b22b92-4cde-46df-bf1f-2e40053ffd15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1119e604-4def-4e03-93d3-32780f886632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7085cc47-d35d-497a-b1af-1d8f215acf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d97632-cbe9-4206-b869-0910245cb51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3687d2-df46-470f-85f4-28184941a8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f95cc4-4210-4c70-b976-2c36e6a0171f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b813d0d1-a72e-4669-8dd2-22f01b9c4981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f5b9e3-25e4-4256-96c9-c005e77e11d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522a275-66f3-4c39-95c3-4c899e7ddc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc78db9d-d2ae-4eb6-8d5d-f5d2f2b72b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f28f21-5ce9-40b7-a355-79c378291621",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5fbcb-080e-4bbd-b35c-1bccc25e4938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2174160-e927-4f69-ad43-3264704cfd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807adb22-90c1-4855-86b7-279b7a193e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3416532-717f-4e77-a15a-b188f55f8b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658f3d95-793e-4707-a10f-0290ecf94a30",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547cac8-ca99-4439-b7d3-449d391759b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875e610d-09c0-46e5-8b1f-b252344dc994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ad051b-59a4-4d7f-ab57-89413b89a82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0667d6f3-f401-43fd-b581-c1fce81056e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ef0c44-e1c6-43e6-8dc5-85a18fa2c251",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a4f56-b771-46f5-8794-f42758a4a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f65e07e-1701-464e-992b-1645b847fa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe932a15-a306-4611-877b-40ffe638d497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df4be0cf-dea7-4839-b984-3229bd188416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e1dce4-1a70-4269-a5a8-ecdad831d4d6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e93eee-6e9f-499c-a37c-5fa635b60ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45a8b13-fca7-4147-abe7-f2cfc17bcade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ed085b-007d-4d93-8856-7ef3a47a396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06eb0992-84af-4776-8b9a-cca876d12bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cc5e9e-8a7c-4af5-a0df-aa5b98eb233b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8618f5ac-51a2-4693-8de3-ae39a09cf38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1dccd1-c3e3-4399-9ed6-aba6988da237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea54e8c-97ec-402b-a923-db7027230038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7e324e-695e-4ca0-8bfa-53c45f4ce0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e51861a-d7e8-49e5-b1b9-2f04d0c148c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d60a91-d86e-43d1-a536-9fdd4011b576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b7d3e0-b198-4434-a762-18277c7c13bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbc4888-1fc4-46a7-b26f-004771095832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4ae4c1-f4a3-4dff-a60e-3e0f3a68bfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c068c28-9ea3-443b-9306-23804f501d3a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73834fd1-a3c8-47e4-95e9-d71806469d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bb5f62-936a-40c0-be56-f47faf18cac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88afe5f-8850-4ad0-b7fd-9be662a161e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8761e4-edf0-4d9f-83d1-a9d1c365b363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5523db6f-8f27-4b3b-be06-cb7225b0ac1f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be6ddcd-55ff-4042-8a0e-590aee65e456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f911d0ba-0d1e-4b03-8f48-3d159632f255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9531f477-f478-420a-a828-f0e80d1a67bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea57b72-a69e-4e90-932e-775cac5465cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab778bf-f1ab-4e4b-867e-4e37afe173df",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbc9d90-c870-45bc-8c9b-fa5c95011449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9231549-f0f9-4749-b345-fe75c7a10197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16054ba3-f5dd-4abf-859d-a20e9b731ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f700515-d074-443b-ba98-f3df85d6d6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f3e281-0bc6-4e47-94e4-405277950734",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864ae414-97df-4d4a-b8a8-2eb9b5317ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1663d7-acd9-4229-b957-d462a10657f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f6191-677c-4aa2-bdb0-6b5f405de810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb66db4c-21ef-4426-ad7f-65e21a468b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b334e17b-a06d-4442-b9c2-6a520824dda1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cd5240-613f-42b9-82f3-9421d072844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3ffd0a-167c-4c2c-b678-17cc5558065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975e8a5d-0ba0-439d-9bc9-f64b21f47de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5942c407-aa7e-46c5-8dbc-618ad0922ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa18333d-d8c8-40eb-af41-23c3bfc56b1d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303c018-07a6-4721-aaf3-4b96c78113d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dec7b86-cf54-4257-b381-a396b10ff985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c691db-a3da-4cc8-ba5e-9880e5ae2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71beeb7b-8911-4e0b-9b69-bb0f1261a248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14757b7-7016-40de-b64c-8224dc809713",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63e577a-661a-4f9c-b21c-e22b76f78707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7151fb-c053-4965-bbae-22e779186705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3564da93-5cfb-4ac5-9da0-813982e93a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe72db20-d20d-439d-910e-7ed9616d91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206a7655-62ea-4508-a6b5-6fc6a6701201",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d40a2dc-81ca-4902-bcd5-cd904e2454a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a051bff6-f267-4a6b-9043-6cb7cc4b7b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a019681b-cfa1-4345-9278-4431937a18db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a5777e-c7f5-42ad-9d4e-94591b0fb773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc65e0b-cfc9-428b-8fd8-04636f3098a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b23bfe1-f8d9-4b16-b673-23d8470e23e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db26e618-fc52-4b75-bf59-734e3766b834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3623d5e-c2ad-469e-b713-b2d3c6f7b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14616af5-f0af-450e-b7fd-d4c139e0fc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ceaa2c-deb7-4b48-94e4-35404addb750",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342e9408-863d-4ec4-a7f8-bd96224e1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a602439-5701-4228-b4a1-75f6c5222a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34cd742-c36d-47a5-8a03-a8a96ac2957a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fb820210-b07f-4eab-b626-e806a9f9cd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f83fbe-4246-4f53-9b68-92c21a75f2cf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8af9fd5-70d1-432b-b41f-ff37a5537ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a133fc12-e44b-44a7-9eca-2fb74c446f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2bb26a-ff65-4223-84ce-5aa5a7d42fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "794a8c38-5a02-4d52-8c3c-2f3ea9315023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb22398-35dd-4690-8d42-8eca2994cba6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d41f055-88b6-4025-bd21-16630b4dc456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa01c50-1ae6-4bae-b061-f71476387957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2da5b8-e3dc-4774-8d39-bc4f50571812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e332bb6-b42b-4e26-83cc-5c47cf31b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e70855-80b0-4ac0-b9b0-4cd85e0ee975",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0050b9-ef1e-423a-8f08-80355e0b776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f596fdfd-2eca-45d4-8f37-68aa287b72c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90591c7b-b0d7-43fd-9252-d584f593d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c443e8-4af1-4f61-bcdb-b1ee2ac100d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d40b4a-5f96-4997-aadd-ca27fccad672",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223066f2-1bd1-471c-8625-bad4de5019ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3fd11f-097a-4545-ac92-b49d46dfe176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c473a593-750a-4d44-83ac-db5eef1cca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54641020-b8a3-4f74-a0ce-d05807b1eb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40afb9b-8e9f-4738-bcb6-30cd62b269bb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f733561-b78e-47c3-b0f0-5e0b8a3bfc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d79c9bf-be3a-4509-bad1-94e92317d358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc78be4f-c6a1-42cc-9c77-b01a576b5f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73e52fa-36a3-44ee-9433-60aeb258d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ef32e7-7db9-4e90-8c9c-6fafcaa7d4ab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52845198-d7ab-4190-a190-053f82ff526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422d07a4-675f-4021-b2e5-8bac0238a921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49106416-c350-4fe6-964f-c2b4d3a8ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "513d10ad-9d5a-4074-9c4b-dc8e98388d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e08e80-e402-440a-b456-70f1e78a54f6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a28db-58fe-4400-8778-4a8a725e73b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb776d2-221f-47b5-a3fe-115b7aed32ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391f0598-4860-4f09-8ebd-0e80c1847f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3d10af28-9c7d-484d-864f-212250e0b9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a6a06-4a4a-4da7-b716-47851fd71502",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77c818f-d792-49df-9e85-e6efba14c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27af200-62a9-49a1-92b3-f0e4d2b79bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aca3768-8840-4a35-97fa-3ed0579794ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d7ffe6-bfcf-4d35-acaf-6e58086c329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdf6ee9-7965-4f79-af68-c165ae669128",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00818268-586c-4ed7-a776-0be0ea666558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c71bca1-48f5-499a-a59b-19df887fc044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24612958-d497-4ef0-a760-1c8abc66d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e3b975-45f8-4b4b-861c-bf11d9187842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82835dc9-6195-463b-ae45-9df422158f84",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b90f684-b797-4259-9e71-3fa64b05012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e461859c-e9ad-4327-aacb-6fd4cee6bf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0130c3-8e60-43e4-8701-0d015108b30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "188f2265-7c39-4357-bc09-e8787a250a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0771764-10f2-4e92-9db1-641b114b93c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a797dd0-b72c-441f-b94c-c50b046faa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c61028d-f1a1-41d7-b9cc-2f3f9a66bcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bcffbf-10bc-409b-afe6-d09db185b67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60bb6e2a-4b61-4268-86b8-80e6b400db67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1ccc8-05e9-4f87-b062-84a7550afefb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5c2604-ecf8-4146-8e6c-2ffd15df7744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fda8df6-b7c4-4331-a705-8233918b45fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1c1d18-0db3-4957-bfbd-2b7df5007537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7ef6f1-e284-41b7-a77e-a63106efbcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f8fe9e-5316-4f7c-9aed-f8f18cf8e831",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd10bf5-cff6-4daf-b5ac-717cba576eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de3187a-1c5c-44ec-9b32-d30ce3044efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4098c61c-1a4a-4d44-99de-40404297c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d783b5fb-45d7-4223-92b4-8b09d64facf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d752e59b-ef88-495a-947f-c4c3825920fa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465be657-255e-432f-9b3e-0a0e7d63969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e822d31f-ab0d-4307-ad3f-8e6ec8aad68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a7e37c-096b-4590-b742-ac99d1789cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dd30e2-7083-46c9-a87f-38b6204ce2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b1233a-0e21-40e8-bbc1-ed5c51f86047",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023ff9c8-57eb-41d8-839d-484b05cd8152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1993a9f-a5b1-4612-b0b0-ed1081420c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233dd4d1-8c6b-4277-a8f0-b8fa3910adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "968978dc-952c-4977-92df-2f609d8fe2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c861f0a2-b430-4309-8e07-3f3beb458557",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d825fa-0112-4fdd-a358-22e1d0c5e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a209a8b-36f3-440e-8529-9d940d539d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998809da-cff7-484d-84b2-b282bd64c098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1a6def-d990-4e8e-a618-76752e5dc22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449abe79-b9fe-4916-af01-ea79791ee4ea",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a2fb86-2996-4f83-8ea5-088ae2db0b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57eae018-a925-4fbb-a8b4-bcf894c52916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e35286-162a-4d89-bd80-4d024e444ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee7af5b-b2db-4add-bd47-eca1353d39ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f131b02-6d23-4fa3-8784-fd31d6b99ec8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd8c21b-81a5-4a05-ab80-070a61417206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21c294c-d5f5-46c8-afe2-350dc772bc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9229cf3e-1f10-4a07-84d3-b0a18843cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "478f94eb-29d9-458a-9590-f6264b860e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680a1470-f161-4991-ad92-58a2ea91932a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3372035-74bc-428d-81ce-bbb9aca93d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c031f9f-ca9e-48ee-9fef-742aa279ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd92ab8-8baa-45c4-af02-566c6326aa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d5407f-4d0f-45ff-b978-8374b1a2de9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7977f9-a8b6-493e-8f84-81680360361a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd9ac20-e294-4153-8de3-319c0b1d80c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dadca71-2004-4e4b-a1d4-c02444a7742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a69bb52-9957-419d-be91-f7dc175089d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e07d56-19ea-498e-847c-94ae6a73b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de57bbb9-6465-4c34-9596-1758ddc8495e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373935a0-c46e-4a3b-b580-c48f8280b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e373f7-694e-4212-94f4-fbbd48a10ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c8fb0a-1466-46fb-898c-f123c5fc3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6f19de69-f4e1-45cf-a165-38b81b9f29b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7f2041-293f-4af1-98fe-2ea2a4269be0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7663287f-80e0-4848-b57d-aa8a7d92a730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cfabf6-2cd5-444b-99c9-6892149d628a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf6b408-b297-46c6-8de8-a7f9304da1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11091aa-c79d-49a9-af6b-cec3adc42766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6a6155-b6e9-46a7-89ab-52c77fa74787",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e465c3-1c95-462a-98fb-c607cdd13a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6836f2f0-fcc6-4723-b5f3-74508ed16e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c739b-f3b7-4daa-bd17-a1740401b922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b92026e-f1cd-4538-ad0a-1bb01c408b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff0e9af-2fc9-462e-a7db-b34ec75f6aba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbddcf9-c9a3-4b1f-b1b3-44bc03947739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf422d-8093-4e23-8c62-8a0d79eee55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b55337-bfe7-42e2-a98e-9ba7983db6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3bc970-a0ce-4cab-9322-7f97341a5ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda9fcb3-3f15-4f91-b09a-4ddc5abd470f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54403d24-f19d-40d4-ac6b-658e263a654e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a026a93-35bd-4732-b96e-a4a5930cdd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31038bb-a7e8-4282-94bd-5c472f1b38cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d492ab2d-cc53-4bd8-bffd-6273cd14530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191775ba-d075-47b1-ad51-e7d5c01a4582",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2442380-878f-4edc-bb5e-312c2278b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3ad844-894d-4286-a395-5b3b4d73b800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701c0ad-9c95-44e2-9faa-96f3f9c6c8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7db9b5-5aa5-41c2-9fff-3390a3f8437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333fa9d4-af6c-4d0a-89d9-52f847e6c8f9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe3f97b-27a3-40fe-a0e7-f5e73bdebfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b517d934-ce03-4b45-a06a-ef09f6e149d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8883ce85-bb22-47e7-a894-08735a974adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d700ce-6b59-46df-97cd-e565019bdb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e719c2-3fae-4728-9e99-8b8996e0e7b2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96966cfb-e500-47a2-a259-d45831d09983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ab999c-e9f8-4d98-9ecd-fa6d26791e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55056e40-436f-4d2c-9b0b-b664d9d5d278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1600de-1679-436f-91c2-5e96c8a65799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7f003c-c0d1-4baa-90a9-5bd45840ba8e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d3edc4-d114-45bd-9236-7a32b02c0aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020a5270-4fa3-4baa-ab1a-ec43b31613c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6802385-8957-4986-8eff-25f060424119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d3f57e-a1a7-4ccd-9df7-226a097a8dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a381a9e4-a57d-4b0c-bac7-f7c94bce5452",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbc9fcf-c266-4f56-ac4e-cbd9b3deef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64052fc-dd7e-48fc-bbc2-ac69a5074b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf29bb4-7b70-438a-a63f-65b3dba0a099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6376e1-f849-4782-930c-569063979c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d3d5eb-87b8-4a9b-869e-26ea790fa387",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afe4864-e836-42c6-8eb7-2b0da1fc3e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8a6863-0f06-4db4-a1b7-85399ae83106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83130792-bac6-4784-8252-ffa80d9acfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d964761d-9ebb-4abb-86d8-9226717e34d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5d2541-bcf0-4d1f-956a-a27ce063460d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e6a6c3-5fba-4f7e-8855-ea7ffd053c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47db6f95-bf1e-408a-bd92-ef5416966f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff084c-6c41-421d-a550-d973cdbd7ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d590cd3-a468-46c5-ae91-472933709eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e5225a-bb92-46b6-b9f7-61a05d40d6ef",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7cf598-2bf4-4080-bd38-66437053d56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02fdaa2-fae7-49e7-a0a1-944c0c7f0358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0808b38d-ebe6-49ee-8c87-c06fbeef5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea5bd6b-1250-4502-8cfd-3a714e6d6792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6641846-d8ad-43b7-bc4a-b7bc23dd5a70",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5467a3a0-8da1-4f2c-984f-80abb96771a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499893ef-63cf-4073-ae6c-d45c51e2d5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0b2a0e-45d3-48bd-ba42-937594b708fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ff1bd0-f49d-480a-a7b4-9c91be6fa5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da2b9f0-43cd-482d-83c3-3110b62e4fd7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42582aa2-fd02-41b0-8065-39942e46b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2d623b-877c-494f-b172-d7f1ca56cc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e142abd-670e-4a49-8203-5c31dd4cfc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9363abd-81f0-4be8-ab7c-0952dceda3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7ef96-6ce7-44c1-a20d-40de8b427c3b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2348acc-8389-4495-9b6c-f26790f872a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b30745-534e-4b8f-a874-32d8626f4568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a8b350-b932-4f8a-9eb3-65c43621e497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49d17cb-122e-42ab-b761-1d46c0b4d2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9b42a7-2a35-44f9-977e-9a2ce56fbef2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb00894b-7594-48a8-a572-8ed24920d715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd393098-cff3-4be0-a8c2-6c574adf3b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a16cd5-fe75-46e6-bbfb-51226de73b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db18d58d-cac6-45b6-9f0d-385861da21ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987f5b27-787c-4459-8c3c-3d7aadf2d56d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0ed83e-ff85-4d10-8eb3-c53ef422e763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd510e50-c307-48fe-9e0e-3f068ef3be39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdeba17-fb97-43a8-bd89-119be87d3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b4c12f-0dc2-4fdc-9b84-b18215c884cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf8693a-97ca-48b8-a552-cdd1ccc9edc7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcdc41f-56fe-4d09-b995-f0ff7c703a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b3249-86b7-420f-ab75-7f3f488796d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6dd27-7d28-4181-822d-1e155c330605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0781a19-ab9a-4ac8-b8af-9c21116bfdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2288a6bc-3914-4fa0-a624-208072dba554",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f478d7f9-2fff-4d80-bb79-c62ddcc6b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f7bfbb-4bc7-4721-938d-9eb527769b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ab32a4-9516-47ca-a9bc-abd2b2466e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02d5ce8-4aea-493c-9df5-84752845f52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4841bb-8f67-49a9-94a5-b54809a8a313",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a26af7-5ec5-45d1-ae59-b9105f0be70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d34498-424e-44a2-922e-78bb9cda3b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2b2dd1-204b-48de-83ad-721c9d740a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56325c0-6755-4e26-a33c-48704beb42dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283aee7-5eee-4489-a06b-f95bd703a95d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708229fe-d7b6-4151-a1d0-823aaf35e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99d1e00-da65-495d-a7af-5f05cfcb570b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4a20e-674a-4a9e-a6ab-5d3f8cf98e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "889908ef-1e2d-4f56-9eef-1c89f1d4803a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c69ce75-d2f8-455c-bfe8-6f3ebdc9703b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37512b33-22b6-4715-b5af-5460af704f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422b02d4-4eb9-4b5c-b224-355e0c2b0826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cf549e-fe52-4fa1-81d3-1d2befa61f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "355a40ad-bc2c-43f2-90a7-565557d6860f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e620642-cd79-4cf3-b505-20e60db46dd1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20db9812-881d-49b2-bfe2-415a51d3bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c29e5-ddab-4fdf-8dbf-2b85fcaaa204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3224b30-5aee-4b39-966f-b3831ba2488f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3d8463-27e0-4c3e-a8fc-e403a679a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0200fe4e-8288-4fb9-95b0-826d13171849",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714dd25b-58e8-4b14-ae6e-9f21bd1e4895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f31da9-fe81-48b5-a3a4-cc7f77d5caff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38673f88-222c-49dc-8e0e-2e2aefc12d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7529adb0-032f-4e4e-b8bb-ed3c69d1f758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d43f7-277a-4839-bf1d-16dc50e500cd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912b20c3-3115-437e-8ad2-d244a2c122ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eeeb89d-427a-411a-8ba9-6388827b2898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f35833a-8770-451f-9414-706717f5cf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc05ba9-20ab-430e-82d9-150d7bf93ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c3bb1-07da-456f-a274-337e712d5152",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba57ae48-beab-44ed-94ff-1835b4382c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed5d6c6-8816-409b-a98e-3e2ee2194df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed0a9c-94b6-4499-8bfc-72e93170b676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce546a5-84ed-4b96-9f7b-30f9cf5623ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e829ff80-7fc3-497f-8eec-c7e425707673",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec15161-510b-4ca9-b4c1-9d2dab3e764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a14f9e-5224-4476-b67c-fdad824ef478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9055416-4334-4431-8241-09514cbae194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec9230d-fb21-4c37-8a17-515508b9275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8acb71d-ec15-40ab-a522-5f141695a5b7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28183e57-3498-4b4f-9cad-f3ff229c4958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b3ee48-d4fe-41d7-abdb-a0738abe5be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd60ddc-ef76-44bd-9699-6d673f36845f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84389fe0-079e-4245-b4e7-59673150289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9722dc16-9c52-4e10-bfe6-017fdb502b9e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3b5634-8dbb-4b34-bbcf-a2d935a407be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c68b0ba-2e58-4d33-a882-fa694497df5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4028cc33-9e0b-451d-aa3c-50bcd0452879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8a0202-045d-4fc9-9a24-6048e0478cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24ca40a-0412-48f6-a678-3e2df56d9cd0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae7a20-d75d-43a9-9caf-3b1abbf20d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe27203e-05a2-416c-9139-e365e007f6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ce90a8-6b68-4d1c-b2f0-39a14aceda67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c68884-0165-4dbe-ae4a-8526731cea57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910021c5-c874-422f-bef1-44c8ee29f7cb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e1b2f5-0372-47bc-984b-8fcf219e3e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dfb2a1-d42b-4c97-b384-336f2f1f7267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f790cc-7d37-444f-89e8-6c241380d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2ab0dc-eb04-41f7-be2f-c33791f077fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3f39d2-b405-46b1-afe4-c407531a9c50",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a0e51a-afde-4d7f-ad09-1f89b59d70b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b468e4-df0a-481a-b85b-bc5bdece40d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07a34cb-a92f-442d-8118-029ea87ab9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62d18ac9-9348-481c-9567-9561c30a118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a12041e-e128-4147-a050-da3cf2e7df50",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11f49e6-80cd-4b4b-afc4-1e96bc19fec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06312ba-28be-46eb-b8f6-6e8b67224e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d97df86-6054-49d5-88e7-2c07867f76c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb8cd0c-9e38-400c-bea2-5ab96df9bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36faac1-f962-4e54-8488-0f2bd6a08294",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be02eb7-3407-4751-8ab0-d7bb8579adbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfb3c19-7291-4ff7-98c1-2d163a260008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97f4aed-128b-4ec4-b727-0af708d149eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b5f686-2bd2-43da-b460-b1861bbc1209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88025a-f8a9-4085-ac67-a3672ec174e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1558621f-b944-44f7-8abc-eb2699578df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7967a5ab-5dc0-4d09-8612-e6c88d5b80df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec44625-24f6-494d-8a2e-87f17da6b269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c84163-638c-4b6c-bc6d-eef1a82d5e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040f8898-a3d4-4326-804f-c9a332710915",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f73b61c-7998-43cd-b2f3-9d6021a4b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfe1a5c1-88f0-4d5f-955d-d155f3cc704b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fc154c-1d23-4a33-b565-60b8534c76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa7b91-f41f-492e-9c63-249717198b0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6ff80ee-cdbf-47c4-88e7-846ad0fb82bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5841652a-0cd0-44fe-8a20-0b5914ed30a6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf05f7ef-97e7-44f1-be0e-1b6f0622a271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "798e5545-0ee3-4f9b-9daa-947bd0321f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7064e1-1bca-4a35-ba42-b849015ca6bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3693133e-6b9b-4ed0-888a-95e566611729"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "312cb367-63de-4c5f-9753-554ca88c2f04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaad25e9-ebbf-407a-be9e-7d174bbee811"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0331d790-6d23-4987-9a51-1469def71918",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaaa6716-6248-4b88-b1ed-730e4d0462a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "332bb1b8-3f74-42b0-aac2-80c0c676487c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0dd9f1e-4015-47b9-ac40-62d422ef1e0b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc320a1d-abdf-45e5-9556-b80c670b040c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55712080-8505-4ea5-b214-c99bd4d03720"
                }
              }
            ]
          },
          {
            "id": "bc0e17e0-9377-497b-87c5-86a183cade06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cba81a8d-f7da-4dfd-9c33-f1e09045ac35",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e50ef7e4-0ae8-4723-9a7a-6b14bca8abbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff043d32-e82a-4c97-8727-7064d892465d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbd68152-ce4a-4e6c-ab25-a3805edead69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76aeedf3-2e32-4f65-9faa-e3dce5253ea4"
                    }
                  }
                ]
              },
              {
                "id": "0d1b509c-b3d0-4233-8fcd-98c09ec1bb70",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8626124-f349-4753-a4e1-e2ff563f590a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84024eb2-fad7-4904-8440-8d18e04a691b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "367f8300-06a3-4808-8616-26f796acbb60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7d60f93-f7b3-45bf-b4cd-4f9569ba76f4"
                    }
                  }
                ]
              },
              {
                "id": "25bc478a-264a-46b6-9ead-0bde5c425528",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37679071-43e7-48b9-ad52-77d4cfdea185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "755c2ca1-402e-4176-a2e9-73d79be2fd07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6fc21b7-e6de-4dd6-9902-8efc1a77e786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b54dd9a6-0def-4394-b881-9871c0ae0fa6"
                    }
                  }
                ]
              },
              {
                "id": "9e571474-de25-4063-ae05-a950b03122df",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2261021-f3c1-4ad7-a829-4c2b48921641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "152d4776-a003-4321-8504-cc75b28a0614"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28173fd9-8aba-4b80-bfdc-7f70b741e014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af04972c-a3c0-4994-8068-1ed3877a8fc0"
                    }
                  }
                ]
              },
              {
                "id": "d7cec880-dd61-4426-9b0d-2eeea2e1c382",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24d51def-241e-40dc-a0d7-f84fd475bc3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c440f754-9633-4cb3-be8a-8af523b24b61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8ce8ebb-b39b-4ed1-b1bb-9aa5ace40377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e6812a24-72f5-4d0a-b1c7-d5e092a960af"
                    }
                  }
                ]
              },
              {
                "id": "31028400-3131-41fb-a245-83f8a1b8f4c8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084b7b3e-19af-4dc6-a7a2-28386f3b4e2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12dbaae4-8490-4d35-ad0f-cba66cceebd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4342d6b5-f5d7-4046-b4da-efbf3e32b060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "909cfb8a-ecff-4e2d-a1f3-28ee3afee766"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecbc050c-230b-4c5a-ad6e-6e04dcfabd09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f911a33-216a-4082-b363-11b934af2546"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f347fde7-7d9d-40b7-8bd0-026a25b82dd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "888318c8-341a-4c14-a215-89237829334a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc3ed2e2-b3a6-400e-833f-d06f3905f474",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "55e4462d-0b05-43b8-973c-11a01ed5a291"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dea5244b-2148-4364-9075-4a8add1ce067",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5731dafc-52bd-45e4-9a20-fc585b25d0bf"
            }
          }
        ]
      },
      {
        "id": "f8597942-f0ff-457f-a24e-85f8c317b771",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "44db8aa5-4d5e-453a-bc99-70d1ffaf9e03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e31ef48c-389d-402b-a0c8-59236fccfe35",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9009cb9-3996-42ac-9b97-7be819725b34",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92012297-c6b2-4f6e-a6c6-b24a50034aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9914d65-3a00-4258-b8b3-4781809dd33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a32b6-72dc-433e-ac3c-0c9d58f826cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e08417-fbb6-4a31-aae6-57544d559bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540d1891-babc-4ab7-ba3b-949abc8f5a8e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1319754e-430c-4411-b3da-537aaa22716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101d3da4-6bc2-4806-83fe-58c915383899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14fa451-b0ce-49fa-9c21-299fd5c4c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee37c9ff-eacf-4ecb-97d7-7172898c603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccba852-0a80-424b-ba70-35354e7f65b3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bf8fab-1eac-4392-9800-a4a471f3ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b243fc6-d5e9-4ea7-bb79-2678a8fe63f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca4a7ec-9950-43ee-bd0e-5e077a6a027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4a2d28-0af5-4b32-b1fa-ef9d3f452395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b31f8-e262-4158-8079-742e6e3e6dbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ca5f35-ef43-4a57-bf65-881d4250eca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d717b-d961-48e5-97ff-611b07262416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc8bb3d-18ee-4e46-ac80-bf38d381a970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f4e706-02da-450c-8ec2-182273933b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b3046-ce84-4fb0-bb38-f961cdcad057",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2eb166-28e8-4336-89df-4078fd9a30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc205a4-775e-4696-ad1a-9cfbb273c8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e5c5b6-33ae-413b-9f7b-f2daa6bc2059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b665a4f1-811d-4f75-871a-a5ba5f647270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c33706-b101-4ad4-a741-882b728dbd6e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb91cad0-8dd2-4622-abff-6575b87462f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950df92c-ba65-4ce9-82cb-d7af28849dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b6992-f517-42bd-959b-85a2979f127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f624ec-8e17-4f80-975e-f26178e5873d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d26d47-dfd2-4348-92d3-7f93069dd790",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a36e9c-7843-4729-8ed5-12df4a93ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f79e98-cb38-4026-96b5-e60df890a9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb640a50-f31d-4c82-bbe8-a46f9537fd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea34892d-5f64-4981-91e4-599427a5552e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e2ce86-6f2a-405d-b95e-ea8bd4996dd5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92035b6-30d6-4328-866e-a03a7820f18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a697a3-564b-48af-a63d-282f72af4b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be5876a-25dc-4b18-9955-d0dd5a6aa545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5a9600-4921-41c8-83f1-70b7094118e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c17ce-6957-41a5-91b7-00050311f780",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bd4e92-53d4-496f-91c9-e4a2e104fe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86205364-2f7f-41ad-a73f-da32d486d225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f99e9-aec8-47d9-812c-eceef0298b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "580be1c3-14fd-4e34-b783-0f37e3defcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593972c4-2754-4d71-8905-2286bb9a63b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c7eb52-6d60-46f5-a241-62af3898edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6c15ea-9212-47a8-9d49-a1a8e8cf3e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c51df53-8dd6-44f8-af3d-0b27169ce48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5832287a-7d1e-427f-81da-3d357c612e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd519835-3dd9-4d8e-bcb0-594f1c2bc762",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528364ee-6d7d-4a41-9a1e-fb174cf239c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62511598-cf21-4cb6-9987-90cf88330b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb3cb0c-7525-4561-adfa-03a38fb66107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44986b66-05c4-4645-a1ec-e2776be8beca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fdc7d9-8a18-4044-867a-bf97467dc370",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cd37d5-4137-4b0c-a86e-cfa8b5324dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624cd0c1-bb28-4fef-9c74-b8debed40d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60db0d07-ea1c-448b-9a08-873083bab6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1bb7d9-fdec-462f-af9e-f9a33291b6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad93b248-5ee7-4529-b6e6-8815dd9a72d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f26425-eea7-4251-b831-dd84e4a4e17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f2f800-6777-4ce1-87e0-ced0af6de609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa49ea5-3206-43a0-a6a2-ca09a8b0fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9461082-9635-4238-bab9-61d2bbcc2f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0961875c-c3a8-45f4-b314-549c005f7cc5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c8ad10-3d1b-4823-862d-858dc5375607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b67eb9-e7b7-46da-9849-db224da11f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867abe2b-5091-4edc-9e17-a2b64c0dd46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8d6727-c5f7-4830-9528-258905302835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dc4dca-cc9f-4074-9ff0-9fcb0aa1c714",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcfda7c-0161-4164-abd3-75dd4b55a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b024ff3c-3aea-4bc5-a8ff-a15c240a2477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a61695-6a54-45bd-8384-fdb6a2d2178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d0d9a1-2111-479b-91dd-ec230aa1e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6476d6f-82d2-4b49-9871-2af72ef9a00c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10900281-75ba-4388-a607-53ebe1ddb6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15799b4-ec12-4541-a621-aebc4c181449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cbca77-34b7-4473-a515-8e98d5c26dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "04451702-9eb3-442d-9ecb-b0703040b692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac737f8-9a60-44d5-af09-54b937493537",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2bf2b4-dcca-402a-b187-fc34da59fb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfcf844-4bf0-4f1d-bf2a-0d625898b309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a087567d-f909-47d3-b3fe-471ef168534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db505cd-98b0-4324-b49e-5358f64866a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a1a476-ae4b-44c8-90f4-b59640e24d28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5574f7-5f2b-4176-9dff-3c2d78214672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6644707-7285-4f77-840a-146382df96c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40582c3-9a4d-4e84-82fc-3f40c105cf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "522f0a84-aa72-40bd-8691-f6a578379d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7adc0f5-142d-4dfe-826a-916e79fc0d83",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d308378-a107-4388-9466-f0479c30211e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a18452-ad8f-4fe4-bc77-1edd2c733615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c522d9-94ba-4378-984c-aca6e1213672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f514f608-2a91-4642-a945-d594d72973a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610b56cb-3d15-4bd9-8263-6a0f2d6183f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040763f3-0554-4546-ba9c-c9eb10940566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf225cce-35b5-43a9-a463-19aa0bd1dccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b528a854-4ffa-4e82-9cb4-b7a1a8e87c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314294b5-92de-4b53-a515-5f8e4fda6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddac4d54-2dfa-426c-bf75-373b658f1eb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf140c-bb56-465c-9b36-e6cafc840541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0e6a5b-7e79-4b11-8736-2b501f7da8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c482f14-4b57-4291-9834-3d34e89a137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063f9aae-2f22-486c-a382-2f5f7ba74a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a1276a-b1a5-4d1d-a714-557fd11dbd4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4ae1f-db02-4635-a0cc-a478a05a3e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71db7237-6226-4c01-9ca6-17a852212e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d0c12-fc9e-49ea-aac9-efb9955ae597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e86faf9-1133-47f3-b323-0236cb9bff72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a0447d-acb1-4ef7-a07f-21299369f11d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077de572-12ab-4b0a-8433-8cea5836bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d1f1a7-5c62-4d42-8434-8a2908c54581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cc05a7-9590-4b06-88dd-93aed50b9c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca846b0-9c30-46a3-a783-807a442f133b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb14df-a138-4295-b85a-53f68d8d2ebe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790c773b-2c7f-48c5-befe-14802aeb788b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd165fe-e843-4374-a0ed-61c716c7806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb53eaff-b38a-4ada-a1a7-1018880b99ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9086c92-8479-4bfa-ac73-5b64236e1e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c7306d-274b-4998-8ce3-7dd51bf0fd08",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11900f3e-0086-4563-81fe-7c74af19197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf7d18f-0ad8-4ed4-a64b-b51e5e6d966d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6c5e50-6d0e-42fa-8036-a0bd99acc0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb95eb84-9634-499f-b159-bf224c09d895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce1e0eb-ad53-4407-a6dd-4b1c6739a503",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e38958-11a3-435b-a101-56abf7d2fbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736ffa8f-d6ec-4a31-801d-e2b4fa6fb992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0430f406-87da-4c7f-8e67-cc1b671ca3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "564565cf-91ce-4b2c-b87c-9fe5493ed3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465c3bc2-535c-4382-8fc9-96d132f0573a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c50ec3-99b6-4c5f-a4a4-9ea13d3546fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97e59b6-3a58-41c9-aca2-2fd97a42151b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea5d8e7-0c46-41de-85ab-5ade9a5f362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eaf476-f6b3-4ff3-8fc7-747d6f1254cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c9361-58c6-4191-bc0c-215f59b65d57",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd68e3-7a33-4a4f-83e7-62d5127df117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c4874c-e116-4414-8434-365d24436a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d0bb73-8ab8-4b03-9b62-11fda0259045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ef8488-27a3-4abf-808e-3e45a6e78a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e17878-c534-4e14-a376-279abc61b04b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f124951-9acb-4d06-95b5-10880bfea501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcc0aa3-b70c-43b1-9f1c-f5ec3c9ceac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269f032-d10a-4c0c-80ed-575f1bf6b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab8e55f-de39-4ef5-be87-8a6dcd392581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f22a759-1ecd-4631-b6f8-811667af664f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86fea0e-6923-432f-8168-ec28fcb56184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d3fd5d-6fec-4e6b-a7ad-f1c16c5a7c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0556efef-5436-4950-9839-c95c4ae2dcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88aa9f5-7a19-44fc-a852-93a76b0c76bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11364b7a-1364-4cd4-80cd-7e52afc08ea5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69895c02-896c-4fb3-852b-39e78728fe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fb401c-f3ff-40b4-810c-c875020b8a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28923194-8fb8-438f-bb35-637023f1ee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41294fbd-af4a-494c-9aff-fca54a550945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53ac177-5ec7-40d0-9e42-14f740cd98e3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd1f250-f44a-4612-b5d3-becfe4aebdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f83bf3b-57b3-4bf7-b200-56b8c56dc1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15cdb8-3717-4cfd-bda7-0437d8aa1c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92b0f3c-0a65-47be-8496-bae2aaeec68e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f11f78d-2bcc-4921-94c2-2280ca24b00d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60cd7238-add9-4fd3-91b6-e7ccb4f64a91",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b57abb-ebb4-4c9c-9457-40b1d33272b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "498b8d5d-5e1c-4fc5-a317-2565a9096bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f05259-aaad-4ea6-b420-609b5f5d5f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6f61da5-8e8d-42c0-8bb4-758c33102d94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d56f6a43-caa6-4972-876d-848c4c74e34e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb2358b7-12da-4a50-b963-bfb27010db9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92816123-cacc-448d-8d3d-8987466b0bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b00aeb1f-7540-4b6d-818e-d22d54e68771"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdcd10dc-77d7-4480-9389-f808053f73ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3423a6f8-da44-4adc-bb92-3fd5d4787bbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d429d398-eca0-4199-ab57-182b2cbdcb0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecf7fd13-8c18-47ab-b3ae-0d08b83de44a"
            }
          }
        ]
      },
      {
        "id": "7e1d130a-de8c-4cc8-b21b-b166fd6717b1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fe14495c-0d3f-4d6a-ab45-d3e3f573f5bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "749da7cc-6b65-49b4-92b6-3b11a3ed30a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ae8ce47-a286-4b0d-bbd9-1e49320fb7a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b639f212-c0e7-4049-a1fa-53285186a057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1a18e4-5820-4ccd-91ec-cae91f64a7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb4cbd1-1982-4d7a-86c2-7495df662005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0af2e34-58a6-4eff-b115-5d2c639408bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5d13ab-09f3-43fb-89a3-c8cd5ba6e5ed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d75d2a7-a344-4b91-8f9c-4352036af423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817c776e-be28-45b6-a189-a6655868bf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31bb43e-67c1-4d5f-97bc-62c812999142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34c0bac-500c-4adc-8286-ce9c476b033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474e8056-43e0-4ed5-8ed4-53450470b998",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc74e1-8543-43c7-ac0c-94ffaac1ff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db4863d-4650-4d25-b73f-c1e1b4976601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74705e1f-4241-4045-bc4c-86e7f44f20df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17707406-1a2d-4377-b92f-a5f2fa1e7180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa24e613-7c93-411c-afcd-3333bbcbdb8f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac1cc41-84ba-4877-9915-f38f4e1aa8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cccb25-7fc7-4fd8-a110-f3bd2534b1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396952f6-92cb-40e6-9f81-5e672cffcb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd236b0-9f83-46b5-a101-de75c7c92fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87e3916-6ab5-4d4f-8118-fb23f423d46d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8cfb86-5fd7-452c-bb9c-c2be78f7ea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216fcd69-00c6-45ec-b9b1-a4bc82851d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd5d339-23fb-4c60-9710-cff53908a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b2c952-a9c3-4f56-98d3-3a08d294b536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae3da9-c6a3-427b-810d-88b3450ed2b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c973616-bc7c-4aa8-aa86-6c564693c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61dc53b-fff8-4472-bd39-8f1bcb876483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c2086-c53c-454a-91ba-3ba586faa189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea5afdf-8dc9-4cc3-b05c-e38f43ac5b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788a6c29-77fa-4ce8-8a3d-b2069eaa6d07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69e32f-ab02-4380-87df-38ee231fb4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c40e6cb-d350-4ab0-b49f-c56bb5f8be3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dd669e-0ffa-44cd-8a66-1330b24930ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a10c3b-9a17-47c4-8fcb-9cd8e131f7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b0eeff-7b0c-4336-b73f-688d337ee7f2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e3a91e-0b2f-4cb8-8073-17f053392058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b218a3c4-0b00-48d8-ad5b-9d346e97fedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9152cd7-ec28-413d-acdd-c94a80249e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0d65f2-79f2-4637-b116-070ce6f0db7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52040cd-3041-48dc-8dc2-3c3376e0935c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bff160a-48a2-4143-8280-83d96a996473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0428775-5392-4bab-87dc-773506b1ef2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7225b611-6f13-48e5-b021-7eba06748a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0d0306-1f37-4681-a641-6ce2b310f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44803a11-ac32-484c-8ce8-857d75dc7269",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0283456-6a39-4acd-8669-2237146f6c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003ac708-a0c0-49b3-a7cf-20a0db543ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa730f85-9d0f-4bf9-9119-ac8ccc252e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ebee26-b439-43c3-a12a-a5fc8ab141c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960891f3-3dfd-4173-ad72-2f40baf4dc40",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0194c9dc-4386-4b59-9990-4691b2c243dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4902a4e4-48b5-47bd-92cd-20046f852d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83148839-b980-4415-9701-757ace37dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93098814-88be-495f-8f21-c95ee3d01155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be92df8c-fbc1-4290-9e8b-6aa2cd6f8190",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d2f82d-6336-428b-b41c-095b83de7698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a9c396-7a1a-4da9-b298-7f0e6ec3c22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7972e9f-8e06-4ef7-bb93-7d4c3f96aa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c600c28-0b67-4abd-a263-2a43166f608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf8a72c-fbce-4c40-a6da-e30ac5002a71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d1c54f-84dd-4897-8a99-bdcc01cfb985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14677f21-ef16-407b-8d13-39f0ba4f6699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040458b8-6cb4-4469-b5f6-bc4a95f010bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c1506a-5489-467d-9849-4f8636cf158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918d6b5-016a-40f1-8ec6-e24c5f85d9be",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88716c86-759a-4298-8b34-d146448b390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f910a624-1d76-47a9-9472-82bea8a77e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988c0d32-9fdb-4eee-a137-77311888feca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1aa8c9-89a8-4240-b828-87377fbd0c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d364ba-6d78-4b95-95e7-c668e7e409f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c234dab-d264-497f-8342-58babd8a6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8eb786-c03c-445a-ae78-660642e3226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a94cc9-a6ca-47e3-93d1-1d784dd7d8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d14f5a-46f1-4aef-9cba-649e977b02ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44b667-8fc0-438f-856f-0b697ab4af4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b18881e-82c5-4f18-9960-251327f33fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d43360-1bbb-4855-8690-8276c42a648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81818b0-7072-4406-8f8f-0d82981d3e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e135ef-2a12-4430-82e3-91503cee847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4620570b-dd0d-42c6-a952-4afa18f9a138",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403de0a1-0fa8-4a12-bf12-4998c089f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452d261d-2b22-429e-877b-b95e6d604a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431c34d8-b3e0-42ba-bbeb-0c20f6bb9fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "541ee4f2-0115-463b-ab21-3c731481d46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d1dcab-18bf-4917-8024-775fa9479af4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ae5df-1ce5-4f26-8f88-5b12ae6e633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c10733-7bc6-4160-a915-3f87f5849431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245a7f83-d984-4498-9a95-c3d7164d0203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcae1769-d555-4dc1-99ff-339bb8341c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0845250b-11c5-4325-a722-9749e43adf83",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0840304-a1cb-407a-9259-aa9efc00d9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f04535-ff4b-4f87-b1a8-7ec403a2d367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc7ca24-85dc-41ee-b8f9-2bc8558e2817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b936f72-98e4-4c79-adf5-37c66a9ee3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86acbc3d-6a7d-4c3f-bcd4-b1b78e26ee37",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a63239-9d9d-4573-8feb-8b2a80c1766f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e97089-b8b4-4082-bb06-d624fed56504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba81209b-2e01-4c9f-ba80-28d0bc719049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4151c1-01a2-41cc-8616-f5d109bfe7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e585428e-fc17-43b6-8c15-769067fd6b83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a807476-68b8-4403-bdb3-966d57b0b673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d0fdfc-83d2-440d-b993-f2f84d755de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fd8ab7-8f8a-41f0-a92a-f3482a0748ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da279e7b-44ea-4382-9a00-87a70d12a3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2add337-f322-4ebf-8c4c-1d434892a46d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa35d99-f61d-4e51-bfb6-1d57efd6c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ccb8b5-4fdd-4515-aa72-d03adc13d4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46ade2b-68f7-47c9-a7a8-c67704666d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2ed6b4-6634-49b3-88b3-9f246465b4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e04f366-25cc-4508-a015-33812a5cde6e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d26bff-5108-4355-9ad7-9bb0ff6afc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0748cb1c-1f98-47cf-aa0b-117b16d8325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afca1933-b514-4c5b-8b5c-aa281f92b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cf6614-9a14-4f7e-b39b-89f464f0dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133af414-3bfb-4979-801e-57038c8bf128",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27c0b50-540e-436b-b132-88a7899a9106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910b2c61-cd2e-4f30-81b9-31158f2d55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbb6f75-b706-4e72-aaf5-480fd3917bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3494a8b2-eff5-43e0-9dfe-218eb9486c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b37fb86-4f92-4f69-bf26-2e2eb5f36257",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c85f5-6bda-4d08-ba5d-b62d5a79e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db68f485-0e8f-42a8-beec-9c2db13784c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0abeaa3-ef45-45a1-acf1-beea5661b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c255eade-452f-4c79-9178-b76ec11e4d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7e1fe4-c695-48c9-9c11-7a10205a8427",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b7f1c3-a624-4632-b206-eed93400727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290cf58b-3f20-474f-92c7-8762f44a10ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fedd19a-fd17-4205-96d2-0927b2f06726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ad2e83-c073-4ac6-b310-ebdcfdf9a3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f78faa-3ff4-44c5-bbbd-f704a10113a4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883011d-eb93-45ef-9eb2-115378ce56d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239f545d-9921-4303-bf41-7f67294a2cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1a2f79-f530-431a-82e7-13fde5019286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f580e4d7-c303-4422-91b3-3bcfab3f888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa75c63-e251-4602-baf6-ee2a506a37e7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b282db86-7bcc-482c-9b87-c9f87df5073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799d7833-1afc-4b78-aa28-9d94b9673706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77af3803-5136-43c7-8a46-77fec712c45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbfcc6d-79ed-4a6a-ace9-287963f243c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79ec05c-5932-412e-a8d2-f7ebbab4a527",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872718ce-6bdd-4402-a34d-92fc7f57f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89be39a3-7bfc-45e7-b65a-1ba672f5546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e5ded2-8900-48e2-946e-207e23ec051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b96046-7784-4e15-b6cd-b5d2888baf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17746225-c594-46ec-92c3-7d42eb5317a7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298d1bc8-a7f8-42ca-9235-91a017d40595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c20ed14-690a-4007-afb1-d5d98db0cb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fb20b0-02e4-4cac-8e28-122ee6c5cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2185c6f0-d329-41b0-aae0-fd82cef126db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073eb39f-f876-409e-a5dc-ef69061ac4bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0a27af-bb38-4d9f-b378-4c65db33b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404e6a2e-ee54-4d43-a153-f6aa787bf80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52970175-c265-459a-9b10-6b950e281ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27d7a45-dc32-4f2e-be23-e1a5af9c47f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1685c1-31ee-41d3-9b77-23895c3bf75a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204b166-c905-4c25-a59e-cc78bdffdd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc6b213-6613-414e-82d5-d7661841ac37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee57e3bc-cf1a-4ac7-b2d6-986cae723ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edb60ba-79c3-46ca-85ad-f090b28961ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe794ab-6109-47cf-8a7b-178bba34f9be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0e5159-8705-40a5-86bb-a6857f742fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f464682-d9cf-4969-9ce7-057a3f6a6e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43047d81-f92e-451b-990f-d4c8f792d480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a520040-9de4-43f2-87b9-186d556a70ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73524ed-0c1b-445c-a3f0-5384a29c8f77",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284a0273-e574-433b-bcb2-635888762da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c98357-9f08-4732-bd08-be459295b0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c771d833-d476-417a-97c4-702def845687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45af2b9-3224-41cf-af73-4c9692081bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8924e83-e78e-4bbb-830d-93c506e26824",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0bda5a-eab2-48fb-a745-1ee90c69eeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b5db2e-bcaf-4bc6-8eaa-8012e71155da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982c4c0d-827f-48e4-ad14-0bf69715822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b48c30a-074e-44c5-b6cb-fb7f20b9aa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58e2daa-05fd-4430-a777-470b64a45ed5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d576e55d-dedf-43a6-b375-74526a87f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63182083-166c-46bc-a9de-51451c751e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62686572-86d8-4f2a-af7d-50153f651740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0059864-6172-42cb-9740-f0af851246aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d343d99-9bee-4061-b241-69853fe5725b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf28120-d80b-4d35-848c-03ab87b14fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36265e19-ab91-4e23-8c0f-6e7f567b7df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf710d-2de5-40e6-9994-e3e1fa91c966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b4a6ca-90d7-4a8a-ac55-0bd98900f516"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "658c0af2-8738-4e53-af7a-0aa4a117e514",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1c1e04a-a519-473f-8a8e-42d6bd4983d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14303725-40d9-45d2-876c-351e01d501f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6062d039-df32-4f4e-b31a-a44e6f4aa572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac69e37d-3e5d-4c11-82c6-fb64857be0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba92db51-865c-44d0-a19f-96d06bdb030d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b67e8e1b-b53e-41ec-a419-7806dae50287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ca72d60-42f0-41bf-bdab-3edd8c9cefa5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ebac9e2-ee76-44ff-975e-f511b991eed6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23729e25-775b-405d-bf9f-18f3e170ccdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c0b5e2b-8c89-4ab4-816e-36547d82c145",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "168f9030-ae74-4281-9a69-0203366092ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37b0f2d5-156b-4429-9039-50ff64a186cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07eb91dd-e57b-411f-8c27-13a01f67503d"
            }
          }
        ]
      },
      {
        "id": "152a444a-b56d-424d-b63f-5479b48d88d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf7d3e3c-3c6b-4125-9a08-3caef02cfc72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a7de9ba-8245-4b65-b1d9-d2e2bcb46ca9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8b80d9f-29d4-47eb-880f-29f299464d4f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a464bcf-0fe4-43aa-ab1c-a20b25600ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e372f6b5-d394-4f1b-bad6-ab6a1be16d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ea4717-a77c-4122-829c-6c4032cf49b2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8eaa20-a590-43ac-9d4d-54acf2b2dca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb77863-0260-4cff-ae8c-efc9c6af3b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad78b3-1c3d-4d46-92ea-10c5f7242d56",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f312c687-dbbc-498d-8187-0994246a0a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de10a815-6873-4b43-894a-d30531a79b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82affd22-5f47-4781-b50b-cf3f3107d5e7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd14765-fbe9-4091-b3fe-4d806b3e2067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb82372-e017-4f8f-b1c5-b38b54dad651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377f7755-ecb6-46a1-a6d2-fc6ff3c14f2d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598a2a45-91d0-4c4e-abc3-3f4caf0da62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8088c7c-0b4e-475e-9a40-15cf109a1b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c95c3d2-8810-4bdf-a51e-fc2fc82a0687",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9745bd65-7d3f-4652-ad92-d043bbd40287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26be049a-b566-4a73-9796-2b62e9af3874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a05fcf-0619-4fdb-be15-e739912b1f77",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421edf38-740b-4b75-b9c4-fa270b604480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee27922-7547-4a19-867c-a751ce8a354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7419d7-b4bd-4830-8e3a-a636980432af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c027af7-f9d2-4aa9-82ec-5b937c1b1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc63db35-ae80-44ad-b449-ca61cf94e7be",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47158c4e-f259-4221-b722-df7d7dc179b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b8d354-15e4-4a1c-9604-9f8610792181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706c0958-1bcb-4ddf-b8fb-22cccfd80d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b82f6d-70df-493c-add9-b54ca7b344ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74df388c-b3c2-4912-ae19-057e7dbce176",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2993cc31-7dd9-4c43-8ade-e660cfceb81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6082b690-726b-4153-a20b-d7c7cd54fc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781ace41-d218-417d-b6b1-3fda7fed06de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f7523f-5986-4fe8-9c5d-68a09c487bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619f19d5-031c-420c-93e8-b15951218eb1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9511012-9825-4cfe-9ab3-e19209cdb810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac79622-9455-4a55-a04f-e61ba5d6959f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9841aa7f-ba1f-4544-bd53-1863fcb60ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c29c622-be95-478e-8e9c-70b8986de19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e03d33-e9d4-4638-9f92-dbad3d950f26",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e67007a-1a38-44ae-8b82-9ac8a52c1cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce177d4-6551-4b83-9cea-11d4e7815311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92d5a11-2944-40eb-8d48-b266cd97b61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231d7e2b-28ae-4494-a444-08af88fb50f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e971c000-952a-49ea-bd59-79a7f2caa38a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1eb05f-4b04-44dc-8312-423b5fed4a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4419102d-0f50-486f-8679-6f9bdc4a363e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbece6d3-38f3-4748-8101-5fd507aa4c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926334df-20ee-423b-a49e-181dd9b1115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40f39c-6abf-412e-aeac-3a91b1b24d4b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0545d3-ef54-49d5-b646-2836ef31e490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8746b9-afc1-4fab-8538-b0971988aa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baf4fdc-9e94-454a-a7a8-6658d4eca205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc219ecb-608a-4421-9926-f3caaad41591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269da3d6-1e5d-4392-ae7c-9f6f589068a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c08b2fb-a96c-4247-8095-f304f20e14da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c710b57-4dc7-410b-a8f3-d440b91762c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01ff09-3361-4322-aaf6-f1d8685f0e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6cb2c-e910-4c75-8dc6-7ee03df67620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d2acd6-8ef9-4b6c-be0e-b826bfcdfae0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7551b86e-39de-4a49-9fe0-19db220f4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7f4692-242d-4fd9-8738-1b50c1433bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82900e6-d427-45df-8e47-a67333ed9e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6448ab-de55-47e5-9900-56a2524e61d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94f90ed-7725-4f51-9959-1e4b656dec20",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bfbaad-e914-4c10-9e3e-c1859e5b5556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcf5a56-899c-459e-b3d6-80f33841dc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bfc147-052e-4ae1-9eb6-e9958c3b09a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f886b30e-b06d-41bf-a997-524378855856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6677a900-11de-46e0-b695-e5bb70826816",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca295562-f99c-44dc-9f6b-f93e201568c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb9af14-4120-4354-8a52-ff0c386ba98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04fc55b-aeee-4932-b2bb-a7415a619ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11af7ba-c11f-4028-8f18-b3d1bcebaccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dae025b-2e7d-4fbe-9f99-9251ab3d672d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05de4a35-278d-4fce-b267-a4255981a235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316de0c2-d0c2-4939-a9af-7356bdca41a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c41296f-a739-47ed-b590-dd6f920af2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84addebf-b2a9-4277-81a4-0ae323f6123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd3b90-0d84-4920-9143-521445d831e0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e997f66b-405b-4d23-89a8-4223d3c21910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07915471-5825-4faf-911a-4d04eb05c1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe81adc-9d3d-4805-8292-567f4f7bfd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40213b7-b0cf-4928-b931-17351dde75c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31a7231-e93d-4793-ba31-9accec47d716",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df4fb46-5e77-4d06-8c7b-10a4a4227a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eafd81-d1e2-4479-b89c-5f588544b650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15abad1-4fc9-4fd0-83bd-fa5deb763033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b11532-ae9d-417e-bb86-fbf2cdf8c1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eaa86d-b42b-43b9-8c5a-b8baf88537bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736b0edf-cde9-4261-966b-5643dae60927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fedcd5a-6463-4159-9ba2-b45a3dbcf91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8622903e-f9bd-47a1-8fc5-310e209293b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa56b67-22fb-4437-be79-8dc6cd2e2946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46477657-61f2-4262-a387-0530bbdfac53",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222263e1-4f1c-4900-9427-4da9d1d710bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c300ba8c-0406-4740-8bde-0018b65cf6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c65ca-0be4-4679-b7d1-08caf7d3db79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9498ad7-5948-4be8-8664-47be5d2508ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbab7ad4-9191-40f0-a236-1a9f167bcba5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062fc2ff-3289-4326-81b6-99a9398b6a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340c1ae5-c394-429b-8e57-b9b64ddcb19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1120309-88a5-4b64-b7c5-4d8d633b8877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8131fffa-f1eb-40a4-833d-e461ec0c2355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb56f2-3e53-4b70-9f96-495637d5b449",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84ab93f-3f7b-464d-9a70-ce72e3fc008c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64e0f53-d0b9-45d3-a700-3c1c058960ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe2d424-2fff-4f9c-87db-bcade1d530ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82ef673-2359-4004-83f7-280f014dbdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25214b1e-6cc1-4703-b807-0b83896daaea",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eebac4-62ea-4595-9f94-9c92afa2511f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b7ce38-a0d0-4721-9de0-0319392fb796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a80ba-352a-425f-9ebe-8310d89d0371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a973e2-d974-4a4b-b2e4-f605b9148d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fa017a-5172-4923-a528-daf2623f9aab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8876d4c0-8877-4cb6-87bf-d991bb6fbc6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69e79b5-6d40-443e-ae98-e5d78e1c3785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26ad79-d2e7-4340-b454-8c2881c15f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7d8d56-9906-48fd-9cf3-11800c574bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb2c2c9-4952-4a26-8528-83211c311092",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed32cab-5ace-4c10-814b-e18062aecd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f718977a-e528-4551-8ea6-c42798b2c0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0a16f1-7d91-40a1-9c42-56634265687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a84892-bb37-4af3-8419-cd0960b66c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b15815-b098-4a22-ac36-ebed5029fe8e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9100e-c291-4dc2-b413-1dbd2075cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eef9f86-8038-423c-b77d-49a2d9fd891b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d4ee30-577d-4fd2-97ef-d796de711b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4650855d-4c0b-4767-be11-074fd491fea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9d064a-8153-414c-b08b-52b683f4d126",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea569605-6c02-4f8b-96fc-1d1e3d38eeaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bd8f7b-7431-483a-a1ea-6bab7b56b975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb23cbad-d412-4104-b830-7cb1698e7fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8976acf-0e29-4ede-96bb-fc132c300ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f625a39-9739-4157-9d5b-9ab1450cec88",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617519ca-1df4-4a10-92f0-786c1b1e4b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69d0a61-47e8-4505-b12d-30ecda046cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9378f6-9c4a-439b-971f-b9246bb29123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701bbc48-f8e6-46f2-8464-e9caf035bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f2b3c-5c05-4ed7-a2c7-67211f40c87b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f215bc32-80d1-49f4-918b-e7754c787f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e41fe6a4-45bf-4c64-be1d-749dcdf853c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f75d1d-8344-48d1-b63b-b38ecaf1c8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c65ac45-1896-4c52-9015-e66c0a0556c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ad1b08-90b1-4fa7-abe5-03c100eb3281",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39e5c7-0a16-4183-8b4c-3c83ae0a6902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7148bd0c-c724-4d74-952b-e434dadf36cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b75297-8446-452b-a438-67f3f79ab037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70436f85-5742-4a71-b6a9-3b0c2a4b5b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3f6bdf-2962-455d-9640-4d0de6e5633d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d0749a-fa48-413e-a063-932aa7390b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a101b97-fdf4-499a-b835-0cb397c47162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061e961d-0de6-4bb5-bc7c-75a7d711f7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59646bdc-fc28-493e-b97b-36b2df9c8050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fb0fcb-709b-43b1-9917-00b92aa472bc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e481811c-a5e8-433b-97a9-a2e097526aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7df9ff8-0e78-45c2-88f8-3d17d8d029e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf8a7c-718b-45a2-a41f-883fe53643fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2691c067-4c86-4dc6-a4d9-7b41d4e332e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56154ee1-174d-4fd3-ad6d-c5e06e235260",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c641c6c-f644-4499-92ba-0a1abd15bcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf466a8-7b62-493f-9d25-5bd347adbc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf8430e-84af-4589-8df8-e5133397e4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37062037-6627-44e6-a8a7-e50b8557abe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e3bb2c-6fa7-4705-8a4c-4e40f6060388",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f64d3c-0d05-4e8f-96b3-cc4ea3ea0258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a0d5d1-7ddc-4e32-9375-3bc0ab8f039c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038e5f5d-40bd-4815-ba95-54a7b938f601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a802b2-6283-43ef-b07d-7ba02d3807e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf203c-5f77-43b0-aa02-54fe626dc206",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d671938c-a8fc-4075-8404-e30a5cba15ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cac37e-cfa3-4287-8aa4-f500f2312d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd69619-093a-4295-9b10-6a8ddae58acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec619d2-5a58-49c6-bdca-1354befe685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d145b42-d199-4538-964b-c2379836955d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075aa440-19cf-4e5f-b4b0-96412cd7d690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561f0bfc-5ca8-4751-9c33-2086810b5f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd3c0b-27d0-4071-9141-72309e88019d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ccc378-7eeb-4e04-bf3b-e52484a0fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1de8b97-11f7-4d6c-85e3-6edbe4bcf977",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3f60c1-216b-43ba-830b-c22a107ac831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa2c4c1-5b3f-4c85-9eb9-5988ca233ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f44902f-0e87-495f-bda4-07ce44881077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc8e8b2-2724-4ee7-a144-12923ca4d461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f07d99a-3c01-4457-81ee-ef16215e6bd8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cb51e0-33ec-42a9-bd3d-c439310bd7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e321dc07-7b4d-4c60-98cb-321d6629049f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88078990-a4b3-4e23-964b-613134a58ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b805b37-bf23-4ca3-90e1-741be0a5407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0949dfa1-5961-4757-aa0b-2699d103a915",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a713d394-f08f-4136-9b86-dcc293da8df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e0841b-be74-4ec0-a829-241de716ef9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465acd56-e031-451c-9abd-4d971c22de90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77669d0f-779d-4cec-baa4-bbfa9b26c46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ad7bf2-cfdb-4c99-b7b8-e76346be1f72",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d58e08-9f1f-4d11-a6e0-882155360935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f154945-69c0-40e7-a824-ed01dc167e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631c38bb-02ee-40e4-b07e-b2c894098da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c17df0-711f-496e-8347-e2bd60c00c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb4083-1647-41b1-ba60-f5e7c5fd9553",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962d05e1-b089-4fe8-99ff-bb51bf5ddd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef1e9b8-eec2-4d7f-afb4-fb9769c575d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f989f248-2302-4a86-b482-c0b42a33c385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53d867e-78ee-407d-9065-5667575fd6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ecdfb-c70e-425e-a007-ee4254707ea3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a6fbcb-f858-4d90-9314-551ed9176734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff219619-9296-4dcb-87d7-b50eb3e1c274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8e1c95-0276-4fb0-ae9c-90b1887adc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dd039b-96f4-4840-93e3-3dc133a14b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba41970-b278-4f92-b57d-9568f31e0867",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d1a54c-1a12-4e12-b833-9b2d21379403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8de388-3be9-42dc-b298-3295951298ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e2abe2-6a40-44bf-92d1-9aab1aa6e631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06545c66-f497-4888-97d4-ff05df77b721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4ba90e-9e4c-46d9-8435-8593936cabb0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6a7722-2ef0-4c81-baa2-b5330051d275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ef25b3-6578-4a91-b2c8-c6b9ee48a037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d0712b-6346-47b0-9570-60609d3888aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f908577-0e51-4a10-8708-85b17a115ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47169e7-c975-4d3c-8a0e-c0eb42a35355",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c2e5a7-7e06-4f21-a89a-654802561481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f28be8-dd7a-468b-8751-36254a5133c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6068a35c-9722-4765-a987-59f174e3bba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d992b2-9ebf-4c86-b33e-278ad68d8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3076e6c1-5c1b-48eb-831f-192428e32b4f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f50b0-7ec4-4cd3-9f4c-d7782dd14df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c4114e-3310-4729-9a55-36c8aa5d4757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f0c7ed-31e9-43fe-9eb4-860ea455beda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533d3ac2-4930-4a20-ad3a-0736aa69b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada2ea3b-11e7-46db-b114-082adc6977c5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bf5eae-6246-4606-b65d-d03162776866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e030f79-74d4-4223-95c8-b270299ac2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd30c7b4-d35c-472a-bb86-78325d1aebdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ff854c-ea73-4fed-a78e-0eebfa9fc171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3edbc63-1e76-43e2-8061-484ec44066f2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc15b3-6fa7-47a3-9ca8-4f5b82f3f558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341f96e0-5ef2-49c8-969c-dfa477fc59f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bde960-962a-488d-90c2-f2aa689be79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dcee24-311a-411b-90d6-8bc45885be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312f661b-faa6-4c30-97ed-0e1d57597011",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661c14bf-5e39-41ff-9e6c-f7ce839a483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb0a79f-1baa-450c-b5a3-bc0665b543ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dfebbc-9d6a-4cd7-acb0-9001a45776c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bb4525-b94c-4725-93f8-db8df4bd0600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6da9d08-888e-4a2a-bd8a-8c440b9d6e98",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7956a9d7-7dbc-4149-9050-c515aab2dd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adf5ee7-67ac-4017-b3d3-f9383a102719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65735bd-13d3-4765-bea2-f49c07aab682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f64619-1866-480d-ac5b-10c22735b53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603a9cfe-7347-4c25-b29f-3d93dc75a861",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff77dda-b8b5-4665-8472-e6359b97ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d95c30-1cf7-44cc-b8dc-89a80f0e5c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f58ca-7c7c-4fcf-af61-b0bcd16548b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b064add-98cf-472f-924b-d566a9bbdd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b91298-fc04-4cd4-baef-13e25064346a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392067c6-21e3-4f66-8806-2c52c911bf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51681dbe-79f9-4ad3-903a-559fc1710189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79209d6-4d9c-4bf1-87b1-102da522f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3144474-0f29-44f8-af5e-77e3df34f095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4217f3-301a-4177-a844-9d421b1f60f4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ece2532-6bc9-447f-a502-0801fe2a29ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c07bfea-f4ce-4565-be8a-333f9912d13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba151c4-62f9-47e3-a9ee-7ae8b3c3cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8aec9d-1126-43e4-abbe-c2da71ef90f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764e2ebd-8058-4234-b875-a9e9e1c368d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1896f9a4-dfb0-490f-a0ed-92abd2a09b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582fd5ca-9d72-49f0-9d95-e15245c81df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ea27f-1b5b-4dd7-9ab4-c3b46d845b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd98382-2414-4bc4-b99a-7e50d0488c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94037255-a90e-4a10-b540-c6558664a834",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40163900-e32c-4c6b-baa5-76e9c73e5f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aab4324-1182-40b3-b62d-ebb5a4e7ca4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a330b4c-e05c-462b-adda-59ca564ffcd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb46331-7700-42a3-8316-854e80ac0adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefc5465-8cb0-4cd1-92ca-a09296cb112f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfa52ee-0a60-4343-a5a1-3b5ec77fa2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625e9212-19f3-4545-a751-0dbf11722fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac690e4-988e-4337-9d27-23f0f9832ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66aee33f-9bd9-44c2-957b-ed9bbd703d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa639a6-f41f-4294-9108-d671ab15951c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dae4c7-06b0-4b33-a205-f3d3434164ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca0c8c8-e767-456b-bcdb-87cd5048cfb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedac43c-645a-49de-b2e2-e015ac88a508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555f7991-8aa1-41f6-ac46-b70591994c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a73843-9822-4eb8-85c2-89085c24b6a0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47f4f12-9240-4e8e-a0ed-b7407ac10ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b923dfe7-e002-460b-a26c-759711dea45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9dc674-dbb0-4735-936a-534e88e8856f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e264e8fe-3a30-4bcf-9951-59ccd8a1558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4b60a-c8ab-4778-b1a8-88b882691fd9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232c8b8c-2773-4426-8f6d-0b42da5f06b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27ac10e-e92a-4cd3-81d5-53087750cd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e01bf4b-db12-4ffb-b3f6-01f58f968751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfc083a-c105-4cd2-aaff-155c41e7fbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4194e896-9b06-4ddd-a29e-374d6b6d2fe6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44c2396-6bfc-414c-b404-0688c795396f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f468734-208f-4c0c-b84f-da0d3ae17833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6546e62-1700-4847-8a2d-c8926a52a938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6018f06-eed6-49be-96a6-e3f6892bbff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8194a2a-61df-49eb-b14c-d5173367592c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5a6b6-fbcc-4903-84fd-5ee405f8df8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bf897b-315d-48da-826e-14b78b836de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fed8266-4e47-4814-b35f-8b36c2504229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669e540a-59fb-4a69-8c33-f987956dd5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d687d8a-5039-43be-b03d-8899e0c4c115",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23010579-93ed-4757-9875-68b8820fd679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312c9b4e-b07f-44dd-b1c0-74501782f9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d240ce-6d9b-43f3-92bc-eb952eb0b7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b0a3e2-1214-4f52-a352-26c05c1ca73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce141ea0-d69a-4f2d-8b2f-1d87d554524a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9ab5d6-6d29-4e26-8841-ec93d90c4fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66849d27-12a3-4437-8abc-82bae8f7758b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87732cf-2e00-4fce-93fc-0c5695882317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d3ffe8-8cf9-4f9e-a7cb-2988250a2cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560a8cde-87a2-4987-b7ee-5aadf0d44f8b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00900a45-facd-4e29-b2c9-36d7f8fdb027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedfbb6d-ff20-4831-87bb-323aad9cfd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91197e62-9927-4123-982f-3f82e9e07420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cf317e-9509-4ca3-aa8e-dd21555fdb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ccc08-d4d6-451d-8aa0-3f9196fab15b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1bfc6d-063d-4e56-8631-d5dbd71b8e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7274fb-4789-4523-adad-96357a3a2388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddf4638-464f-4cfa-97c6-f093e5b71f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6e79b0-5f7d-4ebd-a64f-5f6754d037a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5b631e-63b7-45d3-87bd-b4cb7afa936d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e966e4-ed67-4ac0-8676-a308b05c912b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c383c8a2-918f-4cfc-ac9a-00e6371e1ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4632b2-0bd1-4c8d-a335-e4b7751c2dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a65a51-db80-40d9-8fc9-8f1c3b5d76d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c624bb0-c7bd-41d5-a2eb-df9070fe5454",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a753ce75-aa71-4bb7-9915-8e4626f27ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811bcd4f-a8da-42af-8803-9d63d61c2145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa20714-024c-4d18-81b5-4b81ce91cd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772319e0-b2eb-4cb9-9520-3216d8a544da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3174b2e-8f60-4f4d-a0cc-b590b2e954c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c0658-5c18-4b3b-96cb-3898f994616d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63dd1f1f-b980-4a1d-b9d8-8f49dcecd7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c86bc4-88a7-4621-b2a8-dcb1acf6ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feeb293c-8a6e-4ae5-8ced-e699a0af0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57d58a9-ccfc-41a3-8f82-5220b75789b0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e547a6-52e9-4a6a-9c08-b4b9312631cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34175579-e6d1-4946-b491-01b691b99886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aff314b-ae13-437c-a346-05b20ccf5156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a38a95-3a8e-4f2d-a0d9-e7fb51ba9332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721353c2-78e6-4d47-a959-d8647d38d91e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e685ef-5a82-4ddd-b0e0-3c84551ff99c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaffe4c4-b610-4398-ad34-682561df9e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6a8df9-7d71-4f1b-a3d7-64d2483abe56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3be5845-009d-4b25-942b-816726d67c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89353e59-e7b8-4c44-ba8d-23e1af786b27",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ffbd63-86ca-43f1-ae1a-7bbed40bb3a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f899431d-ee28-4552-9819-baa1271a0227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db9533-4ee0-4856-9680-4a62f2c0ac1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b6d831-c9b2-4a39-b39e-0f88a4d016ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785aef02-8385-4421-bcf1-df0a43afd2a2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701b86d-94dd-4e89-9324-bf601af133b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cbd99f-485a-4fba-a810-010be50de0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836da80-d794-4951-af66-8e02d81bf7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0776db-65c7-4fd5-99c5-c509c095a2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b3f004-00d6-48c2-bc41-49a6dbb85fd7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83c1b35-8df4-4691-a8ab-ef71649392ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93cad71-feba-45a7-840b-71ded8ac2b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c139664a-403b-45d6-84db-f3cdf7a29586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fb0d02-7806-455d-a806-5ea1b5042367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a4d0f9-af73-4fb9-8b77-fe51b42a1aaf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714d1325-d2ec-4d3b-8c4f-980d43db755f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c29d1b1-fdee-4f34-951d-1c5e73642a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964f22bb-bf80-4a83-870a-851bc99e0066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c219b2c-9910-428d-9a2b-99d90012ae73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b911696b-8038-4cef-9daa-75da29d2912d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c876f3eb-c6ab-4d62-a273-9d2d8dbcac9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aaf6f03-9474-487c-ba69-c977c5c9aad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43298c5e-e4f7-4ecc-bc47-c5f81a99c57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97eae7b-0f91-4de3-928d-b9574ed2be45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e4b4af-9cf0-49fc-9185-f5bed55858bd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223e0b40-936f-4c73-8a2b-80deea5b081f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c7d9ae-757c-4f52-854c-f92bd66ba047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca92669-8e31-4988-888f-de23abcf5e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfdcfcd-9cd9-459c-b8ea-84bb312c2378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63dc866-1036-4c1a-98a6-3f07ac4719e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d92cee-fe68-4b39-969d-c81d692d3cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d4eefc-9822-43ec-b7b5-c5506974e677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4181a092-ebe8-4fc6-9763-de27b6d8e9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfff6b82-f377-425c-a168-cef1d36be82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd5aab1-4f50-4660-89dd-ca2f00e41d01",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77502dd9-5c38-45ad-8a98-6bbe8ec44bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2192433c-ea45-44a9-8c78-c87bca3c5978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738bee7a-1393-4e67-9dcf-1f62be0ed2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb141686-ab43-4384-813b-31aff1416f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9802ed9-2538-4bb4-936c-8a754bd81c35",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a5d06-d89f-4c0c-9e0b-acbb845d606a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28be6878-8f32-42cb-9d90-89272a90fb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0905e1-02c1-48b7-ba7a-c0331160555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8349a63-0447-44a3-938b-13c4c3b4be1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a86443b-5d08-4eb2-bb82-c1914f2c154d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c5ab45-4df4-4d40-ae09-8ac9db70ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811354b2-873e-45e0-8bf6-6521d3b4c0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1953e82-1135-4132-968b-ac5c4ed15b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13965021-ebc8-4274-958f-77b99a5c53bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fb2ffa-4425-499b-829f-55ee66271da5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba088cbe-498a-4784-81ad-1c472402d138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "727edcaf-5cd2-4a1d-ad4f-3865d1b228fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f82d1a-fad0-4a31-9839-a013c08273f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194c11bf-6f19-4364-a152-f77c0f1b8cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3cc0b0-a00e-4526-a07e-07bd2d8cc923",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7ec50-efce-419b-9520-3d7e7edcfaf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2858d7-7b36-4c82-8517-958589b2cc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cae92f-9c30-4b9b-8481-936e430ddaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6ffb35-e8e8-43a4-913e-a3ea8cbb4cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3dbbf9-3efc-4d7c-98e3-a3704b1f3127",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ab75e-adec-412e-b04d-d982fce8fb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56ebd8c-50d1-46a5-8ba2-323920b4a21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dfe925-8bd7-4ed9-93f8-ebbb2145db28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ad7406-89d8-48c6-9cdc-257cb0aa1167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05606e85-1201-4a37-8265-3744723a4c88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821da1b9-dddc-40f0-b8ef-8f190b86785f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fdfb57-2bb5-4b67-a012-e1ebf13ea8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e705d13-6c7b-4ab0-8be5-959f66b63733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ab9cee-7d32-46cb-897d-219c6dfe8830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77f9879-550b-48df-909f-81f6392da68b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decec62d-4610-463d-9657-29edd23a0792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b004ecb-5c4f-4edf-9be3-d1b3960427a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8450f9c0-5c72-42c0-9b22-67e4b1f705de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7964b1-e341-404c-a816-65987190cd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96854a1-3dfc-466e-8f1d-c721924a0e77",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eb2be5-4076-4fd1-8a5a-f532e4f7c072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a545b98-e502-4f04-bfba-0fb32f6762d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0e49c-6588-4b42-a105-35715642a93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb79f03-57ba-4987-a165-923e1cb0ba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb539142-f939-4f90-bddf-efbbc4e242ce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf710d4-9c26-4249-963e-d0379b85ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e1defe-16b3-4470-92e3-c1bdfb1ad615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ebab19-764f-4a91-a735-5d5144d20279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcc98b0-0796-4779-afb2-9356100152bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cefc6b-0b0a-47f4-b633-3fb8d1c489bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1609fbb4-b7ed-4f3b-8458-849255b3813b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0cb437c-cb2f-4242-8707-fa3c0ef4b93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea39d3a-bac0-4211-8de3-2973c9cfce5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8b99a9-e5e2-46e8-9421-4c0b4fd825ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e19dcb7-fe34-433a-b1f5-40c746e9d896",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85449ebc-d80f-48f3-b246-96b2e489d826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cea37ec-d574-4c98-be58-467c87759135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff1deb1-c3fc-4558-8a4a-3fe4ca86d624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17516eb6-8e61-48bb-83a4-16f2d76eaeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cc03fe-ed33-4582-9a78-e9e7a1398cf8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1dc9aa-19cf-4a57-851f-bcc042d2661b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef050a1-c3ef-4c09-a80d-89d7639724de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e6583b-d673-4cd6-999d-3500aaaafb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85968038-e805-4776-9bca-d7d54400955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c7be15-1001-4e67-ae94-e89daaccc9d1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ad189f-ace5-484b-acff-ecd69b18279c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212a0584-3b2c-47f8-beed-eedae4c223d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b40a5fa-32fc-47b2-805d-24e4feb61a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ff9827-e16b-430b-9f61-2df17cfefcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f689b150-803d-4e69-9a8f-ad1dae83af36",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e444b8-ae2c-47d8-99ef-e1d4f7d14b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bebe37-9272-44b3-b224-1db07422c929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea8cc93-0599-40a5-94cf-e673623db5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cf9037-9107-405f-80d5-a3e35376fda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b243626b-5c11-4a95-abb2-f8cf2d33e1de",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad47ce3-dae8-4cdd-b3e6-2469415c8519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1908d2e-b4d2-4a1b-96bf-779028b8d3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac027a53-5885-4084-a799-2eefdb37b11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425b7e72-6182-4370-b9c5-5891855ca72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3f4b34-9aa4-4e06-a5de-080a7ce5724a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb30977-1906-4a68-a0bc-86685fbd81b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e36acf-afcd-43f0-8d98-922ae88f428f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f53ad-80f7-4642-9efa-89e7ecd1d45d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa464f2-bd1c-44f1-b21e-d2ddaea9bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5b5af7-a0f2-4ead-90d4-f01453dc60c5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4019d4ae-a501-4630-8f38-44b9ff0c97b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ae239a-b380-4c1e-9d8b-aa6b7002421d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e60ecf-89c5-4c8b-9e71-6b5c950429df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68acdc44-426b-4f9c-9c49-e549a59894a1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7554774a-14f8-4935-a297-9bbecca3e479",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2a112ac-e2d9-4c50-8977-e832d77a1555"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a4f8f07-35b8-416a-bc30-6f20dd130fe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a17bd7a1-e48a-48ea-9a46-b2e9d56d879a"
                    }
                  }
                ]
              },
              {
                "id": "085a1bb9-53ff-4dca-9447-266b10a9a363",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3024afd3-0388-41e0-b5c0-53f83735b123",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41029b6-d942-4e49-bf6f-cb6c0676f02e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f5802a30-0ecd-4d54-b681-f736c8f78884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aea61b2-2fc8-47b9-9a97-d676458b5226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9ea4a4e-1dd4-4f04-a024-6c150614a76e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f9ed90-4dd2-4fb4-847a-345c343a0175",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3de1f74-2cf9-44e2-8f0d-8dbbe3b3bcdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c36c0edd-c2e0-439d-b7e6-2f9c3e50dcd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b9594d-64e0-481b-8c1f-758902005fc5"
                    }
                  }
                ]
              },
              {
                "id": "8341c81e-6ed9-4c05-8e77-51f416d35f4f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8ecbe217-21b1-43b2-ab70-ac1df79979c5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8fa2ba-eae3-4a48-b4ea-e9795a50d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e1f725f4-e86b-4bb9-a721-7c92afb25dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a0b80-817c-4f1b-927d-d0896987b018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffd7f10-4fe0-4975-bff4-7aa97675b464"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4935dc1c-c10a-462a-886a-64134a0693d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f238cb4-0eb7-4279-90e7-653316148e7a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed26cb7-9185-45d8-aaec-6a71d6fe6f8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08fa2763-e4f8-4ad5-899b-b93f8d81ca5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99f7fda1-c6c6-41a2-b6ac-c5bbab34fb4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f6376df-39bf-41b1-9c98-260e67b24915"
                    }
                  }
                ]
              },
              {
                "id": "a7c5e63a-a9c8-4c05-930b-b08424cd5e32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bde75c87-bd5e-4395-a262-fc2505a0f30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd318270-ae01-4e92-ab8f-3a964073c3f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48f68efe-2fec-4635-ba6d-379ab1761b7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b415e52-df60-47d2-b553-3c54d4f186b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24b173c8-a58e-46b7-a60a-cb90570b3c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2bb2a88e-1228-4f55-ac9c-26acbf2df892"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b927efe2-2956-4f4a-bbc3-2eb2efe7b99b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7d3b5de-bc2c-4949-902f-5d92fd049903"
            }
          }
        ]
      },
      {
        "id": "19c0f201-982b-4d62-a77f-a58b441018cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f6858189-9b9b-492b-b07d-945e448deb41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "743a71a4-0215-4060-a139-fd4acaac3de6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07a7f190-cbec-41f0-b31e-d90402114e70",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7de1fd-6ea1-474d-aab0-d6782b1c0825",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08a0405a-111c-48a4-af98-0ca916d086ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e015ec88-d6eb-48fe-83ef-21f482fd2225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c1f35b-6d6a-42ea-8ad2-4b9d3c927bd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59fc9cc7-6bb5-4bc8-b217-80d39f32c098",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "127b1409-1fae-439e-8e9d-a0c1bcd2e073"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa094d8d-975d-4df7-81b6-30f48143fcbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3ffdf64-1c8d-438d-9866-8e49f9594539"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08c84d39-11b0-4ccc-8c7b-085ae13da627",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "134c781d-4878-4484-8c65-11bd2412476a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b812581f-2066-43f8-80fe-bf69aa3c3737",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60b7be95-a1c1-4361-9345-082185904131"
            }
          }
        ]
      },
      {
        "id": "368e8725-028c-474e-bce2-b59c70f863c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a372529f-5b7f-4347-96d2-410a74d86868",
            "name": "Negative Testing",
            "item": [
              {
                "id": "677de949-ddd9-41ee-8038-99c60f25435a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a4048c4-d062-4b58-95b1-f3354b7c8acb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20947ef-6d3c-4ccb-9431-672dda57bf34",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023dbfef-1079-473b-88fb-0177d57f4c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93724240-fc93-483a-a4df-f3af1435963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd361026-6812-4af3-b283-36975a13d585"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bdf9c24-d96c-4f13-abe9-0f1fed7ca3c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec515aa2-bb16-4d62-967b-6ad6d17ad03f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd2e4e63-2093-47f4-83c5-37b6bbb539d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3d3b9f-99f3-42c8-86b4-9c8b89075247"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9f01d8e-4656-4a75-a569-df9e43875f79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d9d999f-fb87-4310-a801-71c1e58f50d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5376a9ca-d9a5-4f87-a73e-cdce4f60b8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8d8d67c-f6b8-48f7-bffa-e921e8ad4ae4"
            }
          }
        ]
      },
      {
        "id": "fc1397c0-5298-420a-9eff-7d5495db7823",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "00f5ff35-de8f-435b-ab34-8f2f0e772f02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28d5cfb6-479f-434c-a6d3-59c5e1477137",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4751a36-0f7e-416c-82e7-c14151f99e6e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c09c276-1054-4903-80e4-bf56167da727",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd25c47b-dbc8-4abb-8fdc-eb141c805aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5074a0d-b85b-49be-9048-08d874c0604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea47862d-2591-4006-879b-ce9496351b5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08406f76-2043-411f-86f3-37ad00da26a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df178a09-616b-4aa9-8c17-b66fb345c750"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "392d126a-1be1-40a5-bac5-67e38db9a265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cfe93b7-5934-4cb3-9088-e8d937e3dfac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee9bb99d-a731-47eb-9b39-c932aedd8c0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "557c1e7a-0143-4868-a4c0-b0936684e552"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce07b553-191c-49c6-b693-a664b62726a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ca777f9-9b53-4433-9e36-b57e779cdf80"
            }
          }
        ]
      },
      {
        "id": "dc224b95-756a-466e-9305-f25c5eaccd57",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efe1883c-8802-4d93-91e6-5c593a15fb72",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ccaaacf-7762-468b-a38c-a39bf14ef7d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "148a6d28-794f-4801-89a7-efec5d98196d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "766aa272-9a9c-4472-8a6c-57ec7dd65b27",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c061aec6-ba4b-43c2-9601-e0d0afb212f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 55.76760563380284,
      "responseMin": 22,
      "responseMax": 251,
      "responseSd": 18.9386204611433,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691455088204,
      "completed": 1691455116326
    },
    "executions": [
      {
        "id": "86d4569e-9142-4424-ab6a-efc8fa18661a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cfc035b6-5ce6-441e-bdd4-1acaa9fc6c94",
          "httpRequestId": "98f2ba55-4802-45bb-b065-ad7ebf0ff55f"
        },
        "item": {
          "id": "86d4569e-9142-4424-ab6a-efc8fa18661a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "287c5e40-7f00-4d3e-b73a-e0c27a4f570c",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "abcd5777-f6eb-46ad-8db3-ea5d9d20a6cd",
        "cursor": {
          "ref": "58b11f52-0ab3-4476-a4b1-85007cf9f1e6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6de7d2f2-cfba-40ab-bdea-e6081db1a6aa"
        },
        "item": {
          "id": "abcd5777-f6eb-46ad-8db3-ea5d9d20a6cd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7fba1b66-3ca7-4c0e-92a5-16ca57e248f7",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "8e6153ab-a561-4514-83d3-ac128fbeb167",
        "cursor": {
          "ref": "05244c41-ea5a-4e2c-94e1-56a9cfb3064b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "97d9be44-6c33-4f40-8a16-52faf1845fee"
        },
        "item": {
          "id": "8e6153ab-a561-4514-83d3-ac128fbeb167",
          "name": "did_json"
        },
        "response": {
          "id": "ad29d5ca-aff2-4817-a14a-7274f241006c",
          "status": "OK",
          "code": 200,
          "responseTime": 182,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d944987-2f31-42b5-8e94-e8d0a2c566fc",
        "cursor": {
          "ref": "d3ba1415-5809-453a-9d32-fba8815d893d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "013a42d6-900c-434a-a1ba-21fb51333978"
        },
        "item": {
          "id": "0d944987-2f31-42b5-8e94-e8d0a2c566fc",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e292cba-9af0-4cad-8a47-03721906f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d944987-2f31-42b5-8e94-e8d0a2c566fc",
        "cursor": {
          "ref": "d3ba1415-5809-453a-9d32-fba8815d893d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "013a42d6-900c-434a-a1ba-21fb51333978"
        },
        "item": {
          "id": "0d944987-2f31-42b5-8e94-e8d0a2c566fc",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e292cba-9af0-4cad-8a47-03721906f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aca41d-9221-42bc-931d-ea61e8e65ce4",
        "cursor": {
          "ref": "c7c3a056-8ab9-4c94-ac8f-577b9bac7e55",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "abe4b4a9-55c6-4cc9-9eb6-72aab954c6e1"
        },
        "item": {
          "id": "40aca41d-9221-42bc-931d-ea61e8e65ce4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7f094819-cad7-4e53-b40f-c222fde60f9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 95,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f8ce12-8e1b-4100-afd9-d1f49b9880d7",
        "cursor": {
          "ref": "86f86b24-b7e7-4099-9b18-8df6d0175f19",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f08d2849-179e-4f54-99da-ef7f44b66e83"
        },
        "item": {
          "id": "64f8ce12-8e1b-4100-afd9-d1f49b9880d7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dad55ff6-886d-49d2-bbf8-488654695c68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3d2e4-e64c-4434-88cb-aff351b2b7dd",
        "cursor": {
          "ref": "0f83175b-ccc3-47b2-9e3f-eed3adb5aed5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b65a074-683c-4a09-b5cc-e1645046c2fb"
        },
        "item": {
          "id": "9ae3d2e4-e64c-4434-88cb-aff351b2b7dd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e51a8bfe-889f-4b7d-bf02-e77287c86c72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d5e7ef-4aa4-435f-87d3-bcb01295d1e2",
        "cursor": {
          "ref": "9e47427b-f28e-4926-be8e-e1b2488eb3f9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b31564dc-4d4d-44c5-a495-a39e52e539d2"
        },
        "item": {
          "id": "33d5e7ef-4aa4-435f-87d3-bcb01295d1e2",
          "name": "identifiers"
        },
        "response": {
          "id": "1ffe4ad4-6042-45f2-951c-5fa02defcbec",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224f8e1-3dbc-4af2-bc54-683d0416ff00",
        "cursor": {
          "ref": "ce8e96ad-b3f2-4d11-a717-e86d8d19ed80",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2129bcbd-6b0e-4d1f-8636-a4201782eddd"
        },
        "item": {
          "id": "9224f8e1-3dbc-4af2-bc54-683d0416ff00",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e7ac370-c5e4-41af-810e-9cf9638feb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc789b9e-bb1d-4b0d-b553-32675bbd3b4f",
        "cursor": {
          "ref": "af554740-a5dc-4f18-ae64-febc9f031287",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ca871753-743c-427e-848f-f090fee92278"
        },
        "item": {
          "id": "fc789b9e-bb1d-4b0d-b553-32675bbd3b4f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6cd173f1-a4ca-40cd-8717-fc6ac64ffa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49505c4b-de9c-4a91-8665-da708dae9ff7",
        "cursor": {
          "ref": "923cd252-ab1a-4c49-89a8-a95d6f177aa1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2e0150fd-c969-4734-84cd-1b4bc982f8cc"
        },
        "item": {
          "id": "49505c4b-de9c-4a91-8665-da708dae9ff7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3c59cbf4-29fe-46db-a0d8-c35ed45180fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51a4878-ae23-4df0-bff6-cdb13199ab89",
        "cursor": {
          "ref": "3ce13474-9f1d-467c-a51f-fbf28aaed310",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7074b6d5-ae40-45c8-b19c-9227c9d6d5a2"
        },
        "item": {
          "id": "d51a4878-ae23-4df0-bff6-cdb13199ab89",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bfa58fcc-626d-41e8-8c75-889c74228f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa85c76-08ba-4329-aa74-16b85dadfd82",
        "cursor": {
          "ref": "7e5a4514-6e22-4508-a934-6a25f45e1aab",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22b48cc2-ed20-445b-8153-60d6ac7ad666"
        },
        "item": {
          "id": "2aa85c76-08ba-4329-aa74-16b85dadfd82",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "37c11dbc-e7bd-403c-ac85-59020fd7316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6230ae1-7706-4b23-ae3d-fb65c6d17552",
        "cursor": {
          "ref": "2c8533dc-8fae-4536-9449-e89c7591d145",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8248f331-8998-4b70-be57-0c8a8a6d77c7"
        },
        "item": {
          "id": "f6230ae1-7706-4b23-ae3d-fb65c6d17552",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6931ad57-c2ae-450b-9ec1-286a6d09b615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2cff63-5337-4337-a166-193bcb5d67a1",
        "cursor": {
          "ref": "b2700295-7296-45c8-9a1f-820e35aa38ed",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c01afde8-6233-4d83-9974-ce22e7fd4c8a"
        },
        "item": {
          "id": "1c2cff63-5337-4337-a166-193bcb5d67a1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d10a43f6-0a32-435d-8dad-1402e79d547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3d096a-7df1-4c2f-ab8c-fdf55a334313",
        "cursor": {
          "ref": "63830be7-2b0e-4dce-b270-8cb2ed291c08",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ece457e9-0b2e-43ba-98cd-61b52922b317"
        },
        "item": {
          "id": "dc3d096a-7df1-4c2f-ab8c-fdf55a334313",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14d8579f-485b-4103-a5d7-da173f92787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99b4590-456c-436c-8466-f4c8b5028075",
        "cursor": {
          "ref": "a2c5daaa-62a2-4489-bb84-4450313d4306",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "40ea767b-b4c0-4bd3-89c0-796212711e83"
        },
        "item": {
          "id": "f99b4590-456c-436c-8466-f4c8b5028075",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a1eb638e-c211-4607-9605-e25c150888b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237b4c7-74f8-4f29-8f8e-06fb86f37bec",
        "cursor": {
          "ref": "8035bc6f-fc5f-49d5-aa79-2a890593582f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "370691f8-92f0-46e3-be5a-ac368dda6286"
        },
        "item": {
          "id": "7237b4c7-74f8-4f29-8f8e-06fb86f37bec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "328a287b-cd30-4acb-9967-c8099adce23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0911c338-6d9c-4058-b1e1-035a2d499d1c",
        "cursor": {
          "ref": "e490c81b-0fe0-4e76-a686-1681c11de324",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f9df75ff-7421-4798-ac95-9bb341401ced"
        },
        "item": {
          "id": "0911c338-6d9c-4058-b1e1-035a2d499d1c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4629e016-b3ed-4f82-956e-ef81c19d216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617eff79-3259-4b9e-9742-9cfc38168951",
        "cursor": {
          "ref": "67671f87-37a1-4452-b55e-0d3a82332054",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3903362d-e078-45d4-a2ac-4ca727f5538f"
        },
        "item": {
          "id": "617eff79-3259-4b9e-9742-9cfc38168951",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aaef86d7-8e17-4a36-8b70-41ae9c3b38c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8707d2c3-8884-4374-bc2e-5d41ca56e45d",
        "cursor": {
          "ref": "af34eabf-b22c-4e88-9a25-ba1082178091",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1736f901-b7e8-4148-9703-bed17a4813fa"
        },
        "item": {
          "id": "8707d2c3-8884-4374-bc2e-5d41ca56e45d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "56d82a53-440c-45f0-93bb-b20fad768a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e9dd4-416e-40ea-868b-33b2ec457537",
        "cursor": {
          "ref": "770997c8-b34a-4082-826a-a2111500c534",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "05fdac36-8a7e-4f43-b505-90817b53d57e"
        },
        "item": {
          "id": "f17e9dd4-416e-40ea-868b-33b2ec457537",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34cbb83e-12bb-46a2-85ec-1448ccf70dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19500e05-37b6-46c2-94f2-9450c5147c38",
        "cursor": {
          "ref": "184ed9de-e156-4c25-bc92-4716f464210d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3db0f22-ac19-4fce-8cf9-408b70db19bc"
        },
        "item": {
          "id": "19500e05-37b6-46c2-94f2-9450c5147c38",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c19f2f3d-9085-4785-a91b-113b62dc083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e080fe-3081-4df1-b33f-202755e0a704",
        "cursor": {
          "ref": "97d634a1-3cff-4e11-938e-b0790f7fa86e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b0347ae1-0e14-419b-8391-1ac6b1f72591"
        },
        "item": {
          "id": "d5e080fe-3081-4df1-b33f-202755e0a704",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "616ca9c0-0590-4ac8-8a2a-1ef642eb7d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a03437-48cb-4d5d-aa47-e6fd6afc9a85",
        "cursor": {
          "ref": "aff7eff8-2979-4d48-b8cc-5e171a5a53ca",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4eb702d-6f1c-40dc-82bf-c393ebd70888"
        },
        "item": {
          "id": "35a03437-48cb-4d5d-aa47-e6fd6afc9a85",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2091c0e3-a55c-4f2a-92fa-80ce740fce38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b22b92-4cde-46df-bf1f-2e40053ffd15",
        "cursor": {
          "ref": "8b55f4df-e591-44c2-ad8e-6345260ecdda",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6a58e9d4-b49b-49eb-9649-6559bfdad485"
        },
        "item": {
          "id": "99b22b92-4cde-46df-bf1f-2e40053ffd15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "74d455c0-ef64-4007-b1a2-93e0e90168c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f95cc4-4210-4c70-b976-2c36e6a0171f",
        "cursor": {
          "ref": "c599a67b-9ea3-40ab-ab4e-123cbd0a35a7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55c57856-8163-4f36-960c-6d7d79841dd6"
        },
        "item": {
          "id": "97f95cc4-4210-4c70-b976-2c36e6a0171f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4dc543cd-76a0-4ad1-938e-7f25a4a5cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f28f21-5ce9-40b7-a355-79c378291621",
        "cursor": {
          "ref": "a18adc43-5645-4a38-970c-927f8c03c054",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7533c72f-7d2f-4a16-8c72-aedd531bc51a"
        },
        "item": {
          "id": "32f28f21-5ce9-40b7-a355-79c378291621",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "af3383d1-8b69-4f07-b850-9caaba977460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658f3d95-793e-4707-a10f-0290ecf94a30",
        "cursor": {
          "ref": "6c8da3d7-758e-4a64-a954-fd49118d465b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "db0bad6a-14d4-4c05-9602-b387f0e44730"
        },
        "item": {
          "id": "658f3d95-793e-4707-a10f-0290ecf94a30",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "56b81b03-e440-4b04-a447-f90204710677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ef0c44-e1c6-43e6-8dc5-85a18fa2c251",
        "cursor": {
          "ref": "3cbebe07-44ec-4ac3-93e5-e89966edf918",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a57f3ffb-a422-4c01-941b-12cb7acd4fcc"
        },
        "item": {
          "id": "26ef0c44-e1c6-43e6-8dc5-85a18fa2c251",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7fab9b9b-f934-4af7-8031-540788d4bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e1dce4-1a70-4269-a5a8-ecdad831d4d6",
        "cursor": {
          "ref": "51665465-fbe3-42bb-b814-7d03e21d6547",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7ce1955e-36d0-466f-a585-0a4d2e4a4f10"
        },
        "item": {
          "id": "e3e1dce4-1a70-4269-a5a8-ecdad831d4d6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3b757b4e-07f7-4ad6-91cc-1d0b4ab8389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cc5e9e-8a7c-4af5-a0df-aa5b98eb233b",
        "cursor": {
          "ref": "56098ae6-4ba3-423e-9088-093436d06e02",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5280c509-d2db-4e5f-956c-63e781b6b704"
        },
        "item": {
          "id": "a7cc5e9e-8a7c-4af5-a0df-aa5b98eb233b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09c82e70-7722-4b38-9069-ad1835331748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e51861a-d7e8-49e5-b1b9-2f04d0c148c3",
        "cursor": {
          "ref": "4e1c6721-4040-46ae-ab72-b26c7da70cf9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6a0540a1-8b33-450d-ab4c-848cbc5d8cf5"
        },
        "item": {
          "id": "3e51861a-d7e8-49e5-b1b9-2f04d0c148c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1ce9fa29-e625-4497-8bf2-f9a8cf3d52b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c068c28-9ea3-443b-9306-23804f501d3a",
        "cursor": {
          "ref": "4802bdfb-0f4b-42c9-876c-3bef8ac25d50",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5e97577-ba6e-4c0a-9d99-8b474ee585cb"
        },
        "item": {
          "id": "5c068c28-9ea3-443b-9306-23804f501d3a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ba7bf19-ad6b-4977-9a32-199de5912a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5523db6f-8f27-4b3b-be06-cb7225b0ac1f",
        "cursor": {
          "ref": "36126cd8-bd89-4444-8a27-9c7626793e7e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a9988b4b-210e-4ad5-9fc7-5145fc021105"
        },
        "item": {
          "id": "5523db6f-8f27-4b3b-be06-cb7225b0ac1f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "562beb09-b888-49dd-b656-a33b8b24075a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab778bf-f1ab-4e4b-867e-4e37afe173df",
        "cursor": {
          "ref": "897b481a-5fae-4be0-88b4-b5f6b03b5fac",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "35698e9c-8485-43d2-b3f7-a1f387f682b5"
        },
        "item": {
          "id": "1ab778bf-f1ab-4e4b-867e-4e37afe173df",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8dc01ae0-b028-482e-8b9a-90eaa21b1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f3e281-0bc6-4e47-94e4-405277950734",
        "cursor": {
          "ref": "073c0615-d064-4eff-af03-a0fc2ff028bd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "93008a17-396a-4d35-b7af-c40cf470e5fa"
        },
        "item": {
          "id": "b5f3e281-0bc6-4e47-94e4-405277950734",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9a426cd5-9c0e-4b23-a2c2-cddb50802a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b334e17b-a06d-4442-b9c2-6a520824dda1",
        "cursor": {
          "ref": "f4032fc0-d301-467f-bca7-d3b2ccc7152b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6e42ff38-0663-417b-ae7b-3566ccf283a7"
        },
        "item": {
          "id": "b334e17b-a06d-4442-b9c2-6a520824dda1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f73f670f-8bab-4a99-981f-a95795698ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa18333d-d8c8-40eb-af41-23c3bfc56b1d",
        "cursor": {
          "ref": "cbb9ab33-3d29-472d-a779-61c540896ef1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d5e4b0e-faa2-44b9-ad38-13ed9fb6fee2"
        },
        "item": {
          "id": "fa18333d-d8c8-40eb-af41-23c3bfc56b1d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4d948174-1008-4eb9-bb6b-25e230c4ada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14757b7-7016-40de-b64c-8224dc809713",
        "cursor": {
          "ref": "e8c27363-83e2-45a2-b5be-0d16e318c37b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dcede0d3-b093-41d8-8680-2d12fd4b0e2d"
        },
        "item": {
          "id": "c14757b7-7016-40de-b64c-8224dc809713",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c329457c-6210-46cb-a983-b94f217bf9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206a7655-62ea-4508-a6b5-6fc6a6701201",
        "cursor": {
          "ref": "7cfa3f28-4a35-4ad9-8fa0-64068deaffe5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "614c3591-e301-4f56-9738-59f76d4bd8ae"
        },
        "item": {
          "id": "206a7655-62ea-4508-a6b5-6fc6a6701201",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "358b2e1b-d119-42b4-a830-7f439a04156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc65e0b-cfc9-428b-8fd8-04636f3098a9",
        "cursor": {
          "ref": "13c53d9f-5763-4568-8dd1-0e67808d7234",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59d98123-1422-4fae-921d-16618825da39"
        },
        "item": {
          "id": "5fc65e0b-cfc9-428b-8fd8-04636f3098a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14eefd00-c9d8-4b8b-b38c-9a6d2e32f6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ceaa2c-deb7-4b48-94e4-35404addb750",
        "cursor": {
          "ref": "b2787eda-21f1-46e8-8627-f5d32e549736",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "20553193-7c94-4da5-8d90-80874f40682a"
        },
        "item": {
          "id": "d0ceaa2c-deb7-4b48-94e4-35404addb750",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9f193f4d-dff3-4348-82e6-8582c4a608ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f83fbe-4246-4f53-9b68-92c21a75f2cf",
        "cursor": {
          "ref": "a7bb02fe-76d7-4ebf-a687-028e1abdb3b5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "efe21483-c22c-46d9-8447-f57552bf57d1"
        },
        "item": {
          "id": "17f83fbe-4246-4f53-9b68-92c21a75f2cf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "482b67b8-d2b8-4083-b2b4-e0d935c8d33c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb22398-35dd-4690-8d42-8eca2994cba6",
        "cursor": {
          "ref": "af3a2098-7783-4a78-85fd-44dced8b4b56",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bd1ee2a8-ca93-4b6b-a7aa-db09d69eacc3"
        },
        "item": {
          "id": "8bb22398-35dd-4690-8d42-8eca2994cba6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ea735888-0af6-44b5-ab88-0c44e37bab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e70855-80b0-4ac0-b9b0-4cd85e0ee975",
        "cursor": {
          "ref": "4cc6db9d-ba0d-477c-8337-6012823a4065",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fb647213-5e14-4006-b9a5-09cf589b5c48"
        },
        "item": {
          "id": "36e70855-80b0-4ac0-b9b0-4cd85e0ee975",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b3c2426b-f25e-435f-94b7-96a9e640ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d40b4a-5f96-4997-aadd-ca27fccad672",
        "cursor": {
          "ref": "7a6abf99-cd0b-4d81-bd7b-b5ecb35d4249",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9053edd0-e500-4e8c-81fb-810ccda5d231"
        },
        "item": {
          "id": "b8d40b4a-5f96-4997-aadd-ca27fccad672",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e2ce4e8b-3337-481b-9d61-ead66efa2640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40afb9b-8e9f-4738-bcb6-30cd62b269bb",
        "cursor": {
          "ref": "ba22c576-9bd7-4953-ab56-19d75fce2734",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b34ab0d5-3e24-4ad8-ade0-b137b0f46c7d"
        },
        "item": {
          "id": "d40afb9b-8e9f-4738-bcb6-30cd62b269bb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eb84f9f5-8b50-4ed0-aae0-96d2f4a5fe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ef32e7-7db9-4e90-8c9c-6fafcaa7d4ab",
        "cursor": {
          "ref": "32a3219e-0316-4706-9e32-eaa65ece5d8d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "489ed763-f025-4c30-8fda-6e946110ccbd"
        },
        "item": {
          "id": "28ef32e7-7db9-4e90-8c9c-6fafcaa7d4ab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d54f27a2-445b-451f-9ff8-2c5da3578ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e08e80-e402-440a-b456-70f1e78a54f6",
        "cursor": {
          "ref": "b60b801b-4281-4e75-8965-0d6f5b38011b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cc2ef4c7-b6c5-4588-8681-7388edd50b51"
        },
        "item": {
          "id": "41e08e80-e402-440a-b456-70f1e78a54f6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f4ed48fa-bdeb-473d-8c50-3f27365cf18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a6a06-4a4a-4da7-b716-47851fd71502",
        "cursor": {
          "ref": "59bee4a1-cad2-4710-a3ff-2aab525dcca9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ef941967-1a90-481a-8b15-cc86441b52ab"
        },
        "item": {
          "id": "846a6a06-4a4a-4da7-b716-47851fd71502",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1c4087d4-a841-4e6c-b46a-8c2a3e807fe3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdf6ee9-7965-4f79-af68-c165ae669128",
        "cursor": {
          "ref": "b91dda96-3b4c-47a4-9c76-ba87e6b456da",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0749d6b5-31ca-4b21-a1c8-76b1e2493a50"
        },
        "item": {
          "id": "8cdf6ee9-7965-4f79-af68-c165ae669128",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "05ffbac8-9c6d-4b44-93f2-2a6fdd9286e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82835dc9-6195-463b-ae45-9df422158f84",
        "cursor": {
          "ref": "079ced76-40f3-412b-aa60-957baab3798f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a434437c-cbdf-4df5-9b81-d2b33af4ffad"
        },
        "item": {
          "id": "82835dc9-6195-463b-ae45-9df422158f84",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3570b3ca-66f1-4674-b60e-c9eb5fb1496c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0771764-10f2-4e92-9db1-641b114b93c4",
        "cursor": {
          "ref": "2ae96fdc-716e-431a-85dd-815c75d7c81d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "efaadc79-facc-46a3-a9ac-065163c56796"
        },
        "item": {
          "id": "e0771764-10f2-4e92-9db1-641b114b93c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4a131ab8-5b37-4203-b58c-da63d1ea181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1ccc8-05e9-4f87-b062-84a7550afefb",
        "cursor": {
          "ref": "d27dd3e0-a209-4259-889a-2914652dec7d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe72458c-65ba-4bbd-b8d2-d07531f8b5e3"
        },
        "item": {
          "id": "baa1ccc8-05e9-4f87-b062-84a7550afefb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "863bf6dc-a5c7-4aa3-a474-a2a2302227a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f8fe9e-5316-4f7c-9aed-f8f18cf8e831",
        "cursor": {
          "ref": "3ed5e5a1-bdee-4825-80ba-119acd8c8c3a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b403b20-319d-456b-a2a0-d557fbc2d615"
        },
        "item": {
          "id": "81f8fe9e-5316-4f7c-9aed-f8f18cf8e831",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0cb44eda-18da-4eca-b443-ddd13db6a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d752e59b-ef88-495a-947f-c4c3825920fa",
        "cursor": {
          "ref": "897702d1-3001-407d-bd22-4a631caf2330",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a0954ee8-a306-4a9f-9215-06c814102000"
        },
        "item": {
          "id": "d752e59b-ef88-495a-947f-c4c3825920fa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cfa16483-f5b8-4fc6-9ebb-1dccec555b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b1233a-0e21-40e8-bbc1-ed5c51f86047",
        "cursor": {
          "ref": "316e72a7-02db-4aaf-ba1e-39aab2033177",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4f40f1b0-4059-44c4-9deb-8d7bc2e8fbcc"
        },
        "item": {
          "id": "04b1233a-0e21-40e8-bbc1-ed5c51f86047",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e21e2dd8-5908-4390-98cb-257da68f988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c861f0a2-b430-4309-8e07-3f3beb458557",
        "cursor": {
          "ref": "2ae64ebf-6d6c-4f76-a547-6e6b2ef7d2c6",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a2d5990a-5772-473d-b994-54f5bc02b1a9"
        },
        "item": {
          "id": "c861f0a2-b430-4309-8e07-3f3beb458557",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7ac9311a-3cff-4b4c-9549-210c31152fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449abe79-b9fe-4916-af01-ea79791ee4ea",
        "cursor": {
          "ref": "fc1da003-6b24-46a1-83df-355e9f5354a0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2569194f-c5d8-4e20-80e8-f2238dab4a5d"
        },
        "item": {
          "id": "449abe79-b9fe-4916-af01-ea79791ee4ea",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b177da24-4a5b-4771-a8b1-7d9570cf744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f131b02-6d23-4fa3-8784-fd31d6b99ec8",
        "cursor": {
          "ref": "ecc3bc50-0bbf-4239-a3bf-a6550f561f7c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "47e356d6-f2cd-448b-862c-201aa97af057"
        },
        "item": {
          "id": "1f131b02-6d23-4fa3-8784-fd31d6b99ec8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "586f6033-7def-4e46-984d-baaa37215539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680a1470-f161-4991-ad92-58a2ea91932a",
        "cursor": {
          "ref": "75f9b2d9-04f4-4da7-b1a7-89de49f26574",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c728aaca-3570-491e-9360-67b1faa539ca"
        },
        "item": {
          "id": "680a1470-f161-4991-ad92-58a2ea91932a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e3384c19-9a37-47ad-8ca5-1fe08a8ddf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7977f9-a8b6-493e-8f84-81680360361a",
        "cursor": {
          "ref": "653ece31-559b-4e81-b030-fd939c59e6ca",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f20a231d-9978-420d-b751-abc858395068"
        },
        "item": {
          "id": "6e7977f9-a8b6-493e-8f84-81680360361a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6fb0df06-6ffa-46c0-a30f-f91d30e3782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de57bbb9-6465-4c34-9596-1758ddc8495e",
        "cursor": {
          "ref": "58448fe7-7a68-4c78-bad2-705a193f3c34",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f8a4cee3-be38-4ba5-9752-d5d0c2a0d4ad"
        },
        "item": {
          "id": "de57bbb9-6465-4c34-9596-1758ddc8495e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "648fa91f-03cf-4445-86cf-d1842e5c7cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7f2041-293f-4af1-98fe-2ea2a4269be0",
        "cursor": {
          "ref": "693da491-b968-4f0b-8fe3-ad7943b4b7f8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "23c46cab-a64d-4574-97ce-ae017a4b648c"
        },
        "item": {
          "id": "7e7f2041-293f-4af1-98fe-2ea2a4269be0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8e54fbb9-24a0-4a3d-91da-1017207728af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6a6155-b6e9-46a7-89ab-52c77fa74787",
        "cursor": {
          "ref": "2185932e-58e3-4112-8820-f3d2bad0e8e0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05810a1f-1b91-4890-a2ef-57b0835baa29"
        },
        "item": {
          "id": "6d6a6155-b6e9-46a7-89ab-52c77fa74787",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "44e9e3ac-b6fe-4fdf-af77-415576e2d9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff0e9af-2fc9-462e-a7db-b34ec75f6aba",
        "cursor": {
          "ref": "46b6cf44-007e-4719-bcb4-5905d6a3c578",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bf45d61d-9d34-4014-8552-349d51a3c6e3"
        },
        "item": {
          "id": "cff0e9af-2fc9-462e-a7db-b34ec75f6aba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0d5b05c6-bc66-488e-abaf-714e47717c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda9fcb3-3f15-4f91-b09a-4ddc5abd470f",
        "cursor": {
          "ref": "d0beaabe-48d5-451c-83f9-10748b359cf7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "053523c0-9d87-4706-82ff-ff56cb6d5c88"
        },
        "item": {
          "id": "fda9fcb3-3f15-4f91-b09a-4ddc5abd470f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f913c579-7dbd-4166-b75b-9005b4526c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191775ba-d075-47b1-ad51-e7d5c01a4582",
        "cursor": {
          "ref": "cf413ab9-f025-4145-9eae-2c95bb9f1ca3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4dcdb1ca-93fe-445a-b480-36a3d64d056c"
        },
        "item": {
          "id": "191775ba-d075-47b1-ad51-e7d5c01a4582",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bd6293c9-0deb-472a-953f-885d00fea135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333fa9d4-af6c-4d0a-89d9-52f847e6c8f9",
        "cursor": {
          "ref": "352a33e7-54a4-440f-8414-83ca6bdf547b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07aa953d-1372-42c6-aaec-13f25f4d0ceb"
        },
        "item": {
          "id": "333fa9d4-af6c-4d0a-89d9-52f847e6c8f9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e2ea5afc-4275-41cc-891c-32d5dd0378a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e719c2-3fae-4728-9e99-8b8996e0e7b2",
        "cursor": {
          "ref": "d8cb1434-5f15-434e-82da-ffcef3366c1a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4405a606-4563-477c-8c9d-1c91326877e8"
        },
        "item": {
          "id": "e1e719c2-3fae-4728-9e99-8b8996e0e7b2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a22e1f86-ecfa-479e-9ad2-cb07881d488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f003c-c0d1-4baa-90a9-5bd45840ba8e",
        "cursor": {
          "ref": "36f56c8c-a932-4603-bf3c-87049ed3c757",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "20a585f6-86f2-4298-a5dc-5db6bc1a39a9"
        },
        "item": {
          "id": "9d7f003c-c0d1-4baa-90a9-5bd45840ba8e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d8b84295-7fbd-41d6-8d02-74a91ad42558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a381a9e4-a57d-4b0c-bac7-f7c94bce5452",
        "cursor": {
          "ref": "4d9aa717-25aa-42e8-bda8-8b486b96437d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bcf16071-d860-40d4-a7b3-4aff68c3b411"
        },
        "item": {
          "id": "a381a9e4-a57d-4b0c-bac7-f7c94bce5452",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "65d36728-e253-4a60-b757-51bbc2596cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d3d5eb-87b8-4a9b-869e-26ea790fa387",
        "cursor": {
          "ref": "bc4d4a42-91a9-4b94-b001-92ce96249fbe",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dbaf5e94-05cf-450f-9fef-b57fb86cff36"
        },
        "item": {
          "id": "c5d3d5eb-87b8-4a9b-869e-26ea790fa387",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "42ab564f-194f-4edb-a049-397f27b0101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5d2541-bcf0-4d1f-956a-a27ce063460d",
        "cursor": {
          "ref": "1e052fcd-2cfc-440d-93ea-2d5b8eda9d07",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac2c88b4-f1c0-4863-b194-c3fb3b9d1c38"
        },
        "item": {
          "id": "1a5d2541-bcf0-4d1f-956a-a27ce063460d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "181a9963-4c30-4737-82bd-22c1eeb04868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e5225a-bb92-46b6-b9f7-61a05d40d6ef",
        "cursor": {
          "ref": "3ba7d1b4-f2b7-4090-ae69-cd2ea64c4e5a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "db3f9cf6-71e1-4d94-a339-e77e32ac803f"
        },
        "item": {
          "id": "e8e5225a-bb92-46b6-b9f7-61a05d40d6ef",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "38060df3-e31c-45c8-a151-a59f8cdc3d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6641846-d8ad-43b7-bc4a-b7bc23dd5a70",
        "cursor": {
          "ref": "990d199c-9aa4-45b1-975a-9462efbb6f7f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eb5eed9f-fc7e-496c-b7ab-40fc5d5e38a6"
        },
        "item": {
          "id": "f6641846-d8ad-43b7-bc4a-b7bc23dd5a70",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2fa58a4-ae86-43bb-96da-27c38fb7df5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da2b9f0-43cd-482d-83c3-3110b62e4fd7",
        "cursor": {
          "ref": "17debf66-1284-44a2-a3b9-6e8400714fa9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b5fd380f-9560-417d-be1a-9b86f79d0166"
        },
        "item": {
          "id": "1da2b9f0-43cd-482d-83c3-3110b62e4fd7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e8b7e272-1502-47d3-86bc-ad53596f68ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7ef96-6ce7-44c1-a20d-40de8b427c3b",
        "cursor": {
          "ref": "422254ca-d793-4186-abc7-440ea8bffb32",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e13ebe1-bdba-44fb-8fc9-e9e4ce95b86d"
        },
        "item": {
          "id": "9fd7ef96-6ce7-44c1-a20d-40de8b427c3b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f5cf7eaf-6fa9-4dc5-8695-6f89ff605a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9b42a7-2a35-44f9-977e-9a2ce56fbef2",
        "cursor": {
          "ref": "aa974f56-2c0a-4c55-8f1b-3ce249e9da70",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e94809ea-cdd1-4b5a-88aa-b474ceac4d59"
        },
        "item": {
          "id": "ad9b42a7-2a35-44f9-977e-9a2ce56fbef2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "faeb7b78-bbc6-4b8b-86d0-b2ea45c287f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987f5b27-787c-4459-8c3c-3d7aadf2d56d",
        "cursor": {
          "ref": "07d65fcb-c178-4b34-b44a-4c181b45db44",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9de32e45-fcac-47bc-bff0-ffd88d0c608e"
        },
        "item": {
          "id": "987f5b27-787c-4459-8c3c-3d7aadf2d56d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb73985d-4bb8-45eb-8ceb-6d375baad860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf8693a-97ca-48b8-a552-cdd1ccc9edc7",
        "cursor": {
          "ref": "e52b429f-d158-42c9-8da4-f4721bf30f66",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2ce71a0d-1b40-4d7c-8850-798866a0f7e3"
        },
        "item": {
          "id": "0bf8693a-97ca-48b8-a552-cdd1ccc9edc7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8a78e33c-06a1-4405-8371-36c139b915bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2288a6bc-3914-4fa0-a624-208072dba554",
        "cursor": {
          "ref": "6fc4aa67-cd6f-493e-a4e8-f85605ae1398",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "30aeb18a-4828-4735-a627-c9113edcfe6e"
        },
        "item": {
          "id": "2288a6bc-3914-4fa0-a624-208072dba554",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "be1b2824-7e97-4f24-99e8-0d3b78f3d4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4841bb-8f67-49a9-94a5-b54809a8a313",
        "cursor": {
          "ref": "45484e0c-f32a-4b35-b967-8d89506cc712",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3e9b7a83-d7d5-4bd7-b9f3-5f23c196122e"
        },
        "item": {
          "id": "8f4841bb-8f67-49a9-94a5-b54809a8a313",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dbaebf3c-7b4c-4dc3-930a-a6dcddc60346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283aee7-5eee-4489-a06b-f95bd703a95d",
        "cursor": {
          "ref": "93db0b65-113a-4b38-b59d-f0a787d57b9e",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dfc025cb-7113-43ba-bb91-7e573883b0a1"
        },
        "item": {
          "id": "e283aee7-5eee-4489-a06b-f95bd703a95d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "74f3054c-7d7c-4c6f-97b1-5aa3e67430b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c69ce75-d2f8-455c-bfe8-6f3ebdc9703b",
        "cursor": {
          "ref": "e8a6dd51-d78c-49ea-b249-d97c22f78a9d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e4bae35d-71f4-458e-969a-9e76dbd68d16"
        },
        "item": {
          "id": "9c69ce75-d2f8-455c-bfe8-6f3ebdc9703b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "71193d30-0d47-47ef-bdd7-d48d6f7e5365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e620642-cd79-4cf3-b505-20e60db46dd1",
        "cursor": {
          "ref": "50e48447-ea41-4422-802d-c551f6943bfb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9d0d4fec-2680-40fc-a017-8db114643497"
        },
        "item": {
          "id": "2e620642-cd79-4cf3-b505-20e60db46dd1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b9bc116f-18dd-428b-9838-96a57f4a8dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0200fe4e-8288-4fb9-95b0-826d13171849",
        "cursor": {
          "ref": "a2549a71-fbe4-4205-9e14-0517a4296efc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "44a32e21-3bef-4702-b8c4-1702b44ffb40"
        },
        "item": {
          "id": "0200fe4e-8288-4fb9-95b0-826d13171849",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0bffc12-6bb2-434a-8d03-894d395234e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d43f7-277a-4839-bf1d-16dc50e500cd",
        "cursor": {
          "ref": "c8cd11b9-cc83-44d1-8c0a-2c6116c83ee3",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19b69004-1b23-4304-be31-0580c08676df"
        },
        "item": {
          "id": "316d43f7-277a-4839-bf1d-16dc50e500cd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ea67784-3b41-4252-a17f-58ff20d807ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c3bb1-07da-456f-a274-337e712d5152",
        "cursor": {
          "ref": "72ae5fbd-06ce-4279-9fcd-4fea0478b9e9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e033757b-2926-4fa1-8f8b-ebddaaa34217"
        },
        "item": {
          "id": "e46c3bb1-07da-456f-a274-337e712d5152",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "31ddc4c3-9e46-4415-9d87-be4ee4436931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e829ff80-7fc3-497f-8eec-c7e425707673",
        "cursor": {
          "ref": "3ea64a6f-edfa-4819-9680-17780e29f6d3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "59f70d6f-81dc-4b32-a77a-480025879cf0"
        },
        "item": {
          "id": "e829ff80-7fc3-497f-8eec-c7e425707673",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "032519f2-38b8-4f7b-bc7a-acfdb2ad33c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8acb71d-ec15-40ab-a522-5f141695a5b7",
        "cursor": {
          "ref": "cebe5caf-0468-4f9f-bcb2-a2af77191e3f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "877b3c7e-aa44-4664-9684-f3fed503e19c"
        },
        "item": {
          "id": "f8acb71d-ec15-40ab-a522-5f141695a5b7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79b83a5a-b3ca-4357-a931-1822cd1376bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9722dc16-9c52-4e10-bfe6-017fdb502b9e",
        "cursor": {
          "ref": "d50f5254-a3e5-48b5-a28e-5556d0244d0b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ce3e1f2b-e79e-44f4-9f4f-e2d0df0d61e0"
        },
        "item": {
          "id": "9722dc16-9c52-4e10-bfe6-017fdb502b9e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3c4c4788-6d74-47e5-8927-5a71ca555381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24ca40a-0412-48f6-a678-3e2df56d9cd0",
        "cursor": {
          "ref": "e1dc5188-f7ba-4648-a09f-96e0ddacb1ca",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a9a3765f-e169-4231-a9bc-5c7282862980"
        },
        "item": {
          "id": "f24ca40a-0412-48f6-a678-3e2df56d9cd0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cab09896-9490-44a9-b1af-ebf71d4fefc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910021c5-c874-422f-bef1-44c8ee29f7cb",
        "cursor": {
          "ref": "32c53222-3c64-4f22-af07-59ff9f4db895",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "823b2e4d-5c79-40c7-8d6f-7e51e1cd2ec0"
        },
        "item": {
          "id": "910021c5-c874-422f-bef1-44c8ee29f7cb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a895e9bb-2754-4656-bcf9-ba839c913c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3f39d2-b405-46b1-afe4-c407531a9c50",
        "cursor": {
          "ref": "13302d3f-c47b-42c2-862c-73158f7bbe55",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fd89270b-eae7-4057-9f76-6d7cca68c37d"
        },
        "item": {
          "id": "ea3f39d2-b405-46b1-afe4-c407531a9c50",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "28e8d8a0-0c56-4f5d-9986-4c3f8fb64118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a12041e-e128-4147-a050-da3cf2e7df50",
        "cursor": {
          "ref": "5ab6f450-2021-427b-ab76-e6f93967a9f5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4bf94dba-a762-483c-a974-72c11963e797"
        },
        "item": {
          "id": "0a12041e-e128-4147-a050-da3cf2e7df50",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b7261417-f094-431c-9db6-ad375d8c2997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36faac1-f962-4e54-8488-0f2bd6a08294",
        "cursor": {
          "ref": "ebb8dcaf-637a-4b23-a1be-56540b93ee7c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "46d501d8-9806-460a-a6cc-582c08d34ce1"
        },
        "item": {
          "id": "e36faac1-f962-4e54-8488-0f2bd6a08294",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d2bb9b7d-daa4-4e2f-a14d-a4b8facec70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88025a-f8a9-4085-ac67-a3672ec174e2",
        "cursor": {
          "ref": "b8e2195d-b720-480c-8117-417c890321b1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3e8aa1c5-6878-47b1-b34f-418476c60b11"
        },
        "item": {
          "id": "dd88025a-f8a9-4085-ac67-a3672ec174e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c01529ec-3e22-4a38-8b63-13f6e0713220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040f8898-a3d4-4326-804f-c9a332710915",
        "cursor": {
          "ref": "318b2db9-7643-40af-90da-3f49568a5012",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "695e2e27-0568-4ab5-bedb-90fdca159727"
        },
        "item": {
          "id": "040f8898-a3d4-4326-804f-c9a332710915",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dcd7decb-dfa0-416c-8b49-b600d3b41bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5841652a-0cd0-44fe-8a20-0b5914ed30a6",
        "cursor": {
          "ref": "e4b92e7c-cad4-4188-a1f4-7679ab2fa017",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6d25139d-47ac-4f8a-83f5-f31b3c52895d"
        },
        "item": {
          "id": "5841652a-0cd0-44fe-8a20-0b5914ed30a6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4bcf6149-039b-4a74-b5cb-c95268b8b22c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba81a8d-f7da-4dfd-9c33-f1e09045ac35",
        "cursor": {
          "ref": "6aa9b145-5dce-42b0-8de3-8029198992d8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "08f67de3-af21-4a62-a2d9-16a7f95d0431"
        },
        "item": {
          "id": "cba81a8d-f7da-4dfd-9c33-f1e09045ac35",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b1790c57-2103-42fc-ae8d-93d3da349710",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1b509c-b3d0-4233-8fcd-98c09ec1bb70",
        "cursor": {
          "ref": "883ff363-7ff8-426d-93f8-6a5981cda080",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e7ddcfb5-e324-4f42-abea-57a518d74e24"
        },
        "item": {
          "id": "0d1b509c-b3d0-4233-8fcd-98c09ec1bb70",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5863c55a-7502-44c1-bb66-ab850cadacbe",
          "status": "Created",
          "code": 201,
          "responseTime": 186,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc478a-264a-46b6-9ead-0bde5c425528",
        "cursor": {
          "ref": "a03b2454-5773-48f6-b3f6-bffadd806f95",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b9fa28e4-5d88-4a24-89d1-0ef0934262d6"
        },
        "item": {
          "id": "25bc478a-264a-46b6-9ead-0bde5c425528",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "85faff1b-47bc-44e2-8808-a647ba9ca2b5",
          "status": "Created",
          "code": 201,
          "responseTime": 126,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e571474-de25-4063-ae05-a950b03122df",
        "cursor": {
          "ref": "278e6b6c-71e5-472d-87cb-277eaeb8e835",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "116de21d-8d1d-4fd7-87e7-70926f69bac7"
        },
        "item": {
          "id": "9e571474-de25-4063-ae05-a950b03122df",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5a41659c-696f-4412-a740-2c900bb6f907",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cec880-dd61-4426-9b0d-2eeea2e1c382",
        "cursor": {
          "ref": "c1b0204c-195b-4681-896b-3290742ce593",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a78f04f-54b5-4d80-abe0-631651f2bd4d"
        },
        "item": {
          "id": "d7cec880-dd61-4426-9b0d-2eeea2e1c382",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f060a396-fea7-41fb-8204-0ad3c9637db4",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "31028400-3131-41fb-a245-83f8a1b8f4c8",
        "cursor": {
          "ref": "6ac7ea37-a5e0-4fae-85dd-d5f762f265c1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cdc65f99-58f7-44aa-9041-697530c5a039"
        },
        "item": {
          "id": "31028400-3131-41fb-a245-83f8a1b8f4c8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ef3872f1-744b-4cce-a1f2-34c72a3bf9c1",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9009cb9-3996-42ac-9b97-7be819725b34",
        "cursor": {
          "ref": "ebde8a61-f561-459e-8fe4-82d840507046",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "369e95b4-bbcf-4512-8803-a70817d2246e"
        },
        "item": {
          "id": "c9009cb9-3996-42ac-9b97-7be819725b34",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd840d39-39ef-41d5-9ed1-bc2992b5d439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540d1891-babc-4ab7-ba3b-949abc8f5a8e",
        "cursor": {
          "ref": "936ecc1d-1015-4964-9941-7206535f1f1c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d457cfa7-4e64-4e0e-9b97-b450232ccc80"
        },
        "item": {
          "id": "540d1891-babc-4ab7-ba3b-949abc8f5a8e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5a4c82ce-07df-48d4-b0aa-c5401bbf312e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccba852-0a80-424b-ba70-35354e7f65b3",
        "cursor": {
          "ref": "dd044889-b0d1-4c97-bff8-3fabd0647b94",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66408a8f-56f7-4710-9e6f-d3a504b05973"
        },
        "item": {
          "id": "dccba852-0a80-424b-ba70-35354e7f65b3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e3ae583-08fa-4cd2-999d-3a1497ef0062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b31f8-e262-4158-8079-742e6e3e6dbd",
        "cursor": {
          "ref": "3e785b07-0a0a-49f2-97ae-e050317b8aab",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "275917c1-2c9d-407b-900d-12a5c7f51132"
        },
        "item": {
          "id": "da3b31f8-e262-4158-8079-742e6e3e6dbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dc7bbf7-0c62-467f-ad2a-6e0bbf163d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b3046-ce84-4fb0-bb38-f961cdcad057",
        "cursor": {
          "ref": "be7bf309-c287-424e-a602-33cbb8f7bd22",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "32583416-0b02-4575-88f0-1ced3e7fff95"
        },
        "item": {
          "id": "de6b3046-ce84-4fb0-bb38-f961cdcad057",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9ebc3344-b8cc-4062-8b6d-024ab1bcfd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c33706-b101-4ad4-a741-882b728dbd6e",
        "cursor": {
          "ref": "650eb1e6-c5ef-4803-aed4-2cf5d2119d1c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "27ecc79c-4ec8-4466-95c4-9d8c7c56646a"
        },
        "item": {
          "id": "f9c33706-b101-4ad4-a741-882b728dbd6e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b15016ec-9261-40c7-b0a4-112116d3dcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d26d47-dfd2-4348-92d3-7f93069dd790",
        "cursor": {
          "ref": "99aa0f43-6ced-4c65-844e-22ef45d684ff",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21152e37-f550-4c45-babb-5d81c4c3b494"
        },
        "item": {
          "id": "c3d26d47-dfd2-4348-92d3-7f93069dd790",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64697942-2786-4d51-9eae-d229fbd89e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e2ce86-6f2a-405d-b95e-ea8bd4996dd5",
        "cursor": {
          "ref": "ab6086a0-73d2-4739-b979-40bac0d2004d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2d8bfcc-a899-4c1e-9a7f-2bc29e24e8e5"
        },
        "item": {
          "id": "97e2ce86-6f2a-405d-b95e-ea8bd4996dd5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "213796ca-8c2f-4c2c-ae00-bb50099fdc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c17ce-6957-41a5-91b7-00050311f780",
        "cursor": {
          "ref": "c5fa336b-66b0-407f-939c-4449876c1767",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f9518fa9-1ef5-4f0a-8e34-dcf6aed9d903"
        },
        "item": {
          "id": "262c17ce-6957-41a5-91b7-00050311f780",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "969484d0-c4f9-4285-9ceb-88c5495fe00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593972c4-2754-4d71-8905-2286bb9a63b3",
        "cursor": {
          "ref": "7be1a1f1-17d7-4ce8-ae89-11af75df7487",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f25ec6c-779f-4e12-8418-5daff03998fa"
        },
        "item": {
          "id": "593972c4-2754-4d71-8905-2286bb9a63b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5cb24810-d987-4a5c-aa0a-2b2328b6549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd519835-3dd9-4d8e-bcb0-594f1c2bc762",
        "cursor": {
          "ref": "b380f9ac-7981-4cc7-a308-178432338b29",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3a430e3-22f0-4e7f-9d29-95570d428be6"
        },
        "item": {
          "id": "cd519835-3dd9-4d8e-bcb0-594f1c2bc762",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dceaba65-a51e-4e22-aa18-2b84a91ced11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fdc7d9-8a18-4044-867a-bf97467dc370",
        "cursor": {
          "ref": "4f09cafb-24c2-4910-aa47-b19ba5106cfc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0872fac5-9bd9-404f-aef6-93cc0202c05e"
        },
        "item": {
          "id": "f2fdc7d9-8a18-4044-867a-bf97467dc370",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f4e851f-d636-4466-9873-281653440066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad93b248-5ee7-4529-b6e6-8815dd9a72d3",
        "cursor": {
          "ref": "45cee0c0-d835-462d-b601-cb193e2904e4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "811c3e76-19dc-4264-871a-305a1bef5226"
        },
        "item": {
          "id": "ad93b248-5ee7-4529-b6e6-8815dd9a72d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e39e606-1180-46ca-9f4a-fad6b1258813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0961875c-c3a8-45f4-b314-549c005f7cc5",
        "cursor": {
          "ref": "01ff72e0-f464-4f22-a652-5c9693d2fe84",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "51e94f34-af2e-4e61-8ed4-ff65d05f7dff"
        },
        "item": {
          "id": "0961875c-c3a8-45f4-b314-549c005f7cc5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4bf3c102-651c-439a-84c0-32368936f158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dc4dca-cc9f-4074-9ff0-9fcb0aa1c714",
        "cursor": {
          "ref": "fff3a518-23fa-454f-bbc8-37d98b45ef25",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f594d49c-69df-4383-8565-34bfda8ce96c"
        },
        "item": {
          "id": "28dc4dca-cc9f-4074-9ff0-9fcb0aa1c714",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3a22be2-3903-433b-92d5-e39934d0084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6476d6f-82d2-4b49-9871-2af72ef9a00c",
        "cursor": {
          "ref": "c53db56d-987b-4e5e-9f8e-414d81d5ea83",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae39b759-c952-4045-9176-44ddfc89963e"
        },
        "item": {
          "id": "f6476d6f-82d2-4b49-9871-2af72ef9a00c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24d71f5d-1fff-42fb-b5b0-d8b371bd7ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac737f8-9a60-44d5-af09-54b937493537",
        "cursor": {
          "ref": "98dbac88-8a1b-4303-9f3f-b8a286375731",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "11102c54-dfb9-442c-b836-e759d1f5986a"
        },
        "item": {
          "id": "eac737f8-9a60-44d5-af09-54b937493537",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "485134d8-7d3e-4aa5-8945-b1de869a356e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a1a476-ae4b-44c8-90f4-b59640e24d28",
        "cursor": {
          "ref": "6e882f30-08f8-4f77-9f43-b30364b22828",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6a17d692-e397-4450-a18e-27ab25377b35"
        },
        "item": {
          "id": "31a1a476-ae4b-44c8-90f4-b59640e24d28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d08f6a50-1044-4b40-bd49-b9b919cba96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7adc0f5-142d-4dfe-826a-916e79fc0d83",
        "cursor": {
          "ref": "e3553a55-e8ff-40fa-8b17-5540b291fcf5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f7d74f9e-3f68-4e24-8de0-dac9acb248bc"
        },
        "item": {
          "id": "c7adc0f5-142d-4dfe-826a-916e79fc0d83",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e16572c1-2bf8-47a9-98a6-dc3a8c21f155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610b56cb-3d15-4bd9-8263-6a0f2d6183f8",
        "cursor": {
          "ref": "7d019347-9053-4a24-b93b-4c1d4a170cf7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0c308f62-d7a8-4b91-a4f8-fd6435dbaf96"
        },
        "item": {
          "id": "610b56cb-3d15-4bd9-8263-6a0f2d6183f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0bf60403-3880-48f5-8024-74e99e5add42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddac4d54-2dfa-426c-bf75-373b658f1eb2",
        "cursor": {
          "ref": "da2943db-e6a6-4d6c-ab66-49cb06a054cf",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "185483cc-8138-4c6b-911c-bad931f701e1"
        },
        "item": {
          "id": "ddac4d54-2dfa-426c-bf75-373b658f1eb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "470ec6fb-865f-4d0b-9703-a3f1212922bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a1276a-b1a5-4d1d-a714-557fd11dbd4e",
        "cursor": {
          "ref": "aec54bdf-225d-447d-a572-63a692ccf66d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "05530a0d-f4e3-43e2-a572-65265ecc9b5a"
        },
        "item": {
          "id": "15a1276a-b1a5-4d1d-a714-557fd11dbd4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b019a7e2-e237-4781-8267-4deb7aad4f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a0447d-acb1-4ef7-a07f-21299369f11d",
        "cursor": {
          "ref": "e8c4da63-e550-4d54-ac7c-d3a0bf79be85",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2eb434b4-1488-4254-8cc4-0d3cee82990a"
        },
        "item": {
          "id": "f0a0447d-acb1-4ef7-a07f-21299369f11d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c81d8c8-4af1-400c-a938-a41c57890e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb14df-a138-4295-b85a-53f68d8d2ebe",
        "cursor": {
          "ref": "b2074bf2-6b9d-4475-8518-e081dc71e70c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3b01a9a2-72f7-4902-927f-2e78912da641"
        },
        "item": {
          "id": "a2fb14df-a138-4295-b85a-53f68d8d2ebe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fbad3c11-066e-47c5-9dbb-a03cadd03d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c7306d-274b-4998-8ce3-7dd51bf0fd08",
        "cursor": {
          "ref": "c97344fa-631f-4493-b81a-5eecbda93bd8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "78c2b6c8-176c-4878-adbb-c26e66bbe296"
        },
        "item": {
          "id": "29c7306d-274b-4998-8ce3-7dd51bf0fd08",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20ff0223-efe3-4b2c-ba3f-9c7012d1faec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce1e0eb-ad53-4407-a6dd-4b1c6739a503",
        "cursor": {
          "ref": "db14f1b8-a77e-459a-9fa1-04f2a778ac7c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "61c7f2bf-ec7e-4e3e-9f6f-5a2e04c1ac8d"
        },
        "item": {
          "id": "dce1e0eb-ad53-4407-a6dd-4b1c6739a503",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4c039bc-a9f6-4be3-90cc-984cd5129b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465c3bc2-535c-4382-8fc9-96d132f0573a",
        "cursor": {
          "ref": "59d16dd0-3cfb-4085-9ccf-c9010fdf68d6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "008ce08d-1bc5-4b3d-9530-797b38560a58"
        },
        "item": {
          "id": "465c3bc2-535c-4382-8fc9-96d132f0573a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1c86f15-7d48-4a7f-887e-605762f3175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c9361-58c6-4191-bc0c-215f59b65d57",
        "cursor": {
          "ref": "70aadf47-be38-4129-b82b-02827c6b0899",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "34ac72f9-902e-4473-9316-37a2cdac3e90"
        },
        "item": {
          "id": "101c9361-58c6-4191-bc0c-215f59b65d57",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfee3276-f96b-4044-87df-137c9ede1e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e17878-c534-4e14-a376-279abc61b04b",
        "cursor": {
          "ref": "45cdc3aa-93a9-4c88-abb6-04e2d233deac",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1c8b5e22-c71f-42cb-a515-10652b30dac4"
        },
        "item": {
          "id": "f8e17878-c534-4e14-a376-279abc61b04b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a12eb768-5566-42bb-a913-04a12dc1d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f22a759-1ecd-4631-b6f8-811667af664f",
        "cursor": {
          "ref": "4cf4771e-ef15-458d-b86c-7722f74b0062",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5cde1ec-7073-4a47-b6bb-00893eac3dd6"
        },
        "item": {
          "id": "1f22a759-1ecd-4631-b6f8-811667af664f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "145b29fc-805c-4ff7-89fb-b3a2c7d93982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11364b7a-1364-4cd4-80cd-7e52afc08ea5",
        "cursor": {
          "ref": "43190029-5cce-4e52-bc2d-2165b0606550",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "db5669d3-fdb8-495d-8d07-0d5bf3481044"
        },
        "item": {
          "id": "11364b7a-1364-4cd4-80cd-7e52afc08ea5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d14d3764-e630-4fe7-8af4-788d643d7965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53ac177-5ec7-40d0-9e42-14f740cd98e3",
        "cursor": {
          "ref": "3472acce-fa0a-4960-9bf2-07ab95b5d0e9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c0fdb59f-bc80-4ad5-9384-2396f2a53668"
        },
        "item": {
          "id": "b53ac177-5ec7-40d0-9e42-14f740cd98e3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4df56fe7-9645-4668-8c89-329d7965a274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cd7238-add9-4fd3-91b6-e7ccb4f64a91",
        "cursor": {
          "ref": "9379085b-322c-49ca-9bdb-cc1cd377d533",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ab7d506-8a95-4b18-88be-1f722bdc8295"
        },
        "item": {
          "id": "60cd7238-add9-4fd3-91b6-e7ccb4f64a91",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "836cd9cd-a667-42d6-adfe-fb3b304c51fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae8ce47-a286-4b0d-bbd9-1e49320fb7a3",
        "cursor": {
          "ref": "17db05c1-b2e5-4dec-9192-e868b0621ac6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "83b541f5-d7e8-4270-86b0-323e4fbfc846"
        },
        "item": {
          "id": "9ae8ce47-a286-4b0d-bbd9-1e49320fb7a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2eec1201-13f2-4b2f-ab8d-6b3132e91743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5d13ab-09f3-43fb-89a3-c8cd5ba6e5ed",
        "cursor": {
          "ref": "23967eba-b2da-46ad-8ce5-60171d3a3861",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c6f9cac4-e035-498d-97c7-806a3f324791"
        },
        "item": {
          "id": "0f5d13ab-09f3-43fb-89a3-c8cd5ba6e5ed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4e4cefa-4941-42ea-a44c-7f75f4a715a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474e8056-43e0-4ed5-8ed4-53450470b998",
        "cursor": {
          "ref": "4d8d6a4a-b432-4985-83f2-cd593bf8b4cb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cc2e4394-6b42-4100-96b7-a6586d41b135"
        },
        "item": {
          "id": "474e8056-43e0-4ed5-8ed4-53450470b998",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a680b954-a85c-44ee-afc6-80b00dd24271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24e613-7c93-411c-afcd-3333bbcbdb8f",
        "cursor": {
          "ref": "26f5fd69-d132-4c2e-a75c-c965e866cc5e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ec5dd74-e320-4d9f-bbf0-3ed70f682728"
        },
        "item": {
          "id": "fa24e613-7c93-411c-afcd-3333bbcbdb8f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10cb88f5-24bf-4883-92e0-93cce0f8456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87e3916-6ab5-4d4f-8118-fb23f423d46d",
        "cursor": {
          "ref": "5a04e5c7-97b3-449f-ab1f-e650a08e29a6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5b240566-3008-4f0a-9557-c52a22469e91"
        },
        "item": {
          "id": "c87e3916-6ab5-4d4f-8118-fb23f423d46d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b9665f4e-e5e5-4f07-862b-b5e8a536f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae3da9-c6a3-427b-810d-88b3450ed2b8",
        "cursor": {
          "ref": "d59189cc-794b-42d5-b7b0-c55920e946c5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "af348cc9-7754-4480-9891-d9a119dafa56"
        },
        "item": {
          "id": "38ae3da9-c6a3-427b-810d-88b3450ed2b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "465012b4-6f81-4018-8562-b002723616a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788a6c29-77fa-4ce8-8a3d-b2069eaa6d07",
        "cursor": {
          "ref": "15d68e0d-50a0-4764-b090-57cadddee28c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "92d710b7-2983-479d-b646-d4b2e69c8aa6"
        },
        "item": {
          "id": "788a6c29-77fa-4ce8-8a3d-b2069eaa6d07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "730a12a4-f746-4224-95da-30303e946e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b0eeff-7b0c-4336-b73f-688d337ee7f2",
        "cursor": {
          "ref": "96e6cdf3-dcb0-44a1-b9c3-c85fab673e5d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e9cb716b-95c9-488d-826a-76e816b09177"
        },
        "item": {
          "id": "64b0eeff-7b0c-4336-b73f-688d337ee7f2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b5ed81f-df13-45d1-9d72-3ea159337715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52040cd-3041-48dc-8dc2-3c3376e0935c",
        "cursor": {
          "ref": "d8c02eba-3602-4757-ba86-be08c933060e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e0804595-ff0d-4ec7-9d6d-2b084e7f3943"
        },
        "item": {
          "id": "e52040cd-3041-48dc-8dc2-3c3376e0935c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb6162cc-a7dc-44b9-a0be-79f59e833a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44803a11-ac32-484c-8ce8-857d75dc7269",
        "cursor": {
          "ref": "14a17cec-8e6c-48eb-9109-9ed5ab46f4be",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c42c58a0-479e-4abc-a985-09226c798133"
        },
        "item": {
          "id": "44803a11-ac32-484c-8ce8-857d75dc7269",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f92a4c7-e71e-47bf-9cb1-44266079dd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960891f3-3dfd-4173-ad72-2f40baf4dc40",
        "cursor": {
          "ref": "9655ac7c-e6ba-4c11-85d5-467f805d7a3b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f2edc5f2-35a5-49f8-9de1-de6990c1f705"
        },
        "item": {
          "id": "960891f3-3dfd-4173-ad72-2f40baf4dc40",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e7b4629-5e1d-41fd-bc48-43a7ce8dabcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be92df8c-fbc1-4290-9e8b-6aa2cd6f8190",
        "cursor": {
          "ref": "e3724334-b47b-4b97-a4e4-ea73149561db",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ad509843-4652-4db4-abb7-9f571b7fcd19"
        },
        "item": {
          "id": "be92df8c-fbc1-4290-9e8b-6aa2cd6f8190",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "36874f89-6e8b-4429-87d3-fa74e29f5a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf8a72c-fbce-4c40-a6da-e30ac5002a71",
        "cursor": {
          "ref": "213da533-b214-4313-a9a9-5cd0c54d0849",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "33750cd0-ce7b-4851-8687-416ee4cecd87"
        },
        "item": {
          "id": "caf8a72c-fbce-4c40-a6da-e30ac5002a71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "117bae2c-4018-469c-9bf7-6ad5b3d39253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918d6b5-016a-40f1-8ec6-e24c5f85d9be",
        "cursor": {
          "ref": "2aaa527f-cd4f-4f31-9e9c-0eaf7a85a621",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4a909156-775a-4c78-824f-e2b156576499"
        },
        "item": {
          "id": "a918d6b5-016a-40f1-8ec6-e24c5f85d9be",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e06264be-2e2c-4f69-bf74-1188d8df202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d364ba-6d78-4b95-95e7-c668e7e409f9",
        "cursor": {
          "ref": "1e176da1-9455-4d27-9b4d-c3e965a7264d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9a8bac4f-d897-438f-84ab-591d1d0dea51"
        },
        "item": {
          "id": "b5d364ba-6d78-4b95-95e7-c668e7e409f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5dcfc3a4-caf6-4956-b01f-3c761099a61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44b667-8fc0-438f-856f-0b697ab4af4b",
        "cursor": {
          "ref": "f52b88b5-1fbf-4c82-9f38-9154d669dcd6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f3b3ddea-d698-438b-a17e-e94c2961f576"
        },
        "item": {
          "id": "ba44b667-8fc0-438f-856f-0b697ab4af4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5441cc9d-a3b3-4112-9acc-8db462e60e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4620570b-dd0d-42c6-a952-4afa18f9a138",
        "cursor": {
          "ref": "6e7701c6-aeb7-4710-a075-6635bb30f995",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "47ba7031-ee92-46f1-905e-3326e2331a1d"
        },
        "item": {
          "id": "4620570b-dd0d-42c6-a952-4afa18f9a138",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5286833c-0882-48c2-828c-5b0a35f3e7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d1dcab-18bf-4917-8024-775fa9479af4",
        "cursor": {
          "ref": "fe64dc5b-9a2c-4c79-9b21-c14622db9db9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "78763e6f-51be-4de6-989a-882e4bbcdb3b"
        },
        "item": {
          "id": "24d1dcab-18bf-4917-8024-775fa9479af4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "615534cb-0d9e-4424-8a40-efac54439d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0845250b-11c5-4325-a722-9749e43adf83",
        "cursor": {
          "ref": "8153ab2f-f965-495a-8fe5-cca9fa48d960",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e06daf36-e2ab-46c5-bafa-b59f680a8c61"
        },
        "item": {
          "id": "0845250b-11c5-4325-a722-9749e43adf83",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a73e5791-2313-4718-be0d-22df82994090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86acbc3d-6a7d-4c3f-bcd4-b1b78e26ee37",
        "cursor": {
          "ref": "7e6b171a-2868-4c81-acf6-041bbcc7318d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fa92cb46-544e-4ee9-92c7-9f20fc54f928"
        },
        "item": {
          "id": "86acbc3d-6a7d-4c3f-bcd4-b1b78e26ee37",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd2a19ce-afe5-4a8d-8f2e-0497999ef42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e585428e-fc17-43b6-8c15-769067fd6b83",
        "cursor": {
          "ref": "c648f1a4-1043-4d37-815b-c96e9ed7774c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d4dda489-9476-4240-83b5-6fe3ffd9b195"
        },
        "item": {
          "id": "e585428e-fc17-43b6-8c15-769067fd6b83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f080eeb-e85d-41f6-acc9-6a75df04d1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2add337-f322-4ebf-8c4c-1d434892a46d",
        "cursor": {
          "ref": "af3bc5b9-b8c2-4cac-8ec2-556ce641887e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "16045fc2-68e1-425d-98b8-87e82d664aa0"
        },
        "item": {
          "id": "d2add337-f322-4ebf-8c4c-1d434892a46d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "297d2bc1-e5da-40c9-acb5-e9d79afd6650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e04f366-25cc-4508-a015-33812a5cde6e",
        "cursor": {
          "ref": "6ac1ade3-2e23-4c4d-869e-f9d70e0fa2dc",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d9dc88a-cba3-4324-aa53-86cf29dbd954"
        },
        "item": {
          "id": "6e04f366-25cc-4508-a015-33812a5cde6e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6efe0d1a-4b2b-4384-9248-635a37c8f8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133af414-3bfb-4979-801e-57038c8bf128",
        "cursor": {
          "ref": "4a3b5562-17b4-4d3a-b62d-116e6de0f01b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cfba51a2-3e07-43ad-8570-5aef8734b588"
        },
        "item": {
          "id": "133af414-3bfb-4979-801e-57038c8bf128",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "11dc4e72-7982-4fa5-bdb7-c4fb6e01d657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b37fb86-4f92-4f69-bf26-2e2eb5f36257",
        "cursor": {
          "ref": "00dbaded-ac56-46fe-8ba8-92180565af46",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7029c69a-b098-40a9-bed9-ff8c726d11da"
        },
        "item": {
          "id": "7b37fb86-4f92-4f69-bf26-2e2eb5f36257",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f0aded7f-aeec-4a11-a2ae-a095ffce304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7e1fe4-c695-48c9-9c11-7a10205a8427",
        "cursor": {
          "ref": "38531ed6-f49d-4518-a516-5b3267f75ad8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "02fab01c-3661-4811-9eff-d0564b1a8635"
        },
        "item": {
          "id": "3a7e1fe4-c695-48c9-9c11-7a10205a8427",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd20a3c0-5df7-47e0-a5e1-10cb836e2fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f78faa-3ff4-44c5-bbbd-f704a10113a4",
        "cursor": {
          "ref": "2af1de57-9cd7-4413-b837-5e8ef329db75",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ff78916-5bfd-4520-a2d5-397d06b087ed"
        },
        "item": {
          "id": "59f78faa-3ff4-44c5-bbbd-f704a10113a4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a5be130-bf24-4774-b929-1d645d1ce662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa75c63-e251-4602-baf6-ee2a506a37e7",
        "cursor": {
          "ref": "28c3529e-ab18-4c23-889d-dbba443b230a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "89e84127-8f15-4e99-a387-635ee863009a"
        },
        "item": {
          "id": "caa75c63-e251-4602-baf6-ee2a506a37e7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "92d51deb-7971-477b-a948-ebce8b387b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79ec05c-5932-412e-a8d2-f7ebbab4a527",
        "cursor": {
          "ref": "814a64a6-2745-470c-b6f0-440e0eab0ee1",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5f4dd072-12c6-48e3-8459-7a7266542ee3"
        },
        "item": {
          "id": "e79ec05c-5932-412e-a8d2-f7ebbab4a527",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6c7b0861-bd4f-4aed-8833-64dc203622eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17746225-c594-46ec-92c3-7d42eb5317a7",
        "cursor": {
          "ref": "1694cbe7-4cd6-4f57-bbf2-eab6253a36bd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "66927bf1-1f07-451f-80b1-07a3c9fcda3e"
        },
        "item": {
          "id": "17746225-c594-46ec-92c3-7d42eb5317a7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "464483ac-043f-4e2a-a5c7-fe523430167c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073eb39f-f876-409e-a5dc-ef69061ac4bc",
        "cursor": {
          "ref": "4e20f956-4755-44cc-a076-05b9c139f383",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e267a315-4a8a-4541-9d5c-5b6f87e30abd"
        },
        "item": {
          "id": "073eb39f-f876-409e-a5dc-ef69061ac4bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3466d9ae-af91-459c-a25c-71083eaa2d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1685c1-31ee-41d3-9b77-23895c3bf75a",
        "cursor": {
          "ref": "bf21f6f4-5702-40f1-b593-887d01a792e8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "69a0e7b3-77d5-4e7c-9470-834e58819b56"
        },
        "item": {
          "id": "3c1685c1-31ee-41d3-9b77-23895c3bf75a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "56fa7608-c9a0-4b7f-b67d-580ff0ecbc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe794ab-6109-47cf-8a7b-178bba34f9be",
        "cursor": {
          "ref": "ed561a24-f848-41df-943b-b0b224a1ba62",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6ac2b414-552c-4f8d-b3ab-41d7df0c76e4"
        },
        "item": {
          "id": "cfe794ab-6109-47cf-8a7b-178bba34f9be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "99de5fbe-c430-435d-9e96-632b524d15f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73524ed-0c1b-445c-a3f0-5384a29c8f77",
        "cursor": {
          "ref": "7bc7ca9e-460b-430d-b7e0-b1aa11c356dd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f4a01898-84a0-4a51-8461-1c9e4a9334fc"
        },
        "item": {
          "id": "d73524ed-0c1b-445c-a3f0-5384a29c8f77",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d58b6e47-358a-410a-af82-f04447e0f847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8924e83-e78e-4bbb-830d-93c506e26824",
        "cursor": {
          "ref": "2856948f-70ab-4fce-a1a3-1778169efc55",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "60e3eebf-00ef-47aa-ad6d-018ed1d2fb68"
        },
        "item": {
          "id": "e8924e83-e78e-4bbb-830d-93c506e26824",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc6fe14b-7ff8-4c4a-a566-30728fea9ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58e2daa-05fd-4430-a777-470b64a45ed5",
        "cursor": {
          "ref": "4bcb84a2-481d-4b82-a111-ea232da756e2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "522c56c7-fe01-46c0-acfc-6012b8c7f957"
        },
        "item": {
          "id": "f58e2daa-05fd-4430-a777-470b64a45ed5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1db8b23a-4873-4b4e-8add-b5f3ee721cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d343d99-9bee-4061-b241-69853fe5725b",
        "cursor": {
          "ref": "b3b27acb-6d1a-4823-8e6d-6011ae73b84a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "472a2ec4-b658-430b-a794-f1450094bdad"
        },
        "item": {
          "id": "3d343d99-9bee-4061-b241-69853fe5725b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f7fc0efe-f467-4bef-91ee-23b0eef96daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c1e04a-a519-473f-8a8e-42d6bd4983d5",
        "cursor": {
          "ref": "ebc1c94d-9565-49d7-8e1f-11f35f2e5b43",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "700ab48f-6301-4fe8-8588-15d817467cfc"
        },
        "item": {
          "id": "c1c1e04a-a519-473f-8a8e-42d6bd4983d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5d96191-4449-44f5-82e7-6b5a58c4c3c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b80d9f-29d4-47eb-880f-29f299464d4f",
        "cursor": {
          "ref": "9d6ef71a-a684-44ec-bbf2-9dd610f37b27",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "110add03-223d-4048-90f0-a213a911a25d"
        },
        "item": {
          "id": "f8b80d9f-29d4-47eb-880f-29f299464d4f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc508f2f-5ee7-43b9-a4f6-76823c40a19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ea4717-a77c-4122-829c-6c4032cf49b2",
        "cursor": {
          "ref": "490b2107-eb41-498e-86c7-40f688dafbd8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "57ed661a-b52b-4956-bd95-512a74d3ed09"
        },
        "item": {
          "id": "61ea4717-a77c-4122-829c-6c4032cf49b2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99e5f4c2-bb2b-4b46-9484-7a1c5c193335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad78b3-1c3d-4d46-92ea-10c5f7242d56",
        "cursor": {
          "ref": "82ab6899-cfbc-40df-affa-e042aea9dbde",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f6e4f771-c08b-4bdc-b849-7c79630a262f"
        },
        "item": {
          "id": "fdad78b3-1c3d-4d46-92ea-10c5f7242d56",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8951d31a-74c7-4107-ad8c-113185527944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82affd22-5f47-4781-b50b-cf3f3107d5e7",
        "cursor": {
          "ref": "af6cfc8d-be06-4096-b0aa-77475c74ba9b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "867f12af-3baf-4a68-8cb8-2537fc7309e0"
        },
        "item": {
          "id": "82affd22-5f47-4781-b50b-cf3f3107d5e7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "86ac55ed-4ea5-43ab-943f-c74554e44cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377f7755-ecb6-46a1-a6d2-fc6ff3c14f2d",
        "cursor": {
          "ref": "61687d0c-fcae-41f2-867a-e16257726989",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f3283fc2-2b30-4dc1-88e9-6c02bdff75db"
        },
        "item": {
          "id": "377f7755-ecb6-46a1-a6d2-fc6ff3c14f2d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5993c081-9362-451c-8d0a-abb1aaa0bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c95c3d2-8810-4bdf-a51e-fc2fc82a0687",
        "cursor": {
          "ref": "17c5e2af-fc57-47d1-bbf6-0e9b0db74465",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4808464-9eb2-4d27-b163-9cee9305126a"
        },
        "item": {
          "id": "6c95c3d2-8810-4bdf-a51e-fc2fc82a0687",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1ad37f81-08a1-4fe7-99c0-752acf88d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a05fcf-0619-4fdb-be15-e739912b1f77",
        "cursor": {
          "ref": "e023880e-57b6-4444-aa74-eea57227e865",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9a7f26fc-80cd-4177-81c0-204ae56a13e3"
        },
        "item": {
          "id": "70a05fcf-0619-4fdb-be15-e739912b1f77",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a41aad4-c69c-43a1-8ea5-76ace3ca1309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc63db35-ae80-44ad-b449-ca61cf94e7be",
        "cursor": {
          "ref": "1627a01b-2e32-4417-bda9-b83861fe6e2e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "379d8acb-14b6-4ad9-b5b3-07b81588c70e"
        },
        "item": {
          "id": "fc63db35-ae80-44ad-b449-ca61cf94e7be",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "90b64c2c-abda-4bc6-86cb-b71807b3c5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74df388c-b3c2-4912-ae19-057e7dbce176",
        "cursor": {
          "ref": "05916668-d7f7-4a65-a5cc-80aaee35963f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5683954e-a97c-41e5-bc0d-3fb0c667564b"
        },
        "item": {
          "id": "74df388c-b3c2-4912-ae19-057e7dbce176",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "71ae05f6-f792-42b7-b85f-43c871901364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619f19d5-031c-420c-93e8-b15951218eb1",
        "cursor": {
          "ref": "80ac8d5e-6814-40c7-8946-a7d0675c2a18",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b9860d5c-e6c5-4a56-9a49-d04126fe5224"
        },
        "item": {
          "id": "619f19d5-031c-420c-93e8-b15951218eb1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a18ddfb-da21-463e-bc14-c8e5732b74a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e03d33-e9d4-4638-9f92-dbad3d950f26",
        "cursor": {
          "ref": "f867b0fd-b071-4dd2-b4a4-8a08427314d5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "39382a68-a506-4181-a7bf-fdb1681c980e"
        },
        "item": {
          "id": "b9e03d33-e9d4-4638-9f92-dbad3d950f26",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "afaa5ff4-424e-484e-9fa2-2bd332b4cea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e971c000-952a-49ea-bd59-79a7f2caa38a",
        "cursor": {
          "ref": "798c7200-4140-4285-bebe-ec99580019eb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8f37d2a1-8850-4628-b213-54d985c84b17"
        },
        "item": {
          "id": "e971c000-952a-49ea-bd59-79a7f2caa38a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "578019a0-875a-48c9-98df-3d3e3b183ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40f39c-6abf-412e-aeac-3a91b1b24d4b",
        "cursor": {
          "ref": "e259d5a8-8d5b-4882-9370-f9420dff792a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d90491f-dd6b-4f16-b5eb-454d160bcfae"
        },
        "item": {
          "id": "bd40f39c-6abf-412e-aeac-3a91b1b24d4b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b88e98cf-b8d0-4f67-808e-65a6a05c62bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269da3d6-1e5d-4392-ae7c-9f6f589068a2",
        "cursor": {
          "ref": "b09b6e72-2a54-4673-92a9-6eb569c2dbbf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ec083c58-af75-4168-91ef-f82123fd468f"
        },
        "item": {
          "id": "269da3d6-1e5d-4392-ae7c-9f6f589068a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "91abe24d-90cb-4573-b7c9-c1da06102ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d2acd6-8ef9-4b6c-be0e-b826bfcdfae0",
        "cursor": {
          "ref": "4b83dbee-8155-4e63-95f0-65951a8be3e6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5cc42b02-7140-43d9-bad7-daa0691fefdc"
        },
        "item": {
          "id": "53d2acd6-8ef9-4b6c-be0e-b826bfcdfae0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fad4c704-8c40-491d-b502-90afb14ccd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94f90ed-7725-4f51-9959-1e4b656dec20",
        "cursor": {
          "ref": "a467440f-9d3c-4a4f-b917-2b23aaaa8253",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5a7f737d-8b19-4c12-9feb-a4b44c3615de"
        },
        "item": {
          "id": "d94f90ed-7725-4f51-9959-1e4b656dec20",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fdc593d2-141c-4d35-948b-6babcdbd665d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6677a900-11de-46e0-b695-e5bb70826816",
        "cursor": {
          "ref": "398b6e03-71e6-44b5-a3e4-d72d17faac32",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b73d23f9-28ed-448e-9eb8-33aaf69848b7"
        },
        "item": {
          "id": "6677a900-11de-46e0-b695-e5bb70826816",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a5a301ae-bdb7-4435-a5ad-2f726d13e575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dae025b-2e7d-4fbe-9f99-9251ab3d672d",
        "cursor": {
          "ref": "eb270134-e76f-4946-8ad3-5ff51117b960",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e61115c1-d053-41f9-9215-392a80336bd2"
        },
        "item": {
          "id": "2dae025b-2e7d-4fbe-9f99-9251ab3d672d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "765bb4e0-77c9-4596-afdc-881133ea63d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd3b90-0d84-4920-9143-521445d831e0",
        "cursor": {
          "ref": "b742d926-7bdf-4f77-a9aa-457059ea0050",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "db7f30bc-af70-483c-85cd-d58577972d78"
        },
        "item": {
          "id": "20fd3b90-0d84-4920-9143-521445d831e0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "22ae6f82-9e3a-4c79-8b8c-658d91605235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31a7231-e93d-4793-ba31-9accec47d716",
        "cursor": {
          "ref": "6be9317d-68d3-47bb-ac1a-076767f332a3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b485c8e5-7885-475c-8b52-6a5b6c758a97"
        },
        "item": {
          "id": "f31a7231-e93d-4793-ba31-9accec47d716",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "487ab931-7833-4b4e-8282-14fe57fb0696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eaa86d-b42b-43b9-8c5a-b8baf88537bf",
        "cursor": {
          "ref": "23c212fe-67dd-4680-b914-5cdc478ecd84",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ea3164b6-6b13-4154-9c9a-1befe67df3cd"
        },
        "item": {
          "id": "98eaa86d-b42b-43b9-8c5a-b8baf88537bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b5608ee8-3808-400a-9382-f691289715ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46477657-61f2-4262-a387-0530bbdfac53",
        "cursor": {
          "ref": "13f45941-d31c-48c2-9c76-95906f5cc8a7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "67161c76-5dcf-4e4b-b1a5-6d61398a3741"
        },
        "item": {
          "id": "46477657-61f2-4262-a387-0530bbdfac53",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99858326-5cc4-4f72-816f-7d10c871af5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbab7ad4-9191-40f0-a236-1a9f167bcba5",
        "cursor": {
          "ref": "62a6bd25-4577-4e6a-b51e-5e8f8d805bd8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b2357d40-9f61-48ff-bea6-e67e48f82e39"
        },
        "item": {
          "id": "fbab7ad4-9191-40f0-a236-1a9f167bcba5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a2bea8b-a301-4413-9ff2-2790160ae152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb56f2-3e53-4b70-9f96-495637d5b449",
        "cursor": {
          "ref": "e718fcc1-dd98-4fd6-8ce8-f35152d330bd",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d5a3bb05-3d5a-4fe8-8df0-0e29f2c1f23c"
        },
        "item": {
          "id": "61cb56f2-3e53-4b70-9f96-495637d5b449",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ac96927-bb1e-49c6-9e86-3eb7d85e36d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25214b1e-6cc1-4703-b807-0b83896daaea",
        "cursor": {
          "ref": "9aabdd0f-d195-436e-afd6-c7e6a8593967",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "284836f9-3559-4fce-98bc-0916be4377e6"
        },
        "item": {
          "id": "25214b1e-6cc1-4703-b807-0b83896daaea",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e1883184-894f-47b4-aa6b-151f1d0f772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa017a-5172-4923-a528-daf2623f9aab",
        "cursor": {
          "ref": "67b3ab3e-cee0-4b9f-8320-c0665489bff9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8e75dd99-b985-492b-aa06-54c7f5f43006"
        },
        "item": {
          "id": "e3fa017a-5172-4923-a528-daf2623f9aab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "37cd89c9-883a-47de-b677-be7daae4bf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb2c2c9-4952-4a26-8528-83211c311092",
        "cursor": {
          "ref": "6d062b1a-8ef8-4776-9ecd-948ece20805a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4e9b1357-7e93-4fa5-a679-45d0983df891"
        },
        "item": {
          "id": "cfb2c2c9-4952-4a26-8528-83211c311092",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5979ab23-59e0-436b-82e5-3426e2cd7ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b15815-b098-4a22-ac36-ebed5029fe8e",
        "cursor": {
          "ref": "f0d24aec-66eb-4368-9103-62c3899bb91c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b2995641-645a-4b88-8cb0-c37f4d29be8c"
        },
        "item": {
          "id": "36b15815-b098-4a22-ac36-ebed5029fe8e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9dbf2a36-723d-4c91-96e6-4b8cba2dec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9d064a-8153-414c-b08b-52b683f4d126",
        "cursor": {
          "ref": "8fb225d1-c7b5-40ef-a745-c189a9cde77b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b81711ea-7d0b-47c0-9af4-fa93b3bf0de4"
        },
        "item": {
          "id": "4a9d064a-8153-414c-b08b-52b683f4d126",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9442b0db-28a9-4665-9d22-e05d05f6fdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f625a39-9739-4157-9d5b-9ab1450cec88",
        "cursor": {
          "ref": "24667dee-1a07-4cf0-afae-13e8ce1f83cf",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65690539-b0cc-4ed1-87b5-7299946ecd53"
        },
        "item": {
          "id": "5f625a39-9739-4157-9d5b-9ab1450cec88",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0988af0-e400-44d7-8100-5dc59c6ec967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f2b3c-5c05-4ed7-a2c7-67211f40c87b",
        "cursor": {
          "ref": "dc5fe509-c58e-4118-b107-119293718799",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8744eb04-4e15-4bf7-8b3e-7c0929a0e0a4"
        },
        "item": {
          "id": "c53f2b3c-5c05-4ed7-a2c7-67211f40c87b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1426517e-f5ad-4af7-b8eb-7c497412e962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ad1b08-90b1-4fa7-abe5-03c100eb3281",
        "cursor": {
          "ref": "56aae551-7057-4bb4-9515-6e28bd00824d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e3ae296-6be6-44a8-8fac-b5c2e38c3916"
        },
        "item": {
          "id": "29ad1b08-90b1-4fa7-abe5-03c100eb3281",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5b06b918-8b61-4015-837c-f5044147ccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3f6bdf-2962-455d-9640-4d0de6e5633d",
        "cursor": {
          "ref": "bb23c016-1f7c-4c38-9aff-07a8536baad7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "478a40e8-ec73-41b8-ac97-af0a918d2e90"
        },
        "item": {
          "id": "3d3f6bdf-2962-455d-9640-4d0de6e5633d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3fe8806a-f1e3-4c6c-9bf6-5506c5c80b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fb0fcb-709b-43b1-9917-00b92aa472bc",
        "cursor": {
          "ref": "2c880bdd-4cec-4e05-b01c-efbfa8784011",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d875ae26-6b22-4304-9ac2-0dbbd586625c"
        },
        "item": {
          "id": "98fb0fcb-709b-43b1-9917-00b92aa472bc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5a0c0343-c06a-4090-bf96-d7d7e8cfa534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56154ee1-174d-4fd3-ad6d-c5e06e235260",
        "cursor": {
          "ref": "11f913a1-0a5d-4e3f-8f95-39b7d41e55b0",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "618270f7-3755-47be-bab7-775ad69d8dea"
        },
        "item": {
          "id": "56154ee1-174d-4fd3-ad6d-c5e06e235260",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d7924cda-754b-4454-83df-a026e0f9866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e3bb2c-6fa7-4705-8a4c-4e40f6060388",
        "cursor": {
          "ref": "7e8fb519-a407-4cf5-941f-c1d7b88c49b0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ee3fce92-8758-40c3-bd03-15763016824b"
        },
        "item": {
          "id": "86e3bb2c-6fa7-4705-8a4c-4e40f6060388",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "26c60a08-3d49-4288-964a-a106e79c52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf203c-5f77-43b0-aa02-54fe626dc206",
        "cursor": {
          "ref": "14f6d89f-4edb-41ae-9e57-df57ebda73e8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2fd5aa41-e938-4994-9e84-6be95db521c7"
        },
        "item": {
          "id": "16cf203c-5f77-43b0-aa02-54fe626dc206",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94b95aaa-5096-4074-9225-9bf413a72c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d145b42-d199-4538-964b-c2379836955d",
        "cursor": {
          "ref": "f1295833-d430-4d57-8800-4a8bd16d83ce",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1d6d683-ab2e-4276-9332-bcd4a551466b"
        },
        "item": {
          "id": "8d145b42-d199-4538-964b-c2379836955d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7315d180-726c-4a9c-a7cb-1907a2d25904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1de8b97-11f7-4d6c-85e3-6edbe4bcf977",
        "cursor": {
          "ref": "7a285c58-4814-4275-b67d-466d391c404a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7debb4fe-382c-4082-8d5c-a9e2bd3c66d6"
        },
        "item": {
          "id": "a1de8b97-11f7-4d6c-85e3-6edbe4bcf977",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "318bd3f4-97b6-4455-a2e1-21aca947f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f07d99a-3c01-4457-81ee-ef16215e6bd8",
        "cursor": {
          "ref": "a7b435cc-77d7-41cc-8445-9d04c3629f6f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3e025ad3-176e-424f-9105-22caa8b325a8"
        },
        "item": {
          "id": "5f07d99a-3c01-4457-81ee-ef16215e6bd8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5d1cdbc5-fc48-47f4-afae-746c8c3275a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0949dfa1-5961-4757-aa0b-2699d103a915",
        "cursor": {
          "ref": "842750f2-e90d-4cb4-a58e-5bea6e20162c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcea5f3e-c888-4d9c-a507-30fb9c569582"
        },
        "item": {
          "id": "0949dfa1-5961-4757-aa0b-2699d103a915",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "867505aa-a0b1-4acc-ace2-159e6580a7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ad7bf2-cfdb-4c99-b7b8-e76346be1f72",
        "cursor": {
          "ref": "6b85a80c-c922-4717-a709-45f7e3e89aa1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "45a4be79-98b7-4da3-a01d-418a226833e2"
        },
        "item": {
          "id": "f2ad7bf2-cfdb-4c99-b7b8-e76346be1f72",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76d658e4-6831-4228-ae5a-127a93755d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb4083-1647-41b1-ba60-f5e7c5fd9553",
        "cursor": {
          "ref": "30984208-8c4d-4017-8f05-0c9c3ffd14b6",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "32d9a419-6ad5-41a2-b822-b7efea43d60e"
        },
        "item": {
          "id": "45eb4083-1647-41b1-ba60-f5e7c5fd9553",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7dd7f7ac-41ba-4b98-ab69-9b1fcd74212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ecdfb-c70e-425e-a007-ee4254707ea3",
        "cursor": {
          "ref": "168e9a57-ce5f-4464-a554-276ee84ecbe8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3126bc61-b226-41e1-bed0-12dbdafc7154"
        },
        "item": {
          "id": "044ecdfb-c70e-425e-a007-ee4254707ea3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5e241f0b-5827-4bd0-8419-2976dc690130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba41970-b278-4f92-b57d-9568f31e0867",
        "cursor": {
          "ref": "e5a83d4b-07da-4d81-8189-f011fc7f28b5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8cabea11-cb1f-49b3-a455-5032df988118"
        },
        "item": {
          "id": "cba41970-b278-4f92-b57d-9568f31e0867",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2e76239c-71bd-4b80-acf7-2568943029a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4ba90e-9e4c-46d9-8435-8593936cabb0",
        "cursor": {
          "ref": "9007345b-e3dd-42db-883f-99099a733759",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88d89a33-e27e-4580-89b8-626f60bfca50"
        },
        "item": {
          "id": "9e4ba90e-9e4c-46d9-8435-8593936cabb0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cfbcc98b-6660-4fbc-8844-6d855dc472d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47169e7-c975-4d3c-8a0e-c0eb42a35355",
        "cursor": {
          "ref": "bb57365c-47a8-4eb6-924e-aca1ae25454a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4575c31c-786b-4c95-bb96-2ebdd2439ce5"
        },
        "item": {
          "id": "f47169e7-c975-4d3c-8a0e-c0eb42a35355",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0e6e3ba-87e4-4708-8670-2c5ba925093b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3076e6c1-5c1b-48eb-831f-192428e32b4f",
        "cursor": {
          "ref": "7e94cc0b-cec9-4ecd-acd8-d3088b297913",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5e3b11cd-f6a5-48dd-8e1e-04340f164981"
        },
        "item": {
          "id": "3076e6c1-5c1b-48eb-831f-192428e32b4f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "743d55c2-152f-4270-bdb3-0c47454757f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada2ea3b-11e7-46db-b114-082adc6977c5",
        "cursor": {
          "ref": "f33d7aa7-381b-4278-955c-cb4bbeb3e556",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1061626-25bc-4e27-bd1b-a356c46018c1"
        },
        "item": {
          "id": "ada2ea3b-11e7-46db-b114-082adc6977c5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3fd919d4-1d42-4a6c-b047-cd71a2d38a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3edbc63-1e76-43e2-8061-484ec44066f2",
        "cursor": {
          "ref": "89fd8c94-d285-4037-9ccd-1deb8903dd2b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "872e0b27-b727-4353-8c36-98648334641c"
        },
        "item": {
          "id": "e3edbc63-1e76-43e2-8061-484ec44066f2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "90ae2b80-b2ed-4e82-86ce-3f3d485d7815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312f661b-faa6-4c30-97ed-0e1d57597011",
        "cursor": {
          "ref": "ef663f71-b901-45ad-b074-fda886f03b05",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "49b8ef9d-f591-4eb4-81a8-6b2d540c6ce9"
        },
        "item": {
          "id": "312f661b-faa6-4c30-97ed-0e1d57597011",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e230bc21-e6cd-414f-818b-70e2f82401e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6da9d08-888e-4a2a-bd8a-8c440b9d6e98",
        "cursor": {
          "ref": "69eace77-d7a6-48fa-bc9a-832ebe1a3277",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f904f65f-e1c1-4282-83e6-94c134f00223"
        },
        "item": {
          "id": "c6da9d08-888e-4a2a-bd8a-8c440b9d6e98",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd1305f1-2c46-4338-8150-983d9ec5ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603a9cfe-7347-4c25-b29f-3d93dc75a861",
        "cursor": {
          "ref": "ad1f6670-8eca-41c1-9b53-db04ef03be5f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5a18683e-097f-4f2e-aa45-65845e52bbc0"
        },
        "item": {
          "id": "603a9cfe-7347-4c25-b29f-3d93dc75a861",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f58f4638-160b-484d-abed-24df240ad84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b91298-fc04-4cd4-baef-13e25064346a",
        "cursor": {
          "ref": "b732f39e-e8f9-4e9d-8a6a-71a29d48fdbc",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "955ac324-9a4c-4a81-b78e-c188221b755c"
        },
        "item": {
          "id": "c4b91298-fc04-4cd4-baef-13e25064346a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c2c75b0d-8e67-408b-8bd2-75c92367af01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4217f3-301a-4177-a844-9d421b1f60f4",
        "cursor": {
          "ref": "8c537910-e4c3-463e-b166-101748009277",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a3ae8ed9-2e4e-44ee-a19d-383125fdfcc2"
        },
        "item": {
          "id": "8b4217f3-301a-4177-a844-9d421b1f60f4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b0480ff6-d926-4a40-b3b9-e1a91b9c2a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764e2ebd-8058-4234-b875-a9e9e1c368d4",
        "cursor": {
          "ref": "13305f98-9797-4540-b50d-e09de2c06a12",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2119a618-6917-4b80-89be-81a38ca458b2"
        },
        "item": {
          "id": "764e2ebd-8058-4234-b875-a9e9e1c368d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5c838f3b-69d5-4493-9309-177e76546ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94037255-a90e-4a10-b540-c6558664a834",
        "cursor": {
          "ref": "728eeccf-557a-4648-8ce5-fbc0e88da97f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "83ef3147-a2e0-444c-838b-a773b811b5d7"
        },
        "item": {
          "id": "94037255-a90e-4a10-b540-c6558664a834",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "51ad09fd-794c-4a9f-b29a-0df696b853aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefc5465-8cb0-4cd1-92ca-a09296cb112f",
        "cursor": {
          "ref": "fb54eaab-8c3e-4a9e-9a3b-e738f1421e5d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0740f192-3c06-4c42-b4a9-77d1957d232c"
        },
        "item": {
          "id": "fefc5465-8cb0-4cd1-92ca-a09296cb112f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4b237fd4-c6e7-4de9-9396-0f6f4470836b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa639a6-f41f-4294-9108-d671ab15951c",
        "cursor": {
          "ref": "c1bf8cca-7481-456f-b9d0-f00101cb4298",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af34f776-e0e6-4d48-868e-55a50b1ef1ef"
        },
        "item": {
          "id": "aaa639a6-f41f-4294-9108-d671ab15951c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0967e856-f63e-49a0-9997-dfd6f677d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a73843-9822-4eb8-85c2-89085c24b6a0",
        "cursor": {
          "ref": "36fe8833-0857-4c16-b6d1-dd6c6ae40596",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "32af9918-17a6-44be-9932-e6c2f5860ba8"
        },
        "item": {
          "id": "a2a73843-9822-4eb8-85c2-89085c24b6a0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e053002c-f65f-48d9-ae5c-d0bcaf0c7423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4b60a-c8ab-4778-b1a8-88b882691fd9",
        "cursor": {
          "ref": "32018c25-246c-4312-904c-aa94b8ddf36a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "513bb5a1-0212-49d3-b6f8-34e4fa5d27da"
        },
        "item": {
          "id": "47d4b60a-c8ab-4778-b1a8-88b882691fd9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0990ee07-6422-4b66-90a3-287d8c084c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4194e896-9b06-4ddd-a29e-374d6b6d2fe6",
        "cursor": {
          "ref": "802b22ce-c128-4dc8-9243-42c1c9635cbe",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f58315db-d970-4cb9-831b-f58f43af924e"
        },
        "item": {
          "id": "4194e896-9b06-4ddd-a29e-374d6b6d2fe6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd641cd7-066a-48ea-a170-a0beabbae6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8194a2a-61df-49eb-b14c-d5173367592c",
        "cursor": {
          "ref": "ec439e36-113a-41ae-add3-ef9fadfac66b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8192f902-0d19-47a9-bb90-2e4e11a1c427"
        },
        "item": {
          "id": "b8194a2a-61df-49eb-b14c-d5173367592c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ffb2f987-b02b-454d-838c-f8eb8e87cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d687d8a-5039-43be-b03d-8899e0c4c115",
        "cursor": {
          "ref": "a83f4a7e-9922-470e-95eb-ff5414935c28",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8ccdc1c2-3c02-44de-9c52-cdc9f044c97e"
        },
        "item": {
          "id": "3d687d8a-5039-43be-b03d-8899e0c4c115",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7d322931-0f51-4a74-b7a0-c75cffa85fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce141ea0-d69a-4f2d-8b2f-1d87d554524a",
        "cursor": {
          "ref": "1e57724a-701b-4e01-8415-4ad26fed1cca",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c7e991ea-0942-40ee-87ce-9b2491ff1ae4"
        },
        "item": {
          "id": "ce141ea0-d69a-4f2d-8b2f-1d87d554524a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f434e0b5-a223-43f5-a074-e47c7e86ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560a8cde-87a2-4987-b7ee-5aadf0d44f8b",
        "cursor": {
          "ref": "76ca788d-904c-4676-bd0a-80dd285e773a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1e3e217e-2456-4057-ad9c-d51985de94bb"
        },
        "item": {
          "id": "560a8cde-87a2-4987-b7ee-5aadf0d44f8b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a0adc8a-8be5-4ebb-914a-3c0ec89223e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ccc08-d4d6-451d-8aa0-3f9196fab15b",
        "cursor": {
          "ref": "c2f8f03f-68a5-433c-a741-62b6a52e6715",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "722cb714-3477-4fcc-b4dc-a72e42d1e801"
        },
        "item": {
          "id": "413ccc08-d4d6-451d-8aa0-3f9196fab15b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "27bfcc5b-60dc-4713-a4be-828b7051e486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5b631e-63b7-45d3-87bd-b4cb7afa936d",
        "cursor": {
          "ref": "63b2d62d-794d-4258-98b4-2071a8273d13",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "492c992c-149f-4c5f-a586-907cd79908f3"
        },
        "item": {
          "id": "cf5b631e-63b7-45d3-87bd-b4cb7afa936d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6189eda9-a621-4916-9dbc-835269905fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c624bb0-c7bd-41d5-a2eb-df9070fe5454",
        "cursor": {
          "ref": "70b3d563-c46b-4212-a32c-7d29af9b9cd0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1963028-f237-458d-987e-e93d186acc9e"
        },
        "item": {
          "id": "5c624bb0-c7bd-41d5-a2eb-df9070fe5454",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "670afdfe-d2ae-4150-a888-483a77e2e103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3174b2e-8f60-4f4d-a0cc-b590b2e954c6",
        "cursor": {
          "ref": "57130be1-a791-4343-9957-67c80fdcccb4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "749c7fe2-4b69-495f-a9f9-8795278c72ab"
        },
        "item": {
          "id": "f3174b2e-8f60-4f4d-a0cc-b590b2e954c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a437b0dd-582b-4078-9829-c4f9aadf9ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57d58a9-ccfc-41a3-8f82-5220b75789b0",
        "cursor": {
          "ref": "e41d0db3-1da8-4642-aeaa-21804672896f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "66f8a794-d56e-4df8-8b35-eab75caec6f4"
        },
        "item": {
          "id": "a57d58a9-ccfc-41a3-8f82-5220b75789b0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "875211b9-58e8-4159-ae79-cccc40530559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721353c2-78e6-4d47-a959-d8647d38d91e",
        "cursor": {
          "ref": "45b8196c-0870-42b7-b906-1d17995f68cd",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "112d0831-e2d8-41f0-9b64-829acacf4055"
        },
        "item": {
          "id": "721353c2-78e6-4d47-a959-d8647d38d91e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6121b992-72ce-40e1-a37e-6c43af369f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89353e59-e7b8-4c44-ba8d-23e1af786b27",
        "cursor": {
          "ref": "57de9926-b5b3-4827-89ba-78d8d5057708",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d20a918d-641e-4c2f-a88d-36dee3cd36c8"
        },
        "item": {
          "id": "89353e59-e7b8-4c44-ba8d-23e1af786b27",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "20dfcb84-c7f1-4f47-ad86-834df928635a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785aef02-8385-4421-bcf1-df0a43afd2a2",
        "cursor": {
          "ref": "c083257a-f2d0-42e6-be90-dbf5a84f712d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5ffa4f85-ddf4-489b-b281-57a20307f652"
        },
        "item": {
          "id": "785aef02-8385-4421-bcf1-df0a43afd2a2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "091a31ca-854d-4667-a26b-dbc1f7f38e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b3f004-00d6-48c2-bc41-49a6dbb85fd7",
        "cursor": {
          "ref": "42496de5-c024-408a-ad51-c8d94693dd5c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1b76e766-aebc-41b1-a3b7-7c8d3e018618"
        },
        "item": {
          "id": "e1b3f004-00d6-48c2-bc41-49a6dbb85fd7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ad41183a-089f-4d99-9687-84eebb9bcd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a4d0f9-af73-4fb9-8b77-fe51b42a1aaf",
        "cursor": {
          "ref": "a80b4652-e4b0-4177-9641-b3bdabb0af0d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b79e4e97-2fc8-4e61-bb64-665867dc307b"
        },
        "item": {
          "id": "31a4d0f9-af73-4fb9-8b77-fe51b42a1aaf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a10fa647-f845-408a-8f2f-c99117f539c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b911696b-8038-4cef-9daa-75da29d2912d",
        "cursor": {
          "ref": "43bfdda4-fb4e-48fa-8748-1d381f7e2076",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "494c4272-91b9-4db0-ab18-0bf89efd0e61"
        },
        "item": {
          "id": "b911696b-8038-4cef-9daa-75da29d2912d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "898233bc-4207-472c-bd1d-54c6c2ed6629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e4b4af-9cf0-49fc-9185-f5bed55858bd",
        "cursor": {
          "ref": "a2ca91fe-1589-4854-b0a4-6b010eb76302",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e5c1583d-e578-4f7e-a9d3-dccaf4987992"
        },
        "item": {
          "id": "d3e4b4af-9cf0-49fc-9185-f5bed55858bd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "22ee11aa-958f-4319-913f-36bc200d6583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63dc866-1036-4c1a-98a6-3f07ac4719e0",
        "cursor": {
          "ref": "2250943a-8ddb-47d6-87c8-8c284094c69a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ee023f2d-64f2-4b75-9dae-87cae3249a55"
        },
        "item": {
          "id": "b63dc866-1036-4c1a-98a6-3f07ac4719e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "05e8bbb5-8e7f-4533-a248-1815338b90e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd5aab1-4f50-4660-89dd-ca2f00e41d01",
        "cursor": {
          "ref": "7cc5fbfd-63a7-4e52-93e1-b2ac00dc1fbd",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "04ef1ca4-7fb3-4c1c-8aab-2695b44f09ef"
        },
        "item": {
          "id": "5cd5aab1-4f50-4660-89dd-ca2f00e41d01",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1168fd4-bd54-4362-8d99-b18dca0fd0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9802ed9-2538-4bb4-936c-8a754bd81c35",
        "cursor": {
          "ref": "1d888ceb-91b9-4963-b531-99a6bd59d622",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f8058ab-2711-46aa-b147-04eacfae7847"
        },
        "item": {
          "id": "b9802ed9-2538-4bb4-936c-8a754bd81c35",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2fcec974-0119-495a-84dc-a1e6b959003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a86443b-5d08-4eb2-bb82-c1914f2c154d",
        "cursor": {
          "ref": "0a09edae-4716-4df6-9fa1-13d2362472fb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c23cbe44-d4f5-48fe-8bf5-48740efe90c3"
        },
        "item": {
          "id": "0a86443b-5d08-4eb2-bb82-c1914f2c154d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c86216ff-06c5-406a-b5d1-5fcabddb71b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fb2ffa-4425-499b-829f-55ee66271da5",
        "cursor": {
          "ref": "9cfb8c02-c1f4-419c-a6ca-e956bcb808c5",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e789fe03-0e98-4fff-ae3e-eb99e0bce385"
        },
        "item": {
          "id": "36fb2ffa-4425-499b-829f-55ee66271da5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "74d55d04-888c-4363-9e14-f453a86dd227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3cc0b0-a00e-4526-a07e-07bd2d8cc923",
        "cursor": {
          "ref": "d7f989c9-def5-4170-9298-6adb515733e9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "705eacc0-81c9-47e9-a0a5-b46df5ad2c29"
        },
        "item": {
          "id": "0d3cc0b0-a00e-4526-a07e-07bd2d8cc923",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a5ed0327-9c01-4800-a26f-401d274a84e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3dbbf9-3efc-4d7c-98e3-a3704b1f3127",
        "cursor": {
          "ref": "a7f00c75-2956-462c-9bf6-fb2433a1cad6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a87c36d7-0e3b-40e9-931c-3550f83031de"
        },
        "item": {
          "id": "8b3dbbf9-3efc-4d7c-98e3-a3704b1f3127",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "54c2410b-1a03-40ce-9612-af71a4cc663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05606e85-1201-4a37-8265-3744723a4c88",
        "cursor": {
          "ref": "fccd4901-41f3-4d1c-ade1-e214a5ab1b9c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "783eef72-6346-4d66-9ea6-336fcdc7e6b3"
        },
        "item": {
          "id": "05606e85-1201-4a37-8265-3744723a4c88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "439c8466-a2f6-4e23-9dc6-48db00f92f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77f9879-550b-48df-909f-81f6392da68b",
        "cursor": {
          "ref": "d2c1ee09-dc31-4543-a98c-075615a43281",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0c51d4a5-dfe7-435e-93cf-eca4dd6338a9"
        },
        "item": {
          "id": "b77f9879-550b-48df-909f-81f6392da68b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "590522df-a69f-48d1-83bd-a3eeca8ac604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96854a1-3dfc-466e-8f1d-c721924a0e77",
        "cursor": {
          "ref": "59738b6f-2d0c-4664-a5d7-2af3148b0af9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "511481b0-ed60-4024-a27b-c3cd5a74e5b6"
        },
        "item": {
          "id": "c96854a1-3dfc-466e-8f1d-c721924a0e77",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebda3f19-c6bb-425f-a0a1-126c9ae53ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb539142-f939-4f90-bddf-efbbc4e242ce",
        "cursor": {
          "ref": "ce04dd7f-e5a6-4a92-8281-466d2ae4081c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7f0af195-0901-48a6-8eaf-8993cf49fafe"
        },
        "item": {
          "id": "bb539142-f939-4f90-bddf-efbbc4e242ce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "403db980-a111-4aac-96f0-b39f0ca38b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cefc6b-0b0a-47f4-b633-3fb8d1c489bb",
        "cursor": {
          "ref": "c7042864-1092-482b-9f85-8f5e0eca403a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "317286dc-91e5-4b75-8ab4-79e0c1c6439e"
        },
        "item": {
          "id": "09cefc6b-0b0a-47f4-b633-3fb8d1c489bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a98c26b0-0ec7-4a12-97ec-27fe1935056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e19dcb7-fe34-433a-b1f5-40c746e9d896",
        "cursor": {
          "ref": "73fea950-a3f2-4848-bd7f-68c8dbb990e0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eeb39183-24c6-4f20-9ad6-305a3a4840bf"
        },
        "item": {
          "id": "3e19dcb7-fe34-433a-b1f5-40c746e9d896",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "00a545e3-6b12-41cd-9e48-55b1983266b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc03fe-ed33-4582-9a78-e9e7a1398cf8",
        "cursor": {
          "ref": "ce4cffa5-d8b3-4e45-98e1-83b9a91cb924",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54586ee2-4a53-4b20-a91d-584dccd7a0dc"
        },
        "item": {
          "id": "90cc03fe-ed33-4582-9a78-e9e7a1398cf8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25008104-d06b-4163-b546-fb6f49165256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c7be15-1001-4e67-ae94-e89daaccc9d1",
        "cursor": {
          "ref": "7512e60b-5818-4139-bd8b-0692ff22ff61",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "215c88ee-0808-4040-989d-c663faf14a86"
        },
        "item": {
          "id": "96c7be15-1001-4e67-ae94-e89daaccc9d1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c66f94df-0e4f-41c1-a333-691026a2bb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f689b150-803d-4e69-9a8f-ad1dae83af36",
        "cursor": {
          "ref": "f4f76f28-4d64-47ca-8874-5ae7b9335073",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8111333e-9bcb-4b88-a19f-824b47902124"
        },
        "item": {
          "id": "f689b150-803d-4e69-9a8f-ad1dae83af36",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dd4f8adb-e6b1-4442-8d2f-de8086bfa57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b243626b-5c11-4a95-abb2-f8cf2d33e1de",
        "cursor": {
          "ref": "4533eaa7-44fe-46c2-9ec9-1f1c54e184f7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d9cd19e6-7eda-4bc1-8b52-ff751a7b579c"
        },
        "item": {
          "id": "b243626b-5c11-4a95-abb2-f8cf2d33e1de",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "02904e80-ab1b-4882-a033-64385f2d9123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3f4b34-9aa4-4e06-a5de-080a7ce5724a",
        "cursor": {
          "ref": "0ef4cade-d7c4-4a15-bb93-669ca2d6f433",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "311b7511-7f0b-4bb8-9864-a06d8643a55e"
        },
        "item": {
          "id": "ef3f4b34-9aa4-4e06-a5de-080a7ce5724a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f589bd7-0b56-42ad-a6e9-0ad9f4996090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5b5af7-a0f2-4ead-90d4-f01453dc60c5",
        "cursor": {
          "ref": "83379479-96e3-48cf-ac55-ad97e7c34cf1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bce46254-883b-4db8-a6a4-cadc42e3dc01"
        },
        "item": {
          "id": "9d5b5af7-a0f2-4ead-90d4-f01453dc60c5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1fe8303b-c029-4ac1-b266-ceadfcea1cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3024afd3-0388-41e0-b5c0-53f83735b123",
        "cursor": {
          "ref": "7122c382-2355-4498-87f5-417486ad2607",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cbcfab87-5e7f-47a2-8115-df20634c0412"
        },
        "item": {
          "id": "3024afd3-0388-41e0-b5c0-53f83735b123",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bf2bca05-f69d-4077-b681-fd3485c1751c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecbe217-21b1-43b2-ab70-ac1df79979c5",
        "cursor": {
          "ref": "9187eec3-10b3-4cf6-a44c-ce4d371bdd72",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "66cad98b-f615-4125-9e66-f6bf5b5b3c07"
        },
        "item": {
          "id": "8ecbe217-21b1-43b2-ab70-ac1df79979c5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5fd0b3a7-4c72-466e-90fd-e3b270743440",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f238cb4-0eb7-4279-90e7-653316148e7a",
        "cursor": {
          "ref": "c10a9fcd-4f92-4459-8de9-445304d5f345",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cd7265e7-ab79-45b4-b29b-0c863a12e015"
        },
        "item": {
          "id": "6f238cb4-0eb7-4279-90e7-653316148e7a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7e86313c-97d2-42b5-9e20-58d50a87bda8",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c5e63a-a9c8-4c05-930b-b08424cd5e32",
        "cursor": {
          "ref": "90265499-53f1-454a-b6c9-b3d6a70aed16",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "81132812-0159-4bec-af9b-8ea655cacc0d"
        },
        "item": {
          "id": "a7c5e63a-a9c8-4c05-930b-b08424cd5e32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ec9a9461-6825-4a89-96e2-67f771223c3c",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a7f190-cbec-41f0-b31e-d90402114e70",
        "cursor": {
          "ref": "90d71b6a-ce37-43eb-ad9f-c96027b818ad",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08baa993-4ca9-4f1e-bbf9-8fa0d7ca20a4"
        },
        "item": {
          "id": "07a7f190-cbec-41f0-b31e-d90402114e70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1084721-ab15-4ff1-bb96-eb1c9ec37b03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a7f190-cbec-41f0-b31e-d90402114e70",
        "cursor": {
          "ref": "90d71b6a-ce37-43eb-ad9f-c96027b818ad",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08baa993-4ca9-4f1e-bbf9-8fa0d7ca20a4"
        },
        "item": {
          "id": "07a7f190-cbec-41f0-b31e-d90402114e70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1084721-ab15-4ff1-bb96-eb1c9ec37b03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4048c4-d062-4b58-95b1-f3354b7c8acb",
        "cursor": {
          "ref": "907e8281-cbcb-42ee-ace3-d4a61e0fc17b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b3f70a02-2de5-4a9f-b23c-3e62bad95d3f"
        },
        "item": {
          "id": "1a4048c4-d062-4b58-95b1-f3354b7c8acb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "419d2776-c8c8-40b3-97ba-73571f00a607",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4751a36-0f7e-416c-82e7-c14151f99e6e",
        "cursor": {
          "ref": "8db58385-fdb3-45d1-ae2a-15d5f9b1ecd9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9f8e3b12-6eff-4572-9b64-bb2579ec6776"
        },
        "item": {
          "id": "e4751a36-0f7e-416c-82e7-c14151f99e6e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07723b80-724f-49f8-8827-a582a667f21c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}