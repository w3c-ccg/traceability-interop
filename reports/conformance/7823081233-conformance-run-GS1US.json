{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e2dba141-85b4-4adf-adcc-a7fff16f8e02",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c16a9473-f443-4d23-b2ce-10cff1b0b7ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc637225-1f3c-48d1-a52f-02f1925b7300",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2f9dc0e-b70c-4257-a6ef-70f78c0de39b"
                }
              }
            ]
          },
          {
            "id": "5704d956-fce3-438f-8fd4-92144b3e40d6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b7c4d10-5e9f-482a-a874-838b06a7d00b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed4f9ad4-4297-4343-9e8e-fec8caa4ac0b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1e62a29f-f4dc-4b4b-b665-1a1241763e3a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47e4f676-0efe-489c-8f50-8ed2e1aae219",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c3487b3-e4e2-429f-b0cd-28529fe720c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef4c4e1a-096c-4e24-90b0-2da5cc07e4b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5946e409-6356-46e6-a5ec-1742c53f71b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "199fb29a-9e15-47c4-81c6-1773195f90bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30a3a6c0-924e-49eb-9d09-bb4ba7b62521"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "997025a1-ca09-4933-857f-71d166a561d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b932126-156e-47f4-b61a-77356cf1fd23"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f3247d0-2657-4638-9a67-d2b3a1f1f3dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96070be5-f724-4e44-8e82-a810759fd1c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f87b0c1-a7e4-48c8-a917-2d236e540b6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30e6d377-8466-4f7b-8af6-54b185696ba9"
            }
          }
        ]
      },
      {
        "id": "51cfb53b-09c9-4e9c-bd9e-f9a43376d3af",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "532954f5-4dae-4841-baca-d677802ea6ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cb5289a-8e1b-476e-8476-17ecb6f0d594",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7c095ec-08b2-45c2-bd6f-d0b0a9046da5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158c0c3e-5cbc-4347-bc26-87f32ca4a11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6e5892-215b-4286-afcb-cc0e1147a4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b3fa4-302b-4a67-95ad-deaa000728d3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96da4e84-5622-402a-8116-2568a4055eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2be5495e-3655-4492-9522-b9c7257058d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c943ff-a965-40c0-9f33-31d63a5f1887",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c351df63-61e0-4059-a18e-a8df00df4788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26fbea6b-38e3-4ca9-b40d-cf452a8cdcfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a73e5b2-686f-459c-b685-98de1fe93059",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff6d77ac-c190-4bb7-bbb6-e9b20836e238",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194745c2-e730-4999-a2cd-d9c019e6d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8d544af-9b61-4b43-946d-dde224d36571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736810d6-d264-4350-8581-47f7465c1b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1815e5d-ae64-4471-8ba7-abc0cb572105"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2488f78c-c956-4fba-82c5-7c1d48c79b3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f27613b-88b7-44f2-bb0a-c9c83bd34ef7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c094151-cc3b-4677-9c3e-b10dfd76dd45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "730597c4-4c50-4cd7-99ca-41482c6f3b52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e394701d-bd64-41f4-826c-4b607b69c26c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b9bbc510-024c-4daf-9919-408530ed465d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "514c5da7-8c53-4069-9e06-455f8c62f2dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ca0fbb2-4bd2-4786-b0e8-a036720e3260"
            }
          }
        ]
      },
      {
        "id": "19a633ac-a55b-4f20-885f-b6fe9edf29b2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd842bdc-d559-4c2d-8f35-f3ade4590ffc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0b728c9-2ea9-42d7-a56c-cbcb4516365b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "09194d03-1ba8-4a84-be06-0f1c9f6981bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bda078-f978-4e7c-ae47-015cf4bd2b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2ca269-f7b9-4817-b263-2f68fb246ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b91cbc1-6d3a-4ba4-aebf-bfd8ea8c325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d39962-4b8b-46f7-9fde-84d3141c55c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e549234-2255-4328-807e-a25765dfb92a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76aae2-d88c-497b-966d-d3aed8f868c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17678f3b-5d67-49d2-9dd2-190deab72b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f737c0b-0713-4e77-8b61-b5140973d19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59da0186-f023-4681-8369-448140ce2b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456baa28-a50c-4770-8aa3-d75c2650c673",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2af20-3e00-457d-bb18-b701edb243fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70576ba2-b9b6-460f-9210-bcd73ce7af0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b96dd7-9a57-4154-bb37-4fa71ee12444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d74381a-40bb-4235-ab29-9a658bf3555e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7864f7-9f60-46c9-a845-c244cd906673",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa942d8-a2e9-4053-80fb-6d3c8a0d6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fba65ce-c15b-4e72-91dc-5d3200a875f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10f3fd3-8ac9-4aeb-98cc-0ba569bebbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45bd6856-b9b2-4e3a-a59a-79eb2dbcae65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4c52cc-71b3-4838-a504-600386ce70f7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1185ba02-8923-4e95-b16f-228d5c7d867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc1648f-8d63-4f11-af42-b80526759976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f92439-758a-4600-9043-a3e74b16798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79a8367-edb2-4a52-ad49-988f5d580c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56d98e1-ea23-41dd-9e6d-10d903cc62ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab80a3e-79f3-4bf4-b7dd-dd3c5e38d0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701f9a68-57a5-4e4f-b4fe-410e601dd9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d931886c-4be6-4b37-9c4e-364d9e4369e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1a2a14f-5c68-4e67-a8dc-21302b2985ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848a568f-9e43-4b44-b6cf-03a0886b64ab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e024924d-cd13-4b6a-8aa3-23ae232fd76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e0ef20-2031-4258-9031-cea75364a02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28d2cff-351c-4e61-a9bb-2c3487ea8f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3321c6-639d-4bb5-9ad7-7ab3afa3464b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1944cb29-c565-4edf-b336-b74c5c1d7b4e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421a0a66-23ef-4f33-9b2b-661c04ccb824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d89964-1c4a-4200-8351-73d23a8db5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510f8cf1-2bee-4844-aeef-220a48c7a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dcd8f05-4788-4c38-af01-01c377ca7ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb8bea0-2800-47fe-aec5-1546f30598b3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519d76c9-6d18-456b-acc4-f9fa400ec6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a179449-7fd8-49c8-91f6-77542b5caeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6ffd8-1223-459c-a281-3e8396dc0dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "750f8847-6cd2-4815-874b-be633e82ffb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5ba457-a7c6-4653-b828-b8973e37db46",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb2cd17-ef86-4e66-a8ff-2f97ccf36a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b069a58d-6c20-4120-bbc4-c0b8f7813b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ea4c1-2182-4043-821b-c343e7a06bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4394762b-ca11-413d-9a64-39825d991129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f4b0b5-eb5e-464f-917e-b5581eae0a00",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4dd633-e46d-47c1-bb64-3a6789357720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac4f779-95ca-49c0-881a-28a1b93b6867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc660b-1774-4e68-9caf-d04b1f6ba568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e456bbd3-5294-42c0-839e-8096f6cf5449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c03a81-9597-4a59-a9d6-1b0b86621293",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50eb3b1-ddb2-4024-ba62-8efa4e9097f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b18065f-2070-431d-83df-9030dc7d6340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d0762-c457-4721-8232-38761845b3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0387b4c-9204-42a5-a857-d4415e99bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ed77aa-4845-4977-aa11-e2c2ac044dfe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc48eb36-66d1-42cc-959a-9cb1b0e789df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b9f877-dd66-4f1e-88ed-826933ebcf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e1a90-f776-4bb9-8e97-14f1e24ccf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd94d6d6-429c-4721-a187-14d8442f516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25adf529-f3e4-4ed7-b17f-4f1d78ddd901",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3402b4ec-eeb7-4800-9874-82a3dca2db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f6de16-6422-4cba-af1e-8c3d3725eff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab35f0c-6a82-4d20-acb7-be24b0d243d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b21a8410-fbc1-4968-b58c-25dcf0aaecd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90220dc1-2927-4d98-aa3e-aca9722a58f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff0fc4-6584-47e7-9964-2bed96d87bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6187dde8-03cc-4c8b-9a14-d1a58b99d9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5c78b7-11e3-4b0e-bf26-793a708b584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24a0a02f-b8b7-4704-b6a3-ae0ca083320d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915309a-522c-4912-9647-57bd9ebb6c4d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae16cf8b-5417-45f1-ac13-47996173e78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26f6bf2-d60c-4537-94cb-31740cea522e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bba6ee9-6018-4e25-81ff-9f5bdcfed341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0e08baa-0d38-482d-84a4-2c5d6bf250c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f81a42-d03e-4006-bd52-3c80e30d0c16",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654f757-e445-45a1-ba13-1fad4b9d0b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba378494-a608-4b76-bdc4-aead968045e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bd9edb-5a41-4cb3-8035-03b07fce51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be5e4018-3de1-4e83-a66c-b0388500d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb07ad2-709d-4435-852e-d8a335b5c004",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e320c7-1928-4470-9a36-dad664037cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0137e2af-8e5b-4795-8b07-42d7967702fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0b15d5-57c6-4568-8f3e-280f36d434e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ce3d6e-7f89-4f49-a8fe-b1fa1fa40236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcef3e8-5132-45e5-8197-719dbb79a69f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a399570-24c1-4fa0-b755-f145cc4e2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c967e76-913f-42e3-8868-0146c708bfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc0a4c-4d6a-48e5-8fe2-6e9fc9cd0f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ad2dcf-e64d-4b39-acd2-23af5d8e7950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6949b15-e257-40a8-9e8d-c2014a64f065",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0034440b-cccc-44b0-85a7-594803a69830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667b650b-6936-49e4-a328-99570c665255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dd3515-f6eb-4673-99a7-4124a7d322e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfdb49f-c696-4366-a09d-129ff7c2d79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea6b710-72ae-4616-816d-c2fc9c12997a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cc7922-e9ab-41f3-90a6-f16ed0a1d46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ae5540-7844-4f93-92bc-952f4c54b8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bff8fc8-6f19-4b0a-a380-5e5021d23183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a860663-40e8-47c6-bd55-094a390788a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cd606b-27b2-4ab3-ad11-07f33c025599",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209647be-2f47-4209-ae64-7153c7c983cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da35c0e3-0e0b-4129-8792-e4fbe9e6b591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a839b5fb-0457-49e7-9a05-d2499968cd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ee12a0-41db-46f4-b976-d7a0a570faba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c86bd42-0896-425d-84d3-53687d7fa7c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce60ab5-04f8-46a1-80c8-efc6b01f8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9cbfe4-40f3-4b7a-b494-262a67eca21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a72eb19-f3ca-4e25-aa6a-dceb307df255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "878e7606-7f3b-4247-8e64-b82aa249139b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23c4816-82e6-4a11-8635-2eaa8392e21b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b563bd-26a8-4e9e-bece-6c19301fd20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c7c200-67db-453a-b7b6-2a39a75b1518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bca084-9e02-4a70-8edc-5c17116234ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b44e5db-e5be-4c46-9884-fd652ada9abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6b384-024f-48ab-a5eb-4b71670dd9d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9772b1-0536-41f9-9e35-885efcd7bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fb288f-ffbf-47a0-ac86-efbc0e97b223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7378d290-13f5-40d5-b234-ee94a502fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdb611e-5fb9-4aad-92bb-87b22411280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002ef00d-61bc-4417-ac99-0edb732677c6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6761b4-acdb-4e7e-9c00-cbd58a9bfe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9959262b-adb0-4842-b536-58d40bf6f2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa32d29-cff3-4f75-b282-1da48173968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "115fe592-0361-4e47-85a0-bb392f297fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d04d4f-cb73-4ffd-ae9f-a344478e0649",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfa28fb-7dca-40bd-b650-b0f6c2d71ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74135675-7ce9-4d6b-b2a8-2655e305150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0455706b-059f-4238-9738-cc8bf19def46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f846ee1e-95d7-4046-9d51-afb48ebdaa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7566db16-2c32-4f14-92f3-04b1529c1769",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290451a2-0d11-4fa6-844c-a7464ee8063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3ce230-4ea7-46b9-b052-cd3d9b52d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2f5d61-c268-4d98-9a15-51eeb668f765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "576525be-ae9f-4fd4-b12d-611563665216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae0077c-f359-42ce-aaef-1221f224c1ee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52efee11-53a7-49b4-b567-3cbed8b54d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5d6275-912a-49b9-b85c-2cad2449068f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf35702-d1dd-419f-94f6-69b747b897fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "641bf711-17fb-4c97-9fd5-9b3fa72e0af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b801de97-0262-4a22-b9a6-81db7dd2cecf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c4459-9b3f-4bed-bb73-9d4c325c1543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c662d1f9-76e9-4c17-aa15-7ac61c93beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4aa9b0-6ee7-4077-9f59-57fc0db47f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "84dff7c0-61ba-41c8-b59c-778ad22bfddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5d4918-5266-4b26-8278-24757124f5a7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be874b02-1558-4328-99f6-a35259e8cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51c47f7-f208-4282-8383-1fa57548e302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f089f42-16e0-4d85-8b7b-8808805a997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7be6674-e98e-4301-81ee-54165dc074d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cfdf81-af72-4b2f-a467-aeccba8d5601",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180f7bd0-a543-47cb-a1f5-f71cee74e986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1f102e-063b-4458-af95-b1a7f49d33de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e698b-7b6d-46a9-b26f-fbb7415ccd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5203efd-63bb-48c8-a8ee-5b47af498918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d487a9f-c34b-48d1-961c-7659ca4d9593",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcc7deb-76f0-4683-964b-0b7fedee4943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bcbc4f-bd75-4558-9a90-14ec0fcae588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8243e060-f9f2-44ff-844b-65e344bda225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa3f988-a89d-4a14-a1f8-a18ff2a221cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a59d475-8434-4579-8b0f-df4f87892dd7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5195ec6f-d0a0-4369-9213-f44143a412aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f30643-86bf-471d-b324-afd169329adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422cd3c4-5cd9-4bc6-b5fb-3176fac9a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2724a7-a487-4979-9759-d1f9bcf53756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba057f16-e746-4201-88d6-a53b5bb71606",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b20a7-e522-40c1-87f6-a9b608642a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec83caaa-ad26-46d5-8c30-f7131964dffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f69e2-76d5-4656-9a29-b949b43f82c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ce8b75-4b47-48cd-a08d-c0cc067312bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13164d17-f233-478a-bcd1-6e81b10023e9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8c069f-f387-4254-b74f-9c77f4b301b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a2bfd88-5574-42a9-8587-28599cbb6f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66febb81-5f2e-4fd0-816c-f2836685ae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5e6c36-2fb0-4db6-a3d7-c96bab0485cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e26384-39f1-4166-bc18-3b043fb3344a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0415295b-d143-47a6-ac25-3a71f0affd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a7e42d-2959-45b4-aa26-1d9b337c46b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11658949-dce3-447e-9309-f19c135782b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf4f6f9-dc82-4fc2-b7f8-3cbe154617da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634d6e36-e55d-4a99-8c4a-2bf7bab1ea48",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82c0cf9-2a43-45ca-9062-fe215fdd5f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac0b4f2-573d-4782-b125-a08d7f900c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e654081-d0b9-426f-94f5-7de691a8b99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f97690-4e93-4b67-b830-ed7001a9bd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc07d936-82c5-402a-a8b4-6628b1461a7c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccd1f9d-945c-4fd3-8bae-f0954b5fe103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bfec01-2cf5-4890-ba0d-211d7c70d59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44912464-41f8-4617-a337-13a1e40de64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d47a995-8d6e-4550-aa55-991a097f2fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744fd4ef-dd64-4657-b177-cbeab5025f7e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c914ba08-d68f-4023-98d3-0c250ce5db66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6150af80-ab0c-4da1-ab48-14bb639b8f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6867403a-8604-4b6c-892e-414a65608103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd28a71-470f-4b38-a220-09c9c6cb227c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de8c6ae-2b0e-4169-b5f7-8629471fcc43",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba762c-ed42-4832-a80f-09536014e7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0609b51-d127-41ee-9823-c5046593cb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fb949-9e1d-484c-914c-e8ef6e10aae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49500406-3d0d-4cfb-93c6-f1bb1d958178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823480c4-84bb-45b5-b47b-8e08b844ebd4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f3b21-7900-436f-b2b7-6521ee480820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31ce75a-a483-4494-9481-b2f6688f0c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff8fa6-0b48-4be2-95eb-d2231dae9153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fb0687-1f00-4d83-8b5d-46b0f702b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04df47-5998-48ce-b523-9dfb9f50e88c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772dbc9d-239d-4678-8c71-2b54ec8c7d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2745f8-68a3-413e-8b56-6cedfaec3d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7fa29f-dd9a-4624-bc08-2c1dcab625b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d25d314-2c5a-44d7-ae12-50957d22d411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268fbb8-7114-4874-af85-f159979a2df8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d524b06-e3c1-4028-bb09-8f3729071f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642e3df-3631-47ee-a7d1-7d686ea3c539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bfc280-5676-4119-b67a-598a6c0bb352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b895aa96-b2e4-4ebf-8388-9be9018b0775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c0134-bb20-45e1-8791-39e0cdcac00d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5554d178-527f-4553-b6e4-6ed5830c50b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d05c9a-c552-46ad-9ec8-5f0edd860bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226f96b1-cb68-43b0-92fc-611ed20b385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a068173-68ec-4683-a7ee-266d505e76d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9d318d-bc5a-470f-a5df-1f2ad2308ede",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc22f645-6b10-4b84-9210-ca2f44ca8a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63b5566-509c-4cf5-9a43-0a7620f2a513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2b3ea5-6090-4a04-a3bb-4710b37d481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97834e8-91a3-48f1-8582-24cbfb37c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117125b3-c90e-4155-8d74-f0fc2ec8f3df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e36994-084f-4770-b809-612eed4033e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbd32e2-c6c0-4d44-88a6-79b3781a4b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2723e2c3-0c91-4d5b-9640-3ca275a0d577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72501f30-9816-4913-9fe7-625ff019ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f039af75-3a8f-45ba-965b-a1cdc01f485f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5ac05-897c-4075-b28c-ebc99bbd0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757f4fbc-34c1-4a17-b07f-db43c1c1607b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad919b8-ac71-44f5-98bc-4920b6dbbb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a75a155-5879-4538-9934-c35af27dd427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2992d0-4e52-4845-97e3-94ef9a76911a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490a749e-c2b4-40c0-82dc-9c6a3b213a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c6e5fb-f975-4f7d-8919-29fc16240c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8b8ae3-de18-43ed-ae7d-e1fc4c78e472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f73620-c75d-4964-82bb-7b0229c406b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9aebb0-c441-48e0-81fc-0faa8a0df5ba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3eb3bc-248e-449c-ad6d-8791fecee261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d95ae4c-6b17-48d1-b7b8-4fdca7e39ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6f6e1d-f498-4fb9-92eb-4bd755fa12ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "131e3a48-e49e-42e3-a6a5-6c8f1b259338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254a517-c253-4269-bf50-fbf0e4795c30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60511013-48da-41fa-93a2-907ef4cb535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5b78ba-38ce-4b30-9507-e44422a43acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aab4ff9-30b8-462e-ac23-ec59ff7c3373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "144fdc50-745c-41ad-94aa-b6a9fba0c898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cfafbb-884c-4ce4-8f52-9b7929c4badc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52870521-bd00-4762-838b-d9b9529b65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4889fa68-1bf4-4fb4-b779-2c379a63174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b77f0a-7030-4576-8134-16c6eab94932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b723253f-9528-4235-af0c-ec59006c0ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbeeec3-ffa9-4cd8-a603-8d4f4af12fcc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adddaab-dc0e-4be2-9fd7-9f456ab8740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b499f751-f774-4f82-bc2f-9ca3c3402e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bead2ad-7911-4acf-b60a-887010946622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c11e64-d2e1-41e4-87d6-67706f8a2d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8656313c-23ba-4068-a3a8-4f290e7ac8ff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88af7108-55a9-4175-803d-1ed5b7e7390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ae47a4-5c5d-4ebf-9aab-a1643235e8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dbe21e-f95e-4804-a671-0ee8a22ea1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92bc64d9-329b-454e-8f2a-0b550ff80dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf28ad5-e6c8-40c8-b690-48bb64482a70",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b0f2d9-2221-4b0c-bf77-7fada5e5bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec26157e-959f-42f6-8117-f6af95e8765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9a1779-3264-4855-b218-7d3eed0562da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b952da-2e0d-4c83-ab62-ae5db5954329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacf8704-fa60-47b1-8a63-439ca238d3ee",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df49d1ce-08a1-4b3b-976d-249530a3e5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c1353c-7d4e-487d-83ff-ec5bc3e7482e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c81cb-e455-4d74-9960-de6d9774ee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5aacdd-0d33-484f-802e-fdb36562c816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2bdc1a-b78c-4394-a287-14009556c199",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2c7fe6-d5ea-4c6c-bd42-3aae0988c11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdda68c6-16b0-4a2b-8ae4-aec6fd990d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf53ce1-6e97-4c34-87ac-002916af2826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9f9d1e-17e1-408d-9dec-f73f6c5dc232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73adfbd8-c929-455e-927d-2f21c3ad840c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f898718-ba25-476f-b841-893d180a3b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc970189-56d7-4bfe-8d71-74f15fd59503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5919c6e-fdcc-4332-a6d7-4822e7ec9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "006c0378-e00e-408c-b02a-0aa3b3e22c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad78df1f-073a-44d6-bcad-cd9b7888c5a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf548839-fd74-4dd1-bc79-dd2ea6387023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0f39c8-8bbe-4e85-b3f2-b93c7ac86fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d00c37-a742-48e9-ae49-eb7ec16414dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00d43722-8124-4b38-a78c-b47434b9a6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311780ab-c369-460b-b841-742e7d69e3f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b91ada-e202-4fe5-bfdf-4ac069dd9e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d360fe7-b97e-46aa-b33f-a5128fff7e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7aa1e6-0548-4486-b2b2-e9f38cab06ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13fd497c-50f1-4229-be13-20218743ff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acacc36-6a37-4b62-b1b0-5e6332be79d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee935def-3332-4695-8b21-ea2988f0b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d24ae8-3a3e-4429-8301-3c2f581b2120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccadbcf-22b1-474c-a0bd-2a8c002182ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d78542c-0c0e-41ef-851e-e01b4a17e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a12396-36c9-4647-b17c-5e8a24555335",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f38db-c5ad-4ed0-9e30-9c528cd5dd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a827a83-417d-43c8-b7b6-9aa23ddead22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d122b0-f8d1-4788-a9fd-76e5caae54df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7d73a8-caa4-4353-88b6-46a770e8a6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55c4c2-9f28-4c57-b0a6-6d10840572c8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90b8c4f-7571-4441-acdf-b05ca26e8f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5a8e8e-772c-42a4-85e7-c28548e7ac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ea8571-558f-4b13-8c81-f66d95aceaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbb4a2e-f695-4372-b145-c54b4e3243c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e0ba37-9fc0-4e7d-8713-e42633eacc48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7624fa-195d-468a-9a68-60a3ca2f4408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549a066f-b749-498b-9763-bfc22b821c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0034a9c5-4213-4c62-899a-aac5e6c2cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c34607a-9a1c-4a62-b96c-7e7ba460718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f5aa6e-6286-4761-ac00-d0312b5107df",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c45277d-baa5-40bc-9edd-67fd072bd2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fef78f-0b2b-4298-b40d-33affc788777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f73517a-48ac-49f6-bd4e-43ae68a1aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "493a3bc9-8942-43d3-aaa8-912ed409eeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e820cc59-a685-4317-baa5-b56b3767cd6c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ac02c-7cb3-4d62-8215-afd2f7996916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51c9b6e-c443-49cd-82af-df24433d7a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b5379e-fea5-415b-9356-ed5fb8d4be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085e8fe9-5c70-4c49-b4c3-232033093239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68362fb0-b5b0-4abd-8549-1fe80e81658a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1456d8c1-b06c-4c96-9ab8-a3afd40ae795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77f7d03-caf3-4617-a619-c1ae9f2482f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502dacf1-eef9-4b61-99b5-9e945b1abe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27b2516d-d12b-4d8d-aa5e-97704b24d069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ce3beb-034e-42a8-a843-29f536bcac7a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba27697-c834-40bc-bdaf-bcc911621bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc1b456-537b-4cb7-8018-0302e30bd0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133214e1-ad8a-4816-9052-9b20fd115272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03d8cf3-a1df-4ef0-90a7-43eea8a56c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79aa3ce-c8c2-4c37-a3bd-4aa273f1608b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0e8312-83aa-4034-8533-2f92b13cda04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6163768e-b67e-4118-b5e4-ca600127ed82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239cdb6f-de43-4893-ad40-431aa125de83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "543d5470-b82d-4d6a-9a36-a18f697ef2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c7541-0d31-4148-8054-5d1ce00fd908",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2996d89f-f0ed-4868-9ef2-8b6c2a1f7c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1f19e2-f949-43bd-87b2-26677957c4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3cb87d-7c84-4409-a153-f5b2f9e8afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e413cd64-7476-47b5-a138-c46432bd8497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88696b6-87dd-4496-ad8e-fd138973d88c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9378a959-d5ee-4c6d-bc37-4dc2eb1d6cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3396696a-6c40-430b-bf21-d1e32749983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e39d643-46a2-4bf7-911d-b21e39c55b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99663c21-2890-45b9-8c42-8fb12c1af994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9b1e31-e119-402a-a4b9-b66671eb88ff",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8829ec39-81c9-48b4-93cc-2faf90afab0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3471d95b-8f7a-41c4-a55a-3b4da06b2277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8472264-372d-4f77-9ae7-0c347f5bf79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf10263-63ac-4d5f-9689-e0fd6d613e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fa65c0-6291-4b9d-a8bf-6e6be21db7c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dd0aad-c4b8-4493-b96d-7e998ed20df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff378857-4ab4-415c-bbe4-c7a6e92342c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a62b7c-0d30-4980-8f5b-f6c6dbd04795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddff6da-caa6-4748-8b6d-c353c59567b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abca62-88d8-4133-afeb-d17042633d0c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd821ed-67c3-4050-a52b-818ac4bd5940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85840452-a33e-4370-b5e4-b93ac9a13303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250ebef9-3aac-4016-822c-b1aa4b056eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e601909-c0d5-4067-87c3-472303747b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d836148-08dc-4fc6-878c-9a564c8d08aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f8f039-f483-4b40-be34-cfdf06c72fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d731f5-8a61-4f18-91c9-c2f5441e67b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2185f1c5-ca5f-4fac-abeb-21e4d834f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "521e7eb6-ff90-41c1-a2a6-ee3d24a6af85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be3e226-8e98-4bfe-bf1e-cf401dcf947d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0deeffb-f9bd-4777-8df2-8dfcb3102659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a61697-445a-4578-939f-1db5b22eb3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335d521f-2f9d-4834-a09e-ce517290069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a75bee-43fd-42af-b08b-d282a661380f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78221b88-d4a1-4917-8072-7570e4d8a56e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a2b846-9289-46bc-be43-6b5b183b776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6b33b6-f0e4-442e-9970-f97dc65f6bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71877e51-61b6-4234-a904-95dade75bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97960376-1694-4f2b-8473-70282fcca966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc135304-b122-4961-ac00-87585e39f3e6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f12f3-351a-472d-9e25-d58cb7378fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ab778b-1528-4367-9c51-3c7685f4c517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a3d263-828c-4850-9b8f-dbddb380043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2a6cdb-12e7-492a-95fc-7c06eb6940b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535a1d9d-7f32-4ff8-94ac-39be280de2ac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf610dbd-6936-4372-a861-ed5ec4b18e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee044804-8b14-47dc-8d8e-93c67ecd9caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23adda65-614f-4fa5-aa08-233d90ae7eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d2e5df-66ec-4f86-baf0-3e6ed654821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8d03d7-e2de-4196-883e-6a9da63a90fd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd20187-fd34-4e3b-9d56-013f41834d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48ab0a4-b45f-4e66-a754-706e2cc19cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9929f55f-ad73-4e9e-9b6c-0c6b5378e70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "490c83e6-2df5-4c78-b110-33f2c97befdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0214b05-1508-4d23-9ca4-96dd59d5ee1e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7cc41d-b57c-49ed-beac-c64ba10b026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3817fecd-cbcb-46a5-bdc3-8bcfbdd7e4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9986d41f-a06a-411d-8794-fb29bffebee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cf46cd-f4c4-4f8f-91a9-f79b7ad08719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137049a6-2ba7-479d-ba05-28244a1fb88b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc90c70d-95e1-4b34-bc40-ba6f72d14152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b4bc24-c455-4c2c-a646-bbb785cd010f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b6f9c4-abc3-4bfa-89c6-bb497fe68a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a192cce-d7dd-412d-8aa6-223c7160a907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125cc23b-3e61-4b0a-9cd4-297371e5ffab",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e4f5ef-e2a4-4c06-9a41-e9767675ca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a2bbff-5269-4a46-af7f-f2f32cc6e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7beffa-1885-4f2d-8a90-bad75b669cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641a3bb8-9263-430a-a12d-a31b4ab41bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715e7963-6524-4b49-ab06-da87d74cfa4d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7b96b4-966f-4d7f-903f-809883b811d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601aaf04-af63-4e5f-930d-c1e9f884785d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed4d5fa-816e-4abb-8939-c002182d542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeaef5c-2651-4f6d-aa11-994cb23a2ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defd0e26-a5a2-449d-a74a-6422ce8a7ec1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88d0a59-9cbd-49d6-8bd2-ec93994a08ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426583d7-570f-4e91-87e4-436c87ee037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a7bf2-cfca-4737-a11a-4b9b73236558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6a65ce-b920-4d87-a713-90f21981118f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8d16b-3779-45a4-9262-a3b878dcba2d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2628df02-15ff-4277-85b5-824cf3490473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9875daef-ce91-47b6-b513-e17c725961c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af4ca0e-00a2-4b37-9ba1-025f6cfa42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "847b83b3-5b89-470e-b916-fffa7e9ffa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c55f951-afbb-43f7-a60b-a3eae8fcab59",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39ce79e-2182-4c73-b95f-97cf818ca22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b9190-7d90-4c91-9511-3428bf3ff347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae711cbe-83f8-445b-8395-c89ce2f73c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8d0cd7-1bd8-459e-a251-abcd7edee6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c89c6-7f87-497b-ad84-e7b473d110c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2baf164-e017-452b-be1e-dee591e1ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed3bccb-0f83-46e1-ab36-7f8350256189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad856fe4-4d63-4b3e-8d30-2848a21159d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec966ca1-c2b5-4181-bce3-27de2a9c3334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebf4346-df5f-40d2-84f9-df6030d7e4a6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f85302-fece-4fb7-a572-9837564fcaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987e41bf-7d9e-4898-b687-502ddb1b0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c9063c-3147-45d9-9d66-e78903b52739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db8e7895-0df0-4204-a422-c248632e7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8359fdc-e0f6-4e83-b693-1787174c3516",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb5848-33ce-4170-b1e9-7280d01ae6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfac17e-ee6b-4ee0-8203-9cbdfa752ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72fbe3e-2ee1-46ad-99ae-6890f2b0ac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "427ceb0c-3c06-441e-87f9-fb0638afaa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3278586-7a69-448d-bab5-f21215234d50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334bee2a-8714-4de7-bd57-61737af90c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efddf87-6f17-4b09-b674-e4c91f60336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5082b899-af57-4420-b476-1c75a0518e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e56805-f09b-45b0-8630-0df793263bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31c8d04-a936-46c3-8073-cbfd78d0fe7b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce28a4f-1f66-4599-892b-f31ef3daf3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d75b2c9-1ef9-4bc1-bfb0-481018533d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83631cef-6c1e-487b-ba65-3b07e6aab79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8546df44-dd16-4e72-a653-a771dcfc832e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a76d5f7-466f-4ecb-a838-43970b2bd72d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ba8b27e-34fe-401f-b8dc-16a4434a81c3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6446c0d-c780-4c30-a605-8b92a196201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9edb7a0b-cb00-4f5d-8550-712d04307f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1272fdd0-c08f-4b04-a26e-30434855c76a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9457fda4-72c9-42b6-a128-313af3a8ce6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8448f31e-9f7e-4a72-adcf-21e1c0721897",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde90ea4-1aae-434c-84fa-f467783393df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c52650e8-e646-418f-97a0-3fbb127b0676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aaa9dd1-ad2e-4ebd-9af2-c0b6fbc5792a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd12f0c2-46cd-4812-b3ca-03d05fed38da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36579d5e-a9ca-46c4-801b-0f35056e5e63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "106c5459-d470-4cbe-8377-9dda675a95d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0898f96-7ced-4d64-b5cd-a4c7d5ea951f"
                }
              }
            ]
          },
          {
            "id": "b7fbb13e-1544-43e1-935a-f6489e6c740e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09c5a45c-66cf-42b4-b0f9-0948f642e9af",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dfcfc7ef-c413-414b-a42b-bb298d3186a7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4320d9-a745-4c9a-8579-f89707b7a7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3aeda129-a860-4a71-acc7-66d68ddae75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1749040a-ba65-453d-a473-d205bee2c716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2908c645-e297-4a2f-94c8-4724a0eb9770"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f867da0b-6436-4db4-b68a-963fc7c4f8c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6fe594f-9599-4858-aab8-ce372f5cdaeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c323975-93be-4a06-9704-6ee93ae46ec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84697cd7-d46f-4885-8e10-728e67c07694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80cab59b-8252-4e82-bb19-a32c69462d72"
                    }
                  }
                ]
              },
              {
                "id": "4cb87f09-ffba-4787-ad1c-12c14ee08bae",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3daa10be-364f-4071-aa57-930104896209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49585449-5b71-4b85-ae81-01b3257d2c9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2218888e-9f5a-417d-b4ff-2745d1e18c33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9213c562-03e9-4f40-8027-5e7e630adf01"
                    }
                  }
                ]
              },
              {
                "id": "1933dd01-8b23-4c82-b24a-afb8c76fc449",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd565224-f304-4c36-88d8-b3a97a6e0f7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65474f1c-d5f3-4847-8fb2-76fafc169dc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c29b33b-f4db-4fcc-8b76-12c3190032ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d492442-277f-460f-987b-c0d8d09d2674"
                    }
                  }
                ]
              },
              {
                "id": "da2f2e12-2239-4a29-b8f8-35264457ad68",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "580941e7-ae7b-4a0b-b519-70e8da10ab7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27e9acfd-3483-4e34-a136-87f99a81dfd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2871c1d-d858-465a-a6f3-6529c7e4650e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdbf03ea-20f6-46d5-8c13-4ce124511a76"
                    }
                  }
                ]
              },
              {
                "id": "8de06be7-a533-4f30-9261-fd6caa983f01",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d681462-4e08-4aab-b8e9-d3df87f3a375",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ae7e65d-c8c0-4661-81d2-4e6cb55f907a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c279d3e2-bd02-41ac-ae78-134be8e357a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e21420e0-46c0-4094-bee8-b4e5bbe563b7"
                    }
                  }
                ]
              },
              {
                "id": "885cf862-379a-4321-9303-8ef59307462e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fb88126-df62-4983-a46f-be2604642e14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47ed0bb3-e4c9-422d-8db4-2b430294cec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6b50b4c-3adb-4c18-b81c-a9ccd12a1c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab1ba853-08e4-4fcc-94e6-6b4ff17c2b62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70025737-7eed-4671-be33-3290fae40e36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "078daaf0-ffba-4e2d-b909-a4e2e2c14acd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6bec4914-0d2e-4dd5-89e3-2c4644adbd0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e678f63-c3d9-4a83-a378-7c98c8bedc4b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de29d5e0-2674-4043-8958-b615b36bcd26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ae34a003-864f-4091-bb48-0f192d869efa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44749a9c-55c5-4894-9848-8829ee867ca8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9074b08e-76d9-461a-9f7d-358ea8501715"
            }
          }
        ]
      },
      {
        "id": "cbeb55e3-7f32-4137-9d32-72aed40c999c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "85b3841b-6fe5-4f79-b51f-24966547523a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "902b955d-dedf-4f8a-8221-541a0f0addcb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23fd80c1-2b4f-4005-ac27-6d1eb923cb57",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1746398-a3b0-4115-8616-b86b9d70d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a5b7b7-9ab9-443a-a7e6-5c7d2037a04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251f5b1e-15a0-4492-ba67-022230062624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc48886-58ef-43b4-aa4a-8f10cf71a1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e39958-29ad-469e-9e2a-d21cf37e4fbe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e81063-a481-4472-865a-fd015c906b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5291e1b4-5dc6-44e5-b860-6d37b7986969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d7684f-2c34-4ffa-9e92-129318a58e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c51a00-b78a-4620-9e79-3c39d7646216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb00145-320a-4b3d-b139-b14107e367cb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b7d3ca-0f64-4cb9-9ff8-df3a63827526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9fb90e-23cd-4af5-9615-09226ebf05cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d8a59-b659-4df3-aa86-487c2cdcd5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25503ee5-0abd-4cba-8db3-8045d191aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc1b809-32eb-4821-86ef-4efb2f7b66a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de202a8-d2ab-4f44-befc-1924eef16e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd04f5c-21b4-4a0c-9e6c-4c8c49d264a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693d4b41-c67a-4305-9a7c-554f5c768feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e861ad-b241-4e87-9758-55ab0d9850b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4574fdc5-fe67-48d0-b350-b501dec13506",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421be0a-1a36-4556-99d2-522777318bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4746e546-9429-4c4c-8514-98c329a6756f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f505f37-7e54-4ccf-93ac-13aef551b52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddca9daf-00ca-4984-a1cc-75f4b527385a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9597bf8-9305-45a3-947c-bf50ed27f51d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12efdefd-af9b-4736-b5cc-09cab5f405ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b5ef75-be18-488e-8131-5f83343e3afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dffb915-31b0-4efd-bf20-dcceed85bacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e09f4b-e3a4-4942-81b1-51ff987eb27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62940261-3ea9-4cbb-bed1-e9abbb624047",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32d86d-8618-4486-a5d0-56df65cb5ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cf5323-732a-4593-a115-2d6c9fe5b85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c82934-b858-4042-8c41-09e301fc10d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd93fabc-0c42-4df6-8cc9-ecbeb537a5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b12af-00b0-4032-829c-3fbe926ee048",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe189876-d6a3-43f8-bc98-899ca6dbd0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46648ab-6f8e-4cc5-9288-f7727fd42037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079e193-3de0-490d-b045-f938158d0868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15f481b-5081-4358-ae78-a94fd57d43f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2091d81-a93f-4b4b-a6f6-634862f5e302",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36174922-e677-4e44-be1b-de5e29a8b91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab46075d-e607-47c2-9ec1-88fb57cba45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1393ae07-e33d-4e50-a68b-7272b64f057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8cb201-15a9-4489-8c39-e9b0b023e5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76344a7f-0c87-413e-98ad-8b37e896f892",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e860b6-445c-4663-9cab-4d35ae5ba878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bc6dee-599d-46fc-afd7-f4f3c5951025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199ab94-8da8-4754-8167-e2c9b0196037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50d48a2-407f-435a-84eb-b95705071785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b335336-33e7-4521-a71f-7fbc4388f4a2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6311d544-a8d5-468a-9228-46e9b63837eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff12b7fd-1931-42dc-aaab-eaade1ddffd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d222589-c7f2-4317-bbde-4dfed8bdcc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1c552ecb-c580-4158-989a-881ff0123309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031bd2a-fc86-4ade-b626-7962cc60c072",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f1672d-ea09-4442-ae05-2270d74c926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2439be41-a64e-4781-9bac-9dd703a45bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455d9f26-4dde-4493-a3d7-de6739bf2b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04154014-74d4-4c91-b6ff-e1e28498099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3e6d0e-56ac-46e9-9813-1b76b0a99915",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927d68c6-01cb-4822-ba82-9bd9237bbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c0978d-412c-4ab9-ba78-afd99e1f19e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc89382c-5f6d-43da-aae3-1c23d61ee346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62bff2e-9a45-47de-a034-611d8f31b5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924dfbda-4954-4855-ae16-9578c1b8e5d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32451726-773f-4476-80b3-aa4c419e2299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b96d8d-6b89-4e73-a81a-989ff7225b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f368d020-c581-4c81-b80c-0a04d3a0d303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b21b36-bb0d-47e9-b458-9116c6377819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1828edcd-096a-4939-b53b-1964c6084c2d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3df058d-fa42-4389-9203-be147c239049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f1ac24-da36-4f5d-b660-2d8434e738c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c2bee2-5107-495b-b7d0-ee29de74bb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "735bb431-a0a1-40ae-a5fe-9fb2e7024607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff1afdc-4307-4701-88ae-2c45625a48e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f788bad8-3347-4546-941e-03acd19ac65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2736d77f-accf-45a0-b6b4-4bbcc3f35841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737ff0f2-3807-400c-9b0e-fba82420cf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef450e0-672b-40d6-95c2-609817da84de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbca419-a358-40bf-a8cd-0926f79ba981",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e0dbdd-bb35-4f20-8358-e4006dc056c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9d1954-cf87-4d24-b322-bbe59cec35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718139c3-749e-4240-828b-743bfbb761d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c58e19c-95e6-4768-8937-de4bf2952cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284e4e68-ae32-4f1a-ae19-67d575679321",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3d888f-94e5-4603-a0d2-26b2c62ae2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5672546e-dea9-4b00-8733-91ae8d05219a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe06bafa-ab8d-435b-a836-252143d306c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "875d1cf9-2cef-4939-bb37-4873e9c21f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0160aacf-0c2f-46ce-b280-6bae5ccde811",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc604c1-8769-4ece-b4ae-75d725b68c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5a759e-9e6c-491c-b502-cf97b68f301b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4945836-6585-40c8-8e04-ef9d71402e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aab339e-0a3d-42d7-83c5-b82815fd9b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460c703c-2d3c-46bd-a5e2-3994852b6dd6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77abb705-5abe-4185-a19e-054c044d03e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52e5689-0774-402d-913c-2d627dcef6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aa8a1e-156d-48cf-95d5-5bd2a79c970b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2551d5c-c452-47f3-b19a-10f318d8bd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e243e14-7f28-4f61-9a79-dba6e7e062bc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd2ded-c8e8-456d-92a6-f06d1359370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45c89be-b967-4fdf-a600-3c9db5a3710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f01d1-48f0-4d74-b140-4450112b80b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1286e44c-c8dd-4a38-9caf-ba151452a8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb33b8dc-d4a0-471e-a203-c98de0bb9c5b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af8e78-3fcc-4c9f-b45f-a1e10d773555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc79346-2770-4b0d-8da7-d9f1e9b50939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e020e7-4d43-4158-82aa-9c6e82ea776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2106b34-facb-43dc-85df-27fd81efda0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d597fc5e-7b6d-4993-8e66-e0f0a5c65a9f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e2354-cdcc-463b-a497-ecb722663175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90fa334-7a72-4a39-949e-2a102918df7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1640f2b9-ed0f-4d07-b165-445b543da632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f732df-5a87-441b-950d-8731d74cdf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667bc0ac-d943-4df3-86ed-dcb7dae8c82b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10eb1f5-ccee-4c38-a58f-89f202f27c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a3198b-eb11-427d-885a-4b9081bf1a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d95093d-1c49-4566-b3dc-44c90c3f0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94795d54-898a-4b3d-a652-881c858de5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48072d3-0f20-43cc-b972-3dbfbd8891a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ba1d6-09da-4d29-96ee-df7c02450fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e20c364-a47c-4ab4-b221-b2e0292a6696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79cbc3c-ce7a-44f8-80e3-8e51fd9ed2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e84043f-cae1-4f95-8c5a-fdb0b38cf026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b89b2e-edf2-43e0-92f2-562502f557d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2c47a8-d0ed-4fae-94a9-d29a616fb4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756b71e9-8bc9-4abc-8cc0-5dab8e8cc058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e080ee61-1ce5-4726-83e5-5df706b3213a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8ee8ea-e60d-4ef2-9ecc-2b88b4671f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8514dfa4-f381-4543-bc4d-6eba2baf3ff5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fa7cd8-b6e2-422e-b0b7-bb56561a18e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051b0793-396b-4766-8e1e-634930078931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331a7b1e-9d09-4fb3-a15a-ab7738d63a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf47ac3e-7315-4922-9eb8-695dc494b433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a565f67b-8d45-4372-9167-5003c966982a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e706d-6aec-437a-952d-396e50823d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08da43d-b406-4bfc-8705-db6152a8deeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e11079-e757-47f2-840b-243f2c158ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "886f707b-26e1-4207-acb1-d4dd876b8d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2749a20-b852-4c9a-9524-36bf14a16cf8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36359e10-23ea-4cb2-ab40-5b987211046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1583422-e500-4896-9b16-c0bb953592e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7395e3d-102e-4f12-b6c0-9f82e4a0e92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98115f3-630d-47c3-a289-6e75576f46d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c368e-943e-47ce-97d4-4e7053b0983c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b4aac6-4d4d-45d7-a632-9976354ea4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda78184-32b1-40b1-af6d-99fc98394529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81557db6-37c3-4390-9784-3f134c68a829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "427d6841-398b-4224-ac28-df9506f0dea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c09ff6-f899-4f38-a5cf-cfb955938a43",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf0f48c-ca16-4fc1-9568-17a7128e6882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18fd2b-059b-4372-b678-bb573cc5a866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6403716-a1da-4604-8d50-f1b3ef123819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd0cddf-dc66-4891-9dc7-dd3810603904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2057562c-3a57-4ed3-8531-58dc1b784261",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce8922-a8a5-4e3d-a5f4-29ef23a06bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72ef03e-bf6a-46a0-b5fc-5d4fabc8ae79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cca0bd7-edf0-4784-9d5f-69cfa9d8bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b76ac491-5c56-49d0-956d-a53c7a1c1c26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18e7891a-c5bc-4a56-8cf3-5141be55e0d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffd80a56-403e-410f-8b4b-48d5ad069f8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf5533a-7bdd-42f5-8447-a5f8d736afeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4215560f-47c1-4841-89ef-9539496eedaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b9dd75-8d3b-4c3b-8d4d-943239929d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d20406f9-9e30-4cc0-9975-43e27c5bc7cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a072cb29-0e34-49b3-aff1-3e4245ad039c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "965e619f-a486-4843-939e-844a2c3d75c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fded97e3-54e5-4c5a-847b-483898295287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f57a30-6925-4947-a3c7-8fbb8f569d75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1630d139-fab7-45f3-96ce-f7a0d3a826f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "805e64c2-8127-48e0-9c6f-354c661f240c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd9e6f7c-4610-4d49-abda-8d66543102a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee312041-8900-470a-8097-3fe8012e48dd"
            }
          }
        ]
      },
      {
        "id": "071925c6-eb65-4d73-85c8-522fb7757208",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ee7adb1e-242c-4967-bb48-0a34b0979cd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dc7300b-c090-433e-8f7f-b20069a63755",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "349d3958-c28a-41aa-8c10-01af9cdc1ce8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869d1a02-86fc-460b-a9f6-a28451741724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff8faf1-6736-4214-bf3a-f0af6fafe91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9752adc-27c3-41db-9597-2a4109479868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17f01dd-3345-4eef-8db4-cc88e177563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aa3c02-1970-4b5f-a188-349644674eb0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eac352-691d-400b-8032-0be5f2635197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e1445e-28e5-4ba7-b91d-7e5d9b9a55b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fae740-6ee8-4ff4-b00f-05b991fea22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ad6200-8fab-4ce3-b892-2061a166e7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa88c66-0ba4-4c3c-8b63-d7e0b16236f8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60be9a1-2208-4fb7-8ce3-a8eea19876d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a1567-f540-457c-b20a-f9f05fe8d949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19d157e-1fda-4600-a50d-f6199f30d9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a574e68-5f4d-4ea7-8252-c4198626a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b2fd6-de41-4808-9e06-96901dcad34f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047416ea-4ba0-4aa1-93b7-15805f03aac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52163532-1c98-453f-ba1b-b38fc03ac290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3a977b-68ef-4865-9784-b6c10d9e91e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ac2e9a-a69c-4c44-920c-724d89c4c36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057b1c32-5886-4b58-84a2-4aad36addb1c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52217256-281c-456d-9e37-56c61824375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53adc14b-2f86-47db-9974-237663d0a77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cbf7f2-283f-418d-9431-f0faeafdb678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ba69fe-a37b-459c-bb6a-a1cecaf5836c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecb0c48-32b2-4c91-9cca-8ce95fbdf27a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3df2591-f281-4ca6-b6bf-a5e62a7b70f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ac0202-e82c-4b32-bf7e-3110c3f01a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e38cf46-bfce-4040-a614-4ade9d36132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1187f16-6f4d-409a-a0f0-b5c86a575bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726803dd-388b-4d8b-aae1-ecd54b7f10ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c501919c-146c-4c39-9393-4c339b3c6ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6b7fb5-997f-4360-9321-96fdfb51084e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e18e52e-7d83-4144-bca2-95d5b149cf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b0a1b5-bf36-430c-a41e-9445f4818c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc4c6d9-af83-4712-9277-c9c6c5f155d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bf5b32-7839-45b7-b300-384ec4388162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ab7b87-89c8-49ab-b28d-905cd890a9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53562d1c-812c-4033-9807-4bc6fab81723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "884d7df1-6f67-48cd-89a6-a4f58a1b91bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc71198-75e6-4072-8efc-70fd399ce1bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2587842-d962-4fb2-aba5-fabac62e35d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8326db1-c637-4c50-b282-61ea4608baaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23845858-66bf-4487-9b28-262176aaa32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1d444b-7ca0-4a04-bd41-6777303ea09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f683713-6877-4f77-be12-757c7a2eef94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e27c4c5-7fad-469f-b505-cdb35b94c405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5af101-7f1b-416b-9253-30e315006d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4e6dd1-4956-4172-8325-24264917a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28cf8b37-48e2-4cba-8c04-d39f75427c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bb0662-dd66-43ad-b254-e9edac4b87c0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a22784-0d02-4bba-9ba6-292d9debcf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e654062-a2d3-4763-8988-861850939046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f65eb2-9a89-4780-81fb-9216635c98b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f67f31-7fcc-46c6-a659-dde75434afa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355c16ef-875e-4183-ae72-32aa72055db0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef155adb-3a3d-425d-a94a-a77be4d6bd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c35aca-88ba-4503-9de2-8b87d92913d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054b59dc-1279-48b8-9506-47a5ee46e644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "731ca4cc-a932-43c6-9172-633c4506eb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3454a77-68e3-4aa7-8654-6fbbe0d07218",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03468dc-ecee-499b-b533-9b17440227a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb06df58-578b-41b8-86e8-7a22deb5c714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0695251d-5250-4ca1-ac67-911da8b3186f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3d6bac-e876-4f0f-b3d0-c865df7b0a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d9020e-ac94-4503-a0af-b34a6ac60636",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e325f4ef-4010-45a0-a165-8065365d1d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140ca850-2d3e-4254-8586-86a70727a508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a994d170-f1fb-44b9-ba30-ec8d63c87841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aef9101-75dd-4f09-b94f-f7eff071cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95aad13-e3c0-4d33-914c-1b434321d996",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6794c09-13d3-455f-8e86-682f3b22ddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4be70-f815-49b8-a209-0bce890747c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c544f0a4-e48f-465b-8205-643c87bb4fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c25db6a-e662-4184-bcbc-dca484193019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c719d263-864a-4127-9eae-fd1c7a02d661",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa41db-2177-40a5-bb93-0fe3cd9196f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b281de74-7312-46f6-a598-c1621f20f14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b97679-daa2-443c-97ef-26e0530d3d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "244fe848-2b51-4d5b-b6c9-a771cc2e7440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9db6c91-44dc-49be-82e0-01f718885519",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25a8152-06e6-491f-9272-3a369e35bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7840a39-d87b-4d04-bd73-a52bf31e03e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687fb456-3c0c-4152-9e62-9ce1f5569047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a59773-8956-436d-8d5d-4f1f510e498a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a264da-fd16-4d44-aa17-6b773320f28b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674809fa-7a8b-4d54-8cbb-3413cf677cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47b7ca5-06e7-431c-b2a6-02173265d035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19990eb6-503d-413c-ae09-385cd923227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d7889b-91f4-45cd-bb75-fe26236591e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ac44e2-6f89-49f7-a41f-3202ae2f6f42",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bee0c2-d829-4804-b99d-84d5dc45d728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a312a73a-2286-48fb-a8f5-2b4fe47675f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c19a63-0853-41e3-933b-a9bcdec071b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7026494f-dc40-4752-b679-531f760e64bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c271ba8d-c3a6-453f-bceb-64558414f1eb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78d3621-4980-4c43-ab82-111cc6613dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cb0fbb-bc93-49ff-afb7-8155c5e14aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5c4cea-a137-4347-98a1-1ead4d4f3cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b59c4d4-4a00-40b2-a46d-efc872e7181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a82d68-950f-4a61-b9b0-fd0f5a9da80d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041931f7-0445-4816-baae-c02d27c174f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78905496-0b7a-4de4-bda9-10c61cd9fa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbba2aa-0703-46ae-bc69-1426dfa489d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9813b81-e946-4b27-84cc-74e7dd931846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9c4cd6-926d-4a38-bd90-5d3dc02e2840",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aa9bf6-9bcb-49d6-8ae1-0eb1431b9564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3b7934-8afd-4f17-9800-6e250bdca5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebce2d06-e7cb-4f09-8f1b-9c0dad83ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6166a83c-e0e6-4363-b2f0-d812229ba878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51102ecc-bd71-4de5-a6e7-7ae2c820abb2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4edcab-9f00-46f8-94ea-145a23b13167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0c3bbc-dc61-4f11-aa4d-b3eee3d4e737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff858b4-0ae7-4837-8bd8-16f2146244ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f44a72-5ef2-4e66-8afd-95e6229d93a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b410d2-6c18-4707-a1bc-3d067df56d02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f33a9e2-c889-4dd7-a725-ad004e7b0598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39b22b5-c0b4-4680-9f9a-272d93a120b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9b26d1-5d14-4c5b-bf45-e9e0e6dee981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9c6c34-b108-43bb-8872-8ee8a648078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad6600f-3443-489f-a07f-fcd80e9fb274",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3365ae3a-d328-471e-8a59-f537a2206650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21d88a1-d404-470c-b8b7-855171b55c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3668bfae-3080-4600-84c2-a12f30643ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6605df-e0ea-43f3-b2b7-250b78a70ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeccdd5-463e-4abc-95ae-2c622dcb38d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112268e-48cf-4202-baee-ca9d5f18947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2c7a5d-6e41-4f2f-bf2b-31d8eab63c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66557c4e-460c-48fa-81ff-7070e5dece67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e055af-d12d-4185-8834-c230eb979249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8942db6-7f88-471a-abb2-9e96c942313a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655ef65a-7430-496a-b037-54d3ca0e1298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936edba2-c7a6-448e-832c-de051da2c147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca018eb-00c1-4bbe-ade3-413778c47969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a590f711-3eff-4e29-b0c1-357e31d336e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c8eb0-6dda-4e97-8e8e-26507bbf2659",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b41329-81df-4b4a-9c44-79356777c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd99747e-6a9c-4720-bd0d-6dfbfc0419eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f4c14e-f2c0-4f57-bfc9-f1aeccb7ff46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250e6663-6564-476b-af53-55534ebd4631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca2cdf6-f01c-4161-baba-c05df5d5fb95",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02d758-455e-4425-84b0-47fc4dd39627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78454d0e-26f8-453a-9598-f524334c027a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c3f5c2-20b8-487f-bac6-7a470e685271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b11a2f-6acd-4eb9-83ce-d99943c80b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124457a5-6773-4df1-8297-f29c1b8d17de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb7f334-86b0-4bb5-afe6-a60f77c03fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7c5ddc-4ef8-423f-8115-b009ede2a83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587d5f6b-d55c-4e4d-8517-ba7b569670d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeee9a55-30e2-4f73-ae52-ddba05a9ac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdcb1d6-1bbe-4c32-8756-801f7d681b5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65af6e8-be01-4c9e-9f0b-36bba3ab9e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdc9208-1212-4d8c-8a22-82d1a1ef074c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9913797b-8221-4a12-85c1-d2e042f7e964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048e2cc5-2344-4f57-aa2b-ed7fc7971779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba153a-8eb8-481f-a3ae-d931037dd2d4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c23b6bd-7f57-4f6e-a57f-1c5afc4346cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8900f44d-496c-4366-a402-6f5f5acbfee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0eedf0-f6e5-49cb-acbd-2bfd93ca6146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8503d2d-c8f2-4a89-b62f-fb7760fd7b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de82e05-d25f-47cf-bbc6-6f2ae75d62d5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab3ca1-3c24-4e3c-849d-93619a228a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f2dd1-f996-46cd-8f7d-c4658f8e6dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb94cf6-b3b1-47f5-93f9-f08597684bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c8a388-9b73-48a2-b0af-67ac5eed9266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f57d16-442b-4bd4-a782-b705ad011163",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afbd3ed-592c-42b5-be97-ea7f69f5bd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a637b19-a327-4c82-9255-2a0fcb7f572f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c11b367-08dd-4fd2-acfa-fd4348b4c6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96c27fc-7357-409f-a54d-6cf549a9cf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc5227-45b4-4eb5-8a6d-ed7dfc20fed7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0e7e1e-c875-4033-bc27-a98332f43e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa70b83f-e2c5-43fe-981f-a73ff9d71491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51308d3-c187-4b89-bd12-0a82fffbfdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2568ad14-6e58-4a68-90d1-fa7a73423d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc1fade-0256-4ca5-9c32-bdac9adab5b7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2a898-ebbc-48f2-8fa0-665f4ca8b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268de1eb-fcd4-413d-a53e-b36aebd42f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88b6082-6947-442d-ab65-50d0daf0bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52154c4a-63ca-402d-be10-ccccbf17cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1d3af2-dcf2-404e-9e73-0327befb55eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7be742f-333e-4f90-9ddb-16371dbe4889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e59943-7643-4103-bb7f-cf15ee80fe4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6092a247-fc55-4615-aada-65baf27e8542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc249082-6664-4990-aff7-eabea26ad7d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "194f1ac2-97fb-4b68-b742-d34ac4f2c560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b09004a-4a5c-4097-aab5-186c24395812",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aedfa00-ba99-471e-8c07-225fedd42a3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4e3a2e-890f-40b7-90cc-981478dacf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35bb163-ac29-42a2-b1d1-31e5fad2d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b4cfa36-22a3-41ec-83bc-389bf6708dd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5605c7b2-eafa-439a-881d-80725dd8c87c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e323121e-095d-46f9-bee0-c7f0fdbb6409"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da446877-b644-4c97-8862-9b3c6351610c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e1b7f7-be32-4729-80ba-f823cf34e1a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3a0d60-d890-4820-9233-477cb79d126a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "295b2a0d-31aa-42f9-9c8e-5e0ccdd511c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3711c913-cf97-4457-83b0-f999570306d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67828029-7a60-4b2c-9e2c-e80eb32f2ea1"
            }
          }
        ]
      },
      {
        "id": "3bdea858-01c1-478e-9545-04401f2ce9de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8dc71d31-2d27-4a96-884e-bd6fbcfc98e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3198b90c-266e-4487-9b46-2bef9610879e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64ce2cbc-0a96-4038-b7c1-655c8156cf6d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a410e58b-20cd-442c-a3b3-8567817b65d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fe90d5-5344-4bba-8936-a0bf53a260a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da59df8d-1e2c-42d6-a7f5-2ec368d75fd1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c97656-16d6-4c30-b6df-be11a639c5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b74e1f6-8f17-4a4d-b501-4407b85fa2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67e073f-a052-4034-9c01-5f6d8e14c637",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1e7d4-ac78-488b-8ed3-47141407ea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b255c075-783c-4613-bbb3-34e8f5dc1128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36e5b9-7fcf-40f4-9454-760d2f75320a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c700bc-eb58-4217-abfb-250267c583d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9923e7-1ffd-4a6e-8317-65a74b079f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434de1f7-e34c-4eeb-9394-28b8cf13748e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c379ed98-d00b-4228-b49d-d3523e05c51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd79e1-e1cc-404c-9c9d-9012fa5d87ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc177b95-b2ff-4e06-837f-440a4ed3530c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05875b33-5079-4d01-b013-5755515055d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5d05c5-b98b-4fe4-93b0-7f43dd6de6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa8e93c-7d0b-4480-a5bb-728c8c37b8e2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f242777-1a26-4188-8e97-5c7daf986600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7ec8d0-7420-4bb7-b70c-1af16a234377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4520d6-d74f-4118-ad4d-30cdda8bf38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a2b6ad-fde1-4976-a70b-b9a1de02d79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957aff7f-304f-40d7-8bbf-4d2a8f136dee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5bc155-dda1-4c75-a4ef-87631acba938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8fb31e-0042-4219-a2d4-0af9be692f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec0b711-b975-4294-ab6a-44c1c66755e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a81706d-0327-4868-b8d5-499ab78079a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5032b9ab-dc6c-40c7-98de-7bfe721e8084",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7fc21a-b105-410f-95c2-5127664e7ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e654ac68-b1a8-4d47-b8aa-dea7e91f81da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585bb60-7a9a-435b-9f00-58d68a2a6f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce7994e-2c55-41b3-b0b3-1343b1bfd3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66339cc-f4f3-4e38-87cf-6bfaa33c66c3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b7856-c519-447b-9f9e-3813f8f27d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09241d22-af58-4865-b2de-2faaf84097f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8192c769-f242-45e9-a652-474d4b08b064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a7012e-c9ce-4a88-a8d0-aefb81c0233a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa30f6da-4e10-417e-8e41-be620af86df4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc8e977-ba73-4deb-a3cd-6a6df603261a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bf012d-00c9-44ea-a119-81245499fefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64029906-063a-4b0d-a398-2e0310a3bf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5259a000-347e-4377-b270-20c7918107d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eeca55-c657-45e8-b5fb-4e2bed7e31f0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5ee10c-5d6d-4cc7-8a3b-ec71f276bce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbb2bb1-d097-4384-a03a-55f894cf7cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e7eb58-019d-418f-9e58-63b286932279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e0dbcd-3d3f-4b86-82b7-b0d3d23bebfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fd2c72-6679-4064-a636-fd141e6dabe0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5302c2-cef2-4c8d-a576-f6afceeabae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de836f6-1b02-46fe-bf91-6756dfc912b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67a351a-c274-410c-afc9-ed65adf8c9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d3c85-5aea-4f87-b893-a8569b6d21ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff679ad5-6829-45aa-8d9a-81d13e47be13",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4602c248-9721-414c-a5bf-8142c041c7b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346b6b36-87cf-4c81-80cc-4cb253bab7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bdff82-4044-4223-a06d-f17ea151f342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20baff60-c11c-4074-bdef-1041c68e2ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08e20fa-36fd-4609-b752-7960ea87c79c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9346fc58-e178-4a3b-92dd-8337edd9147f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c6f212-40a4-4cfa-9794-54eef4db3147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a70c37-d7a8-4a1e-a224-97030613ce46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41f4556-c165-4e83-9c52-0e82796db520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b253176e-e4cb-471f-a95a-5386af8767f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e5f620-406a-4f63-9c85-e7255a1e6767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d4b2b9-62ef-422d-be67-2813614f77af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b40a366-bd19-4786-8f21-fa56848e156a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf4b375-02cd-46ac-822d-46a9ad0a5555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ea61df-375c-4c39-b909-746cb29d6df0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb7963-8863-4937-833a-0405ef23cec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815fdd70-27de-4ad5-999f-56ab1415f355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b49f51-f0c4-4763-bc8a-9a1cb83a31f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09902fb4-7d63-43bb-b9fb-9a0e7a653561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd4e2b8-0123-4746-aa9f-bb72f03fcc68",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d549d0f-2718-428c-956e-7e7cdce4ae35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a803a9-3a95-4b38-94d3-9bb0c6c8048c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e381d724-4fe0-4cc2-80d3-93822011715e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea7a132-c1b5-421c-93d4-95a00bca3851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2ea5eb-04d4-48a3-8619-ab10276d63bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42e42d3-7e0d-4dd5-8c35-f7c74bf88fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382d8d71-88cc-458d-a7d4-373f69d5f44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8db3f4-b53b-4193-a317-e5e2d5cc53ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3604219-f3ae-4f2c-9841-33d8f8315f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6a4b7-0195-44cb-bc57-932c63c9cd9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56985a2-9213-4f62-af40-777ff0fc56dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b200ce7-ce03-45b6-81ec-2129a2866b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e80679-aa36-40ba-a32c-6a9ac6055ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c005a3-defe-430c-be96-8160defc3108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53fc146-1101-4f4e-80b5-f04bd267a9d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb09c97-652d-4874-8a2b-df98a081a7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3908f37-bcf2-4768-b0f6-cb57b34a5509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed62a2c-3c6f-4144-8550-2562d35f107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8bbda9-46e7-4804-93b9-521512bc94c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2177a07-9147-420c-a3df-4bf229530630",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e1ba4b-7677-458e-8563-577acc0bc00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c093936e-3c63-46ac-bc98-44748791e53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ca8af-1f48-4617-b799-c8de67cebf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e52fb71-649e-42b5-95b4-c85683711a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642392f4-f66d-4753-9fbb-7f921f730910",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b8aa26-11e7-4594-8848-2f7c109e8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8339610f-b421-4fb9-a3ab-18fa74f332aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39213dea-aff4-4778-946b-48481a1382cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210127e-123f-41e3-93e8-c4edcf3e3bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cde627-ae9b-4512-912b-23c4e6fb303f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51fe081-83e7-4314-8370-10cff7d9c707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e2c61d-5d3b-436e-a669-5aada97efb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2635ba-61ad-456f-9de4-b3d4063c5fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6100a2-e7c2-48db-937e-4fa533bf9a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979642aa-7a88-42fb-a2c6-f74dd952de38",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0c989-7aad-49d1-8555-f7e8e6077a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8110b36-a2ff-48a2-87d7-9fc9afaa1d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692a8a5e-a73d-4ba8-9ba5-ecc25e530f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc06687-ec11-41fe-9af6-d41074902464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6077863-23d8-472b-b7e0-697d9d820f8b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a546fb3-444b-433b-9a96-5239e33ef4ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7712c95-d13d-4cfa-9d89-7dfb969322b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97c908e-f5f3-4eca-a108-8172295d3f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10509275-8132-4668-91a0-cf65ffb513c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fbdb64-6304-4dd4-ba38-4f1ef7012fd4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca853ea4-4548-432b-81b7-f66d9a6f1e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0034c2ef-0664-4c71-9b1b-162c7f040ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952ce87f-8709-4110-9228-8f6f2ef54a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dccaa56-1484-482c-adb9-dab105c968ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1244f19-ab49-43e5-b4fa-2590468e66da",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc7fa7-8db2-463a-ae37-7f0e9bdabd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d760719-e1bb-4fb4-a2ff-0ccd1c29d888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31473dfc-471f-4fff-b76e-d8a67acd8e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5910b4-84f2-464b-a6cd-68e2e412cba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe651c7-15ec-4a29-bdde-2f070a70c765",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb7849b-ed80-408a-9902-5a191c659835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84580bf5-5485-4888-acc5-dcf1e332b44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb4167-aeec-4db2-bc0a-04191a32dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cea52d4-8e73-43cf-99b1-fed6f6c7fceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0a40d-6c1c-4de3-a0b4-c94883f6abe5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15731b04-d188-4201-88b9-42e088f1ec11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e4001d-d80b-49fe-9fe3-97fecd03058f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec5fdc6-7c75-40c4-9559-3e2b0a202968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37786965-324a-4cc4-853e-1362f5d8e9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec543c6-26e2-4a92-ba5b-bde537ffacc2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bba4c2-0cda-4253-877a-d925ad6de0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008a1a5e-188f-4b49-9802-8fd1de7a978e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e294b37-b637-4545-b900-03d3c4078a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babad11f-e572-4306-83d3-6243b978466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ec8e90-1dd8-4f6f-bddc-bdfbe2748548",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79735448-499c-4615-86c5-55a5f53f16f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c209c5d-1686-4aec-8e5c-5436cd340826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3546f95-2bb9-4140-87de-58954ecd789f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca76d3b-d3e0-4583-8e92-a19d35f239af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f364c04-6cde-4b48-8d42-e7b11ba787ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3730195-6000-4654-8723-fcd4739922ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5b77d1-bdd9-41cc-bbb6-cf13fee85296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf4c851-e063-42d6-955b-90bdc90572a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d669f9e-4c58-4251-981f-400a899b9a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f0a14c-66f8-48a0-89c5-364471a80ff7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee57f0b4-f61c-49af-82d1-f148de861e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d236ac3e-c011-474c-abb1-e63e90a5b555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7902a83-577b-40af-9467-4963c8215631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026cf671-43d8-44c7-9fc7-787a8a3b24a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e39eb9a-237f-428b-afd4-18cfc1b34a47",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd88ff9-9389-49c4-a7cc-956846a5e899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be9c040-faa7-44d3-862b-9c77b6dad47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59497c5-39a8-493b-921b-2f0e50fcf002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab61138-c4a5-45f7-a935-cc84ff8f2a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bea6e0c-d38f-4adb-b72b-32a8bd02fdd9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69c87a4-d38a-4850-bf65-1dc6dec2e0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5680c778-41f5-4368-9c0a-758b8a961bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7abb282-c3c2-4ea2-9e7a-4f99ced52f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b35073-16fa-40ad-8706-d8ade2ee7433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dbdd7a-5b90-4f9d-b213-9f2823b497ed",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc43d1-5d96-4566-8990-8d680e254f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5d7679-c4ee-4037-bb26-757421932167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0822c308-79d3-440b-b671-9272669844eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343e5e85-d8d8-4bbb-a15a-a9b12c2dc444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb476c35-9390-4060-bdd7-3bf89a064a8d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb4e81-aa57-4fcc-890f-b1078aa58cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7599a4be-3953-41e4-b09f-d0a61f658ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f71ba-56c5-40fb-823e-32305b5de724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79cb38-81e5-4349-980a-d6b64c081249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e202d963-3113-45b6-bc18-b6c266c1c619",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ea7021-e18f-46e4-a60f-b8da06269889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb875f6-394d-4e57-8ba7-1512d5fac7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd988ec-e50e-482d-9b85-1097909b21f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020dae30-0051-4e40-9d1c-174a1adc0af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffaac96-fb11-4e2a-bed2-3cb4d28c3eff",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245f522b-8fdb-4a35-90f2-e84f458eeddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18008d78-fed3-46cd-9520-54440b914983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e5e1e-a044-4c37-9bac-10c713a88d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f06e97-5776-4736-b92f-9572e2ea99dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70881bde-8a09-4672-87aa-ecb248273ff7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d834ee86-52a5-472c-9c36-7ebfbd02deea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef205c5-3944-4473-a2ca-6553e886a8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6902b5ef-d9e4-4fd9-a342-ab39d7ab6bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3b7dc3-0771-45cd-8043-69da5be1612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea93cb31-2f67-4acd-985f-cd8f902c3d0a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e52f79-49ca-4c15-9258-4165ff71f6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05979f5d-c469-467f-bd57-1aa8146b0345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d9939-f30f-4875-9a06-1a38819e9894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a1deb5-4785-45fa-a2ba-9c7caab35033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ef666-e0e0-4320-8984-88b5277d0989",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b5cfcc-207a-4207-84b7-8d137bd0aec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc6dc72-e56f-43b3-9cec-986562e392e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8104d42-fbde-4be4-b799-13a990008c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae6535-909c-46f8-bb5f-3a933bd2b054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1344f6a-efc4-4da5-9ab0-b56be8da2e4b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51baec79-7d75-4a81-a2f9-9af794768588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a187c7-efa6-43a0-a625-c8455f11c22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7a075d-cc44-4869-bd94-86c09d14d9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f827845-5d38-457d-b2f8-41708b70cb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1415829-5178-4c78-9fda-266f12eaf416",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d1a0b-278e-4465-a190-810cc0afbd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737e01f2-1f3f-43de-9855-f3e59e05d4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6887e9cf-67fd-4af8-aee6-3ff96aa415e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e092446c-a73d-4c3a-875f-b2df2b82577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1266e1a8-bb96-4e69-bec5-1e0c72cf40ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb0f14-c542-43ea-b66e-005678a1563d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05613a7b-b88f-4c31-9019-58535f858013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21eaaf8-535e-4745-b4b6-ec0b5f59c9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d18a4c-1815-4058-a6ab-df5594885a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcc75d4-3501-48bd-b082-3afe27d7b0ab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0149a0e1-413b-462c-8f12-1e9c01f2694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4bdf69-c30b-450e-9244-d058d1463680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588d1e6a-2689-4ec0-aa3d-c6e81d646f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9f63fd-c217-45f5-9e7c-8c0aea50f945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd95330-281b-4c91-9977-2b7fee143395",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3d492b-475c-424c-98fa-d7a6de786828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f67239-0ad9-459c-9ad3-f418f6c44d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf0e96a-3b26-4924-aedd-d6a2acb7c041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c925e276-3ce2-47ef-9bd9-91596db20ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22339d2a-e6a2-4303-9330-baf4538ae28d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c781b277-ec1c-4726-b745-5cd2f10e981e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44896ca8-ff5b-44de-971e-e90ed6f75b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d04f08-ab1e-4ec9-a038-0e89d30772da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffb4164-456e-46eb-8a18-0c9bce388978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa00cdc7-5376-4290-acce-581446437f0e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bdb99f-2406-4939-91c0-3382a8fb2326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e86b68e-8530-41f6-95a3-948fb9a65a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc50c02-9ea1-4376-a892-0416c4901fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7386089d-7de5-434b-bcf6-c6e34afbb898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa1964c-d330-4aaa-b80b-01c393727dcc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14f3770-5e36-4f6a-b914-ce5992c62e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecfa828-e4e7-4108-aa25-61ad0d0e561a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d9aa3e-37b6-4727-9d8a-4cce0dbd444b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80cfd21-dcbc-410b-b31a-fbb2a8df0e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b3501f-3462-40d1-b6f2-b99aaef1854e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87da6012-1e9a-40c2-8d24-57680ec5e3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a75dc7-db94-49f7-b6f4-30f1507fbc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b84ce1d-623b-4cec-b154-c50590ca4219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1949a8a2-869d-44a0-8765-8d07d42a95d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f9a7e3-d1e1-4d8a-aa88-b222494d8b4e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66be96e-ccaf-40d3-844f-c106f4b52f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f74fc3-8dbc-48b5-ab30-18228bbfd244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed64a490-7964-40e5-8414-035706f6a9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a52a6f-b888-48fb-97db-3661ccbef472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e0b005-460e-4663-bee6-5ce006f7c502",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759c0b32-6279-44fc-8186-e8d914c1bc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c0e8d2-0c92-4fd3-88c0-615d2cfab7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94e1afa-1374-49e0-b5be-4850ec70ae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170d1e14-4f9c-4bdc-8006-96ee983a846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0b7c51-3858-4612-9501-dd3c7acfc05c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5846a9f-84bb-4592-8185-3144a45c3d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d0ee35-658f-4992-a8fd-7c855ebbd5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267aecaf-a02e-4de4-ac96-5119414c693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ad762f-b96f-4ce6-8ddd-3776aa9cfef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b03ae0-73bd-4829-9b60-e0e967a45380",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f47da65-f906-462d-96f3-57cdad0930f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097dcf54-e60a-416b-af5a-82848b15b086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469392e8-f11c-4704-a403-104ec51a94ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7652e2-4094-4daf-8f9d-a55969492483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91d2c8d-7e79-4f34-8179-f092b1ce76a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6076078-099f-456f-b433-3978de7286ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effcfc47-5f75-47bb-8a98-2e0337766499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1a961-b01a-4389-93e1-01d6e70444cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f89e90-7388-4a89-8a6e-003f0e0f8b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85c23d3-f522-42fb-bf86-8e182f4d1dbc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c08ed1-579f-4f57-b9a9-c289c9d49f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d92c0f-30e4-4844-8f7d-600d9d2e4a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd98bdc-6439-4222-aa93-109bb5bace3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe6cccb-dd7a-4c2f-8cfd-74b41280e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3032312-ce85-4698-b62d-7335f59f0b98",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b5e09b-fab0-4e38-91e3-c76627269449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908d0822-468a-43e3-b427-c89b17676516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7749cbe8-96e2-418f-b073-844cb1ec9159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5c9554-2c92-4e98-b78c-a00dff9e40ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f06466a-3ab5-4556-9e39-6e46c76fc7fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698310db-9cb8-4e95-b3b5-dc98a191d257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e12f168-0b59-4de5-9ab7-1d913568a29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2010154-fcf2-42fc-b6b0-4fa2030eb270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1f5f68-8894-4592-bf28-a75fdebfd341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04850d76-8c8d-4e98-a8ef-ef901e95bb1d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ef5dc9-3851-4aa2-838a-0de223fe76b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25883cc-83a3-403f-aff6-eaaf417f6f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b303a5a3-d3dd-4daf-8d6f-dec9c078782b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1325e4b-7aef-463c-980f-7752f718836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f67a6d-607b-43ba-9e20-a930a81341c7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64414487-5cca-4a86-8b6e-1f0ce381b94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b05172-df4e-4d02-866a-533739cb60b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc79f92-ac5f-4db4-b819-840ab165cf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1182f8d2-d27e-4c08-9d47-6d5e3b40cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04d0590-5509-4e9b-8c46-a33c2f596289",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cbaf37-ba1c-422a-8d79-62b8ea69397f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dea7f8-efa5-45ae-bd99-c2a92e0d07bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e4f71a-5e1c-4baf-a8f8-b6596e7e93d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a28ce8f-7fd8-4d49-b09e-bc9a354e99c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25a03a4-524d-4ae5-8fc9-7d96a8611bc3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33bddab-71eb-4a57-b502-e4d5f5306e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad9e51e-88b7-4135-a70f-7de48550fc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea904738-9e28-44fe-af2c-a2bebd234073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d92f7-21dd-4428-833a-1ae30c971a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effac7d6-b1f5-45b5-99da-dc6e0071a772",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7ef608-c522-455c-bd90-2f5011253bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "094970dc-fac6-4e1b-b844-7748fe575cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec42a7b2-0e87-4a24-b57c-41edab331699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dbe23c-32dd-4ddb-ad76-a45d26e22b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf578fa-9d3a-48d3-80b4-600a2cb76c6d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf4e8e-61bd-4df1-95b0-4efc700ca5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7477fc62-73c1-4142-be44-c9f2badff808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0658b17-f700-4ad6-97e2-066a2b50fb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f055aadd-65b8-440b-97ce-97a23e82ee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc4ca2-bdd6-4d1d-9aba-05c45fe49bf3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a03acdb-7cff-4e46-807e-00fa1f8dfda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d398e137-ec44-42c3-9d5f-75b2f0ad8d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c67a311-a404-430e-98d5-3ddc9c22946d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e91df1c-a06e-4b20-959c-c681dbe4d77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0060d86-798f-41a7-8f3f-0dfd274ed85f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f369e15-5aa7-4de0-accb-6f8a5c5be53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3dad57-2c1d-491d-89bf-1903ae7f27bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b3d89c-ff2c-4e24-9c22-f6f939c59843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c2ba79-f826-4017-bd37-04aa3730b78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bda44d-00a6-4c40-a9a0-b519cdc8c457",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f2f317-b6d7-4f82-a6a8-9f666dcbd3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f700ed12-8bb8-4b8a-aa1d-31b360eefb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e4c00f-2864-4d28-ad82-b1edb8f36ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a574c1c-e9a0-43df-a709-d8f00aeabf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d67f129-674b-4560-93aa-99edefeb1d85",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b40b8b-5ea6-407d-980f-8f8a1a77c730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bac16b-470a-4e0a-aade-bd90394cbc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceede597-508b-4bba-8ab1-038436ea987c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81c2c0a-df04-4501-9095-85c977edf530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ad5cd4-0b5b-4b23-9e40-7cbb71b6bac3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd20372-3db3-49e2-b43d-44489ac9c4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e294773-4f25-49b1-a1de-749cbae1ba1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01932d-aa45-43c9-a285-f1fd770844aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3fb3e3-0e2b-4551-a517-1e4c7798cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879fb639-50e7-46d0-9de2-9a212cf0fc3c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83547cee-cb1d-4122-9d1d-c4ec4135352d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123c8134-dba9-405e-a72d-edd57d1f99b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49491b29-cdc2-40c3-ab88-bc0ffe8606cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a144e824-2043-4c5f-99ba-fe28c7be4bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187c992a-1d4b-446f-a6e9-74c223f569c5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c307e6ac-9212-4e1c-ac05-6c21e5cef212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74124c09-978d-4200-82f0-fd1c79006d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3bb7a-286a-4de9-bf77-8dc9244b33d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd4e45e-3797-4dde-8926-9ae226673c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bf9b90-59a4-4689-a779-a91fac9fa224",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadaa801-7ff3-4878-8f06-4e45a240b168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383652d3-3560-4ac7-866f-096e4871184b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0001b76-6468-4a8b-8563-e95d2387680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c88acb-be7b-4c2a-9ec5-b9ae7325869c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8891317-1ca0-497d-981f-39bbe44800a9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c48254-467b-4678-b614-1139b95f1bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5206f2f9-cae3-4503-bfb5-7a744b6b7850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80279c03-1227-4103-ad85-5982a9ea6029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51188bde-f0d6-4be4-ad5f-f15496348057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a31018-b3c7-4248-9c2b-8761fce835d2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a86fb8-b2c4-486f-b552-28828e293efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a813fd0-aa14-46f9-bad4-17e5e573aae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33259f43-a4d1-453e-90f5-9d201bb1b470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e90e306-e4d4-4d1b-acfa-1007ed7762cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3593a4-bc6f-4c62-b11b-982e4389d9a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c8f3b6-cdfd-4100-b609-d44f354b7a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e8247d-80ca-4b9f-8d3d-074eb427b2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ffce4e-a432-42ce-baec-a523a03b5255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e63ab5-9c0d-4318-9854-f12b5f81ca74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb2d081-d67d-4616-9cb2-89c438633c1c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0a5cfc-ef47-46c7-a511-59456b1aca03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d84b99c-3903-48f3-a8de-15cc54bf0341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0753e12c-773f-4834-97e5-5fc5da3a551e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859434d-7dd1-42ab-81b4-ced54ced0fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b299f774-6721-4c50-b00a-e1ed9759ac5e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d7b358-c70a-4bff-94cb-271838593979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91716c73-a44c-4cec-ace3-378bbd185cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be108e-fdec-424c-b0aa-4e6e282db8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd60d9a-08b2-421f-8e78-7a0c60f2fc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9573812-48bd-42d6-a077-909fc5e0979d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc616c-acac-46e2-b336-809a4dc473f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c88d143-e436-4305-a324-968563c9e1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f3a29-84d4-4b5b-a351-77d9e76eb0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d04e14-78b9-49b9-8c9b-d363185979e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fd1de2-48fc-4e9a-b641-8fe7389f7e2f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdcec7-447c-491a-af8e-d2cf99458660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec562914-a13d-47ca-90f0-a2eee8835dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09a4304-8bee-4123-9ca0-a2fde93b45f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba39283-2a1b-4ba8-b66e-7f4bb2a7a279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1b1069-7e47-4704-914f-6bccd40d59b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab4ed85-ad9e-4866-9b39-17b47cfc4208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd73428-c5a3-404c-a275-9e5e9aaff415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b387bb6a-c63c-40fb-9d4e-57d3c696c617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abee85f-fa1a-457d-a2d4-dd94d7af3ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf1779-57e7-4971-a26c-0e24bc43d391",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef613aa3-abae-4fca-8399-e584e2e8ea24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e99842c-ace4-41a9-b022-75a4b1bdf9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643543a0-90e4-4c7d-805c-b53f5f5731b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5304e729-c244-4de2-890a-329fb0d02df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd2e7c1-b515-429d-bf74-d92ad619f51f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b93ea8-fb26-4af0-8f3a-2ac23109484f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75900b6e-e1e8-4120-9eae-ec274af7e2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4557ac6-993d-40ae-b125-84417f1c261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c1701e-ae2d-4f11-ae8e-e4e2f75bf88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fb7d23-e601-42e3-81b8-9d0aeb94cefd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bd2c8f-67fc-4431-b2b5-cd90e7afd549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091bdce5-228d-4575-af45-3a99f0178514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4d8c2-6022-4f07-a605-f4307681a587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeeea457-196d-4da3-813e-bd050fec4f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064d0519-4fca-4f08-a340-5a8412d14a8a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064dff4f-c801-4e93-a435-e4320737d068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d7db48-9bfa-4b40-a72b-3ed740899a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff73f1-c589-4427-9a5b-3ea5d43ab26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2a3732-3ba7-4a9a-9c57-2f63c06d08eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65fda75-b554-44ec-8888-48d16f5da531",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a664c-b6d3-4abe-bad5-1d40b9c09c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c32d23f-3bb9-477b-83bd-1a5bf68ddec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dd616e-b42b-4cf0-8393-8346448487a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f919e3f-aba0-47c5-aa37-89a88af0bebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89891cba-a6db-4237-92af-d0ed03f1f3f4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1430e53f-415d-41c9-b330-9943425bfba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8093f2e0-f46a-4f06-b8c8-0e2fead9a199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e334d6-c02e-413f-bcf0-2b0f102c26dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15545cd8-d09f-4254-905d-6db0458a710c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad3e3b1-3cc6-4ec9-a873-aa3d0e28b2f3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d881d7-6bae-46b1-8223-a8b423c8b083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d23c200-0e05-4b1e-bf71-b254baa593ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9d0ff0-a435-4127-a6ec-2d0cc060c96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8508ee-1fa4-4b84-9098-31eab6315dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288374bc-5bcf-4fdd-b33a-a30d95cd1e7e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458ee88-d75f-479c-95e4-1ad3212402e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319b7f87-a072-494c-8f95-480e60aae914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69597714-75da-4309-87a1-02b8ae13cb78",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d532575-d0cf-403f-a123-74958f598dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e7dc85-aa0a-4523-9add-0f9eb873a3e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92426714-3329-403f-80b1-b9f1b3443579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd57c2e-0b9c-4a49-9b74-caa954cfae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8e9e05-67f7-44a5-a943-7ee74f759d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb84e1f5-cd5e-4fd9-b433-5702240f10e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af44784e-de2d-4000-985c-840d36a5d14d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2078136c-300a-43fd-b73f-0f4a81f0f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e94c7c-3217-4246-8676-6326a86aef98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e96807-d32e-44d4-8e73-0de8603704f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef12ab6-3c60-4112-922b-c59893977701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89ce70b-3052-42df-a9ef-7c8aabef2957",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c220312e-4042-4791-bbca-899f407f0248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0874b0d2-a58d-4a0e-8e83-a1fb23e172da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e546a1ef-32e0-42f1-abe0-e6e08b896a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa8746c-3a78-40be-9ff8-0d7f8efe7b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82cf7f-acd7-4081-824c-653f454577e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61985c67-ac5c-49ae-88a9-89362fcce3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d6525e-b3eb-467a-89f5-4acb2e48fe9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830d0128-6a01-4e95-bb8a-a7157a0eb09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209bcd07-8da2-4b66-87a5-93a58ae14a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a4e572-1b25-4a55-9ee3-eb964555b5e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f8050-f5bd-40c6-81c1-ac73687aa791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c966dd9e-30fb-40d1-b019-0d155ef7681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c7dde9-490c-4d75-855b-8d459922ccbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b30ea1-7ec2-49ce-a460-e1a2f94c4b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8493dc-a977-42ec-bf0d-bfeeeb72f9e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53542fc-09f3-4fcb-94c6-c56924c301d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45c96e0-d0ac-4797-9748-94d4d5042a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224f8650-7025-4c09-87d0-94205523cb77",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63059edc-10e6-4148-9f18-d7d2b2f9b4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8907d77-b2b3-4684-80dc-64df59364ab8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d8db7-c77d-47d5-a534-415624516827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff32ed85-1584-4b37-983a-4160b8db858e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a513fa-80c4-46a9-98df-fb4afeed1956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1bb37b-2ff6-4f27-8223-3232d5854659"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27c5a765-7eb1-42a5-8eb4-766adcfe5edc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47f696e9-5120-4ccc-8814-3bbd0aeaa77e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5182574-fc86-47b2-8b6c-2ca95e6a68e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d64ac82-06f4-4c1d-8292-13fb922fe4e8"
                    }
                  }
                ]
              },
              {
                "id": "15531018-fc6a-4726-a07e-4b7094bd032f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91993a40-58d0-4550-a7c7-fc5ae2d758a7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8013e549-8ee4-4825-a306-30a2253edbe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "35555a9a-cca5-4265-bd2c-ac7e002925f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297ef254-2bb0-4182-b67a-47da8d6b33d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b910d74-159d-4cee-84f2-73b02c597951"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfe5e37b-f805-47b3-8923-667b1e0bde3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f0f0591-c66e-4913-8518-87ec75ead097"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddce84f9-b88c-4a1d-a068-8f279b71c252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645e56aa-d3d8-47f1-bc01-0ef9dbb8bed7"
                    }
                  }
                ]
              },
              {
                "id": "7e0d4d48-ba4c-4ecb-8355-5cf49d63c7f8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cdfc7323-b5b3-4b28-988e-56863ca3f598",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a921588d-c453-43d7-ab74-5cd9df61c75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06c58c99-0e2b-4554-8efd-79074c07a4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac94731-bfc3-4f4f-a808-87b996773750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c306d87f-23ff-4603-ab86-3cedea7e624c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40b9b16a-cc26-445a-9b23-10adb370d623",
            "name": "Positive Testing",
            "item": [
              {
                "id": "858becd2-2c17-4eea-afb9-fd76c8b38419",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3585c8-7a8f-411a-8c8c-80673e05ac04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "667c4d82-2acb-4f68-add5-7607fd0e19b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "541c5ac9-8e23-4283-9001-810806349750",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55804ce8-68f7-4588-9371-882ec38a250f"
                    }
                  }
                ]
              },
              {
                "id": "d4ba3210-326d-4aac-aa14-7874afbfbd9e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7f00876-781c-467c-a18c-e134a5819def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57b0ec82-f409-4b3e-80d6-26862f95f56d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d202c283-c3f0-482b-882a-13d125ba6289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acb40882-f514-4cf6-aba7-4be2b3036dd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6c657e3-8e5e-4046-8039-309eabb0f61a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4622ce16-f67a-4dd9-a7cd-53416a378e4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "923d4313-679b-44e3-aeea-3d9e93b12fc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "216f9b11-4cde-4f8e-b20e-8e0cba041309"
            }
          }
        ]
      },
      {
        "id": "2373485c-aaf4-42ea-a57b-4166ea3b2c9f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "710b1ea2-f22c-4e97-a6cf-11bb4f669914",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38b98aae-278f-491e-bf52-f05e0f0ce87f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cef9dc1-ff75-448a-9234-c18e0313dbea",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d2ff47-d1ba-4e87-a4cc-20d1428a10ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "55e11182-aec4-4c56-8def-66c16731b9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b283c14c-d731-4504-97d1-514f11e9433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb294081-8323-41fe-a132-94aa8ba42061"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c82cd13e-4dc3-48f6-b640-47a97bcb6376",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80a4cba2-01e6-4380-8ea7-3ce849cc20c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18aeeb3f-412b-4e0d-a4f7-02bfbfae6f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4918da1-d4e2-4526-b89e-000adac0cf64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d90139f4-7b43-4da7-a3d6-399c3cbb37db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27c89e34-d8ff-4200-8dac-d4fae3c12df1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c55a5c8-67a0-415e-9353-54c2e285e0db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60dd9d29-03f3-404f-9a1f-7c0607df26ee"
            }
          }
        ]
      },
      {
        "id": "449fb93b-0f4f-408e-8b08-6669cba7cc29",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6d24ce10-850b-402b-a8c7-4a665c2ff6d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f733d237-dafe-4eb4-895e-61960988a3ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4667e05-2d91-4786-a793-1f1ea75222a1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a0b69-d8ca-47b6-bcc6-9006404b1576",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5937b9b-31da-46a0-bff1-2da4fde3a6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0faa3d-de66-485a-93f0-92e776f4b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f771dd02-a261-457b-8618-9949a2f64c3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f595307-0ce6-41d8-9504-6dbb1f2bfc87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f16e5f8-d798-4159-8bd7-99de5bc0ba8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ef6521b-9668-46fd-a207-7e66825d22c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652e8289-8e01-4887-b9f2-9b4545e54276"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59f3e8f3-15bb-47ce-af05-08342d95702a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a12e131-04a2-4fe0-af5b-5d461be54db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4880decf-58c6-4cba-b1f3-56ba3c050116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93f89aeb-c2e8-4613-b61e-22334ed7e42b"
            }
          }
        ]
      },
      {
        "id": "5e315823-8572-46d5-a973-16ec9c82db84",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "052ea8c1-ab60-45eb-ab85-df749e29e7d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80538ce5-8180-43d5-bcc4-fc5928f717e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f62203df-67d3-4392-9169-7df746c00516",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19920545-2aab-40be-8144-ccd49b20ec3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97c0b8cc-9fed-4aa8-bfd1-a2228c2a2743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa7d18-04e8-44c8-ab18-2307760c4b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ddbf638-715f-4b0a-ab77-339e0c05c308"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ece09c3-5bc9-4e24-89f1-cbfa876a5ff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b815a763-c8ff-4de8-9318-5ff28f0c446c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83f2390d-00da-48d5-a77c-d0c2c9eaf270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6431c43-6cde-4cad-8564-a736735b3f7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15d81b45-2ba5-4ca7-a017-9ffb797a3a2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d4bb55e-0ccb-4d76-afa1-c91502664c0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d283621e-87cb-4857-a452-7b3519235ccd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3d02852-5ad9-4bb2-ac4c-a3295f000e45"
            }
          }
        ]
      },
      {
        "id": "c618ad72-c551-474e-af44-2dae53ec64a3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5489f059-bf40-43a2-8b8a-3ae4cea3ae66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ae19f99-02c1-406a-9553-abd92ef545c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aaaed31c-f2e0-46b6-854f-e363b62e9d77",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf63c1c7-b3ab-42b3-87b3-c0d72c9c4f7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c87a3b6a-7a0e-4fd9-90dd-ab33d55ab96e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 79.11228070175433,
      "responseMin": 4,
      "responseMax": 8537,
      "responseSd": 555.718710894871,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707352429857,
      "completed": 1707352461790
    },
    "executions": [
      {
        "id": "c16a9473-f443-4d23-b2ce-10cff1b0b7ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4b3cda68-076b-4e21-ab93-16b9ef6c9571",
          "httpRequestId": "05380783-b135-461c-89c0-64a928c5724f"
        },
        "item": {
          "id": "c16a9473-f443-4d23-b2ce-10cff1b0b7ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b5e802b0-2298-4714-8ba0-3bfe97c9f637",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "5704d956-fce3-438f-8fd4-92144b3e40d6",
        "cursor": {
          "ref": "4078adab-a342-47cf-9745-4cd758f80b90",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3b737e0-9574-410c-bd45-c36fca2d9c2a"
        },
        "item": {
          "id": "5704d956-fce3-438f-8fd4-92144b3e40d6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6c5797e0-5331-4724-b943-8d220baf0027",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "8c3487b3-e4e2-429f-b0cd-28529fe720c3",
        "cursor": {
          "ref": "72726c88-0a5f-4e58-b421-c65d81d15f97",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0bd7155a-47b6-4d70-b783-8ee281c9b5e2"
        },
        "item": {
          "id": "8c3487b3-e4e2-429f-b0cd-28529fe720c3",
          "name": "did_json"
        },
        "response": {
          "id": "42e9e4a2-78a1-4477-8bdd-fa6c86fa49ba",
          "status": "OK",
          "code": 200,
          "responseTime": 261,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c095ec-08b2-45c2-bd6f-d0b0a9046da5",
        "cursor": {
          "ref": "de9c4334-cf63-4e2b-ae02-710b68918a19",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58aa9499-3018-431f-9d64-fa81841da3da"
        },
        "item": {
          "id": "b7c095ec-08b2-45c2-bd6f-d0b0a9046da5",
          "name": "did:invalid"
        },
        "response": {
          "id": "da38b7b3-d521-4f0b-9b10-cb0ae40c9920",
          "status": "Not Found",
          "code": 404,
          "responseTime": 565,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c095ec-08b2-45c2-bd6f-d0b0a9046da5",
        "cursor": {
          "ref": "de9c4334-cf63-4e2b-ae02-710b68918a19",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58aa9499-3018-431f-9d64-fa81841da3da"
        },
        "item": {
          "id": "b7c095ec-08b2-45c2-bd6f-d0b0a9046da5",
          "name": "did:invalid"
        },
        "response": {
          "id": "da38b7b3-d521-4f0b-9b10-cb0ae40c9920",
          "status": "Not Found",
          "code": 404,
          "responseTime": 565,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b3fa4-302b-4a67-95ad-deaa000728d3",
        "cursor": {
          "ref": "d7c66ce5-1215-4d21-9779-facc87c9266c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c58f8be4-ea2c-4593-adcf-4a99a3916158"
        },
        "item": {
          "id": "ad7b3fa4-302b-4a67-95ad-deaa000728d3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1f5694e2-9ce9-43ad-b505-581149cefd86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c943ff-a965-40c0-9f33-31d63a5f1887",
        "cursor": {
          "ref": "80052548-1079-40aa-a04b-ced4f47f5d79",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c961bb73-89a1-4fca-a7da-106c965ea5ed"
        },
        "item": {
          "id": "74c943ff-a965-40c0-9f33-31d63a5f1887",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "851e5035-d0be-487d-8c82-8466a710a7f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d77ac-c190-4bb7-bbb6-e9b20836e238",
        "cursor": {
          "ref": "2115af12-e587-4e3e-80d7-c9c5a4a917e3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "183055ce-6c7d-4109-9605-3bb98f18bd8f"
        },
        "item": {
          "id": "ff6d77ac-c190-4bb7-bbb6-e9b20836e238",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a4162467-cc90-4c12-9b8d-44343b68c2aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f27613b-88b7-44f2-bb0a-c9c83bd34ef7",
        "cursor": {
          "ref": "a6c83faa-c964-4244-929b-495275b715b7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b9958c4a-7a48-49ea-ac65-811494128a54"
        },
        "item": {
          "id": "0f27613b-88b7-44f2-bb0a-c9c83bd34ef7",
          "name": "identifiers"
        },
        "response": {
          "id": "cf813d09-2371-4c67-97ac-68f0ed25732a",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09194d03-1ba8-4a84-be06-0f1c9f6981bf",
        "cursor": {
          "ref": "bf0eb5c6-bb04-4f94-8d1f-4f0e8a637d4d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7305cd88-c9d3-4c49-9f73-ada33975d172"
        },
        "item": {
          "id": "09194d03-1ba8-4a84-be06-0f1c9f6981bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e4a33dbf-7a1d-409a-8e90-fc033c4b9460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e549234-2255-4328-807e-a25765dfb92a",
        "cursor": {
          "ref": "8b4335d1-4d3b-40f3-bf38-6d26a5d364aa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "824b6d8e-78da-443f-8a97-3ef59c96b57f"
        },
        "item": {
          "id": "4e549234-2255-4328-807e-a25765dfb92a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f015a401-b7a8-4a18-9097-ada272df7766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456baa28-a50c-4770-8aa3-d75c2650c673",
        "cursor": {
          "ref": "02eea7e3-0436-4208-86a6-96c2b2704123",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "08521e84-412e-4ec7-a453-cc31d067b722"
        },
        "item": {
          "id": "456baa28-a50c-4770-8aa3-d75c2650c673",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "30175d68-ac48-4203-bd2e-409b0f3a31c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7864f7-9f60-46c9-a845-c244cd906673",
        "cursor": {
          "ref": "a676cdc3-dc91-45bd-9145-2dddd604e03c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e600344-c4ff-496e-9f94-2d2dfd3345d9"
        },
        "item": {
          "id": "ab7864f7-9f60-46c9-a845-c244cd906673",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "058177c7-c1d4-475c-a4d2-3d2389712d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4c52cc-71b3-4838-a504-600386ce70f7",
        "cursor": {
          "ref": "048f41ea-a921-4401-bf93-3a5b6bee71ff",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "414bc193-fe92-45b0-b84b-29bc48965c35"
        },
        "item": {
          "id": "7f4c52cc-71b3-4838-a504-600386ce70f7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fbc1ad6f-c375-4cd5-a40b-6aa5c5fab819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56d98e1-ea23-41dd-9e6d-10d903cc62ae",
        "cursor": {
          "ref": "1edc3349-6849-42d8-a28b-4c5324908a55",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ca860d3-074b-44ad-a0a8-b1be40071334"
        },
        "item": {
          "id": "a56d98e1-ea23-41dd-9e6d-10d903cc62ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bff160f0-ef0f-4d64-a5d6-4dfcee3b93be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848a568f-9e43-4b44-b6cf-03a0886b64ab",
        "cursor": {
          "ref": "b9c6ae44-85c2-4f83-8aed-cb636a4e7bd8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b39a5709-6553-4105-936f-42658df346fd"
        },
        "item": {
          "id": "848a568f-9e43-4b44-b6cf-03a0886b64ab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd0cbfd0-218c-43b9-9f52-647887b2da52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1944cb29-c565-4edf-b336-b74c5c1d7b4e",
        "cursor": {
          "ref": "5924a7ea-8cee-4e94-a76f-46276345d08a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9e4c5db4-dfe2-459d-a805-6a71adbcc50d"
        },
        "item": {
          "id": "1944cb29-c565-4edf-b336-b74c5c1d7b4e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d97c6fca-43b4-4f46-a1ee-0e107c498acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb8bea0-2800-47fe-aec5-1546f30598b3",
        "cursor": {
          "ref": "ea6e4fa3-d49c-4cad-b6df-82b7bc528049",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e413fb24-5333-4dc7-b142-a023985315da"
        },
        "item": {
          "id": "abb8bea0-2800-47fe-aec5-1546f30598b3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "067c7cb7-5ccd-4004-9e0f-2692260c4f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5ba457-a7c6-4653-b828-b8973e37db46",
        "cursor": {
          "ref": "830cadd9-02c6-4cf9-8f4b-4f58f1ed3ae0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3085f7e6-a0cc-4579-9d12-1353f0d67ce9"
        },
        "item": {
          "id": "4e5ba457-a7c6-4653-b828-b8973e37db46",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ec33ab78-4aac-458c-b6b8-d1ecaf5fc2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f4b0b5-eb5e-464f-917e-b5581eae0a00",
        "cursor": {
          "ref": "2ef9ad96-f089-4452-b586-dc0fd20878a8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "004a1321-e440-4811-9fbd-f761a8243a0f"
        },
        "item": {
          "id": "b9f4b0b5-eb5e-464f-917e-b5581eae0a00",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "15dcb914-8922-4587-afa1-d94fe379427d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c03a81-9597-4a59-a9d6-1b0b86621293",
        "cursor": {
          "ref": "c1531699-dea4-4979-984c-49a90ee14ab1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "294a5fe5-101d-49a1-9a8f-b8c9302813b7"
        },
        "item": {
          "id": "18c03a81-9597-4a59-a9d6-1b0b86621293",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "692d89bd-28ab-4190-bbf7-6ba0235cf48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ed77aa-4845-4977-aa11-e2c2ac044dfe",
        "cursor": {
          "ref": "f9364934-1332-430f-9434-f8662a2719b0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d2a8343-b7f6-4b6f-a67d-2ba59af1c758"
        },
        "item": {
          "id": "11ed77aa-4845-4977-aa11-e2c2ac044dfe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "248e5825-5f2e-4b49-a2e3-19ee0f359403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25adf529-f3e4-4ed7-b17f-4f1d78ddd901",
        "cursor": {
          "ref": "ef1782b7-6428-4bfa-a6b4-8a51fd009d13",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eb6da0a0-c588-4dee-8bca-13762a145065"
        },
        "item": {
          "id": "25adf529-f3e4-4ed7-b17f-4f1d78ddd901",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "17c718db-ca80-403b-8ccb-76b09703f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90220dc1-2927-4d98-aa3e-aca9722a58f5",
        "cursor": {
          "ref": "713195e4-dae6-40a3-8903-4dbb8faf9949",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d5a74257-05e0-4254-bc6a-92518d0aab6d"
        },
        "item": {
          "id": "90220dc1-2927-4d98-aa3e-aca9722a58f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5fdfa476-8993-453e-9da4-70cd7c0a5438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915309a-522c-4912-9647-57bd9ebb6c4d",
        "cursor": {
          "ref": "d0b85159-c3eb-4459-8da4-329d4b32b52c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ccc5357d-f97a-4863-8fba-1338a4657018"
        },
        "item": {
          "id": "3915309a-522c-4912-9647-57bd9ebb6c4d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4d9010bf-8fb9-464d-8bd3-0f4fd41d83a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f81a42-d03e-4006-bd52-3c80e30d0c16",
        "cursor": {
          "ref": "8a6e8a3d-5531-4dcf-9f43-a190f85d8011",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6346ad2c-b9d5-4576-bbfe-93fcb00564d0"
        },
        "item": {
          "id": "14f81a42-d03e-4006-bd52-3c80e30d0c16",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cf686f36-bdb5-42d0-810f-57a268b8838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb07ad2-709d-4435-852e-d8a335b5c004",
        "cursor": {
          "ref": "e9db2645-f5d7-46a8-8269-05da373902ba",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "625eb83e-3061-44bc-910b-ac1074d2c850"
        },
        "item": {
          "id": "9cb07ad2-709d-4435-852e-d8a335b5c004",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a1364c3d-bce5-408c-a2a4-5926eef1e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcef3e8-5132-45e5-8197-719dbb79a69f",
        "cursor": {
          "ref": "5c98f54d-7c94-4f9b-ad95-07b46c42b57d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "87041d29-3989-4266-bc66-b72135d466fa"
        },
        "item": {
          "id": "adcef3e8-5132-45e5-8197-719dbb79a69f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "52badbe4-b801-4218-a740-17498c2088f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6949b15-e257-40a8-9e8d-c2014a64f065",
        "cursor": {
          "ref": "54741926-2b73-4a69-b0f7-1fa3488f7735",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41b49a07-247f-40bb-85b3-e997e9fc0687"
        },
        "item": {
          "id": "c6949b15-e257-40a8-9e8d-c2014a64f065",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "88b85605-3995-4d85-b775-7331a566b1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea6b710-72ae-4616-816d-c2fc9c12997a",
        "cursor": {
          "ref": "2ddd8b0e-54b6-4ad1-84a2-7862303ebae7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a9333bda-4763-4331-b6cb-6618fe96e916"
        },
        "item": {
          "id": "4ea6b710-72ae-4616-816d-c2fc9c12997a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "82d0da6b-86d6-43ea-bb32-513c9869c3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cd606b-27b2-4ab3-ad11-07f33c025599",
        "cursor": {
          "ref": "84db36da-1fec-4344-9d18-df2b6832c5a2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d6226e7a-23ff-4540-bf41-904a63799ed4"
        },
        "item": {
          "id": "78cd606b-27b2-4ab3-ad11-07f33c025599",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ed6c2db-47ce-4ed3-93ff-74200c68e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c86bd42-0896-425d-84d3-53687d7fa7c7",
        "cursor": {
          "ref": "b9115ac4-b110-4f75-a263-26a668a6ea39",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "498ac133-7e1a-4fa4-94d9-b3b82bbcc81b"
        },
        "item": {
          "id": "2c86bd42-0896-425d-84d3-53687d7fa7c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d12f6a6a-d198-466e-a964-088e112025b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23c4816-82e6-4a11-8635-2eaa8392e21b",
        "cursor": {
          "ref": "45deaaea-7e9b-44d0-b9d1-9af05ac39884",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e79840f9-17d5-4222-ae0e-de00cc917505"
        },
        "item": {
          "id": "d23c4816-82e6-4a11-8635-2eaa8392e21b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2e35a5d2-4772-41ce-b912-794efe8656fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6b384-024f-48ab-a5eb-4b71670dd9d4",
        "cursor": {
          "ref": "7f839c36-336a-4e72-afb8-0b3a75274dd0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "84ec0300-e4bd-4610-ac05-ea0617f5fced"
        },
        "item": {
          "id": "f1b6b384-024f-48ab-a5eb-4b71670dd9d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9aa9e8a-6c83-44b6-abc7-ca6502f599bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002ef00d-61bc-4417-ac99-0edb732677c6",
        "cursor": {
          "ref": "b39f2d28-e488-433e-80f1-b90ecb628230",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac09a123-dd2b-492e-bd53-41747261c71b"
        },
        "item": {
          "id": "002ef00d-61bc-4417-ac99-0edb732677c6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e74b944-57e0-4a19-b92c-8e1c3006db9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d04d4f-cb73-4ffd-ae9f-a344478e0649",
        "cursor": {
          "ref": "70962870-d2d3-4561-996a-ea8d33428ceb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "74ba2937-cc4a-4072-a07c-e568b85192e5"
        },
        "item": {
          "id": "45d04d4f-cb73-4ffd-ae9f-a344478e0649",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c454c7bc-d718-4778-bbb9-9806b5815dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566db16-2c32-4f14-92f3-04b1529c1769",
        "cursor": {
          "ref": "2b08af1c-2bec-4db2-8a72-739d14ac3730",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8bedc029-0b2c-48cb-b231-e06c3ea4c1e0"
        },
        "item": {
          "id": "7566db16-2c32-4f14-92f3-04b1529c1769",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "846e77dd-248b-4b3b-802e-c341fc259297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae0077c-f359-42ce-aaef-1221f224c1ee",
        "cursor": {
          "ref": "444f5b6d-912c-48a9-b483-2d19bbfacd24",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a8b877b5-e432-4227-acc7-7a78bf722e04"
        },
        "item": {
          "id": "dae0077c-f359-42ce-aaef-1221f224c1ee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "60512cc8-2d0a-481b-9031-c8abbb988c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b801de97-0262-4a22-b9a6-81db7dd2cecf",
        "cursor": {
          "ref": "924cf9d4-8ef1-447c-8a55-b9c8648c073b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "08ea94a8-c389-4786-a2cb-4197fb497cfe"
        },
        "item": {
          "id": "b801de97-0262-4a22-b9a6-81db7dd2cecf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "668eb368-7a2f-466e-a885-a274fa93855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5d4918-5266-4b26-8278-24757124f5a7",
        "cursor": {
          "ref": "8387aaf2-5675-4b83-9ed1-449563b4c263",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf2e506d-66a7-4459-a281-25153d6d7c26"
        },
        "item": {
          "id": "7f5d4918-5266-4b26-8278-24757124f5a7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4dfd4abe-e273-418c-9074-c999f27fa50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cfdf81-af72-4b2f-a467-aeccba8d5601",
        "cursor": {
          "ref": "54cb0f1a-cf8c-4a36-b559-c8aafb3b5b8f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bb20115a-aaa6-4974-8fb5-e3d32226f9b3"
        },
        "item": {
          "id": "d4cfdf81-af72-4b2f-a467-aeccba8d5601",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "19735f5f-14ce-4916-aa21-2c0953662ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d487a9f-c34b-48d1-961c-7659ca4d9593",
        "cursor": {
          "ref": "f23fadaf-f989-49a2-8f41-25de37c029c1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed91ff1c-3ab1-4772-a681-72856a31f055"
        },
        "item": {
          "id": "3d487a9f-c34b-48d1-961c-7659ca4d9593",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a033086-0480-4b1d-9085-2f66750748c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a59d475-8434-4579-8b0f-df4f87892dd7",
        "cursor": {
          "ref": "ca87a267-8f9a-43c9-aef3-6513cf1e9b85",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "40fd2945-b983-4f0d-a606-84281b2aed97"
        },
        "item": {
          "id": "6a59d475-8434-4579-8b0f-df4f87892dd7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6f5dd805-6d37-4243-9808-2498ef41fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba057f16-e746-4201-88d6-a53b5bb71606",
        "cursor": {
          "ref": "bffd0ddb-7817-426c-8a8c-56926372f0e0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cb04771f-e539-4822-aa91-3b541a62e1cd"
        },
        "item": {
          "id": "ba057f16-e746-4201-88d6-a53b5bb71606",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "912cc9ed-cd62-4127-bc62-6b5759bdef16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13164d17-f233-478a-bcd1-6e81b10023e9",
        "cursor": {
          "ref": "15953843-57bd-440b-8745-a41f1eaad988",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4dc1c68d-97b3-4d5f-be1a-0811cdd7288e"
        },
        "item": {
          "id": "13164d17-f233-478a-bcd1-6e81b10023e9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9cafcc7f-746d-43bd-a5f6-cf100851ea37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e26384-39f1-4166-bc18-3b043fb3344a",
        "cursor": {
          "ref": "582e43d3-c83f-45e3-b2cc-093077b24c29",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9657becf-dc0f-4629-8499-e879034e4250"
        },
        "item": {
          "id": "21e26384-39f1-4166-bc18-3b043fb3344a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39ceb0ea-748b-44d2-a0f0-db5f1c2d123c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634d6e36-e55d-4a99-8c4a-2bf7bab1ea48",
        "cursor": {
          "ref": "26abb7cd-49a0-412a-b34e-56e277e74b44",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d21f90ee-f552-4b7b-8127-e01484a74622"
        },
        "item": {
          "id": "634d6e36-e55d-4a99-8c4a-2bf7bab1ea48",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2da4b157-d6b2-4637-9bd7-cd756d9efc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07d936-82c5-402a-a8b4-6628b1461a7c",
        "cursor": {
          "ref": "e11d706d-1fcc-4097-a46c-e088cd558042",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "71027d1e-5e27-4489-a7c2-b0c09267c70b"
        },
        "item": {
          "id": "cc07d936-82c5-402a-a8b4-6628b1461a7c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "283d3d42-221e-42cf-9656-67d40564fd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744fd4ef-dd64-4657-b177-cbeab5025f7e",
        "cursor": {
          "ref": "8f11299b-b9f8-45c5-ae6d-4840c34eb5f3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "97a0f4ca-f029-4d64-a3ac-566834a8353e"
        },
        "item": {
          "id": "744fd4ef-dd64-4657-b177-cbeab5025f7e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c2c2091-872b-4ea4-922a-e32f33049404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de8c6ae-2b0e-4169-b5f7-8629471fcc43",
        "cursor": {
          "ref": "11e5bca0-c9f4-428a-a42b-c8de6a5be70b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "38011dfe-5a3a-4725-9a09-aa944b3b5fc2"
        },
        "item": {
          "id": "9de8c6ae-2b0e-4169-b5f7-8629471fcc43",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5faf0345-662b-49f5-9a9c-4efcb4906096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823480c4-84bb-45b5-b47b-8e08b844ebd4",
        "cursor": {
          "ref": "cffec881-aa2c-4704-9ad7-e3481a51da05",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9006e453-42de-4911-a770-8aeaa4087cf3"
        },
        "item": {
          "id": "823480c4-84bb-45b5-b47b-8e08b844ebd4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "950539fc-7b5d-42b6-89db-a2c78a271fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04df47-5998-48ce-b523-9dfb9f50e88c",
        "cursor": {
          "ref": "0f8d133e-dde9-4bf5-bacb-823d97ebb235",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d7ddbe41-5ad1-4c6c-a117-8536d4de2553"
        },
        "item": {
          "id": "8c04df47-5998-48ce-b523-9dfb9f50e88c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1123dda6-a5cf-4f00-8ee1-48fcb783160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268fbb8-7114-4874-af85-f159979a2df8",
        "cursor": {
          "ref": "7ae16073-ff16-4c44-bfdc-6a09bfa89507",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7c953cc5-dc54-4584-b1e2-d7fb45beb35d"
        },
        "item": {
          "id": "5268fbb8-7114-4874-af85-f159979a2df8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8822f364-84d6-4120-95ed-3ff7872535eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344c0134-bb20-45e1-8791-39e0cdcac00d",
        "cursor": {
          "ref": "e93ec9f1-d769-4fe8-af81-bd697a45d783",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df31d488-48cf-49b7-9324-166dd63b7b44"
        },
        "item": {
          "id": "344c0134-bb20-45e1-8791-39e0cdcac00d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "64251d17-970e-493e-a9ab-5b5d92daa598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9d318d-bc5a-470f-a5df-1f2ad2308ede",
        "cursor": {
          "ref": "70e59aee-80f3-404e-ac95-6a171e10e80d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "adfcbe30-1341-47c6-b567-1a47e048f612"
        },
        "item": {
          "id": "5f9d318d-bc5a-470f-a5df-1f2ad2308ede",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4c40d432-c774-46f1-8658-beb4a353d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117125b3-c90e-4155-8d74-f0fc2ec8f3df",
        "cursor": {
          "ref": "aaff272e-81db-4512-bce6-306cbf6297d0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0d555cff-24d8-459f-979e-c2eb443112c4"
        },
        "item": {
          "id": "117125b3-c90e-4155-8d74-f0fc2ec8f3df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "83803b17-8197-4fc0-9822-d74b8176c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f039af75-3a8f-45ba-965b-a1cdc01f485f",
        "cursor": {
          "ref": "b9245567-656a-46f1-bc32-cd957fc47d90",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a205d5d-3e30-4eab-a15d-a63ed3f926c6"
        },
        "item": {
          "id": "f039af75-3a8f-45ba-965b-a1cdc01f485f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "efb94131-86a7-4692-a28d-efc0403ececf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2992d0-4e52-4845-97e3-94ef9a76911a",
        "cursor": {
          "ref": "b1547bf0-3870-4ff3-80f7-f2cdcc0b8378",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e174e26e-0917-499c-80e4-01d461ebd652"
        },
        "item": {
          "id": "ce2992d0-4e52-4845-97e3-94ef9a76911a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40740bba-f6e7-418c-88be-8b8ed9208c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9aebb0-c441-48e0-81fc-0faa8a0df5ba",
        "cursor": {
          "ref": "2bf63dae-800b-4a70-9a3b-0c759e82692d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b68dedfe-c02a-41a2-8a55-43427bd1f0a2"
        },
        "item": {
          "id": "3d9aebb0-c441-48e0-81fc-0faa8a0df5ba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f5236491-55b8-498c-85a8-11458109fc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254a517-c253-4269-bf50-fbf0e4795c30",
        "cursor": {
          "ref": "a8ff9520-1e03-47e9-86a9-848ba326fd70",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e75bc87f-db37-4691-833a-7442499e408b"
        },
        "item": {
          "id": "9254a517-c253-4269-bf50-fbf0e4795c30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8609a700-c768-493a-b02f-2b78fbf45e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cfafbb-884c-4ce4-8f52-9b7929c4badc",
        "cursor": {
          "ref": "7fd9a0c4-b08a-4e66-b668-39221db6f939",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "751155f5-e085-4426-93e5-0a0a3d8f362d"
        },
        "item": {
          "id": "33cfafbb-884c-4ce4-8f52-9b7929c4badc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "068c080b-1d2f-45b6-82c0-efec8e346f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbeeec3-ffa9-4cd8-a603-8d4f4af12fcc",
        "cursor": {
          "ref": "8b9cc61c-498a-4339-8487-6404e2ab7a43",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3bc6e4e3-7c57-406f-b931-fcce93c89885"
        },
        "item": {
          "id": "8fbeeec3-ffa9-4cd8-a603-8d4f4af12fcc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bc6fb2f7-b257-4468-88ab-6026ca9d72a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8656313c-23ba-4068-a3a8-4f290e7ac8ff",
        "cursor": {
          "ref": "edea2728-651e-47cc-8368-de9025e2fed4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "31437f92-1874-449e-9702-278a9a0b74ac"
        },
        "item": {
          "id": "8656313c-23ba-4068-a3a8-4f290e7ac8ff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "62ad52a3-285f-4393-82ee-7818364720bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf28ad5-e6c8-40c8-b690-48bb64482a70",
        "cursor": {
          "ref": "52187365-e63d-49dd-8e7e-d9a5743e3e52",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "db602ebb-d891-45d5-86b6-f6c0e135196b"
        },
        "item": {
          "id": "6cf28ad5-e6c8-40c8-b690-48bb64482a70",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b8f7f7ee-e8b6-4d08-8bd4-8327ba962211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacf8704-fa60-47b1-8a63-439ca238d3ee",
        "cursor": {
          "ref": "28e03a10-7219-4861-a148-0450391ee097",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3028a6a-1f40-4d0a-8313-ee98aebf0589"
        },
        "item": {
          "id": "aacf8704-fa60-47b1-8a63-439ca238d3ee",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1b079d73-bd5e-4ae8-b67e-9db7c80a4ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2bdc1a-b78c-4394-a287-14009556c199",
        "cursor": {
          "ref": "93be1cc5-0897-49d3-b859-0a2bf6fbecb6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "45b9c0da-0172-4b62-83d0-07514da6c93e"
        },
        "item": {
          "id": "8a2bdc1a-b78c-4394-a287-14009556c199",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1867a118-5b83-48a6-bb43-100bf412fef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73adfbd8-c929-455e-927d-2f21c3ad840c",
        "cursor": {
          "ref": "335cec9a-683b-4f41-93f7-1b787db09ba4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b962796a-8e8e-45f2-89d8-bc548a5dff7a"
        },
        "item": {
          "id": "73adfbd8-c929-455e-927d-2f21c3ad840c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a18a8e7-7249-4d92-bb1b-83e71ebc592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad78df1f-073a-44d6-bcad-cd9b7888c5a0",
        "cursor": {
          "ref": "16560c70-2135-4fd7-b585-43a2d81e35e2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "42fd0c76-ad04-4aa1-b6ad-2c068986fd4c"
        },
        "item": {
          "id": "ad78df1f-073a-44d6-bcad-cd9b7888c5a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "21a7e8ef-e9df-4887-b5f4-978039dd62d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311780ab-c369-460b-b841-742e7d69e3f3",
        "cursor": {
          "ref": "45f33434-d091-423c-a70d-7c1f4ecd6231",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "792eec86-4947-477a-b203-1bb31a95037f"
        },
        "item": {
          "id": "311780ab-c369-460b-b841-742e7d69e3f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d53a81bd-c78d-4bc1-a15f-db85132966af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acacc36-6a37-4b62-b1b0-5e6332be79d8",
        "cursor": {
          "ref": "5180deab-17a2-4a17-9cd6-008ebefe6454",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5faca886-280b-47f0-b828-8c0a98f108d4"
        },
        "item": {
          "id": "0acacc36-6a37-4b62-b1b0-5e6332be79d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27ff1c32-ff68-49de-b417-c84d6e259440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a12396-36c9-4647-b17c-5e8a24555335",
        "cursor": {
          "ref": "4d620f84-ad37-4797-8fb7-9285485a4f1f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "143e4c78-6a63-46d4-98e2-52a7f756c7ed"
        },
        "item": {
          "id": "85a12396-36c9-4647-b17c-5e8a24555335",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f71bbd3d-8496-468a-8f73-86cc7b58914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55c4c2-9f28-4c57-b0a6-6d10840572c8",
        "cursor": {
          "ref": "a830a961-bcde-42db-bdcd-6c57ac1bcc4a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "534e9dca-306e-4340-b21e-cfa79d91a020"
        },
        "item": {
          "id": "6f55c4c2-9f28-4c57-b0a6-6d10840572c8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d2fdc901-a169-4f59-bd91-ed3c43c6e0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e0ba37-9fc0-4e7d-8713-e42633eacc48",
        "cursor": {
          "ref": "361c6ccd-7597-4128-9f7e-d4252bca162c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "86038950-1476-48ef-834e-2ee37e975e85"
        },
        "item": {
          "id": "48e0ba37-9fc0-4e7d-8713-e42633eacc48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b6b33ce5-6e7b-4d5e-82e9-14c91163c259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f5aa6e-6286-4761-ac00-d0312b5107df",
        "cursor": {
          "ref": "9b12e70d-34d5-4d9a-967b-8e6561cae7aa",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88c948dd-6c12-4282-8574-1ee2755cd134"
        },
        "item": {
          "id": "b0f5aa6e-6286-4761-ac00-d0312b5107df",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b356d3f4-16cc-4e9f-9fdf-5efcf0f4955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e820cc59-a685-4317-baa5-b56b3767cd6c",
        "cursor": {
          "ref": "7efa709a-5be0-42f2-9681-529f8c461654",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d0538e0-a572-477b-87f8-6ce624d64907"
        },
        "item": {
          "id": "e820cc59-a685-4317-baa5-b56b3767cd6c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "caa3025f-5983-44e8-8faa-ec1b161cedf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68362fb0-b5b0-4abd-8549-1fe80e81658a",
        "cursor": {
          "ref": "2afa0da6-338f-4e94-8e5b-9d1282d28fc6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f6337307-266f-493c-a0ec-20464f3e3511"
        },
        "item": {
          "id": "68362fb0-b5b0-4abd-8549-1fe80e81658a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0cfbc12-d141-4245-a8d0-e5e822ae8662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ce3beb-034e-42a8-a843-29f536bcac7a",
        "cursor": {
          "ref": "176195f7-0319-4ebb-b04e-becbc4a58efa",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "de5307cf-e626-40d9-83aa-245d30499b2d"
        },
        "item": {
          "id": "74ce3beb-034e-42a8-a843-29f536bcac7a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d1ca1b42-3152-4875-8bcb-1615e59910a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79aa3ce-c8c2-4c37-a3bd-4aa273f1608b",
        "cursor": {
          "ref": "ef6a0653-426d-4d89-8a30-c50c4520802b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b616ddbe-5d01-4a0d-ad6f-e8a6921a8524"
        },
        "item": {
          "id": "b79aa3ce-c8c2-4c37-a3bd-4aa273f1608b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04b3f1c9-ac69-43c2-b4bb-adda74b700e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c7541-0d31-4148-8054-5d1ce00fd908",
        "cursor": {
          "ref": "f74c7047-b48c-4b7a-92c9-5c3db460d438",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eb94b792-7ca4-4d08-a5f8-97cf4e16d4c8"
        },
        "item": {
          "id": "550c7541-0d31-4148-8054-5d1ce00fd908",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30f9d670-a018-4b7c-9ada-f87873d1ef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88696b6-87dd-4496-ad8e-fd138973d88c",
        "cursor": {
          "ref": "820fb487-0732-4aa4-8c3a-86a185002307",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "77754ced-c6a9-4067-8e45-b2aff3d6bf08"
        },
        "item": {
          "id": "b88696b6-87dd-4496-ad8e-fd138973d88c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fccbe42a-af28-4565-b2b9-302eb1b25603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9b1e31-e119-402a-a4b9-b66671eb88ff",
        "cursor": {
          "ref": "83c8329a-38a4-4622-b135-f4115a51af67",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d134982d-883f-45cc-9f94-53ed98232806"
        },
        "item": {
          "id": "3f9b1e31-e119-402a-a4b9-b66671eb88ff",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1e127ce9-5f04-48b2-ae0a-87c087a87224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fa65c0-6291-4b9d-a8bf-6e6be21db7c3",
        "cursor": {
          "ref": "4994afb7-0078-40ca-9b68-c203034a1da7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "86741ad6-5a03-4bbb-928a-9d02f816df8a"
        },
        "item": {
          "id": "89fa65c0-6291-4b9d-a8bf-6e6be21db7c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7270ce51-b866-4b4b-a31a-c791b5df4827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abca62-88d8-4133-afeb-d17042633d0c",
        "cursor": {
          "ref": "1c0592fd-a983-4956-9779-e90f4053a5ae",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "41015d06-7061-4548-8a3f-5ad96ff9baaf"
        },
        "item": {
          "id": "45abca62-88d8-4133-afeb-d17042633d0c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "563be4c8-2c92-4c7f-b662-5fc8845f4088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d836148-08dc-4fc6-878c-9a564c8d08aa",
        "cursor": {
          "ref": "c845aa98-5c85-4165-aae3-f3287d0cbbe5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aa18dc2b-199d-4536-8109-ce760085e77b"
        },
        "item": {
          "id": "7d836148-08dc-4fc6-878c-9a564c8d08aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ccd99aaa-c568-4d6b-9643-3ed1fd66c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be3e226-8e98-4bfe-bf1e-cf401dcf947d",
        "cursor": {
          "ref": "c5e00125-1c35-41d8-ad44-aa325a59b169",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d938914a-2b55-4eef-a8c9-536c31079f9e"
        },
        "item": {
          "id": "1be3e226-8e98-4bfe-bf1e-cf401dcf947d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f7583799-ac81-458b-bec5-dd848e08c3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78221b88-d4a1-4917-8072-7570e4d8a56e",
        "cursor": {
          "ref": "68845fa2-caa8-472a-9032-89363bcb34b5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6e80aab9-3ce0-49bd-a277-34691da5a253"
        },
        "item": {
          "id": "78221b88-d4a1-4917-8072-7570e4d8a56e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8a0bc0c9-eb8b-4cc5-9f28-152d0e659d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc135304-b122-4961-ac00-87585e39f3e6",
        "cursor": {
          "ref": "e23efc26-7a16-419d-9ea1-e8021c10a8df",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2cb053c4-df99-4ea1-9464-678ad77e8368"
        },
        "item": {
          "id": "fc135304-b122-4961-ac00-87585e39f3e6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e11c4d90-5c66-4c56-98f2-f576771cfd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535a1d9d-7f32-4ff8-94ac-39be280de2ac",
        "cursor": {
          "ref": "7c483b39-3b9a-47ef-8851-972400c14c9c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "93d15e18-e848-4327-8f25-a1bc3877c3d9"
        },
        "item": {
          "id": "535a1d9d-7f32-4ff8-94ac-39be280de2ac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "efcc50d6-b8a8-4a87-8e94-facb6bee0522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d03d7-e2de-4196-883e-6a9da63a90fd",
        "cursor": {
          "ref": "55da02ce-8fcc-4520-b4f0-b3671643d878",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2afe097f-1eca-42e7-affb-351ab39a5300"
        },
        "item": {
          "id": "ab8d03d7-e2de-4196-883e-6a9da63a90fd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9aefb233-6b1a-49bf-8b3f-6e0de32ea0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0214b05-1508-4d23-9ca4-96dd59d5ee1e",
        "cursor": {
          "ref": "98c67ed7-0504-4054-b310-4b3366d71f57",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "11ac2db7-d6f1-4adf-819d-c2500b0bfddb"
        },
        "item": {
          "id": "b0214b05-1508-4d23-9ca4-96dd59d5ee1e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "01b10e42-5f4b-4047-8120-055d0e59e479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137049a6-2ba7-479d-ba05-28244a1fb88b",
        "cursor": {
          "ref": "967942e9-a5df-418f-a84b-fd0eac3ca81e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "056674a2-1d78-41aa-a0dc-9566b1489c92"
        },
        "item": {
          "id": "137049a6-2ba7-479d-ba05-28244a1fb88b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "54fe20f1-1ee5-417e-b267-f42e617f05e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125cc23b-3e61-4b0a-9cd4-297371e5ffab",
        "cursor": {
          "ref": "65a958da-faa9-4395-99f8-4baaf6e034cc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1eff2cc3-25e0-4816-a19b-dfc6bd12a0e3"
        },
        "item": {
          "id": "125cc23b-3e61-4b0a-9cd4-297371e5ffab",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9baafa7-4643-4212-9d5d-6587ea15576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715e7963-6524-4b49-ab06-da87d74cfa4d",
        "cursor": {
          "ref": "a3e13999-fb73-4475-9088-8a33e4a4c3dc",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8ddd0cfc-692d-4c38-83f8-9e97fe4fa7f6"
        },
        "item": {
          "id": "715e7963-6524-4b49-ab06-da87d74cfa4d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "82516520-12c6-45cb-b1e9-01a33cd21b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defd0e26-a5a2-449d-a74a-6422ce8a7ec1",
        "cursor": {
          "ref": "f5fd753e-6135-48fd-9bde-ca6b73a820b3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8d37faf5-ce62-4ba1-8a5a-f707e234f03a"
        },
        "item": {
          "id": "defd0e26-a5a2-449d-a74a-6422ce8a7ec1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9c909ab-3c0a-4c1b-86e9-9d9537f7f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8d16b-3779-45a4-9262-a3b878dcba2d",
        "cursor": {
          "ref": "f4c8e99f-31de-4f74-a82e-d7372876ffa5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5ab97aff-e5a2-45fd-bb36-e4586cad191b"
        },
        "item": {
          "id": "9fd8d16b-3779-45a4-9262-a3b878dcba2d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eb62a03c-7759-4796-bb82-77707d540128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c55f951-afbb-43f7-a60b-a3eae8fcab59",
        "cursor": {
          "ref": "a1bc48e1-7153-4625-b99a-2e373f9a479f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6ada3389-5ea5-44eb-9c9d-e50e716d0ba7"
        },
        "item": {
          "id": "7c55f951-afbb-43f7-a60b-a3eae8fcab59",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "23311fd7-3e54-4e55-b3dd-8be4fee95650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c89c6-7f87-497b-ad84-e7b473d110c2",
        "cursor": {
          "ref": "7db7621e-b8cf-437c-88e0-cfa6972c5796",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8b91d45c-d141-4edc-8339-5723b7b12590"
        },
        "item": {
          "id": "487c89c6-7f87-497b-ad84-e7b473d110c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a4bd6955-173b-438a-9349-334185a0ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebf4346-df5f-40d2-84f9-df6030d7e4a6",
        "cursor": {
          "ref": "07ee44d2-5249-43ed-8e51-dc0d15d94840",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96e55ad7-68ef-454f-94bb-072c9c359900"
        },
        "item": {
          "id": "0ebf4346-df5f-40d2-84f9-df6030d7e4a6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8c40a677-d3df-4955-8655-28b2ed7bd1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8359fdc-e0f6-4e83-b693-1787174c3516",
        "cursor": {
          "ref": "ad40c0ac-3bf9-462f-94f4-e85797328dba",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ac98764e-ea5e-414e-be04-53d5c7d2185a"
        },
        "item": {
          "id": "b8359fdc-e0f6-4e83-b693-1787174c3516",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e469e6f9-bd4f-4a87-bf7e-1c08796270db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3278586-7a69-448d-bab5-f21215234d50",
        "cursor": {
          "ref": "cafc5ad0-be35-45d4-b770-23f3e42f3619",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ea7513c-63ac-4a45-a8e8-c232b85fc8fe"
        },
        "item": {
          "id": "b3278586-7a69-448d-bab5-f21215234d50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7d9c8225-6a06-4c8c-a42b-05d8e046d7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31c8d04-a936-46c3-8073-cbfd78d0fe7b",
        "cursor": {
          "ref": "9af54c51-4f0f-4d10-a115-9021f7aa2c9b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a9244d0-4b31-43d1-b336-20e6c521e4be"
        },
        "item": {
          "id": "d31c8d04-a936-46c3-8073-cbfd78d0fe7b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b6f37557-739e-430c-940e-435978a568d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba8b27e-34fe-401f-b8dc-16a4434a81c3",
        "cursor": {
          "ref": "e383e216-a2a0-4ab8-955e-3600610cce12",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33403987-a23c-40ec-a200-6d1a287e21f2"
        },
        "item": {
          "id": "9ba8b27e-34fe-401f-b8dc-16a4434a81c3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b71bb33a-777f-4bc3-a4c0-a2c0e00c29d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcfc7ef-c413-414b-a42b-bb298d3186a7",
        "cursor": {
          "ref": "403767d3-085a-4132-93ac-f18f2ab20eab",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "09e18f4e-f1e1-4ed5-bd55-5a83827f9a8e"
        },
        "item": {
          "id": "dfcfc7ef-c413-414b-a42b-bb298d3186a7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "92f56b08-0ddf-4a75-9dd7-8d3668040e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f867da0b-6436-4db4-b68a-963fc7c4f8c8",
        "cursor": {
          "ref": "337711fa-efc8-47b4-82c6-8e457ebad126",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b3986662-a51a-4d2d-bfb1-ec6181d8eed8"
        },
        "item": {
          "id": "f867da0b-6436-4db4-b68a-963fc7c4f8c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "69a988dd-42ef-4ed2-b484-6d1b765394a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4cb87f09-ffba-4787-ad1c-12c14ee08bae",
        "cursor": {
          "ref": "e9a3cf18-fc6b-4e2b-925f-8b2fa4903871",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a33aa2ac-3d96-47e6-a9f6-5fff33472690"
        },
        "item": {
          "id": "4cb87f09-ffba-4787-ad1c-12c14ee08bae",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "62a7a512-600f-4f34-bfc1-aa5155949496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1933dd01-8b23-4c82-b24a-afb8c76fc449",
        "cursor": {
          "ref": "cab843ff-c6b3-475e-b278-a7d197bfc509",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "88f67a2a-ef26-4ebb-9af2-43fec5ccd304"
        },
        "item": {
          "id": "1933dd01-8b23-4c82-b24a-afb8c76fc449",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ac4b3450-431b-40e3-9723-421dca7a6674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "da2f2e12-2239-4a29-b8f8-35264457ad68",
        "cursor": {
          "ref": "5c45d29b-9ad2-4bf1-aaeb-3a974bd8991a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "70e859c6-6b5a-4db5-91c2-6076f7b3cccf"
        },
        "item": {
          "id": "da2f2e12-2239-4a29-b8f8-35264457ad68",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2a30a7b1-2ed9-4da7-8fbf-91b6d9e95b69",
          "status": "Created",
          "code": 201,
          "responseTime": 8537,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de06be7-a533-4f30-9261-fd6caa983f01",
        "cursor": {
          "ref": "6b5ec682-48f3-4c18-9728-e9f56244ef2b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "112bf081-9e3a-4547-8afc-94450067715f"
        },
        "item": {
          "id": "8de06be7-a533-4f30-9261-fd6caa983f01",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ce950cc9-44d3-4cb4-bfc0-77c9a439da28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "885cf862-379a-4321-9303-8ef59307462e",
        "cursor": {
          "ref": "a36078f8-e198-47c1-84ef-95e7fed46e0e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4f4507d3-4ad8-4304-9d46-c9f1eb504ce0"
        },
        "item": {
          "id": "885cf862-379a-4321-9303-8ef59307462e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "38f75721-c03f-40de-a1cd-f0dd41026ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "23fd80c1-2b4f-4005-ac27-6d1eb923cb57",
        "cursor": {
          "ref": "3180555c-c842-4980-954d-4919986b9160",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e2eed7e0-eef5-4cf5-ad35-4887a94f8229"
        },
        "item": {
          "id": "23fd80c1-2b4f-4005-ac27-6d1eb923cb57",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "88aa412a-6b51-4a24-9e21-892a3cd41414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e39958-29ad-469e-9e2a-d21cf37e4fbe",
        "cursor": {
          "ref": "18798f4d-72ba-49cb-a17b-82250e433ced",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8df89822-edcc-4d15-abb8-faa391b73d0b"
        },
        "item": {
          "id": "99e39958-29ad-469e-9e2a-d21cf37e4fbe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dab743eb-2b8b-4504-bc85-2c82443082bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb00145-320a-4b3d-b139-b14107e367cb",
        "cursor": {
          "ref": "4bde0255-9541-4fa2-8e56-ca953a98b39c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "efe49118-cbc9-4023-b136-e96a3a1eb59c"
        },
        "item": {
          "id": "5eb00145-320a-4b3d-b139-b14107e367cb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "273318b4-f416-4776-851c-7bf0315b44be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc1b809-32eb-4821-86ef-4efb2f7b66a2",
        "cursor": {
          "ref": "389edcda-64ef-43ff-a246-094b3fc5165e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3bbf940e-b427-492c-b39f-57b7d4a53e59"
        },
        "item": {
          "id": "3bc1b809-32eb-4821-86ef-4efb2f7b66a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09180bb8-7499-4241-8f24-69d6b632b457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4574fdc5-fe67-48d0-b350-b501dec13506",
        "cursor": {
          "ref": "313c9926-faca-447f-9a50-f9f2cbf08e4a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "847d528e-32ba-4a05-be10-dec6242d720d"
        },
        "item": {
          "id": "4574fdc5-fe67-48d0-b350-b501dec13506",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5af5443c-96ca-4e0d-bb9e-15f6e75cd2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9597bf8-9305-45a3-947c-bf50ed27f51d",
        "cursor": {
          "ref": "657d8468-3651-4d50-914c-725ca85ec8ef",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "22c96f5a-a5a4-4fe9-ac18-a097a9ee7b29"
        },
        "item": {
          "id": "d9597bf8-9305-45a3-947c-bf50ed27f51d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ea5b9945-e859-4386-a9c8-445bf368d909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62940261-3ea9-4cbb-bed1-e9abbb624047",
        "cursor": {
          "ref": "5295d0ef-56c2-47e0-b338-d72e89b58dd8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "23417c36-fb87-4968-bc75-0a32169a1294"
        },
        "item": {
          "id": "62940261-3ea9-4cbb-bed1-e9abbb624047",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d4a0bea1-708f-49d6-8952-39dae75ce857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b12af-00b0-4032-829c-3fbe926ee048",
        "cursor": {
          "ref": "392b7910-4a50-4366-a5f1-5a5b80fd1e22",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6efc947a-2d20-4322-892d-3fda065742a5"
        },
        "item": {
          "id": "ab9b12af-00b0-4032-829c-3fbe926ee048",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9979c40e-9196-405c-878f-f9a5a653d7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2091d81-a93f-4b4b-a6f6-634862f5e302",
        "cursor": {
          "ref": "b1f20860-6f98-484d-8df4-796bf4b4ea92",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a0b2ac9-94a3-4710-bb0c-f01ed0803e79"
        },
        "item": {
          "id": "a2091d81-a93f-4b4b-a6f6-634862f5e302",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dc129b61-53f3-48ae-bacb-17e972062d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76344a7f-0c87-413e-98ad-8b37e896f892",
        "cursor": {
          "ref": "a287f7f9-8562-441c-89e5-662b3e0c3d09",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9a0e11e4-8b4f-4eed-bef6-c5afb71982a1"
        },
        "item": {
          "id": "76344a7f-0c87-413e-98ad-8b37e896f892",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6ab94448-377a-452d-a1e9-61ccf051e8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b335336-33e7-4521-a71f-7fbc4388f4a2",
        "cursor": {
          "ref": "abe1d6ac-d15f-4120-87c6-0f160d89b444",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9ffaadb9-6b83-4df9-93cf-7b12c7af5374"
        },
        "item": {
          "id": "9b335336-33e7-4521-a71f-7fbc4388f4a2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b15a94d-8371-45d3-b030-4c3379e3b6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031bd2a-fc86-4ade-b626-7962cc60c072",
        "cursor": {
          "ref": "21dd631c-90f8-44f1-a01e-efdade8ee527",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d26dac5a-d4e6-46bd-9768-577b03f08c3e"
        },
        "item": {
          "id": "6031bd2a-fc86-4ade-b626-7962cc60c072",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "093a7731-e6cb-49e1-8d41-74fe817fe222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3e6d0e-56ac-46e9-9813-1b76b0a99915",
        "cursor": {
          "ref": "ae0b4fac-d15b-4623-8f4c-da2310599868",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e8a3d638-3919-410e-baf0-43819bb506ea"
        },
        "item": {
          "id": "3f3e6d0e-56ac-46e9-9813-1b76b0a99915",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8dd6bce-26aa-423f-a875-6fe5ac0ed825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924dfbda-4954-4855-ae16-9578c1b8e5d2",
        "cursor": {
          "ref": "e428dc6a-4fda-4c0a-ab43-b84ac0ae3e16",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3903531b-4c48-4771-92e4-d8df259a76ad"
        },
        "item": {
          "id": "924dfbda-4954-4855-ae16-9578c1b8e5d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9bf2d546-bdc0-498d-80fa-cbeb9a70c178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1828edcd-096a-4939-b53b-1964c6084c2d",
        "cursor": {
          "ref": "86db05bf-aa3f-46c0-87e5-fb05ea54f30d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "af69d954-13ff-40ed-aaec-af0abf25e8cb"
        },
        "item": {
          "id": "1828edcd-096a-4939-b53b-1964c6084c2d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9b62351b-b13e-41de-b1a2-73f4ad006733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff1afdc-4307-4701-88ae-2c45625a48e7",
        "cursor": {
          "ref": "e3ed7aef-9c88-456f-bfe0-d51b6c22004d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a70fe17c-b596-4efe-ab68-f4f95522972a"
        },
        "item": {
          "id": "9ff1afdc-4307-4701-88ae-2c45625a48e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a4312da-1e1a-4d58-8bea-f1fb6eba9a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbca419-a358-40bf-a8cd-0926f79ba981",
        "cursor": {
          "ref": "f0e2f4ff-bede-4ab3-86b6-7ef889c71bca",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "00f86acf-1d20-4f38-915d-919f3212efb9"
        },
        "item": {
          "id": "bfbca419-a358-40bf-a8cd-0926f79ba981",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b10e6a6b-6f81-4e71-832c-3164b9b6e8dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "284e4e68-ae32-4f1a-ae19-67d575679321",
        "cursor": {
          "ref": "2da47ec2-ffb5-43e1-8f47-070c7582926e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "381b83f9-4821-4280-8542-a22faf6b7ba3"
        },
        "item": {
          "id": "284e4e68-ae32-4f1a-ae19-67d575679321",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "71a789c2-2ebb-4b4c-913a-23a9ca6270d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0160aacf-0c2f-46ce-b280-6bae5ccde811",
        "cursor": {
          "ref": "74a251aa-8cf6-43de-bfbb-541e4da3001c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96210b3d-e6e8-4c7a-87c7-9a26c1beb074"
        },
        "item": {
          "id": "0160aacf-0c2f-46ce-b280-6bae5ccde811",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c1f34579-b42a-4423-bb1e-a9d73283e8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460c703c-2d3c-46bd-a5e2-3994852b6dd6",
        "cursor": {
          "ref": "a96331d1-0385-4d59-8dfc-b4d492b2ff63",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1659ffc7-1b96-46ab-8233-45206d6940cf"
        },
        "item": {
          "id": "460c703c-2d3c-46bd-a5e2-3994852b6dd6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1300d3d4-d398-4ffe-875a-d741af9f294e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e243e14-7f28-4f61-9a79-dba6e7e062bc",
        "cursor": {
          "ref": "a0fa7e77-a8d2-490e-b6af-37a72a81859d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b690ebf-fa8e-41b7-af4b-9da6c978dbc4"
        },
        "item": {
          "id": "9e243e14-7f28-4f61-9a79-dba6e7e062bc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a081410f-b5f7-4fc6-a517-1cfb498ea15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb33b8dc-d4a0-471e-a203-c98de0bb9c5b",
        "cursor": {
          "ref": "daa1e98b-cddc-42a7-b227-d248cb8db812",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d7f54a77-602c-49ed-90a2-039c329e57be"
        },
        "item": {
          "id": "fb33b8dc-d4a0-471e-a203-c98de0bb9c5b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a1fb5cca-8cf9-4c0e-85ee-842392d725cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d597fc5e-7b6d-4993-8e66-e0f0a5c65a9f",
        "cursor": {
          "ref": "e365c1cb-460a-49c0-89d7-8efa647e4e70",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f3c843a6-62f7-4899-a8d3-3ff629891835"
        },
        "item": {
          "id": "d597fc5e-7b6d-4993-8e66-e0f0a5c65a9f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb2409d0-b82e-4c59-9ad7-7540bc44c91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667bc0ac-d943-4df3-86ed-dcb7dae8c82b",
        "cursor": {
          "ref": "084062b3-73e2-43cf-9c22-24c28c732b70",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "72d4d3da-20e9-4c31-ab26-a98bc6bf9c74"
        },
        "item": {
          "id": "667bc0ac-d943-4df3-86ed-dcb7dae8c82b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a98ba89-de70-4009-a01b-98b62f061e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48072d3-0f20-43cc-b972-3dbfbd8891a2",
        "cursor": {
          "ref": "b856b6e6-1eca-4a16-bfb7-a9cfb047e843",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76856a7d-a080-4203-8a4c-f02ed753fc72"
        },
        "item": {
          "id": "f48072d3-0f20-43cc-b972-3dbfbd8891a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2434c6cc-ff5f-4e5b-a05d-14662e7293b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "19b89b2e-edf2-43e0-92f2-562502f557d3",
        "cursor": {
          "ref": "dd3ca1ae-3748-4082-b4bc-db7a149fe7b0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4c54fa17-e405-471f-8a8d-4ac9b7b4662e"
        },
        "item": {
          "id": "19b89b2e-edf2-43e0-92f2-562502f557d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1dbe80bc-7dde-4d86-924a-b34cbccab89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8514dfa4-f381-4543-bc4d-6eba2baf3ff5",
        "cursor": {
          "ref": "a119da03-a991-4b8e-8120-5fb993c27e3d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79c10443-f9df-4e84-8ba4-0ceec47130ad"
        },
        "item": {
          "id": "8514dfa4-f381-4543-bc4d-6eba2baf3ff5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b2bca1c3-a9f7-495b-91b2-a7a3c91df8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a565f67b-8d45-4372-9167-5003c966982a",
        "cursor": {
          "ref": "d1627ec2-711b-423b-b9d3-c4f555bbde08",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "47e4c263-c282-4db8-a511-191a3aeb640a"
        },
        "item": {
          "id": "a565f67b-8d45-4372-9167-5003c966982a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "126b228f-96d6-4312-801a-2cf0da113f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2749a20-b852-4c9a-9524-36bf14a16cf8",
        "cursor": {
          "ref": "ed1724c2-9c76-4d9b-99ae-9f1ea0a3df22",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ff843d33-76b7-451c-994e-df3efb22372e"
        },
        "item": {
          "id": "f2749a20-b852-4c9a-9524-36bf14a16cf8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "221f74e3-e5c9-4ac7-ac56-01f81ae905da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c368e-943e-47ce-97d4-4e7053b0983c",
        "cursor": {
          "ref": "6d004fd5-12fe-42d9-875d-fa8ae0d73375",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bfff071c-8590-482b-89f8-588ff0ad1169"
        },
        "item": {
          "id": "ff8c368e-943e-47ce-97d4-4e7053b0983c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "43c10afc-b213-4abc-8110-0f92b2fb676a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c09ff6-f899-4f38-a5cf-cfb955938a43",
        "cursor": {
          "ref": "f11eb7ad-9058-4abc-a322-90b95f700195",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7e661f34-63e2-4fa9-b470-ebead5059c50"
        },
        "item": {
          "id": "56c09ff6-f899-4f38-a5cf-cfb955938a43",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ccbcc7bc-67e3-43a7-8288-471ca6d459cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2057562c-3a57-4ed3-8531-58dc1b784261",
        "cursor": {
          "ref": "e8c2a2e8-1445-4998-bf5c-40dad03a24b8",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fceb0590-9b88-4179-a58a-f2cf989660f1"
        },
        "item": {
          "id": "2057562c-3a57-4ed3-8531-58dc1b784261",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d5bf538f-eda8-4707-b65d-b1c7c97d70d1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ffd80a56-403e-410f-8b4b-48d5ad069f8c",
        "cursor": {
          "ref": "4b2938f3-5a06-41f1-82a8-27dc4eb532ce",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2bbd4b7b-ad29-4b47-9f08-11eb6d55dcdb"
        },
        "item": {
          "id": "ffd80a56-403e-410f-8b4b-48d5ad069f8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b9082e8c-51bf-4b75-ac73-67d65641196e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d3958-c28a-41aa-8c10-01af9cdc1ce8",
        "cursor": {
          "ref": "5243c651-faad-470c-9793-42bd12e8e81e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "79b9d181-cc78-4993-8e69-92e63693ee7d"
        },
        "item": {
          "id": "349d3958-c28a-41aa-8c10-01af9cdc1ce8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c0ff278-227a-4ff1-ae37-42d0d1bf3b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aa3c02-1970-4b5f-a188-349644674eb0",
        "cursor": {
          "ref": "ba42ac67-267b-424c-9330-173512e2fc38",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c8a2c3f-02b6-411f-9176-ca23cfe2c831"
        },
        "item": {
          "id": "c0aa3c02-1970-4b5f-a188-349644674eb0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a3f954f-48d7-4b4a-b38c-bce1d8674b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa88c66-0ba4-4c3c-8b63-d7e0b16236f8",
        "cursor": {
          "ref": "80924918-dffa-4ee7-8ad9-0acab4af8fbf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9ae05e61-b48e-451d-b55c-7d3a9553d502"
        },
        "item": {
          "id": "aaa88c66-0ba4-4c3c-8b63-d7e0b16236f8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "22aa5b90-8d99-4444-a4f3-653f9d4758b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b2fd6-de41-4808-9e06-96901dcad34f",
        "cursor": {
          "ref": "d2cd53e3-f13e-4d6b-b24c-d7e39087158b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ef5387c5-0904-45c6-a17e-452674fae324"
        },
        "item": {
          "id": "807b2fd6-de41-4808-9e06-96901dcad34f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4aac2338-9a33-401d-9638-39f39eaa30cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057b1c32-5886-4b58-84a2-4aad36addb1c",
        "cursor": {
          "ref": "260c537d-6f95-4086-a03e-0f854e8f237b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2def9c2c-8a2f-4289-a1b2-c68ec4eabe20"
        },
        "item": {
          "id": "057b1c32-5886-4b58-84a2-4aad36addb1c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5e72703b-f688-4202-9a9b-5b87de511bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecb0c48-32b2-4c91-9cca-8ce95fbdf27a",
        "cursor": {
          "ref": "76df5485-8af8-47ad-875c-6d80ab15c41d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "388db7ee-a024-49fc-874d-962703711cfb"
        },
        "item": {
          "id": "2ecb0c48-32b2-4c91-9cca-8ce95fbdf27a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebf81c4e-321b-4e11-b105-ec5709446891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726803dd-388b-4d8b-aae1-ecd54b7f10ca",
        "cursor": {
          "ref": "2af7e32b-9ccc-4ad9-871e-d81d58cf7767",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40f25200-7c79-45e0-8532-90c534c06974"
        },
        "item": {
          "id": "726803dd-388b-4d8b-aae1-ecd54b7f10ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cfda8591-f7f0-4faa-ac5b-04eff3710e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc4c6d9-af83-4712-9277-c9c6c5f155d2",
        "cursor": {
          "ref": "c5d5c71d-da46-4629-9895-19076c1d9deb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "07eeba63-aeac-450d-93f8-6d87fa08685f"
        },
        "item": {
          "id": "abc4c6d9-af83-4712-9277-c9c6c5f155d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e3d37c1-5f64-4f5c-931c-e7bd6b4bda49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc71198-75e6-4072-8efc-70fd399ce1bd",
        "cursor": {
          "ref": "82fda6f2-1569-4a82-b400-bef2cdc22acd",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fec1399f-3050-4dc8-803d-fef651bcdceb"
        },
        "item": {
          "id": "5bc71198-75e6-4072-8efc-70fd399ce1bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3f7d8445-e535-4bcd-b05f-d83c6c669e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f683713-6877-4f77-be12-757c7a2eef94",
        "cursor": {
          "ref": "e735077b-0477-407b-b9d6-dee3bb8a73f3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "03da27d3-5f1a-460c-ae6b-84a76b3231a0"
        },
        "item": {
          "id": "2f683713-6877-4f77-be12-757c7a2eef94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b63955e6-2df5-47c2-ac6e-7e8ea6c73b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bb0662-dd66-43ad-b254-e9edac4b87c0",
        "cursor": {
          "ref": "b2897663-fc5c-4332-b57a-3609df325073",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6c5fd612-c92b-40d4-9c69-d6cbcbbf503b"
        },
        "item": {
          "id": "31bb0662-dd66-43ad-b254-e9edac4b87c0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0e31533-14bb-4d5b-a088-abd4bdd901be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355c16ef-875e-4183-ae72-32aa72055db0",
        "cursor": {
          "ref": "8a03a6bd-6ad4-4679-b759-f733b1a484bb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "530964fd-d93a-411b-b9ed-2344f8142d07"
        },
        "item": {
          "id": "355c16ef-875e-4183-ae72-32aa72055db0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a788f9e-f4b1-4542-9d23-d15a09dbc0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3454a77-68e3-4aa7-8654-6fbbe0d07218",
        "cursor": {
          "ref": "decc28bf-88b4-482e-8e6f-01a4b6c45b82",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f6742c01-ab63-41b8-b32b-d91d34949b8b"
        },
        "item": {
          "id": "f3454a77-68e3-4aa7-8654-6fbbe0d07218",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ef78b783-0c64-4e4d-a2a7-c1a01a6dcb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d9020e-ac94-4503-a0af-b34a6ac60636",
        "cursor": {
          "ref": "23453f15-146c-4818-bc7d-595ff98b9428",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bdea0f95-fab9-4d71-ba4b-43c5706006ec"
        },
        "item": {
          "id": "18d9020e-ac94-4503-a0af-b34a6ac60636",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74b8f08b-5811-4ea9-b7d4-0d5626024c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95aad13-e3c0-4d33-914c-1b434321d996",
        "cursor": {
          "ref": "bf771850-4472-4b10-a470-859363fd50b4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "83b52c78-8e71-4427-abf2-d96b0a0cdf5a"
        },
        "item": {
          "id": "a95aad13-e3c0-4d33-914c-1b434321d996",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd0159cd-444f-41f6-85e0-495bad9327bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c719d263-864a-4127-9eae-fd1c7a02d661",
        "cursor": {
          "ref": "15f0264c-c01f-48f9-9922-4d2335fc5766",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "210aa170-0e2a-486a-a693-f2033fd7d83c"
        },
        "item": {
          "id": "c719d263-864a-4127-9eae-fd1c7a02d661",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7d8dc99-d1c4-4924-83bb-3d975699470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9db6c91-44dc-49be-82e0-01f718885519",
        "cursor": {
          "ref": "c9d10f92-dadb-4cda-b4b3-9711aec527be",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bbc99d00-d6fa-41a8-b623-d64a05ae23cb"
        },
        "item": {
          "id": "f9db6c91-44dc-49be-82e0-01f718885519",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6bb420d2-d752-4bca-87cc-43e7f0e8c656",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "f8a264da-fd16-4d44-aa17-6b773320f28b",
        "cursor": {
          "ref": "9dc203fa-68ef-4701-b9a2-8a253fe6043c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9852aa13-55ab-4870-a8bb-9859de11e75e"
        },
        "item": {
          "id": "f8a264da-fd16-4d44-aa17-6b773320f28b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31cb2e1d-e4e5-4a57-804f-93479f00e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ac44e2-6f89-49f7-a41f-3202ae2f6f42",
        "cursor": {
          "ref": "a75a4c1a-5498-40c6-abb9-774839412b44",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1e8d6ce8-51f2-4e27-9bb3-083aca666234"
        },
        "item": {
          "id": "44ac44e2-6f89-49f7-a41f-3202ae2f6f42",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3792878-7980-4d9c-a589-9927bde6f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c271ba8d-c3a6-453f-bceb-64558414f1eb",
        "cursor": {
          "ref": "f6f0b584-b5b8-4d9e-9b32-020feb1d1af5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "057c486a-d9ee-4db4-89af-ba817c21e7bb"
        },
        "item": {
          "id": "c271ba8d-c3a6-453f-bceb-64558414f1eb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bfbdd357-ab20-41b7-92e2-b0838f8d4028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a82d68-950f-4a61-b9b0-fd0f5a9da80d",
        "cursor": {
          "ref": "e8f48ab7-516f-4181-ab5e-df65b22378f2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a590a088-c2e2-4a7a-8389-1a13748f94ac"
        },
        "item": {
          "id": "c0a82d68-950f-4a61-b9b0-fd0f5a9da80d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f28f690-9921-49bf-9d57-6b83859941d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9c4cd6-926d-4a38-bd90-5d3dc02e2840",
        "cursor": {
          "ref": "cc3040c9-4df2-4995-b862-285e3eba5972",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b376e05-52d3-41f1-9f19-6ce33cde93dc"
        },
        "item": {
          "id": "cb9c4cd6-926d-4a38-bd90-5d3dc02e2840",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "23de6cfa-2447-412f-9496-60f670bc8358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51102ecc-bd71-4de5-a6e7-7ae2c820abb2",
        "cursor": {
          "ref": "781bff9b-c71a-4284-b771-3c2a1807399b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e2a3f744-730c-40f7-bc91-97ff051ded8f"
        },
        "item": {
          "id": "51102ecc-bd71-4de5-a6e7-7ae2c820abb2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df85af6f-357b-4298-9f11-020237d05ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b410d2-6c18-4707-a1bc-3d067df56d02",
        "cursor": {
          "ref": "15de7805-d8e6-4b42-ac20-4ded0d0ae893",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4543ab0-6e18-4205-b899-d254ddb76cf4"
        },
        "item": {
          "id": "85b410d2-6c18-4707-a1bc-3d067df56d02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a05915c-c272-4492-bf2f-8b5c3fdb6cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad6600f-3443-489f-a07f-fcd80e9fb274",
        "cursor": {
          "ref": "6229a918-f78f-48be-8a81-b92cae564fcd",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "359e4d3e-e34f-4c7e-82a3-579ebfd8b779"
        },
        "item": {
          "id": "0ad6600f-3443-489f-a07f-fcd80e9fb274",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6fef3624-50f3-4bb1-8054-5d2b0ddaac13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "cfeccdd5-463e-4abc-95ae-2c622dcb38d9",
        "cursor": {
          "ref": "d00a0a66-946d-4285-963e-4524a13d6b25",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c2e30f3-caea-4b90-a8da-86691f6089e1"
        },
        "item": {
          "id": "cfeccdd5-463e-4abc-95ae-2c622dcb38d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b8ed56c-732a-4e0f-bf94-fa2dc4dd3e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8942db6-7f88-471a-abb2-9e96c942313a",
        "cursor": {
          "ref": "567f4a93-6823-4b18-9927-46a4064671c4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1da1b407-5a13-42ff-b83f-e7b5c6470f10"
        },
        "item": {
          "id": "b8942db6-7f88-471a-abb2-9e96c942313a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "912f197f-e733-4dc3-b959-c4d60068caa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c8eb0-6dda-4e97-8e8e-26507bbf2659",
        "cursor": {
          "ref": "a1256aaf-bb1f-4a07-bbf8-71cbd0d35b10",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "daacafa4-f3a6-40a3-a5b4-7b875f309c01"
        },
        "item": {
          "id": "e70c8eb0-6dda-4e97-8e8e-26507bbf2659",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2872b98e-e0a0-4ef2-a16f-9cc94eeb19a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca2cdf6-f01c-4161-baba-c05df5d5fb95",
        "cursor": {
          "ref": "5a67c109-3fed-470e-a2c8-abf147eb14a7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22e13ea0-044b-4dce-8932-c4f7ecb1600e"
        },
        "item": {
          "id": "dca2cdf6-f01c-4161-baba-c05df5d5fb95",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7ce6718-7593-44b6-9c71-58f1e0c9db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124457a5-6773-4df1-8297-f29c1b8d17de",
        "cursor": {
          "ref": "591f6f3d-c2ca-45cb-8653-60174b7a9f1c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7daad139-0bed-43ab-b0d3-2cc1951ca1db"
        },
        "item": {
          "id": "124457a5-6773-4df1-8297-f29c1b8d17de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dfab2061-a186-4a17-bc01-dc434864d303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdcb1d6-1bbe-4c32-8756-801f7d681b5b",
        "cursor": {
          "ref": "643db2b2-5331-4027-befd-d189e1077053",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f58bc49a-e5e2-4ea3-89b6-f518674be7d6"
        },
        "item": {
          "id": "1bdcb1d6-1bbe-4c32-8756-801f7d681b5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b7c979eb-1be9-4aef-a431-6edf638629bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba153a-8eb8-481f-a3ae-d931037dd2d4",
        "cursor": {
          "ref": "9271be9a-1faf-47d9-9614-36387b626a4b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "20009f22-fc21-424b-83dc-6ccb3c6949d1"
        },
        "item": {
          "id": "79ba153a-8eb8-481f-a3ae-d931037dd2d4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3b913f66-a3db-4846-b98b-ab8ca9393e07",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "1de82e05-d25f-47cf-bbc6-6f2ae75d62d5",
        "cursor": {
          "ref": "383b996a-a094-439c-8d23-ae919efe20fd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "08cd2ea1-68b1-4342-b73e-709ffa25dd99"
        },
        "item": {
          "id": "1de82e05-d25f-47cf-bbc6-6f2ae75d62d5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e592b1c5-9465-4aca-9e88-89592b818c16",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "65f57d16-442b-4bd4-a782-b705ad011163",
        "cursor": {
          "ref": "3a01a745-a41e-475f-a542-8faca31e1a2b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9e2da0e3-d4ae-449b-bfaa-cfbcbf65b227"
        },
        "item": {
          "id": "65f57d16-442b-4bd4-a782-b705ad011163",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "26c00409-69be-4e0f-9d54-54b5d03db3d8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "e4dc5227-45b4-4eb5-8a6d-ed7dfc20fed7",
        "cursor": {
          "ref": "4acc4b2c-3cfb-44ac-b5c6-7ef9f7d0e787",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c3504826-466f-4a0f-bc05-5f9cf706f640"
        },
        "item": {
          "id": "e4dc5227-45b4-4eb5-8a6d-ed7dfc20fed7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b389f7e2-1583-4f45-855b-6aca1c5192eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "3cc1fade-0256-4ca5-9c32-bdac9adab5b7",
        "cursor": {
          "ref": "4b39a9d6-da18-4668-961f-9c03466f05e8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9e9eae18-972e-4420-b7f4-83a31343062f"
        },
        "item": {
          "id": "3cc1fade-0256-4ca5-9c32-bdac9adab5b7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "839dd631-92ba-4c43-813a-a174c9388c92",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "af1d3af2-dcf2-404e-9e73-0327befb55eb",
        "cursor": {
          "ref": "61984a17-07d7-426f-8add-b0923e023d6b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b1fb3305-e2b6-4267-946b-399b7fc05821"
        },
        "item": {
          "id": "af1d3af2-dcf2-404e-9e73-0327befb55eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ede2fb6f-4bd2-4739-b5c1-d60820062f49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "3b09004a-4a5c-4097-aab5-186c24395812",
        "cursor": {
          "ref": "bb3cfa8e-2304-4df8-bc59-b65c2787fc7c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d6ddc6f-242d-451c-84f4-fb1568172f6f"
        },
        "item": {
          "id": "3b09004a-4a5c-4097-aab5-186c24395812",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7913fc29-3bb3-4a73-99c1-5a018afd2401",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce2cbc-0a96-4038-b7c1-655c8156cf6d",
        "cursor": {
          "ref": "f4b2f58f-22c8-4d83-9646-e84081749a1e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "624fbff4-9237-47e3-8ef6-91069dfdebf7"
        },
        "item": {
          "id": "64ce2cbc-0a96-4038-b7c1-655c8156cf6d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f6263bb2-2f8a-482d-800e-de07aba5e69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da59df8d-1e2c-42d6-a7f5-2ec368d75fd1",
        "cursor": {
          "ref": "1925aa4a-3cc3-4c28-8773-8f915f9d54dd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "28613c33-06ce-4e1e-9e1e-2f727485ae33"
        },
        "item": {
          "id": "da59df8d-1e2c-42d6-a7f5-2ec368d75fd1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "64268bb9-b6b0-45f3-8a13-fbc3ca8d1697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e073f-a052-4034-9c01-5f6d8e14c637",
        "cursor": {
          "ref": "eb908a2c-1681-4ddb-a268-9aae375b65c6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "290159dc-79ba-4bb2-95f2-c8d138649624"
        },
        "item": {
          "id": "b67e073f-a052-4034-9c01-5f6d8e14c637",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4e7bdd18-f9c0-49d6-9d84-94de6747cd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36e5b9-7fcf-40f4-9454-760d2f75320a",
        "cursor": {
          "ref": "ffed6fe3-3ba0-4b0e-adab-4f4e10356b64",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3a797ad5-6356-4dd8-bf90-cac3c8c08d4c"
        },
        "item": {
          "id": "ba36e5b9-7fcf-40f4-9454-760d2f75320a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5fd7237e-fc85-43bf-9844-afbc4c549760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434de1f7-e34c-4eeb-9394-28b8cf13748e",
        "cursor": {
          "ref": "f541bc00-4255-4cf3-b626-91b61de60233",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4187760f-ce15-4bf3-bb6a-e9c39b5fa0ef"
        },
        "item": {
          "id": "434de1f7-e34c-4eeb-9394-28b8cf13748e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "38c66ed1-29d2-4690-8a3f-a5d4a8eeaba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc177b95-b2ff-4e06-837f-440a4ed3530c",
        "cursor": {
          "ref": "3ec8561d-243e-4519-bd75-4864324976c7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "931a0e5c-b714-40a6-9ab6-c59910e3546f"
        },
        "item": {
          "id": "dc177b95-b2ff-4e06-837f-440a4ed3530c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a2bfce64-5fe5-4d08-aa47-aac269271416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa8e93c-7d0b-4480-a5bb-728c8c37b8e2",
        "cursor": {
          "ref": "d4b656f1-0302-4745-baa4-90b3e2c85846",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fb09084a-b07a-4681-936c-41e8059defe7"
        },
        "item": {
          "id": "6fa8e93c-7d0b-4480-a5bb-728c8c37b8e2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a11b6567-b778-4279-af94-5fa2fe5ef0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957aff7f-304f-40d7-8bbf-4d2a8f136dee",
        "cursor": {
          "ref": "59e2fa5c-69b0-469f-8bfa-0140f537bb61",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1bdd8352-9c61-4190-9a79-400f228987d5"
        },
        "item": {
          "id": "957aff7f-304f-40d7-8bbf-4d2a8f136dee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7d957702-249d-441d-b62b-3d61284d5e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5032b9ab-dc6c-40c7-98de-7bfe721e8084",
        "cursor": {
          "ref": "463a7bf8-1961-48be-b3d1-3854e91b87fc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d1955545-8360-4e3c-b6a1-8b8d3098141a"
        },
        "item": {
          "id": "5032b9ab-dc6c-40c7-98de-7bfe721e8084",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "32d11505-a0b4-43d4-8f87-68ec37cf33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66339cc-f4f3-4e38-87cf-6bfaa33c66c3",
        "cursor": {
          "ref": "a5e859f4-252a-4c06-88a0-532a3932e30f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b8288200-13bf-4334-9e67-3c508e5a15e6"
        },
        "item": {
          "id": "d66339cc-f4f3-4e38-87cf-6bfaa33c66c3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b3272b9a-4f10-4c8e-85b6-1d050a94083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa30f6da-4e10-417e-8e41-be620af86df4",
        "cursor": {
          "ref": "5684e263-a7f6-4e85-afe7-a22c39a58b43",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ac066c9f-3d93-441a-b762-d45f63e7ee77"
        },
        "item": {
          "id": "aa30f6da-4e10-417e-8e41-be620af86df4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f906ca70-c610-495f-a581-0980e4c3c1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eeca55-c657-45e8-b5fb-4e2bed7e31f0",
        "cursor": {
          "ref": "efe0fe65-964b-493f-8173-2b3278d27cb7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7c23ce0f-7d98-4f2f-b10b-07e5756e9050"
        },
        "item": {
          "id": "30eeca55-c657-45e8-b5fb-4e2bed7e31f0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1cec04df-fac2-498d-a20e-aa0bb198c773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fd2c72-6679-4064-a636-fd141e6dabe0",
        "cursor": {
          "ref": "168a664f-eb60-4f11-a606-a809ea98e648",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1ee0b754-f82a-4036-90cf-cdf243617a61"
        },
        "item": {
          "id": "b0fd2c72-6679-4064-a636-fd141e6dabe0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "857bc451-803d-4463-8dea-528e890cb1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff679ad5-6829-45aa-8d9a-81d13e47be13",
        "cursor": {
          "ref": "af6ccc42-7014-4888-b529-0c8b1ae58084",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa97f26b-ae42-4b71-9c66-46defba7ba4f"
        },
        "item": {
          "id": "ff679ad5-6829-45aa-8d9a-81d13e47be13",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1349f522-3e0e-4006-a560-ded282bb0cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08e20fa-36fd-4609-b752-7960ea87c79c",
        "cursor": {
          "ref": "f4b73f5e-9de8-4285-9205-d48432d0d580",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ee50aa4f-5471-41d7-a41a-b1082569f695"
        },
        "item": {
          "id": "c08e20fa-36fd-4609-b752-7960ea87c79c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "141c3b82-4553-4715-8b96-68c94e41abae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b253176e-e4cb-471f-a95a-5386af8767f9",
        "cursor": {
          "ref": "c384fb0c-c943-4440-9042-0daaaf825cc9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e20f55ed-fb89-4f5c-8f39-1df9d595bf6d"
        },
        "item": {
          "id": "b253176e-e4cb-471f-a95a-5386af8767f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ceabdf5-181e-408d-8eaa-1de2cbf436ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ea61df-375c-4c39-b909-746cb29d6df0",
        "cursor": {
          "ref": "cbc4691d-dce4-4e10-b707-9adbe39e1377",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1c93d433-6a92-4225-b2f9-efdbf157acc7"
        },
        "item": {
          "id": "56ea61df-375c-4c39-b909-746cb29d6df0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "35cbc223-fc3d-4670-9520-64ce0ef7b56b",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9bd4e2b8-0123-4746-aa9f-bb72f03fcc68",
        "cursor": {
          "ref": "4e94d51e-5a49-42a6-a9e9-8f07003f2534",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "469b7602-e8e1-4d67-b23b-6b7de56c75ac"
        },
        "item": {
          "id": "9bd4e2b8-0123-4746-aa9f-bb72f03fcc68",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d30a6a33-6098-4b2e-b934-d5ba7fdf7ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2ea5eb-04d4-48a3-8619-ab10276d63bd",
        "cursor": {
          "ref": "20eb4286-bee3-4b10-a714-ed2d7acba503",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b3c2a6d8-6cbf-4a48-9c82-3d61c472274e"
        },
        "item": {
          "id": "0b2ea5eb-04d4-48a3-8619-ab10276d63bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40f1477a-1d02-4afa-8f4b-dad6bf38c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6a4b7-0195-44cb-bc57-932c63c9cd9f",
        "cursor": {
          "ref": "06cbc564-47bb-44e4-9e02-29af407b99bb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1f8ef892-f6fe-490b-9de0-d8b7c089c953"
        },
        "item": {
          "id": "cca6a4b7-0195-44cb-bc57-932c63c9cd9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aee4ad5e-078e-4de4-801a-8a632f59b165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53fc146-1101-4f4e-80b5-f04bd267a9d2",
        "cursor": {
          "ref": "e2d132b9-5f38-4661-87a3-90662767d557",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b7b4b8f-5259-41f6-8c3b-06841084b5ba"
        },
        "item": {
          "id": "b53fc146-1101-4f4e-80b5-f04bd267a9d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "14555a3a-698e-4a7f-a2cb-da1fea2a37ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2177a07-9147-420c-a3df-4bf229530630",
        "cursor": {
          "ref": "bc28197a-0640-4066-a370-08ffb3893818",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dfcc7118-cc06-40d2-8dab-24dee2a10d5e"
        },
        "item": {
          "id": "c2177a07-9147-420c-a3df-4bf229530630",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "56e5a39c-41c2-4a15-92c5-71def1c9af0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642392f4-f66d-4753-9fbb-7f921f730910",
        "cursor": {
          "ref": "4902a254-655a-4dfd-b590-9cd5591446a7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1aae0c41-2e06-45c4-be83-3e1bc7629c30"
        },
        "item": {
          "id": "642392f4-f66d-4753-9fbb-7f921f730910",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9695b371-b9b2-4c15-8e4d-fea6aa0d2c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cde627-ae9b-4512-912b-23c4e6fb303f",
        "cursor": {
          "ref": "34dfceb0-0ea0-4ce9-ae70-3f762d66e8d0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e8e4c4d9-efdd-4e6a-97c6-89f07ff84ff7"
        },
        "item": {
          "id": "d5cde627-ae9b-4512-912b-23c4e6fb303f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dfe76cf9-a3e2-4d9d-bc5e-8129be411fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979642aa-7a88-42fb-a2c6-f74dd952de38",
        "cursor": {
          "ref": "21bd7fe7-31b0-4580-92f4-aab7523fe43a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e1238184-402f-41dd-8e5a-e6e375a2f15e"
        },
        "item": {
          "id": "979642aa-7a88-42fb-a2c6-f74dd952de38",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "306b3c96-4744-4842-b544-9c00e4b6746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6077863-23d8-472b-b7e0-697d9d820f8b",
        "cursor": {
          "ref": "a29e1e05-52ac-41cb-b3d3-d3638a888939",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c9b0eea-636f-4f8d-9f82-a1874f19b367"
        },
        "item": {
          "id": "c6077863-23d8-472b-b7e0-697d9d820f8b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "47d6a322-1259-4156-ba38-a87d41b08c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fbdb64-6304-4dd4-ba38-4f1ef7012fd4",
        "cursor": {
          "ref": "50b13a40-5e8b-4778-8c80-c4c522bc13de",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db9b9371-7b51-43e5-9ce6-8e61ddb337e2"
        },
        "item": {
          "id": "a0fbdb64-6304-4dd4-ba38-4f1ef7012fd4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "23fd8afe-daa3-4279-a358-6838ceee72cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1244f19-ab49-43e5-b4fa-2590468e66da",
        "cursor": {
          "ref": "91213d94-8c44-4f87-a6eb-db187f264278",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ceb432b1-b29f-4a00-b8f7-2c50c0cd4ed6"
        },
        "item": {
          "id": "b1244f19-ab49-43e5-b4fa-2590468e66da",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ee3a6dd5-edd6-4a81-adee-7662ecbaba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe651c7-15ec-4a29-bdde-2f070a70c765",
        "cursor": {
          "ref": "4ff72324-33c9-4c4b-b280-d924aa3a8ecf",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89ca12e8-5e32-42a0-9749-1438ed22fb45"
        },
        "item": {
          "id": "fbe651c7-15ec-4a29-bdde-2f070a70c765",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c709265c-3a2f-4892-a1e1-ef5313e9dd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0a40d-6c1c-4de3-a0b4-c94883f6abe5",
        "cursor": {
          "ref": "c8c11420-8c62-48ae-b7f6-f1570eca9c95",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4393f941-5822-40af-a9be-38eb76ea5220"
        },
        "item": {
          "id": "fde0a40d-6c1c-4de3-a0b4-c94883f6abe5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f80622cb-87fc-400d-8daf-d5bd34cddb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec543c6-26e2-4a92-ba5b-bde537ffacc2",
        "cursor": {
          "ref": "925026cb-1b3f-46cb-983b-872779f42b36",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d502c324-9758-4d54-b81a-c542ca25d48a"
        },
        "item": {
          "id": "fec543c6-26e2-4a92-ba5b-bde537ffacc2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7f5f1488-c914-43fe-8606-82e9232143f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ec8e90-1dd8-4f6f-bddc-bdfbe2748548",
        "cursor": {
          "ref": "f70d4c91-95bc-4c0d-b1f4-abb432c78c09",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8d5a7268-8a6a-40a1-914e-9736f043bd53"
        },
        "item": {
          "id": "a7ec8e90-1dd8-4f6f-bddc-bdfbe2748548",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9898c316-54d0-4b2c-b0d2-78d2400bfce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f364c04-6cde-4b48-8d42-e7b11ba787ca",
        "cursor": {
          "ref": "45758a8c-dc15-4dfd-adb6-645ceedf9407",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4dde5cb-1e37-45e3-bec7-bbda3b4c55f9"
        },
        "item": {
          "id": "7f364c04-6cde-4b48-8d42-e7b11ba787ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a98442f2-da5a-42fd-af1f-881bfe0ee09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f0a14c-66f8-48a0-89c5-364471a80ff7",
        "cursor": {
          "ref": "fa76842b-bc33-4687-afad-5f6865c4f46b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e1993d83-aed1-44f9-8e60-2e95c3788b4d"
        },
        "item": {
          "id": "46f0a14c-66f8-48a0-89c5-364471a80ff7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "64b10958-b1eb-431a-a026-323753bc4055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e39eb9a-237f-428b-afd4-18cfc1b34a47",
        "cursor": {
          "ref": "4242ff00-e6b5-414e-b92b-7ecf4649047b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7b4c6e59-edd5-4d01-aa1f-5672fe28671e"
        },
        "item": {
          "id": "4e39eb9a-237f-428b-afd4-18cfc1b34a47",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "165d294e-a2ad-4eaa-87e8-0f80a5d85b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bea6e0c-d38f-4adb-b72b-32a8bd02fdd9",
        "cursor": {
          "ref": "a1dfc3ef-6d66-4282-b740-922c39ab250c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1ccf23c6-c111-4eaf-821e-0416fc16d903"
        },
        "item": {
          "id": "5bea6e0c-d38f-4adb-b72b-32a8bd02fdd9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2d038265-a17f-4276-afe8-f1f88b54a3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dbdd7a-5b90-4f9d-b213-9f2823b497ed",
        "cursor": {
          "ref": "126514e7-7176-4c7f-84eb-3816b0fbd243",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6af916bc-e8a4-4db2-953a-e6346d3a8bb0"
        },
        "item": {
          "id": "87dbdd7a-5b90-4f9d-b213-9f2823b497ed",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c1e505f7-bfd9-4801-82d9-ddd5393e2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb476c35-9390-4060-bdd7-3bf89a064a8d",
        "cursor": {
          "ref": "0832561f-7580-4949-b244-08dce9b9f9ec",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1c9eddd2-0b89-421c-8935-b1780cc5b41a"
        },
        "item": {
          "id": "bb476c35-9390-4060-bdd7-3bf89a064a8d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5e48c7e6-e491-4917-8eb9-10f68218ccda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e202d963-3113-45b6-bc18-b6c266c1c619",
        "cursor": {
          "ref": "4a7709d8-631e-439e-a8fc-ec2d03511add",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c22a8d2d-a075-4fab-afb6-71b4384ee52e"
        },
        "item": {
          "id": "e202d963-3113-45b6-bc18-b6c266c1c619",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f6c4c620-1de4-4cec-b352-48eae0d9dafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffaac96-fb11-4e2a-bed2-3cb4d28c3eff",
        "cursor": {
          "ref": "0eff83ea-9635-4c24-a674-07ff7fb6fee4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e6c8d94-ccf8-4bb0-984f-4a3210067be0"
        },
        "item": {
          "id": "5ffaac96-fb11-4e2a-bed2-3cb4d28c3eff",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c99e87d1-506e-4a78-b1c6-2fbbebdb5eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70881bde-8a09-4672-87aa-ecb248273ff7",
        "cursor": {
          "ref": "56eda23a-d556-470b-9ae7-79e1057595cd",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a5d78ff8-ab55-4acf-bcd6-114d0362b498"
        },
        "item": {
          "id": "70881bde-8a09-4672-87aa-ecb248273ff7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0a619307-1da1-4df8-bae6-5a8513455de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea93cb31-2f67-4acd-985f-cd8f902c3d0a",
        "cursor": {
          "ref": "a40437d6-bfaf-45ac-a632-2f39edd37baf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2abd4498-582f-4810-8a82-295fb55a5789"
        },
        "item": {
          "id": "ea93cb31-2f67-4acd-985f-cd8f902c3d0a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94e4e0c9-01b1-4af5-bd85-69b2f6662744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ef666-e0e0-4320-8984-88b5277d0989",
        "cursor": {
          "ref": "de6fc310-5a48-41e3-b035-7c7760cdb7df",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f13a0c8b-6e7e-4e55-85b5-da33a8330029"
        },
        "item": {
          "id": "9d8ef666-e0e0-4320-8984-88b5277d0989",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f9e36ea-8f5c-46a6-ad2f-398c584b5a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1344f6a-efc4-4da5-9ab0-b56be8da2e4b",
        "cursor": {
          "ref": "2afb05c3-08fc-4d33-a224-3c04e68f027f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7b510111-6d37-48c7-bf6a-1fb8e7018aaa"
        },
        "item": {
          "id": "a1344f6a-efc4-4da5-9ab0-b56be8da2e4b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6363bde4-29a4-4d01-b5e5-5366f52ea0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1415829-5178-4c78-9fda-266f12eaf416",
        "cursor": {
          "ref": "c5b6d23a-aff6-4f43-913e-f87c4002c2ae",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d4347243-f838-4e18-a127-f29da9c34f3f"
        },
        "item": {
          "id": "a1415829-5178-4c78-9fda-266f12eaf416",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "934b095b-58e7-42be-9043-21cb1dbfd31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1266e1a8-bb96-4e69-bec5-1e0c72cf40ce",
        "cursor": {
          "ref": "072ee013-f211-423f-b9ab-bfdee0d43ff1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d8c32e41-c210-4a23-8f91-e84195c0b2ca"
        },
        "item": {
          "id": "1266e1a8-bb96-4e69-bec5-1e0c72cf40ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff07bf3a-27ee-41a9-9d1c-a2e80361cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcc75d4-3501-48bd-b082-3afe27d7b0ab",
        "cursor": {
          "ref": "bbe2b557-82aa-4f59-ab2e-8b907517bfa5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68ddc780-600c-44b4-86d9-dd03a5f9b37f"
        },
        "item": {
          "id": "8bcc75d4-3501-48bd-b082-3afe27d7b0ab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "655cc59b-b4a7-4a12-a21f-bff4c80a663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd95330-281b-4c91-9977-2b7fee143395",
        "cursor": {
          "ref": "3e6f258c-7d17-46dd-a838-f20c90981407",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6cb3b95-d89a-4ed6-bc33-8f670c606abc"
        },
        "item": {
          "id": "3bd95330-281b-4c91-9977-2b7fee143395",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c95fa54c-3ffb-4bec-8244-01122ec27d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22339d2a-e6a2-4303-9330-baf4538ae28d",
        "cursor": {
          "ref": "f8ca87f6-4c50-46f5-9e05-968243376adc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e66ccc56-c398-4720-88c6-168a6e0270ef"
        },
        "item": {
          "id": "22339d2a-e6a2-4303-9330-baf4538ae28d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71f80da9-44e8-4b83-b7e6-78daf7f8c964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa00cdc7-5376-4290-acce-581446437f0e",
        "cursor": {
          "ref": "59e88dfd-9cce-4eed-9284-3ba4ef403e9f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3f35c6f0-16ab-42c1-8930-9aea5c1a3a59"
        },
        "item": {
          "id": "aa00cdc7-5376-4290-acce-581446437f0e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b6c4052a-5bda-458c-8086-e5d680349240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa1964c-d330-4aaa-b80b-01c393727dcc",
        "cursor": {
          "ref": "ffb3ea32-ed78-458f-a888-5c4a4da9a8de",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "114fb09d-e89c-4041-bba4-b528dc5f4a42"
        },
        "item": {
          "id": "9fa1964c-d330-4aaa-b80b-01c393727dcc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "30164d3d-b267-4b81-9994-0e2777b08d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b3501f-3462-40d1-b6f2-b99aaef1854e",
        "cursor": {
          "ref": "725632e6-6083-4400-9a75-da326f81b0da",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "47a49234-e09f-4111-bf6a-35926599fa1d"
        },
        "item": {
          "id": "b7b3501f-3462-40d1-b6f2-b99aaef1854e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "348015a2-547a-44a6-8f9d-e79440c73929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f9a7e3-d1e1-4d8a-aa88-b222494d8b4e",
        "cursor": {
          "ref": "646cce6f-8db9-4e72-8582-6f17c46eac7b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a518f2d6-edac-4e4a-ae70-23e2369ef801"
        },
        "item": {
          "id": "a5f9a7e3-d1e1-4d8a-aa88-b222494d8b4e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "157467a7-48ca-465f-b2d8-fe162ad387ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e0b005-460e-4663-bee6-5ce006f7c502",
        "cursor": {
          "ref": "6f6ada19-1b00-476d-8168-9d0bd943a615",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "47c40def-d8d7-4b2d-bad5-c98354610fc7"
        },
        "item": {
          "id": "00e0b005-460e-4663-bee6-5ce006f7c502",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa12ce50-7108-4d40-8caa-6a7f4a34c67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0b7c51-3858-4612-9501-dd3c7acfc05c",
        "cursor": {
          "ref": "850c2552-c07f-45eb-8253-ba41307c5418",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "74ecba94-2abb-4aa5-922d-200e9dc9cabc"
        },
        "item": {
          "id": "bd0b7c51-3858-4612-9501-dd3c7acfc05c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2ad01531-3506-47cb-9534-8652f06e3a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b03ae0-73bd-4829-9b60-e0e967a45380",
        "cursor": {
          "ref": "b3460400-ff92-4932-a78d-18820bc91537",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2b56af20-4828-4edd-9ea5-b9a8492e7524"
        },
        "item": {
          "id": "15b03ae0-73bd-4829-9b60-e0e967a45380",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "340218bd-1c4c-4f53-a7be-786ac661bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91d2c8d-7e79-4f34-8179-f092b1ce76a9",
        "cursor": {
          "ref": "01fd8cab-ceec-4470-bbbf-41980570a548",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8d18291-2992-48fb-9bb7-6ca2bc2d2343"
        },
        "item": {
          "id": "d91d2c8d-7e79-4f34-8179-f092b1ce76a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a6903b93-6f8b-46ab-b018-2bb6f2f91b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85c23d3-f522-42fb-bf86-8e182f4d1dbc",
        "cursor": {
          "ref": "f080914e-d1f2-4bb6-a774-d61006cfa0e7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ec905b03-204c-4149-82e7-a356784dec00"
        },
        "item": {
          "id": "e85c23d3-f522-42fb-bf86-8e182f4d1dbc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c1f4a8c5-b0b5-4b2e-a972-1c620cadca9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3032312-ce85-4698-b62d-7335f59f0b98",
        "cursor": {
          "ref": "5c264362-ea49-4393-9b64-75b66a7e03a8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a013586c-24d5-4b1a-8805-b68f48c05836"
        },
        "item": {
          "id": "b3032312-ce85-4698-b62d-7335f59f0b98",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "72e035dd-517e-406b-ae11-1d4f19eea506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f06466a-3ab5-4556-9e39-6e46c76fc7fd",
        "cursor": {
          "ref": "afc8b8ec-cb9e-4617-bf0e-df6f5ca7f8c4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9d6c5892-6ff0-4c7c-b512-cb2015b0867c"
        },
        "item": {
          "id": "3f06466a-3ab5-4556-9e39-6e46c76fc7fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7e26ac49-adaa-49c7-9fdf-d1d3e13eddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04850d76-8c8d-4e98-a8ef-ef901e95bb1d",
        "cursor": {
          "ref": "0399e677-a471-4cf0-8e80-71bdfb5e061a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "18380489-05f4-428f-8f50-ee11192d7a39"
        },
        "item": {
          "id": "04850d76-8c8d-4e98-a8ef-ef901e95bb1d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6bae7a28-06a4-4499-9683-bf4c94937fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f67a6d-607b-43ba-9e20-a930a81341c7",
        "cursor": {
          "ref": "44e3c63d-9e8b-41c1-b136-3cce2da48e58",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d66de539-330c-4fb3-84b8-8adcf161b33a"
        },
        "item": {
          "id": "71f67a6d-607b-43ba-9e20-a930a81341c7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d2ea8105-7672-45ea-b42e-9e55674911c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04d0590-5509-4e9b-8c46-a33c2f596289",
        "cursor": {
          "ref": "42a72a46-e671-4f39-bae6-abfe07223a4a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "277a9d6c-6eeb-4e5c-a060-1d6edea0ecb1"
        },
        "item": {
          "id": "b04d0590-5509-4e9b-8c46-a33c2f596289",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0fa37fe0-bf59-4542-8bb7-6417c99fcac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25a03a4-524d-4ae5-8fc9-7d96a8611bc3",
        "cursor": {
          "ref": "1b649de7-49de-4de7-8c29-fc95fc2eb67a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3faa8f4b-2ba1-4b69-8084-53e231379370"
        },
        "item": {
          "id": "a25a03a4-524d-4ae5-8fc9-7d96a8611bc3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50ce4c46-5fc0-4b2f-a460-ab44d128004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effac7d6-b1f5-45b5-99da-dc6e0071a772",
        "cursor": {
          "ref": "58a03b9c-e5dc-419c-b1af-13e764053a1a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a62c5a14-16e9-4ae5-b46b-589c5c457926"
        },
        "item": {
          "id": "effac7d6-b1f5-45b5-99da-dc6e0071a772",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "26a17d73-f54f-4366-8b5d-7e90bd5198ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf578fa-9d3a-48d3-80b4-600a2cb76c6d",
        "cursor": {
          "ref": "abb8c919-b87e-48c2-994f-ab270311b230",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f25d3135-74c6-499f-8d43-a8d3c1cdefaf"
        },
        "item": {
          "id": "7cf578fa-9d3a-48d3-80b4-600a2cb76c6d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ea4f1189-48e8-4ec2-b23d-966a6e0a33b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc4ca2-bdd6-4d1d-9aba-05c45fe49bf3",
        "cursor": {
          "ref": "9810cbdb-820a-4d51-9e0c-6408bea5b0a3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e079dafc-2fa3-46c6-aeb7-386e61245339"
        },
        "item": {
          "id": "0ebc4ca2-bdd6-4d1d-9aba-05c45fe49bf3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7cc47ee4-62b0-4962-9727-dd9d2fef6686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0060d86-798f-41a7-8f3f-0dfd274ed85f",
        "cursor": {
          "ref": "c8371de0-da73-40d7-9d46-b0095a467920",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "047d548a-e9f4-4105-9caa-85e0e95a5535"
        },
        "item": {
          "id": "f0060d86-798f-41a7-8f3f-0dfd274ed85f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f3739561-f62e-4981-9bcf-037c2a4c216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bda44d-00a6-4c40-a9a0-b519cdc8c457",
        "cursor": {
          "ref": "c297dfd3-9f8f-467f-a49e-a12eed8d5629",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8340f3b-23a0-4f58-ae0f-021ff40efeb8"
        },
        "item": {
          "id": "97bda44d-00a6-4c40-a9a0-b519cdc8c457",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e307e4eb-8aca-478f-8c0e-b7ae0688480c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d67f129-674b-4560-93aa-99edefeb1d85",
        "cursor": {
          "ref": "6723a9da-f6fd-4f49-ae83-d7dfcd23b5da",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8fc7862-38ff-4258-a39c-6a149e24e784"
        },
        "item": {
          "id": "3d67f129-674b-4560-93aa-99edefeb1d85",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "89f030eb-2ed4-4668-8037-9083e54f1287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ad5cd4-0b5b-4b23-9e40-7cbb71b6bac3",
        "cursor": {
          "ref": "c1995030-4625-40eb-9606-2bcd18450e91",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "35d6c203-d380-41ca-baeb-b4037895a57d"
        },
        "item": {
          "id": "e4ad5cd4-0b5b-4b23-9e40-7cbb71b6bac3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "850231c9-356a-4246-98f8-b79bde18bf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879fb639-50e7-46d0-9de2-9a212cf0fc3c",
        "cursor": {
          "ref": "946fb0e3-a682-488c-b1bd-056d7e3de2f3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c625c6e7-1499-4ff2-b333-b3d626ebe532"
        },
        "item": {
          "id": "879fb639-50e7-46d0-9de2-9a212cf0fc3c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1f81b4e2-5d17-4c6d-8e55-23066018e577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187c992a-1d4b-446f-a6e9-74c223f569c5",
        "cursor": {
          "ref": "78e36d5a-49c0-4461-9708-c3aa8e31e8da",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fc2659d9-5f5b-47da-b156-9e85691d230a"
        },
        "item": {
          "id": "187c992a-1d4b-446f-a6e9-74c223f569c5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "07750541-0ff9-4f93-8007-5c8e67d9f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bf9b90-59a4-4689-a779-a91fac9fa224",
        "cursor": {
          "ref": "72e056fc-8dba-42db-8a15-d24b0b79070c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6fa278cc-69fa-4963-840e-f907e6b692f9"
        },
        "item": {
          "id": "b4bf9b90-59a4-4689-a779-a91fac9fa224",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c6259807-0d69-4078-b820-7731a3ac6c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8891317-1ca0-497d-981f-39bbe44800a9",
        "cursor": {
          "ref": "56869678-1a19-4ec8-a4b3-ec91e172e7cd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "844b2778-c547-498f-acf3-376bfae7d335"
        },
        "item": {
          "id": "b8891317-1ca0-497d-981f-39bbe44800a9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0ad701f1-3eff-4ad9-be94-2b73c0a3102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a31018-b3c7-4248-9c2b-8761fce835d2",
        "cursor": {
          "ref": "742d6ce1-1386-4595-bab5-9be53e0979de",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8dd5e02d-9ac8-4f0c-a463-76169419cc43"
        },
        "item": {
          "id": "f2a31018-b3c7-4248-9c2b-8761fce835d2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e12cdb3e-f716-4b56-a8a8-9629a6dc9826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3593a4-bc6f-4c62-b11b-982e4389d9a4",
        "cursor": {
          "ref": "0cd57b54-760e-4957-8ff6-d6d5fe369213",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fe9cbe18-c43f-48a1-b29d-7510e126db3e"
        },
        "item": {
          "id": "dc3593a4-bc6f-4c62-b11b-982e4389d9a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "53f86ef5-1ba8-4d1f-83be-d08a0081f669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb2d081-d67d-4616-9cb2-89c438633c1c",
        "cursor": {
          "ref": "d9041486-d2e4-434b-a207-bd9528bc0abe",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "db565a6e-e030-4edf-a4af-a176f26d3e29"
        },
        "item": {
          "id": "ecb2d081-d67d-4616-9cb2-89c438633c1c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "320f6d5e-3c98-4130-bf53-b38218c548a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b299f774-6721-4c50-b00a-e1ed9759ac5e",
        "cursor": {
          "ref": "d920205a-f9de-4715-8f95-df8fd053f23a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a758685a-81ea-4b0b-842f-88e129c1d772"
        },
        "item": {
          "id": "b299f774-6721-4c50-b00a-e1ed9759ac5e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fe09e2a0-4c0d-4c4f-bcd7-470014e0624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9573812-48bd-42d6-a077-909fc5e0979d",
        "cursor": {
          "ref": "ea64b7bc-67d4-47ea-a048-786ddb393c40",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e2aa3520-0645-48b8-9755-348d8ae4f7ba"
        },
        "item": {
          "id": "b9573812-48bd-42d6-a077-909fc5e0979d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "204fafdc-fa10-4a38-98f1-bbaeb26724d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd1de2-48fc-4e9a-b641-8fe7389f7e2f",
        "cursor": {
          "ref": "ac2ae228-bc76-4410-b83f-442e66c6fb28",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8591c360-14c8-4f40-bd33-54028d609324"
        },
        "item": {
          "id": "e8fd1de2-48fc-4e9a-b641-8fe7389f7e2f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "22628218-8e97-40a9-a436-03a58b6b13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1b1069-7e47-4704-914f-6bccd40d59b0",
        "cursor": {
          "ref": "b69738e9-8b3e-4aad-a864-f25ec1ad121c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a4eb99d7-c228-40a0-97d1-122db1a159d0"
        },
        "item": {
          "id": "7f1b1069-7e47-4704-914f-6bccd40d59b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "91b210a5-285e-47bc-b5c9-2a84ff1b08cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf1779-57e7-4971-a26c-0e24bc43d391",
        "cursor": {
          "ref": "b81901a9-aada-418a-9ece-332a79e2af21",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34f076ed-3c22-4975-a9da-96b4213cd017"
        },
        "item": {
          "id": "dacf1779-57e7-4971-a26c-0e24bc43d391",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "374efcdc-24a2-4df9-99a6-d7253773be5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd2e7c1-b515-429d-bf74-d92ad619f51f",
        "cursor": {
          "ref": "4d54d02f-6dd7-4df5-8ee2-f97395189879",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "19b7eac2-1c26-484b-b3b6-52bcf062abe2"
        },
        "item": {
          "id": "dbd2e7c1-b515-429d-bf74-d92ad619f51f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cb7e63b8-7283-4563-b784-19e4659ea56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fb7d23-e601-42e3-81b8-9d0aeb94cefd",
        "cursor": {
          "ref": "032b943e-64c7-49c3-a6b6-4e1ba547eddf",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "591097e1-9548-4efd-be9a-376543e5122d"
        },
        "item": {
          "id": "b3fb7d23-e601-42e3-81b8-9d0aeb94cefd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b043686e-4a77-4094-8abd-01f1a8f8418e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064d0519-4fca-4f08-a340-5a8412d14a8a",
        "cursor": {
          "ref": "ceb99ce3-b8a9-44bd-b0ba-d909a7270bc5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2224f7fd-e59e-4f06-a1bd-89e13dfb62f9"
        },
        "item": {
          "id": "064d0519-4fca-4f08-a340-5a8412d14a8a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5f13296-93f8-4bfb-b5f0-787ea55340d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65fda75-b554-44ec-8888-48d16f5da531",
        "cursor": {
          "ref": "6752c187-9729-446a-97c8-d361f89d945d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7b0652cd-3df8-48f2-86a7-1584cfc64c59"
        },
        "item": {
          "id": "a65fda75-b554-44ec-8888-48d16f5da531",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c4a30f02-ab73-460a-89ab-9b80ba23095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89891cba-a6db-4237-92af-d0ed03f1f3f4",
        "cursor": {
          "ref": "5779afc9-48a4-430e-a094-5a95765e6ab0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d8643f27-6ceb-4603-8efc-4d1f58ef89ec"
        },
        "item": {
          "id": "89891cba-a6db-4237-92af-d0ed03f1f3f4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7053f830-1c46-4ac7-a735-127370284602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad3e3b1-3cc6-4ec9-a873-aa3d0e28b2f3",
        "cursor": {
          "ref": "05b335ca-300e-46a9-bdcd-363f2a234d20",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1fcdf5db-46ad-4821-946d-15f63377b49a"
        },
        "item": {
          "id": "6ad3e3b1-3cc6-4ec9-a873-aa3d0e28b2f3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b772fac6-c3c9-4326-a507-637634f37344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288374bc-5bcf-4fdd-b33a-a30d95cd1e7e",
        "cursor": {
          "ref": "c7610a46-f3c9-4871-b37b-7385a09c7991",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "543ecb07-412e-4231-a3d0-c611bc0dedce"
        },
        "item": {
          "id": "288374bc-5bcf-4fdd-b33a-a30d95cd1e7e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "591a7b55-f27e-4d3c-b3cb-5ecc6b07f07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e7dc85-aa0a-4523-9add-0f9eb873a3e0",
        "cursor": {
          "ref": "456aea06-f2d1-4aea-b1ca-37971a3a76c4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e28785dc-4226-491e-a7b8-2e9a69b48df3"
        },
        "item": {
          "id": "b3e7dc85-aa0a-4523-9add-0f9eb873a3e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0d26186d-0a44-4580-af71-d92f5ec3b60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af44784e-de2d-4000-985c-840d36a5d14d",
        "cursor": {
          "ref": "375e11f3-6f99-4cad-8a68-0f9a4d7ddad3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aba46e94-f253-4d0d-93c2-6db2166daa73"
        },
        "item": {
          "id": "af44784e-de2d-4000-985c-840d36a5d14d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f769f045-ee6e-4b03-8d10-37ce1fff5ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89ce70b-3052-42df-a9ef-7c8aabef2957",
        "cursor": {
          "ref": "a6e98340-76f7-4d85-8172-6a64a0c52f31",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "56ddea34-8747-49d4-a423-af976d2948a7"
        },
        "item": {
          "id": "d89ce70b-3052-42df-a9ef-7c8aabef2957",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e676cd7c-149d-46a3-9e55-5922ef983a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82cf7f-acd7-4081-824c-653f454577e4",
        "cursor": {
          "ref": "6e8c2dec-6bde-4a0f-816c-a6822aa644ef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "696528b6-e6c6-4826-85c9-cc5fb86c6204"
        },
        "item": {
          "id": "3e82cf7f-acd7-4081-824c-653f454577e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7fdcec77-9f0b-4018-8f6a-1a5daa68391d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a4e572-1b25-4a55-9ee3-eb964555b5e4",
        "cursor": {
          "ref": "7106834a-3d97-4b83-b7f3-6dd87f315554",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "28f74195-71a7-4ce9-8ee2-6715234cfb06"
        },
        "item": {
          "id": "17a4e572-1b25-4a55-9ee3-eb964555b5e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d16ec6d-de99-4b1b-af8e-62180dda8b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8493dc-a977-42ec-bf0d-bfeeeb72f9e6",
        "cursor": {
          "ref": "c5ddb887-0cd8-4c80-9f26-1ee83ccc3fc3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d3fe4b20-b02a-4c6b-9cc1-74f3265cedeb"
        },
        "item": {
          "id": "7a8493dc-a977-42ec-bf0d-bfeeeb72f9e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d82cce31-faed-4a63-b65c-10ef30d53b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8907d77-b2b3-4684-80dc-64df59364ab8",
        "cursor": {
          "ref": "f57ad185-1d2a-4280-9adf-83002cdbb647",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "124fb617-6a0f-4329-bcf6-0924f75ce991"
        },
        "item": {
          "id": "f8907d77-b2b3-4684-80dc-64df59364ab8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "751712b3-b9e7-4f49-b4e1-52a137f9b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91993a40-58d0-4550-a7c7-fc5ae2d758a7",
        "cursor": {
          "ref": "fd5498de-79be-4b7d-97da-ba3931429bb9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b9ad41c-d0b1-4ffd-b23f-e6beb584ba3d"
        },
        "item": {
          "id": "91993a40-58d0-4550-a7c7-fc5ae2d758a7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4bbe1995-810c-4efb-8b20-2ece12145ebe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfc7323-b5b3-4b28-988e-56863ca3f598",
        "cursor": {
          "ref": "78b740d4-6c4a-4797-9307-8794d1388907",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "00c49413-fd3e-4c8b-8844-a1292b1a9d61"
        },
        "item": {
          "id": "cdfc7323-b5b3-4b28-988e-56863ca3f598",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8f49f786-608a-4cdb-958c-46dab787dd35",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "858becd2-2c17-4eea-afb9-fd76c8b38419",
        "cursor": {
          "ref": "5ce2052c-9136-459b-b912-0ff918a97eb8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "205af4a4-0851-4392-ae94-b9f90474cdae"
        },
        "item": {
          "id": "858becd2-2c17-4eea-afb9-fd76c8b38419",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8082efbb-0dcf-40fb-ad08-1f0a0b21418a",
          "status": "OK",
          "code": 200,
          "responseTime": 2443,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba3210-326d-4aac-aa14-7874afbfbd9e",
        "cursor": {
          "ref": "5d849b4e-4304-4b38-9fb2-5964e864579e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "48d9cbd3-4a2d-4e04-97a1-425c289a6bd8"
        },
        "item": {
          "id": "d4ba3210-326d-4aac-aa14-7874afbfbd9e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e1fc15a-391f-43b3-a2ff-572cd7f7ad2f",
          "status": "OK",
          "code": 200,
          "responseTime": 2969,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cef9dc1-ff75-448a-9234-c18e0313dbea",
        "cursor": {
          "ref": "1575ae05-e921-475f-a711-d45f55f123f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2cd0157e-e327-4a2b-93e7-9651ba383242"
        },
        "item": {
          "id": "8cef9dc1-ff75-448a-9234-c18e0313dbea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "950ee19a-2463-4f4a-85c1-c356c0befc01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cef9dc1-ff75-448a-9234-c18e0313dbea",
        "cursor": {
          "ref": "1575ae05-e921-475f-a711-d45f55f123f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2cd0157e-e327-4a2b-93e7-9651ba383242"
        },
        "item": {
          "id": "8cef9dc1-ff75-448a-9234-c18e0313dbea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "950ee19a-2463-4f4a-85c1-c356c0befc01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4667e05-2d91-4786-a793-1f1ea75222a1",
        "cursor": {
          "ref": "e9910476-a22e-429e-b121-d526423d7056",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dc475e1a-a95c-444e-8b61-f0baf3608ae1"
        },
        "item": {
          "id": "a4667e05-2d91-4786-a793-1f1ea75222a1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6c423302-dd7f-4af1-8f24-b731338713eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62203df-67d3-4392-9169-7df746c00516",
        "cursor": {
          "ref": "8d569af8-cdb1-4d1d-8698-96af6747015d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e45a3e17-ce4f-4670-bf46-fda9b0eb864f"
        },
        "item": {
          "id": "f62203df-67d3-4392-9169-7df746c00516",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca2abf6a-6cb1-4c09-8498-b6e58ee18486",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}