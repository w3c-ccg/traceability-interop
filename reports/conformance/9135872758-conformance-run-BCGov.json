{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5f088d89-1fe2-4080-aaf1-7d579cc6c4b9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "652ecc40-7548-4125-922c-c706b8770bc5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63ff261e-7dc5-4cc7-90b3-71c287425227",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44ce9a3b-7824-4e79-a48c-1c175786a847"
                }
              }
            ]
          },
          {
            "id": "54d4d0ad-0dec-4c54-83e2-093928139bad",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "063eee30-19d4-44aa-93da-d9430de10999",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03b467f6-0188-44e2-9e79-4d20a8a6e3f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "147325ba-504d-46c9-a21e-e7cdb23ced7d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3789009a-3b04-4f79-8578-adfcfac530cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbd6375c-eefe-4868-a05d-8dda11961439",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cf830df-dfd1-408f-ad34-965d54b09714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b61002df-ea33-4cdb-8b6c-dd745ce74a9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c0acf17-1288-4b34-be77-58e19e469a42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e4fc27a-f99a-4fd1-bb3a-c4e18620ddb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08cd79db-8362-4676-8416-a0468f13b31b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "001a6516-c119-41b5-b865-b3b422e4b918"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96356656-0213-4eba-9f21-569047c289b6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3fb92489-9e14-49ec-b752-f96915c170b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c16eac-e490-4f4d-945a-54a5dc263cdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f8519a1-885c-4c2a-8291-54241ce2ace5"
            }
          }
        ]
      },
      {
        "id": "a5eba279-f40d-49f2-90d8-2bb4db133609",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f654ac59-e354-4e76-945f-e9416e623f9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5d69852-9aa6-4d31-ae27-b244834f4188",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "022e3879-1ddd-4f73-ab32-4a3644f3674f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180c8c50-c591-4ecd-b3ca-112bac1b06dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "781c0d85-d555-43c8-82d3-1b5952d41ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04abfdc2-7b13-4b34-bed7-703822680ef5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf06664f-a50c-4671-bb31-1e5b6a207513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d8f4f73-eaab-491f-a3aa-155702aadf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0baa2e7-0cf8-4788-8337-effaa97dbe87",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c70d2-d7e3-4350-8581-c62d008869cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14fff526-873e-452b-a672-6f914d7026bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fa8dc37-8ca4-4c7d-a8bd-2c7bdf4ac5f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d585ddf-60b0-4d95-8d7b-b10ae8a5ee16",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dca49e1-2762-4ecc-b297-f54a83d0345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e02794-c171-495b-a782-4b004390fd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b29d148-69e5-4b05-ab92-cde25e6f824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795ab5b5-2823-44e5-8a28-b48dfe86e8c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac0f84ba-f50a-46d6-b0cd-83f855582c06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2df290e-b38a-4254-a1be-fefa118befb5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7bdd6c2-b3b5-48ab-b3b3-b75296da230b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "89f26079-6313-4d60-8f90-2ef01e428898"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bca87a40-0677-4821-a207-61c0c4e82d68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "98693180-6960-444b-b854-cec323ffbf54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a096f2ea-317b-4293-a0fa-23f949913b0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff7f16c2-d6bd-4022-bb82-eecc42dcaf24"
            }
          }
        ]
      },
      {
        "id": "25d123c5-c0a6-4304-98d6-b21542fdd00c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9ba21136-344c-43a2-8671-2680e7bdee1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b84d7424-11ea-45c5-a799-80efdb2298ae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3ebb5fdb-1849-4455-a7da-472a5ba721fc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daafa807-daa4-48f1-81c7-3ee55bd53dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b71ef9-7d47-4611-84f1-031094b6303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8d47c1-6a6a-4d22-a64e-b793da96d320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49d16cd9-fe98-4055-8318-de0ff472f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cfe65d-5d7c-4b5d-b7e6-6ad8106fa718",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1614118a-f4c7-478f-a5f9-f22450703070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63efd94b-01e3-44a8-9082-aa6e725e73db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98044148-6031-4fa5-88dc-1e687cd64910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc25531b-cb83-46f2-b50d-0da0241b7885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db389091-bfd6-4532-8d55-c3c759997b89",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daee9fad-66d5-49dd-92e1-e629f7f26aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb2233f-4e6c-40de-a154-2abc795e14f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31965777-0ecf-4f18-954c-461146bbedd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e4275d-0375-4894-83f8-10de375042df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2278e730-0d70-4d50-b256-9d241a576ed8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5162f5-4649-41ff-894d-c1e282056131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a6da2a-54a3-4307-b683-fb005e6c84a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393db479-9e6b-4c92-b50d-2b813fa0744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ecc98a2-d471-4a31-bef0-9220395f7f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc8626-0f9d-429e-a116-28e50fa9cb66",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b8ea25-572b-4470-943a-3093dd94a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee887054-d9b0-4aa8-a17f-b982cb9f1010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230b1e8a-dd04-441e-9b60-8407f41145d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a2b374-a2eb-47ff-bd91-e8d42b2a27f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24cddb5-5113-4246-bf84-f3a058a80ddd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91adf66-552c-4e4f-8b73-1423c31229ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6ef343-9f17-4051-bcbf-7c77da31229e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89508323-62f0-4586-bf77-3f113183960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1080626a-5f7a-4b17-adcb-37a83e6294c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc7c51b-49e9-4c7c-a450-374566304fa6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b09e210-46bd-40af-974d-3300b394b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1cbd84-a3a7-4d34-bc65-140a982795fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1211920-2a5f-4512-af83-824db1c30cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b157e38-a1a0-4cca-89da-4ca96c9ed469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c310a4-fd66-4704-a5b1-183ac2c008d3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137c7503-5860-447b-a54d-1fb07d128572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039c2208-b56a-47e4-ba39-c950721ea9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1f1220-cd9e-4ea0-9d5b-715f6c451a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0772fdf-beed-4ea3-b8ec-4199e4a20fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821b1168-5c61-490f-9309-f4a919035be6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e64db9-d18b-4e63-8277-bff6644aba5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0fcd1e-94db-45e6-864c-4bb02d417b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbc17c4-05b5-4c51-9f01-0bed61c091a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ce26a13-04df-418b-b6e0-b2716cdd957d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe88cc-04d4-41fc-9725-4fed3801c485",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc74065-ae15-4189-8c38-02729facd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5851d1fa-9044-45a9-9243-cb8896977ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c600c8a-1f20-4a59-b498-f7c3ba497fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf1c966-c2bb-46d7-b7fe-54ddd56a9e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b397b9-dfb5-44d5-ab4e-c2258bbddc6b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a78ad7-b158-4ecd-8429-38049e98a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc1ea67-59e4-4105-a364-1a55556c431f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d63ac20-3638-40e2-878f-8d3f9829b012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a4ef086-4b66-47fe-b9c0-5ccefe1653cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de558ddf-af97-4a40-95d5-835f04914703",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e95cb9a-f77f-49e9-b982-91e8636e41c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b783ad-ba92-445e-8b0c-ea507122d0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00a4ff9-217d-484d-b50b-23a09a2f34c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3d5fa5-a9e8-4cdd-a998-de8e9e0e7112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c54f7f-44ca-40a7-af61-a70843bb019a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c825b8-a934-4e69-8ae1-9a33c4f97eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132fa139-ae66-4718-a385-100feac78828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85817324-a6be-41b9-8262-718a2104cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a656892e-0001-47f9-a3c5-65f00078a57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9531b65a-4804-4c29-a773-c3367ea5c252",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2d2e9a-55d8-4f9e-b158-c2aabdda3ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a8f8e1-2fbd-49b4-9fab-20ca2a449501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e2b50b-eaac-496c-9c93-9387162fd7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc5dd11-8e24-4e89-be11-a2501a6467ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4765939-f627-4355-87fa-2acc2d9c8f02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87e318c-a36e-46b2-8d98-583082290538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8971f4ca-bc76-4c01-bc44-be864e9cb2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af85035-ff19-44c1-bfc4-380353df20d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4bee159-a2b4-43e9-934b-0a80025e6eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30435c7-89e8-413c-bf9a-feebe4b56a1d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364698d9-5b58-4f3d-9e84-9b05b6c03bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2714f26b-ae47-4279-9179-8a04b171fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78155da-667a-4c76-895b-0d3aa4b920bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d005e0-d53b-4875-a5e6-1a296f69b470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bfdc98-ebf6-477b-aca3-8cb4f2a6620d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79327b43-dbf9-4b3b-bf19-30cb088abedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4411b2-62d7-4c95-afa4-09f4f09d761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a039930-259e-491c-8684-a6cadf90f5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af3bce8b-19ab-4119-8433-5949dfa3f321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28624e7d-560c-46bc-89d0-d373360f33c0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e96c49-0946-42ec-94cf-0b93459f2b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8068de1-ac7a-4440-b278-b23f124735f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1152c42-e393-4f16-8ad5-8088831cf3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f71c46-d995-4612-a701-3a56453df167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d06496b-3939-4dec-a326-227aa49ba632",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72249332-56fc-462b-8628-1d5a13ed52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4812f220-c513-4523-a6b7-4e52e40016e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad15330-a7af-4033-a492-f9c0a0e25f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46250d34-f348-4ee0-beb1-1ac3db64c872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccc0fa5-a05b-427f-ad83-5893fd84ac14",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d3412a-2af5-44ca-94ed-b08ee1039fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6ee8bc-bf6f-4b00-96b5-499e09c1ec57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b5aaa-9b49-4adb-b6ec-5cc309892f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1a0910-22d5-407b-be7c-d7a699475eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9a709a-9242-46bc-8fa9-0fd8408c9794",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfa7632-ec7e-4d53-b84b-442ba41dce20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d66f522-0067-407c-aaa9-efb5238ebbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d25ac69-1aec-46d1-b043-a00b50029316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bff4da3-daef-4b2a-b65c-d441dc81f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872584c7-6c3f-46df-af7f-2f85ded054b4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1292a2-083e-49f8-80e3-764dcd4eb0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295baca1-ff72-4843-822f-c69c9c50b3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbdd619-10ca-440c-a443-2d238457656a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8576051b-ffd5-4158-bbb2-7d7ae83cc807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0eb44c-d177-4354-b40f-144e64288dcf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babc040e-b3f9-4709-9de2-28953c7756d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89012d0-d063-4bff-bf97-750c9c164257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358dd126-861e-4533-a9d0-f64abb47c43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df0eaf29-6f19-47be-b6bd-813f7ac6d357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b0709e-2250-4bc4-b365-14418ba5489e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a69dcb0-6528-4a46-8526-3be2c6b154f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd8e42-66c7-4fb6-b7b8-d8e2ce8a1f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d700c059-2116-4370-82e0-f860d61be192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f29443-bcff-46d7-a756-2bb58d1aeeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c447a696-292e-4195-bddc-cead08a93d5d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f261d-04a5-4de4-b4df-76bcc117798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790b2cb2-35f9-463e-8226-1454e7f12058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67053777-93db-4158-9693-26ace83a480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc750efb-d737-4172-af9e-6a4d4e4cd6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d542e0ef-bf18-42c6-b1b7-0f63e193720e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eada85a0-2646-4d29-b47d-921cf0852e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9eb9c62-b7e1-4e0a-a45f-aa3939cbd2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d249513-31ff-48e0-a0bd-44b6360eb52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5fe702-423a-42ff-bdae-733d8732d0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05787593-f785-4930-bc2b-9a51cc4fb050",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871a60e5-c8a5-424e-9b5b-ae54d0421035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015770a2-49c6-4724-9a4e-d275ae37f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5673c98-1555-4254-be35-e4d52a7a5c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e2d777-f924-4bf0-a5bf-c8144009d2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeac3c6-5826-4eca-ac0c-ddcee8b3eafa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee904966-0133-4837-a1e0-3d0dad7a3b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5156912e-662d-4b27-be94-9b2fb7b0149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dcf8aa-c0e3-4669-82ce-5ae85d4df324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26038e4b-a5a8-48bf-9058-b4ff67c50757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d54336-23d1-4c83-9a2b-d100397e3bfb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f48f5-ce67-4dd5-a9ec-61db5cb950fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8b1233-4056-42c6-9bca-05656a5f18b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71b32ef-f60e-43ba-9231-be223973c983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e660a5-6378-4c9b-93d3-6efbfb9dd207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e904d58-9e9d-41d6-9673-6b763d25606e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c2bee4-5c1e-49dc-9d52-e0c60fa4b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3de3c24-f3e6-4bdf-b29d-a0eb59c30200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0ab0d6-0331-408a-bb10-74453309deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f4c6b7-a4ac-4ebf-8719-82fe9b6e61ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fd8885-8b2f-43e2-9df9-8f4091f59447",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0ebfc1-698f-4413-b6eb-599ab3b053b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e765b56-cfb0-4c71-8690-dfd7c24ad56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d246c4f-58de-48e8-b2ee-92248ec855b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67098b36-69c1-4369-8ca4-2364e5ebf920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4461fc8-fede-464a-9a62-2309a3cc8c19",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13b8deb-9017-48e3-953f-354aec68e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20921862-9fe3-498b-8689-ccb89659064b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4969c4b-9403-44e4-a571-9ccc1600b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a848d97-a3df-4f81-96df-fed3d88ffd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bc8b62-e856-4b91-99e6-14b45c029f31",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da10ef4e-92cd-4e37-a28f-cd7402661f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4efd4f-258e-41f7-81b0-c9f69a4c8890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239ee3d4-d982-48a6-9029-9a928058f161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae1bc85-1352-49fe-b6bc-151278e9b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7f5b71-d184-4919-a017-cace261afe3a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8587cf14-e81c-4129-9757-edbb945ccab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c870e8-02a0-44ec-b7af-ed1646d46ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6a9f9e-eb31-435e-8519-920dc88b78fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9afc9a-768a-41dc-b558-21c6edba6a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05726a9-ec6a-49f0-90ef-0306a7e11507",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768dc053-7feb-47a3-ba41-41985fde4f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08a440a-4d67-4333-bee2-a860ae2423ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac3cff0-ee70-475c-938a-10cfd2cab5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "67f32db6-9f57-4e29-969e-f78aa638df39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f423ab89-3bb1-4cf5-b4ad-ae14e692b331",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcc7d46-1aff-4935-ab7f-941ca0205173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e81f8931-0e14-4edb-8e87-a9ebb1c6c161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b9cc9f-55d4-4d2d-8f78-e899dea7ae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4f6069-2d6c-4a7e-96f0-1e58ef2ddf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452c979b-08da-44ef-b6ae-0c0079fe6f48",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8b3400-c66d-4e87-b7d2-c412a352ad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f085089b-aaf8-43d6-a3e7-c1e13a83c110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a708c8-bece-4cab-a144-4fb803a3a9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba5566e-552f-4de2-bb78-028344453f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022ee7f6-a1b4-492a-86ed-6336c474da20",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280bec0c-7a49-4766-9365-632971866c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e7316a-4189-441e-b801-1739efd25aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f0e354-f1f7-459b-8efb-e2cfbc965ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae7bef1-13f1-4ee4-8ff8-c891acace5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a66cc-1a5f-4c95-b940-5afe3d77b367",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8730a0cf-89a6-4c87-9057-16bd3fa0bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e789e8-0424-44ca-adb4-de6ba3796b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c385d4e8-e526-49e8-a622-ed2e55d40b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb19b94-c4d2-4122-9f24-e6f2d7c39b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60192144-abc8-440d-90f7-69b8e03f88ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90559ed-5fd4-4e52-9c5a-0f459a17ba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a559cc03-02ec-497f-8ca5-adfbf123ef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadbbbc4-eed9-4643-9a37-0db9b3bd8fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81b2e9-4eca-45cb-a5da-b0668e2e5a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940b4b24-34a3-4290-bb3e-4ae9f666260c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a001643-fc1b-4446-9e1c-489c96cc01f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c17bf2-07ac-4ec6-8dfd-eae675bc67cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae66f68-a3ed-476a-8994-02b2aae8946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e51923-2e1e-44a1-b19d-7f31abdbe05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a84347b-5eaf-4b16-84ca-d5d7e6e9a710",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e917fb-796b-4a97-8292-c2ea22d41d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99effafa-9c2d-4285-a974-8dfa01105c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e102ef5-7532-4acb-87cc-ddec8d46313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4337d55f-87d9-40cf-92a3-b947373cf457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69bfeae-8817-4885-8e72-9d034ef6aec7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05854ff-97aa-4cd5-af22-58a30549488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e071a92-203b-4153-aff6-6a63af0d6a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4986b5a3-7105-484f-8ce4-3b1f4e160f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f850590e-1466-4503-b0d6-f9c1ad5314c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33f9621-617b-469f-ab28-801a207bac41",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e8f863-584c-4517-943c-8d5fbefb3fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7f5929-cd2f-4879-9cb3-512a7a9c02b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c5b093-4bb4-4cfb-b68b-a7c17b26e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "931b8dfb-b836-4cb3-a395-126781bd7d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef82459-35ca-41cb-8ee7-9d5a29dc9605",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cede1f-11b1-4466-8610-e8d2e1880355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a36097e-997d-4881-b196-7374bea9ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b79775-0342-4df5-a33e-859a71833c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "347dd5b0-71f0-4b06-b860-e5240998301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc671966-2577-4ddd-bd95-571144a8e9d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8084a3-ede6-4025-bbfd-db875bad357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27c597d-55f6-4c23-9092-eb0a2fd668a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b7280-e01f-4595-86e2-20e1dfc870f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57ce25b-4c6c-4d79-b218-39c0cc6d84bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dddc5bf-7456-4f85-9ba5-3ccec3d1e516",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b913565-c159-4e9b-a514-710a593e91a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2761e04c-1eec-41e5-b32e-79bf7e355501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3a845d-81b5-4a0e-9a86-9a5d8bb9536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7d788e-b72d-4956-b241-0ead2abcfc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051199c1-ff21-4d60-ac0b-72419f0869a9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95678e65-616b-4fb5-8367-ea3aadb21442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ba08a8-4ab3-4f02-a335-ed8f6b66fc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de03ea04-52aa-4a34-95c6-e81053e85f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65adb173-6535-4a22-8a83-0add2c4859b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a6295e-8d39-4650-990f-29a0fff5a4dc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ad69b4-935c-4024-80cb-0cd9dee2b190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb697660-395b-41ad-a490-e431f20fa616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e978ae1-0b0b-4b11-b03a-de2e6019004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88ba04fc-fb15-4b74-b56c-00e390f8fc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c6ee41-5fda-44bc-b728-af76e71cebf9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79472e14-faf8-42ca-aca6-9cd95eeba358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a3a99c-086c-4c34-b6d4-ae2cd2026f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3785de-fb37-4c12-951e-d98aee827764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6df0f7a7-edb9-42da-a4d7-d27e7606c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bd88b3-5f55-41d4-ab84-93a3edb9db66",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fed49f-3327-483b-ad6e-446bf440dfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d1d077-1f66-4ef2-9486-fd0ab039d731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a37ab62-ec16-44ed-b48c-0c3dac4416f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "261d962c-29d4-4161-bc91-c1662e5b3d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe348cc-8ca0-4f49-b45a-54402a6bb396",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b89498-f8c8-4746-b6fa-19730491bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d7d558-2666-4c76-862d-c5d44c51762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5066af93-f6b8-4553-a7e4-ff978be480f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7f1e37-6822-4b0f-bc63-5ac72ece76c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683681c2-1e28-47de-a425-e97dbfcec841",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f5c366-8e55-43b7-9874-e43f61e5b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fb9e83-7702-490c-93ad-87629e515b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7faf19c-43f7-4ddf-8dd5-8efae1cb3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fc7bd6-e509-4af0-9e5d-3ceb7ff65f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98807f7d-dd21-4acc-a5cc-ee0c4c0e0c6f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09683aff-03c3-4003-afea-ddca353830c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d533d80a-13ee-4333-b6c2-222709579944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eed64f0-848c-40bd-bf8e-6c2dea24e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d8bdc-a6a3-4fc6-8965-47fddc51e4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af436f8d-9ba5-4e2b-878a-dc57c3540c25",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8165394-304f-4164-8546-15d287a0996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c381862b-4573-4393-b26a-dd6829286491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bd83d5-04de-4dc2-a504-b71fac64bb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d331ff-ccef-45ac-8c9e-9668ec53a56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d376cedf-bac4-4f42-863a-a57b4e205e55",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9798000-9597-406c-82d4-04a45c3f7a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6252449-0f46-4424-a25f-95deb657445b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471db9d0-574f-4b38-a818-7911d55b2885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "041fe028-cf5a-48cf-9766-c5907fbe7429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae3c26e-609d-4def-b377-70b4e6ce8b53",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b891c8f7-4fae-43b5-922d-d41c6c421db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8cb885-2457-4dfe-b9ec-072920a1413e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3665f04-f87c-4fe7-9339-286ce3db38d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bbf250-428d-4b06-9b0b-75af71f7a6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dbf6c4-cd58-40a2-b3be-725982a76906",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4a8c8-a38a-40f6-a8e3-752ca8a86631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a404408-d28a-4cba-982d-681b2730f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89584cca-4d3b-435d-b504-b5d7ea30379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8009ae7d-1513-45ba-9049-c632bffead58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f265c2f-4ec2-41f5-b7d0-8cfbd43193c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a4b7dc-40f8-4188-8835-4231374522f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d818f7-b40b-4162-83d6-d9295e0d7249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4106d673-8be2-425c-9972-61a80ebd95c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c250716c-3e2f-4cd3-8f35-f852735f9ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166ee4da-1d31-4032-ac93-a38b0bd6059b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b523c9-dbb6-472c-b6d1-63e7408a0193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872baf5c-9555-4ef0-a1e5-c44549380d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d7ac5b-d27d-492a-b4a8-18310f4b7f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1bae10-d2ed-4743-a6c5-2684b73879f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ada304d-129c-41ea-af55-018c5f7aceb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118c6e78-bf8a-433e-a706-af70df33c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1ca215-a0f5-47c6-ac03-cc67ad517977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22190b03-05f9-4e90-97b9-d04a30fc0f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9780912b-35f4-4353-b9a1-f0d3ab49c482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4e33b4-c2e8-4eaf-bf3c-da31ab7d3777",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f57929-8e6a-4ae6-87f1-27be8503fe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5730a973-f9de-4cef-83c2-93781e5d07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0501feee-02bf-4d3c-ad2a-8da393b6ee53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "97414628-57ec-48f8-b806-d50aee165c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46ccdde-583e-45c1-930e-e043ae79107a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c00da4d-bded-4352-9bc3-c1116126579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dbe29e-6f83-4993-82cc-625dc50f426f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2099f4e-5e5e-4c09-bf84-13e7b28f850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92074457-d8ab-47f6-b4f0-d1ffb14869d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222c4e32-9540-40ac-97be-3cae54935c01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc1bdd-01f9-407b-bfc5-738e62e6db6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed4d54d-25c6-47c4-ae57-04f284c0b9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8fd2e7-05e4-44c5-87d8-f3e3cf8cacee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0aba91-e03f-4c55-9f65-07f05d90df83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e733c845-85d5-4439-ae89-bcd4c9d4401a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f22fb0-57a2-451d-a31a-59c4fc053205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bfa14f-1467-450e-95e8-5d6e76f8513a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409f1a43-4e4e-465a-be6d-10cb7daa1f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7557c2-be04-48a6-8a8e-a6f2f41d600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3718c3d7-c942-4335-a210-5e809189b13d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d18620-406d-4aaf-a6d3-8d1e2934773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4ce02c-0434-4161-8cd7-5bf9723291d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eebff6-a208-4409-a793-a17b3d951ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f7c750-fc6a-4127-8b7e-246c8eb1d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ce1c93-43c3-4b9b-bbdc-0dc755327635",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3283c4-0d66-41a8-a1b8-19bd030c7f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230177b4-2ef1-4dfd-b63f-0d3303eee539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64331737-59ea-458b-8e2f-f57ff03c838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6850f4ad-29bb-4f56-8dbd-7dbe11228bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc78c22e-38a8-4177-bb38-3941430de55b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0988b252-9ccc-4c95-9975-5eab1c5654ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531afa63-fc96-4219-b31b-4ae69e975941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19878a81-a592-4419-a888-fabe975f10f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e03ce6f-cb5b-4129-bb43-7ae7f1223f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9014c1a-8920-4fd9-9af7-9a87de8b7d8e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8215d3fd-3f36-48a4-9a3b-2b0fbc769819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb74814a-6416-4439-862d-00abde1f7daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978cb0b1-32b8-4d34-aead-ab5bfee59a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6177df-d10e-40e1-aea7-39f7fe6374a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0578ee9-4b0f-43ac-ae2e-828be0599b7e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df6c3d1-b85b-4d6b-a0be-046e1f0cc22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b535e2-66bf-499e-81a5-fa7527f8586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d381792-c889-46fb-a783-0b50d30babfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ceed219-c0e9-4fbd-9f02-dbbd063c9f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9138b8d-4e0f-401b-b117-4d1df0e4bcdf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8944e2df-19d6-4259-af74-55afbe9235ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e56aef3-5283-4e32-b48d-f1c611806d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d11377-67c0-4854-9ef8-2acda0207dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b3b134-71e2-4a5a-82f0-879f9782d760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b62b17-2f7c-4957-9149-2e8728eeff9a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8536476d-1f96-4847-aa77-9780226814f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47297fe3-423f-44f6-855b-d03973cf36fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd419275-5981-4781-8f94-0799b6065bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b04998-aafc-4efc-b153-36949c45513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9ca25-8309-4ead-ab2b-a41b1435be34",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be1a7a5-0d15-4187-af96-ac6745151de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5d506c-53bc-4b2b-a5ad-72bda34e92d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c8ccf6-bacf-44b8-b5eb-d923570d8231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355a1781-4551-4017-972e-3fbf53ca73d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d02d51-c648-4172-9e60-8dfabbfd9fde",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0b679-6114-47d6-9db4-c857ac3e96e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a13cbc-d453-4cf0-8567-2eee1d3450b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365ba405-8fd1-4048-a2dc-0c957de6d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e78b28e-14d6-43c4-8c19-ddeff2b8de36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0114e08c-12ec-4c61-ab1c-010682e65caf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38e402e-23b0-4622-be3f-35e53927c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43914e0c-a950-4781-a8b9-8de1701c3a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ea0ed9-9840-42b4-8d43-868b3af56527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e32fa50-f5aa-4c14-92b8-2d0d321fd0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206f484e-63d4-4d86-a600-677541b84551",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa08457-1a82-43f2-ac2d-8289fce01f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a14e24-0999-4919-bfb1-2182fcb35e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9cc12-ac8c-45f5-9f50-b3c44e7d1125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32af7f46-64db-463c-8b98-40c09bf21010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41970764-f059-4cd8-bc36-cdc51b72377f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8dc342-81e6-49b2-9094-0fa68fe36f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4063c1-e662-42bd-be60-e0c308b966fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08356e68-69f9-4e74-b64c-c2644ffb9bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0a89ca-d9a4-4a74-8853-46f12d19c564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a3f2d8-dc1a-4f78-a1a4-d2cb37069dbe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b43e76-4de4-42c5-b477-63be00e8172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1389f5-3b57-480d-b18f-579e97e3c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3fbfc-f226-47a0-9586-df5ee7bd8bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa3c6f6-683c-4954-a1a2-0b7792a76f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bca870b-1449-4ad2-9568-733ede4454a0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab7958a-5fbe-4315-806d-8d839becc816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cecfc7-0155-4df1-8d1c-e1b93e3493f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d5a50-5f47-4340-b735-018366ef0158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9305a11b-f259-4dca-9c17-dd9ef2f1d71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82605b86-7a3d-4f60-ac68-50982211efeb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f31c26c-9535-45fa-8897-555813df4f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c72459c-077b-4b97-8b83-b76442daa0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206b9948-05cd-4986-9dac-443ac6ef7256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "179dd5e4-ed13-4917-a054-75ec0ac9743b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d75b9c-c002-427c-9549-0e5e28cbc1da",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cb99cf-93b6-4117-bcdb-f01a3dabda5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50a38ca-bea1-4f3b-afca-fb145112b545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e67c26-8829-44f0-8fe9-8d523ae4b64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0b8892-2c9d-47ab-9cd6-8f6610a64304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc16c1c-70e4-4a7e-84cb-cdf456d94282",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bced10e-1659-444b-be20-ef861150807e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fecc8be-6ccc-4840-941d-f9abe5addc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f1a669-6e20-4343-8917-221cdfce1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80503cb9-adda-4902-868b-75a96a0f12ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4b3a34-8acc-4334-9383-d17f4b2cb7cf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb2033d-415f-48a1-9e1e-e58cb552e863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1778b1a8-560c-4f15-858f-d105add05fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeffc42-3527-41c6-8f91-1d65d490bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5be35b2-a3e9-48e5-9403-42d5c6b9249c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf057c02-8000-4003-b4f2-560805102b77",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e8be45-9d95-40c3-9207-1295d1df0773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fd4435-1b84-4733-bfff-de577f0edc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e6b2a0-cd78-4ccf-bc28-c4eccbaa3cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4496f5-9424-4501-8c61-1751bd915a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02106a29-49f2-4f14-85c9-0cfb88075430",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d0021f-0e48-4b81-8e37-cabf027e7a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abfd12c-69dc-4ed8-9497-a9c6e7538689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed296b-1018-41b9-8f8c-c81de4fa7af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcc1ad2-3187-4e0c-b48f-9fc2b563a349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c92353-b36b-41b0-9f9c-70b17b504b4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893de518-9455-4da4-a342-63bfad5d571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d982906b-1658-47e8-89b3-3ee940b848aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9778a5b5-3947-4c0e-b9bc-4b6ab204aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b056c20e-ec27-4736-ac6c-f78dd85d7f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79f5af9-7501-4dd8-a0b2-4dc918f74a22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35f505-bdf5-4e72-a939-9600e5ca4635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57122acb-222e-42d2-8aed-e8f064bab5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740359de-81da-49d8-9a81-eb913865c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b51f1d5c-cf1c-4296-ba4d-2f63542bf2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33fef75-25f2-4076-ad18-9a285cdf424a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00573ac-8d69-4d93-a390-e62a4f46591e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b98170a-ef35-481e-b7c1-dba357e8d4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b5639b-4e57-4b1c-ae5d-a08b7bec3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83745ea4-07e4-4399-9270-ef4bf072e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5039e5-fa96-44fd-b3f7-dd8e8f509a6d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e22427-3ffb-4971-be0f-c047920b7339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa073c8-b00e-4532-9cdf-5e0baa9e3ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dab6f88-c345-4f7a-aebc-6a57a1031113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6756ab0-0111-4bf0-a847-6bc189e79583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1086e5cd-a878-4b0e-a1dd-a9505d650845",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e10ad6-6de8-414d-9b44-a67ff71831bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74a8e0f-1e66-4b88-8bee-b80f3fe915b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eeafec-9a20-426b-bc2f-a7133b49b632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9090ab62-444c-416e-b914-21ca3ff6d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa2b22d-0138-4f50-8c93-395f83d4fc82",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0548994c-4229-4535-8767-c0dd8d133279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7607fdd-e958-42c6-86f7-72a24da81ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb36959-00cf-4254-92c1-997584c660dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc50789b-85cf-4b81-85c0-7fd0451a4d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c290eaf-7533-4fb5-a251-abe92493c3e7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74388dd7-6a4e-42b5-8764-483d1d14b2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c376d4dd-63f5-4298-8685-06d27393671f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ae1e2-a518-416a-b007-8fccdbd05e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4116d8c7-76cf-4d5e-a2e8-dfb26d2e435a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f2c09a7-921b-4d27-bb0c-5b6d2c561f9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44beba64-973a-4b6b-918a-72d075b58ce5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a81cbe-d6ca-4816-8e2f-192b098a4316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "671b1e5f-4da6-46b1-8730-6e314c197348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bfafa0-695a-4c93-aad6-06f2e9a8d148",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84243732-44d5-4710-95f9-54e4d7a1722a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8fd1a23-4746-4d26-91af-7f79555576d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b96c0ca-d693-4794-931d-bfef9761d68b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4ad9366-c637-4668-8388-bd2c4e2553f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4d39d6-c410-4ee6-ad2f-fa74c4a5f729"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6601b0f9-e77e-44a1-a076-bac40d39f132",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a85a91c-537a-45f5-a878-ed14f8be2ab5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abf6914f-9953-42ae-b8c5-ce85ec812d53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73eb4e9d-55fe-4459-836a-ac821d4f9ded"
                }
              }
            ]
          },
          {
            "id": "9bfb46e4-d238-46b5-aed1-75b3e6cf1888",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37b0c236-d5d7-457f-823c-501fbdf07432",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f32a435c-fcf0-40e8-aab8-5d8079eceab7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e99043-45a4-405f-a2ae-ee46999b539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92bdd2c0-be0d-4325-b472-07afd5d207bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35536aa8-889b-457f-b747-51cac8a94232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0af39b-9ba2-4813-8cba-145fafc79b46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa5f963c-e849-44b6-b576-b6a928c8874d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "142ca63b-8d53-4281-9885-d0ee4858111d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6282086-2dac-4de6-b26e-9a85572b3db3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba7c2a44-452c-4e16-a2e8-37c7762075e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb971f73-6eb2-4363-b6a8-4be079e76750"
                    }
                  }
                ]
              },
              {
                "id": "55b16c2f-3306-4e3b-9267-7f84059a34d0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aca96d06-744c-478b-8a7d-2821087aefbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bd4d6aa-9aa7-459d-9153-86d474be69dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3822781-921c-4b6a-a5fe-11abf53f26f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a2a3f80-9ac7-410f-8fc7-63dd7f666143"
                    }
                  }
                ]
              },
              {
                "id": "1e6dc8fb-23d9-466a-b246-9c7b16167372",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02ce0243-d2ac-49ee-b050-06d84432b59f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5089dc23-eda6-4145-bec2-c7ce73d49293"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b89b3d7a-a3ca-4f1c-aa62-ab0325a45370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "455d5b91-2a7f-402c-a4f7-99cd8eb4ba8e"
                    }
                  }
                ]
              },
              {
                "id": "49dbd8ca-5ba8-40fc-9029-692ed3164bd0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aac1141d-a4f1-46ef-b8d2-8fb9656dc2f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04a6dbef-b828-49f8-86f4-860679a4661b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3107070b-1d11-43f2-a27a-b4a457658757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b99d8dc6-47aa-4c6c-a350-60f57c1a512d"
                    }
                  }
                ]
              },
              {
                "id": "f16caf8f-10e3-4c3f-8706-a9980530f2e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cffb11a-d590-41ab-9a88-09064c2e5b6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5015a0ce-701e-46de-bfa9-456100e770d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ca3d24a-e128-4aae-aa65-4b162b6b2113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e9e3dd01-f054-448a-8f54-a3ec5677321b"
                    }
                  }
                ]
              },
              {
                "id": "0d2bcc9e-a866-4058-8bca-c189c2f78f37",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57564955-caf1-42a8-b01d-01301c8c5b57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2027256-eeac-45cf-b1e2-bbd35ca0c232"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9170fbba-5c28-4186-9a23-bb36630c3978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3aa197e5-792d-4ccc-97de-464acd9fc012"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01e76284-344c-43a9-ba8f-ab36018c1fec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "961ae16e-0408-473c-92e5-4016da07af8d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad5201a9-b333-422d-a9c9-87863f0feacb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "143991da-7fc7-465e-ac37-e9634613ca7b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94c7dbad-6a90-4578-b4dd-d4ccd02ab86d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01f09a37-a6dc-4402-b282-b01feff301f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "756388e5-c744-414b-bee6-152735b52122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "032c3dbd-1291-413b-8a5a-a02cd7decf9f"
            }
          }
        ]
      },
      {
        "id": "d22e01e9-680f-4969-aeaa-6a63137618a0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f333068f-307d-4a24-a44f-31c422d97f28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aef7907a-87cf-4622-9566-eff5db2531ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6cbab067-476d-4871-9779-2dd500053bf7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4e2ba4-8741-425d-9a30-dde80cb09453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1d0df1-3148-45f4-9bb8-36b0f6cbc55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00c2e0c-931f-45be-84d5-898c0c4f080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "02173cdb-fa9d-477c-bf92-c58e9aa040c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a720e4-3f5a-4e46-ae10-ba201743de5d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea68423a-017a-4fa3-87e2-68d0d61bdaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91f3579-fdcf-4062-a4a2-ea48f86ed73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047d7e56-bad3-496a-9905-91c55e6e75f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1278b8-86f5-42ab-9c24-d9e238eb5ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a16fd-ee63-4276-a572-8a0781d4e75b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28cde7-7991-45e8-b71a-db0d254256ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8d019c-afbe-43cd-a8d9-134e26b93788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f1f0e0-72ee-493e-acf4-985a6adb55ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8279c5-337f-4440-8258-152d6faf7660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb6a981-5f24-47c5-b8cf-3a9f49e90767",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b61ff9-a4c2-49b2-84c1-2f9562ac6c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d1b5de-f6cb-4fd2-8031-6f34a9442a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e27de1a-f8e7-4dd2-8778-d750c80b2d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ad3a75-0bf2-4ffe-904e-5b1caedaad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b160568-6c37-48a4-b701-d4d67c6ff1a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3612ebf9-8f88-45dc-8819-9a02de7482be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ed6e7e-8f8e-4aa5-899d-8dd09b655791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a13b755-b56d-482e-b4c8-9cfdae874f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c431f37-ffc3-4ac1-8fe0-773bf228b077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655bef35-6dd5-4201-abd5-d05bc47defd3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a509e2-e66b-4cd3-98d6-eeed5db5aab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4c2d2f-e0bb-4a3e-9c13-9705715f8bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4319cd4-36b2-47ce-a603-6efb3f8ce30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d02a79c5-a919-45fa-af01-3a10a198f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4933ada4-a740-477f-a5f5-ddcfef0050a9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa221c-7bc3-412f-b96c-bd28d3365815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d94a6-bac2-4190-bf34-9466bfa5098d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9892ae28-a794-4210-964d-7aed243157ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "101018bd-d335-4124-b7d0-a70439106750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0727fb66-5fb4-46c0-b761-5a03e748c7c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083673e9-7570-4c85-a630-deb20a720f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafc6bef-5305-4f36-870b-97fcaba80260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29369e50-6e7b-4c34-bb0d-a6d93ecc399a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11fd479-ef37-4d18-8799-eac04baf4fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4cfdee-aa92-440f-9074-b526b877f28d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3023864f-e725-4a29-88fe-3b88e0b8dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21bcb89-e794-44e5-aa4d-70cead1a06b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb63201-3f48-4f4c-9102-2cb9650a36fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a62c50d-d457-401c-b54a-24abed8f9c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06b6316-17f3-4637-b2fe-b8e6f3ecc276",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac261cea-6767-43af-85f6-51c31d167e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d014e2-12fc-472e-babe-88f7150933a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adf32ad-02ad-458b-b89b-1b6be4ab8b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "886f23ef-1e4b-4dc3-905e-16bd97b389c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6521d0b7-a9d4-4ea9-8ce8-0646f0700ba6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e8ac3b-b62e-471b-9f28-69ab6b6b40e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ab72e1-ce40-4d50-acbb-7b8fad06440a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae284ad-1dd7-4439-acd6-c426638e6c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "89dd7f3e-c2ef-485b-8c04-3bcfb167d9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826ccdb8-48f3-410d-bb7e-82fd59d474f0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81487927-40a7-4b6c-bf3c-3ac7167e1851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dfeded-e7f6-4173-a9d6-4b74162f7bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d293db05-488d-437d-bb4a-a7fc05250b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ff0916-9a43-4da5-81aa-c6b36266a344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568d8ef6-6125-4f0b-8871-cad27c51ad3f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970f93b9-d272-4727-ab2c-4664f6d82e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c603f7-f8c7-4459-9da1-507537c25351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44452beb-d3bd-4cc4-a13f-8c8fbb502947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8375c5-0131-457a-8328-03a37080e220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464fb30c-ee1e-41a9-a584-bad850445179",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952242ba-ba59-4b95-aa1d-0f8acaa8c271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c77865-4a0a-48e0-b49e-0c129523fa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d37c61-c7f0-4f80-94f0-158af81aee20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc29996-95a4-48f5-890e-a65f8a5cd2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1b60d8-8eea-461f-a9e5-46941703d09e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8c83d2-88e7-4fe6-8aaf-8531b09dc396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b0d6fc-1ba8-489c-aaa7-c79e125c5e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876689ab-a4ac-44e5-ac48-b69a8a0f54be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a209d2-d8e4-4de3-a54a-ecdc909089ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bc5165-c273-4776-890a-ddfb5eeafeed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7069e42-577e-42cd-acee-54a7a07c3302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7611396-f697-43e2-9a9a-8ca3e0e8bcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae0bd76-2469-42bf-84df-4ed668fe4b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e1eee7-8c3d-47d4-b36b-4fa764ebefc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e7ca0-e42e-4891-a1ba-76dfe0b67077",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa4fc6-b346-46ca-a815-a9fab46107bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a75f1df-69bb-4628-898a-3e14ff1ea8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed9c10f-d9af-46b4-8b33-09d1f870c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ef7ee9-e833-4798-8ce4-83e10f6e0efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74382d8c-7d44-436c-9ad4-99a59cef732c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c16bba1-7476-4e2b-a911-6f0aa1d7a805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb86546-131d-4fc4-b2d5-e7b79e3efe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8846ea6e-1493-4c31-bcac-4e2ba5cec5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b9b79d-dac1-4d27-b526-e681d0d4c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d78306-355b-4af1-ad81-e9e056043710",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3a7153-15c8-4eb2-a2d6-fb977c44d569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cf9450-3d43-4ab1-96fd-6cb28acbf898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb271899-d6f5-435a-92d6-e4ba61b7695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0367fcc2-19cb-4a45-8251-7900906349e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660fcb8d-a810-41d1-9c51-022e521d3397",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc5bd9c-8445-4489-8d93-668f1151d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a05b5f9-cd90-44fc-bd95-a0ed680abc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a528b1-242c-4158-a5cf-44eb74dc1f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191ffc6d-186b-4f30-b966-b3b6b8b77465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309886a-dd7b-40e8-81ae-a3ce11d831fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233f39dd-ab90-4525-870e-6c39174e334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598b0515-0c61-4243-b57f-82fe58e0d55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8a31fe-cb08-46f3-8df0-9968e519f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04757666-f549-449f-b65f-4139c6227f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e2da8-1fb4-46f1-bb3e-da96dce8cf5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171814dc-ef1f-4eb6-9e44-5457ec13d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ce09e1-32ab-4867-b061-e22a47e20ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3687513f-caf4-4f13-a351-4e71ac953c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5d0993-1ac0-4ddc-93a5-97b0f303944f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc4d395-45a3-4eb2-9b1c-1e540ae80393",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf7d346-e0e6-4be5-9589-96ede05e7ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1a7ba6-ee5d-480f-984e-0ee09d696bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc0bda-1737-4a84-a47b-d673dd186a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d6968a-9ec9-436a-ac8c-7fba3fd5742d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcceb0a-a330-4773-b053-3a0c00d9d242",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c6fb2b-f9b6-477c-852d-65c6e4d2dc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0f49cd-8131-49c6-a066-7b69b8a181b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41fd3b6-e6a2-450d-969a-ceab1671e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9261484d-9021-4b70-bf59-7904fa7b0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23231fb1-a02f-4220-81cf-3090e1a323c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0d2b36-e0da-4236-a944-4e3bdb05da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf8f34d-c14a-4b44-812c-2ac8e0b56da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924b4cb6-8823-46fc-8945-028fd2c2c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa97e9d7-5cad-4164-b7a2-158806e6b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f0a43-fd09-4080-b9bf-dafa7e3fb814",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed92f36d-50bb-4336-8618-4914d0453e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb4aab8-997a-400c-9453-2f0374f3ccef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756d6505-9625-4fe9-8bbe-742f34c4c6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0a6357-474a-4d24-933f-dc884f3468c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dd56ae-9d8b-4720-a5f9-9b40ec67f614",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed972c5-d5b6-4a29-91ff-76ddbc19c5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd7ade8-465d-4744-8c80-d233ff0a4641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7c9c84-2a26-42af-999d-cfc053274d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e6464-34a4-4e2d-b588-c1313ab72276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aabd5da-be37-417a-a5da-e656729408e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f97991-1501-4b80-aefe-8ba25500af83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dde9cf-6df0-4824-a33d-2a8eebba4a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec63bfeb-c8ee-4d40-9da5-c4e9606b5ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f00b5ca-131d-464a-923b-9ad1cf46a6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d9d7d6-d72a-4682-a554-b1a0c202bfb2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b7373-238f-4641-9c13-f170b78a57d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d225f5-3352-4062-a3c3-c0056dc483f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c45330-ca7e-4f6e-8a2e-0eaa31ee5566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f9ccc8-a4fd-4a64-9ba2-d0e205706aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583b7b0a-1c77-49ba-802f-b4edc462685c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50376390-dbcf-4c3a-80b7-31a970510f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788c8032-0b57-4763-bdff-1d951959d7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01dcfd4-aa4b-4714-8bd5-7d208b43ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccda6146-15a7-44cb-9fb1-ce55a7fd517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ced0c0-8037-4ddb-af73-b4a8afad69a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ccddbe-fe2f-4fbb-a755-a3047142abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e5cacd-815c-43d3-8d1f-d60ccfc3c619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f85ac-43c1-44c7-8d95-e98fb58e6a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c435dd42-0fb2-4fbb-9ccd-210fc5047812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa22d373-a6a3-4111-8166-68f6783653fb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286e930-53a9-41d0-8870-5e27058041bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b6b652-65c3-48e7-9b97-8bc00e5c2745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6003c9-9ec2-49e4-9e25-1336a781e506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5d4487-6dc1-413d-ba86-5565570c830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61fdd79-6b43-400c-a05e-06d30d75d4fb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac78b68-defb-4f5e-983a-a84a797f3003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427daead-b3cd-4881-98d1-1937ef2af130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b1e358-c26c-4df0-8a6e-63f591ddcacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63400f44-7cbd-4305-8e8f-c6339a6b74ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5281f31d-c388-46b8-a18a-9b9e06f17263",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1975fe3d-49b8-47ab-8f3a-3af61f5b7b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4506189d-9299-475e-b683-44fcae16b92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a4bc9-06b1-4e9a-89e8-e6e960af04b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2359909-1164-4be8-bf57-ca1573f74220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c447a79-b7a3-4e5a-acc7-9b7136831b81",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11f2a38-754b-4338-ac4a-4c41c3b74b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33273e3e-e692-47be-ac20-0c5ebdf58545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a87dcb7-7db8-4deb-84d9-2a45bcbe7a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ad05fc-82fd-432f-a248-a56a7e87ba7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7643ecd4-e071-4a6f-a6f7-c54b1f5b46a7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf97ac4-036a-4adf-9f6c-c28ebb39872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60997feb-6bfd-4af7-be9c-4b0f3eade7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3200dde0-10f4-4d09-b17d-1f212363b03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccddc05f-3622-4b0f-8857-ea01ee5462d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e6f845-8a05-4024-8781-ecc0a6520cc8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6bd901-038d-44e8-ad99-080c65cd7bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bedb29-1f65-4215-b4f6-baf9def858a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c501ae-d820-48a6-90b5-303cce30e25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d015de-ed3b-49ab-b5e1-7eef77538663"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2d6a33d-5952-4dd3-922c-570a7b492b97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afb3172d-6fbb-4cd7-a55b-c3d939cdaa46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b045ef4-4de6-40fb-b7ba-835d7365fee6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1474104-be7f-4568-af65-2154ed62d590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cc47c7-c07b-480b-a850-6eabc2c4d31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c54a6bc-0db4-42f1-b866-9b38048a20b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c6f959f-2098-4a98-a8c8-aacf0da94820",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91a0c162-7201-4674-bbe0-e40fedad9777"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d8b536-5aad-4e0f-a7a3-b4290ab6b7e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fbecd0a-e997-4223-a7e9-d764cee5b257"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1a0c767-d03d-4cb1-9f6d-89eb2d9c5592",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "386125f4-f4c2-4a4b-9f4e-12d389918be8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc344f37-6bd0-486f-9291-8bff43b0b20a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1d16aff-11d6-4670-8357-e79fb35d5bbd"
            }
          }
        ]
      },
      {
        "id": "b4219cab-439b-4036-98b2-b1afd719027e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "20b2aaf9-e152-48f4-9963-ed83a13ce9ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9829d2a1-2de2-4939-8e96-2f4704d38394",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c82329b-3408-4e2f-9d6d-c44751265704",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02574c3e-8fea-410e-a1c8-ec47aac79bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ca1e66-99a7-4534-bbc8-59b19d30540c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d80e99-74ae-405c-879d-5ed58bbc1601",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2104a655-14b5-4b8c-9885-bb825cb9bfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e136a7b-155d-411b-80c1-e59fe416f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec16ac6-3f72-4e26-8817-cb0109c763ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f15215-cdbe-4579-88a7-59b239ccb064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be603ffa-5aa6-4c43-b049-e94ed3ae9a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967737fd-ce22-4007-b98c-85343d28cc60",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d719df29-7174-4a9d-8286-44c5d5a8f963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9171b5f7-e35b-404f-a04b-c02c0b2bbbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b6c75a-457a-4935-9e4f-36624483c1bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c32c268-ba94-4ae5-9647-c40baa24b31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db2ce75-018c-441e-aedd-a503678124f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048eb702-a90d-42d1-a9a2-5d5adf079e47",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be97f7f-d8ec-4137-b59a-900a034163f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7d6ea9-81a1-4fbb-bce5-438ff909f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e119425-094c-4d4d-86d2-276a5c13c8f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fe55e2-d8ba-44ee-b0c3-651b3cb87400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c194b8bf-62f8-4a0e-8847-adab04ccd32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984c679e-f777-4356-a887-5ce436f31ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075af8a6-6b00-47a0-b7dc-7fd9d24748f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb6c311-5a4e-4106-a36e-4d72dceb7c00",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93a9998-c93c-4ffd-bcd4-21acd6764d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa64af6f-71cf-4251-97fd-513b063cc924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cd2da3-31e9-46b0-97ad-c78742b91bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dfa226-f09e-4688-90e8-91ce61b8f303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cd35d0-89b7-494f-a864-c145bc5eb0fd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1974a2-aee7-40c1-88bb-75c368f445b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd587ea-9895-4cb1-b0d9-3fe6c3cf1090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b426e2b-5c3f-46df-ae33-b5ac041bd836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20f62f6-0c68-4c5c-9291-8e3e97a460f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8952d92d-54d1-482b-8800-34f86dead3ec",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113117b4-a223-4325-9784-34a6f4c849e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75ec8f3-0d76-45f7-89bd-15424d04d8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e3f71c-2b33-4a27-a186-a2f07a8b79f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df442a02-ab19-4a1a-a0fd-551ad0e55f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572716db-679a-43ef-b671-efd76919eb37",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68491e12-65c0-40db-8a60-07e42d96a671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7828d23f-896f-429d-bdd4-e6b6c20a0761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b585e7-2164-4718-93a7-1427049e2817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca6db76-cfba-4406-b615-c9b951521b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eef4bd-6e82-46bf-b448-a181180a6817",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce6fd52-0fab-4110-81c8-000686275670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc5a3e4-f187-40db-bba1-d02677abbf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c5898-9afd-4cd2-88af-03a4d726720f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746dfa4c-2085-46cf-b421-6ded8663f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd6f1e2-3cbf-463f-9073-b78d3f03a749",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1750755-9e9e-41ee-bfdd-3cdb90be614c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81034ad8-05d8-45bb-b077-c72ee14be182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b030274-8e7d-4346-94e5-144f342d57aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8515657c-3a04-4f6b-a92a-91cfa04098ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f5e576-47b2-4ebf-a13a-840bda0f42f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8342d288-7ed3-4534-9b5c-0b13b8d7df04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388042cc-6526-48ce-b05d-7a72e260432e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4483ad-3afc-4c6a-869c-cf6847cde716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af705fb-d025-48f5-abc3-ede51cf745e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ecaca9-c084-4af8-89fc-a10b6cf8847a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4542fdd-5019-4574-87f9-c945fce459fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c07a4dd-d502-45bd-9710-ac922aabdc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecef49be-737e-4d80-8a05-ff40bd562056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15cac92-f29f-46f3-b49f-9d5a168703ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134ba416-19e6-4978-9d9e-b927e9abe95a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19ba14c-ac0c-43d8-b31d-e4e5856669d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e183132-d218-4cbc-b5fd-3c112a7de162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d23c39-2226-47b4-9369-4e0ec47cf581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf45764e-7a68-419a-90cc-ebf76c1b677a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c5ae4b-9efb-4401-9916-8d21d7e82f35",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4ce4c9-d769-4822-8a87-4f61aa0105de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4095550a-cded-46a0-9ce2-f7aa4bc1e22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc74e5b0-e135-47c0-a4ca-8fbe7723e853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb43796-f07c-40b0-8cd7-6c01909c4e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a6dff2-431f-4df0-857e-0eb1887aec8c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2424d0-17d2-4846-b99a-ce84b12847d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65d317e-9871-4128-9278-ea96fe5e52a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14079722-30a5-492e-b99f-38255a205e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db57cce2-01cb-49c9-888a-221661804e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5235017-34a3-4026-9e97-46ac36776829",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ab072b-ae36-4fa3-8f55-3b2654aa2ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673672d3-91bf-4894-93b9-ccd5f44da73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59bf9f-1f15-471a-9ab1-8c65f247bce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d58c395-af9b-42dd-a0b7-b561c80136c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e50d278-96c6-46a4-9ee3-d51b2fae5705",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720e162d-be40-423f-b568-682d0982d8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667cabe5-ce6f-4f4f-978f-ebe700201aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf67001-3f31-4b5b-9f4f-ead9d0f76c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bd29a6-52be-44ca-a61b-086982b1ec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1e4f3f-e794-4ea1-a544-85985d1c91bc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675cbd33-f3b8-4930-93fe-b1caa460cada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de3fabb-c01d-4eb4-8bc6-26ff106b6acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4bc197-3fdb-48ef-84e4-7b4af1209fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb659a56-a795-4de7-8942-c87e737cef12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfe0f29-8bab-4004-89c8-5d9bb83a5fd9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca5168c-ea08-49e7-beaf-f74ac89840bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a44b39b-a59f-4465-a4be-ac7a7f4141f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21245730-63e6-4ef3-b11d-a7af892fbd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0f0c72-593c-499a-9b93-2bc0f0819713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade43492-dc13-491d-bd2f-6abc56fc9f38",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158b4674-949d-42d7-b8a3-d9fd2e0c417a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d370a408-a971-4679-9475-7b0eeffae73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce10932-009f-4d6a-bab6-67c7f6a4c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fc508f-57e7-4b49-8f00-408f1efab066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c33d4-d989-4ecd-8683-08361ef45837",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a718b973-3aad-4eaf-8963-3c47c5f35da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737f1523-4619-43c7-9fe5-c5de379b71f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea8cc5a-42f5-41ed-a42b-e5f0c3ba702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4b62e7-8ae8-48ef-a469-f08c3f29e00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde6a318-46e2-4296-9c81-8aaf5fa9d92c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51cedc2-f374-4adb-9f09-adcd58fe9de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0ab757-e56a-4d99-bcdd-3e8a52bebcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0896678-08fa-4658-bb66-840e9ef7f2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b5c44b-4062-4230-9920-4abc816960c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fc6407-36ee-4a41-a84e-ac1c644d7f48",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a96f38f-d69a-4cca-8e82-aeee6109c6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52dfe70-e21c-4ac6-92ef-582cddcb8adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64856d12-2def-431b-badd-b388ba2262d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21919097-cf8e-4e4d-8f98-edbd0e965fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2997cb-ce95-4376-b491-1d5f47120546",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb195baa-5206-42c9-b028-d2615907cc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a0defc3-5cd5-4574-b6de-896a9a9955dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166672cf-ccb1-4d07-a042-902b977fc2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae61243-ce55-4e66-ac83-bf05cb897285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1305c8-c949-469d-9395-0b242c05c574",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b1d35-a6f9-443f-8a68-e817bf52264d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e85f50e-f651-45d2-beef-985f1c4f60be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf2ddee-6e06-4174-9079-82f65cd46f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baddbe4-5b4e-4a67-8637-c55ffdcc12ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00ec0ca-79ef-4cd8-9979-bf60f597be32",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cd6f93-9f8b-49f0-994c-cd77caf410e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be8150d-4e76-4fc1-8dcd-67f96f8f9ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6536c24-27c1-4983-a180-e0e0dc76fcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318b6aab-7a94-4953-ab2a-11181636c65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd73e65c-a2db-40ca-b821-9a3f208d13ce",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21810076-00c0-4584-841e-e5d4a64649a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3e8b1b-cd8f-4fb7-b1d0-aae7373b175f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d570f31-93ff-4b3c-b309-3ec5ea6abb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a4e4f2-7c38-4432-962c-83508d33a83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73d7b03-8b5a-4f05-8ebd-10dba8b4b64a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be277a5f-f6b9-4f2c-a065-59f023649224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1494b0e4-5038-447a-9684-6703b7ac9abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f491563-1ff9-447a-bce4-1353aa4b2d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400d16b5-8a84-469a-a9cd-42adafe6d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0c932c-6635-44f5-9d71-4a7dc281b3d4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff613da-4fd0-4a7f-b540-00b74334dd60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842c7977-9cf1-456d-8358-a5ee03b3b2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac09120-3e73-4c93-a92f-5f3bf938792a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a856b996-8dd7-4879-8429-f06356946b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bd6fb9-a979-4cc9-8cca-6b05b37a0e51",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292994ba-0386-46c3-91f9-47587b73ebdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158da060-49e9-4f37-a2e2-195f54a44d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d24bac4-736b-4bd1-b176-e87984696102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931ec846-65eb-41b4-9c85-c1ac7ff39c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a81adf-74e8-4a54-9a78-19c9aa8a721f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df761180-73f3-420b-abd8-fd3488fb5143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c904441-b232-4904-bc62-9a7acd015b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52531a41-5d63-4601-a206-7eb3c05e116d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcae02a6-88a5-4789-a477-efdc390c3205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73b789e-9686-4248-a627-df5bd4f9d516",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f471e7-e0b6-4c53-ab1f-618dd83ba89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a005173-11ae-4b2a-89c8-95a37a2cfb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963e0fc0-90d4-4fd0-ad2b-d5925b2f81af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1becb18d-4a56-41e2-ab3e-d360fe3b1cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a519cc-2042-4901-9724-469eff62c8b0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ff6b2d-9875-4775-b572-b5eb148b842d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642d50ae-0808-41ff-99f5-af00279c30e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93294867-20c0-4d47-a208-6ea4d385d238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435ece9f-915d-419f-b62e-934d7cf98834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54904df6-9435-4c21-b08d-1ce0178743cd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b2443-1271-45e3-9b8e-9bedea1ea659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f96febb-44ad-49f3-b10e-f05529a6e7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a01c0bb-0f07-4159-88f5-031c0b6493b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796ecf28-fe97-4dc3-9c2a-4b7c063cb23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8a96c1-1b5f-4fff-85be-42c36f38c3d0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b11521-c04c-45ad-99b6-9cb8bff9ace2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6246f0-5eaf-4a17-80c1-7f22b63e99a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019eb81e-ad56-46c8-ad56-b3a1e60d99ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6f1c0c-58a9-472c-83c6-85372c26d0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1273b70-2548-4905-8a3d-9271baf95ae2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3d8bb6-f62b-4ecd-ad54-ee45cd9584b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be6a87f-8c3f-45d0-ae4c-b5b16748c0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee7c791-4672-477b-be0b-8ec8b75f671f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8ff8f3-ef05-4bb1-b710-0b2fb6a2a024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99172e0b-9150-4fdf-bcdc-500819768afe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fde25f4-fd39-4e4b-8cfc-b0850ca2f92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad93f005-e131-44e1-b4e2-06699868ca82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfd801b-6a9c-46b2-afef-85c600af80fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fdbda8-acc9-40df-9fc7-bb4be0d315d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1bf5b8-c0d3-46b6-9c32-0b64b7cc6761",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd66350-9b73-4591-a334-9b4ac456231b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd778df-a4ef-42cf-9d0a-068d2990d46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b062978-2192-48be-83ed-387702fefd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e6eb1e-0aea-4e40-a4f7-46e2206eaba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e2bd2-d980-490a-90c7-7d62167e7857",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623711f3-f22c-4c78-ad11-5c5c4b76bd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fa8a22-e804-41ac-8d0b-123ddb29f354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f9859-90c4-48a4-b377-bd9370a573e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c1ba9d-3b6c-4b96-a162-dd1e6027fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247b2ae4-a0d5-4130-8fbb-bac380abb10b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f41a1d4-a3b0-41b5-80c9-48ab341f644f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d436914-9374-4ec0-8342-afd32b98c5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120a7d6c-c55b-4547-8d28-61a1ec9e0c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655df5f1-ba55-4212-821c-4f2429fb922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f75d1a-fd00-4f93-bb88-79cbdada1e91",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2a33c-1e41-4108-8e15-a2f8e730e4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1c5f44-68e4-4073-bf59-b57c08687ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d2c943-a380-4f76-a2b7-5f48896cefec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1965827-f6b0-455a-a8b2-5f21abfc2c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47c6580-c09c-4d1f-a524-fcd22c36b920",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea81f5fe-f1af-4b31-ae13-bd60abb8c1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386c6886-029a-4c5d-9d11-857fddff6c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f15a27e-e2fe-4d0d-ba1a-018147df8ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c87916-7de2-4c51-832e-4d451b9004b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99bc3f5-fb6d-4cc7-bc5c-cd164f9c368d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06526b3f-4a94-4670-b6da-001d15c88ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4935af4d-9545-49c9-9c1c-efe7395d85a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020ddad0-e76b-4c87-b4dc-aa3dfce8a0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c4e4fa-611e-441b-95f4-d802197d0654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49917939-161c-488f-8f9f-0ba89a86e48c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993dc3eb-caed-4d4d-b0af-1bbad0006fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641ca90a-eadd-446e-b6f4-b4d972007498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de1742d-e3c5-404a-b904-c8a1d7c6db75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b9a3bb-c90e-453f-bec4-675bc9e26b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf025566-cd73-48fe-a8f3-afd175d1a1f8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0e6771-81b0-4893-ac78-c814b6e7ac21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699b287e-258a-4787-8c5f-3a2a9989e632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dfd3cc-34f0-438f-8df4-454e6de4a9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9be6c67-e255-4bf9-a59c-0d396fa5db46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f23d8e8-bef8-497d-b4cf-db4daa70e694",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cac3da5-ce34-437a-bcfd-6475d04a2d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f1d54a-2af2-4c71-9c45-f9d01fdc6402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf4df81-7fc1-4b8a-bf09-c5d9a9d74261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a020be-1f21-4534-b437-630f46ee0f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491f09c2-e879-4fa7-924a-4c8a9d23cad1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44436a35-0ad5-452a-83ea-a4797d201510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85abf86d-f17f-469d-90c8-6833f9df5257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b9de0-070d-4931-b5f4-8f57d738e389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410c008e-0e75-4918-91b5-9e41b8180f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdf694e-c30e-4fda-a9e9-6007a20105a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42be3b95-a206-43d0-9b95-903c2c4e7ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ce6668-26d2-4682-866b-4813613e5d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba63d553-5348-46b9-aed3-41f69df9b53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c3b03-2e6b-44a5-846a-869df9d1f054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf604c-0bf7-4d26-aaca-1852a1fa412f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4295c3-869c-429d-8d18-3eafba0ee14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dedbd4-9465-45fc-b717-9f13c73b5c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ccaa9-ea3e-44ed-8b05-9751f96de40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff5f41b-5bca-4866-bc2e-2fc3e9da1586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f1d5dc-4eb4-4718-859c-3d6c4caed2a1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f996920-ea7e-4e17-a5e1-2742f1d1f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25abe902-60d4-4f6b-818e-cbdd2ec230a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baae43f-2042-4fb0-ad74-e6839b2a41be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2703b-5175-4de1-8624-8ac728865f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c391edb-32a3-405f-aa50-92b1803e5c30",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99f0bd1-0423-4738-8090-217d3a9e4632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c80827-e342-4119-8113-18d2c57be21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab3ddb5-44e5-4922-b4bd-3e172f903412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb1ab1-6726-49ad-bc1f-0bb866060ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28f0896-ac58-479a-9ea6-d81a007dda4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902a0cca-b7d0-47a5-a90c-49e4876cd602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6830885f-d4c0-46b8-a666-38a2a3c44e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e30d819-ca0a-4d9e-a329-da53e8683534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104f63be-2916-424b-8a55-4b979a3d0c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a501a0-5b91-4600-8547-45a66a6fd16a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18376cc6-bd9f-40f5-8ab0-c069366a12e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f99d50-6d29-48f2-bee2-66a7d0657da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b51a03-ec2a-4d9a-aa76-7e87c2b7fdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25df4505-a74e-4174-bbef-78a3f7cc5928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bba148f-0934-462a-92c9-a26da4062c14",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d32c4-12db-4b7a-8580-34a8d962c241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b8666e-a458-45a9-9961-75699ac0334e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e2b8cc-12b3-48c1-b02c-d748fc084fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c0cb79-c83f-4613-8b5b-f046677bf046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6968f0b8-eb93-4b52-8f22-68884291f2c5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543968f2-648e-4d76-9407-417e1c075cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c79ff0-c309-4179-b01a-9cf948c4f549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe7463a-1534-406a-a82a-b780260bd6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671b3315-dab5-4492-9bea-861dc77c848f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41539942-58ab-43f0-b59c-32d9c8637412",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76becfc-0684-4cb8-a9b6-9fe0f46eca88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4943ddc3-0d0f-4842-9b63-0bedc79eb0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be70c4cb-1ada-46e4-b3c1-b36374a39843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef12d9e-b200-4432-9d83-54cd641304a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27277dbc-72bb-419b-a979-93c5036095e1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd63a7-93f0-41bb-b505-647b79673a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4610be74-93c2-4a75-bf5d-a1bd8853c4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cb3802-c43d-40e0-9691-49a812d83b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e426dcae-8f4b-48aa-a7bd-2fc53e8be886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245e24d6-7da7-4ba1-b9e4-5f1899c9df0c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc38280a-ea4b-457f-8a79-69b8ec5042b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326bc51e-52df-472a-b323-01bd4706d925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256bfe42-c32e-4f5a-9e34-c762920489b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23144ea-b41e-44b8-93bc-498cf78611ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e7b8f-0709-4884-b547-cd8135a881a9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fbb938-9442-4863-a9ec-f7682e1671fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a839a1f9-b96a-4a38-8013-aba4c481c52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf4245-2e8d-47be-9898-c487243429fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bebc6f-09c6-4b4e-8cff-29730f76dc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c1f807-8ee0-4fa6-9248-0701ed915a9f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cafdfd0-b18d-44f0-beab-b304f1a78702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc85de3c-2746-4baa-a0ca-38e9b360c06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cac34f2-1b60-41f8-bd11-18b5f54ee332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16d49cd-51dd-41eb-b319-3344cabb438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d40a1-e322-43b4-860e-b1c5006ad872",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e90c03-1390-4754-bd99-eea3346706f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48307d40-775a-48f4-8b00-523c863fd80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ccf66f-6b0b-4cdc-bf9d-7994a87210d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d34ca0d-ddbc-4a57-89f0-9028c69e0040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff42439-0b16-400f-bacb-2f2647d6c17f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73aa7c1-d618-4753-90e3-fe792f52727f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf17c68-9b01-486f-baaa-8d3215c02dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b4471c-94ee-4784-b844-43f4639c0ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d213545-cc93-4b2e-a613-a80b39306cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36807599-a0c8-4cbe-b3da-649f6edcb5e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d05936e-466f-4f0d-92f7-c6a82938b0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7a0d94-3823-480e-94fa-03546ad5d786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94143fb8-5cc1-40f9-a4fd-b5a3c20de5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a26d63-64f4-41fb-b7ab-76ec40f054f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa5707-44f1-445a-a682-f88670587029",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1836ac-b67a-4860-b4c2-2515ab939433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0394f076-48cc-4e52-9a79-03355839eb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02a6083-382a-4718-a18f-b825d6d2c2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e94116-720f-4358-8efb-a5d7fa56c993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3160f4a6-9fb2-42cf-9390-1b5e8b952321",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0685f423-fe4f-462e-98aa-a6a7766313cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fbee2fd-529d-4287-b6e6-d8163fa2a994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc58724-7b13-4307-b37c-2f3e4e3ad988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35904f19-b7d3-41dd-bc69-b717977d4b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6565f-f31e-4f54-9f98-3ebc634726af",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458c96a6-8353-4dd9-bd54-59f08375a0d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ae276e-c7bf-40a4-a7e2-4745e398db6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41a76c-345d-4163-babb-d0d2acf55bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1d7fa9-99a3-48a1-b9eb-b94a10d71043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e856f5eb-33a5-444d-b38a-df584e6cfd48",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147042a9-b08c-4d00-a15a-8e78dd23c111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79324560-0771-4b71-b382-5c293a9e83ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb128d-1651-4a63-8e32-d2296a4c0a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9ff164-a074-4d70-8857-5431ec007845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb8de08-9c0f-49d0-ba18-15202f0aa432",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6f951e-4e0d-4295-bf21-4497ba0b1c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed9fba5a-0fa2-4c23-8cdc-f207855bc6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16e508a-1498-4848-a014-bbc1718baa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea91053d-5149-43f3-9e8e-6ff605bfb294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a451c0-f962-458a-90e3-2c151d88b54c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847c13ae-30c0-4b95-b9af-3e761a18c220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03628173-a278-4e97-b59b-d01c84ddf6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4463a38e-aef8-445d-8e46-f0cade3a9adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb1a070-7aae-47f5-a763-8d58bb3eb246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec85abfb-a219-4e72-b1fc-d228e34065b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b2578c-f42a-4452-ac8e-53d3fbe828dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be437fa1-0422-44f3-95c3-4c159e9d438a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d27fe2e-1deb-4abc-8b7e-71bd540a3481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4673a86-6012-4eaa-a671-cd228fa26dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094c448-5241-4567-898e-6d363686d6fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1c150-a088-46f2-99aa-22e21df38f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c29216-8944-4ec6-b910-09a2f9dae230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c2c1a1-be49-4d90-83ef-19ea6b2eec8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dc852d-c5d8-45e3-aef3-7c59fd85498e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3e3c9c-f414-4ae6-bfac-8563de56f42b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1f8bac-287c-4efb-8d8d-b283d4e907ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ca7e36-2bc0-4319-a0df-94633ef1b913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8009db8c-b1ea-4af0-8c7c-988445d9f109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163acd05-efb8-4241-8877-e487d341cb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e93379-8f6b-4804-908f-0f0832ccd00f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2472a55-44b6-4674-a784-f4b915d22e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744b465f-0fde-45dd-b703-b2fd1bbdaa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0cd869-7e6b-4d23-9dd2-a0562fdfc318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9c74d7-25ae-455a-acb9-fd94eabc6b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37135f-5ed0-4d9d-bbd0-829223bbf80d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14bb423-ed5d-4126-ac3a-13b88520757e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0936eaaa-4b27-44b1-bff6-f16045e67fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264917d4-157c-43e4-9744-5c19416dadf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0021ccca-a03c-4e47-8cc0-852578d36f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a0135e-673e-4c79-af9a-e09d4ff4593e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc10147-8fe1-4ffe-8f26-8ec1371791cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a884be5-f62f-487e-9f3d-f145b3cee6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0edae7-b9a5-449a-8cdf-71b670417d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d82214-a0c6-4568-a5ee-ccf782690206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30519167-70f1-431b-9d1e-9e68d1e60e04",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c1f189-0480-4374-9a1b-fc6c9a185fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3626e8-6cd2-4ca3-8b34-01463bbc1c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e037ea-a0fa-44a5-86a8-f3435a39c589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d512253-3e05-412e-8138-dfee2cd76a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29ac00e-98b1-4510-8da9-33c42032aff3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697bcbc6-13d1-4eba-9000-2c70967ca295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcaea597-cc2f-4805-95e6-e111009b31e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7924e3-40a2-4cb3-b736-b31782b934e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc14fb9-189f-49de-b4ae-ce06ea1a0fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f210a8-5c13-436d-b1aa-60c6db00dc27",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f2c2f1-5408-45c5-b2a6-0d0ea9891728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb76a2f3-9de1-4765-977c-633202aa71f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0fb2d6-b589-4e0f-a8ef-97049900b567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d270f6f6-8d57-45a9-8acd-03c6d568c2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8737075a-0690-43e5-8aa9-609ae8b2496c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43410454-0bd2-428e-818b-9ae49297b2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd10c69-b99d-4dd0-accc-f0830f4cabfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edae3e8e-b30c-459b-9c6d-70dd0bffe24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8dded0-30f9-4f74-b13b-c15646a582c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998bd88d-f3ac-4884-b278-5a219384debe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fb95e8-0b82-4224-a182-145e0c708011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5554828b-a649-4a55-9f15-7e8c58c72d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe8c0f2-ccd3-45ff-b8d8-f05862d22336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5127168c-84be-45f0-889b-e3e83c341f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ed7287-bbfe-4cef-9b9c-a047132fb760",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81220025-7e1d-4593-8545-a9a7fd960ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d765fadb-bb5a-407d-8e5e-6f83b7eb6072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab53278-4522-40d0-b8c7-c81e98012503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e8a1c6-83fc-483c-b63d-2f9593329805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f633073b-ec8b-48d1-8a92-872ec5a18bae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7475aace-28a2-47d1-afcf-05bf851b2794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47bc284-be92-483a-9025-7f23c3b80389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da49f78e-2a20-4b76-bcee-56f22e343687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb1d6cf-5554-44ca-adf8-8b523e7e8b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d5f85d-3dbf-4942-9237-1f7601452087",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76af636e-a4f5-4d53-8b34-3cd796661fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecea0319-76fc-4635-b61f-b95c95de7c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb584cad-0f18-476b-86e2-0675f7ca77b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4b868e-7ded-4ded-901f-87c20dadc7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fe2a58-a4bd-4094-995c-c66da62e3240",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341fcfe-547c-4e10-b285-d07ceb779607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c747c0-7401-48e4-b2e7-cd421cdea222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f52caf6-18c8-4c07-b0c8-6ef95736eda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a24c9d-df31-4a0c-b407-a8fa3f0c734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c099e5-6aaa-4670-bd9c-b57fa4ff5140",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73a61eb-19b0-4f5f-9737-570ba2b6ea72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed40fb8-be13-4e91-b2d7-61f3f87ce202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb48b3e1-f8ee-4f2c-abcd-3e29a6bf912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17eed3fa-d94f-41e8-959d-767ff0570d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a172298f-d4eb-4580-bad4-70d0621918f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96019b2-f4fe-47b7-8f59-e86bc357b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0214a715-131b-436a-b1b8-3771cf7a5582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f6cce0-d4b5-4d14-95ee-2cd3a749d0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1038fa7-0a8d-44e7-8b07-4c75646e48b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11a0713-dea9-4531-92d0-2d33d34ef01a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c910e-7f51-47c4-9134-518ad81ca873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a547d35-935b-4540-892f-0533dda8c17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36225fe6-0a21-41f0-b103-41d071269b5e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee36879-03e7-4716-b996-9afb13cd7624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e210842b-501d-4132-b195-03b16652e7a6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc604f7-0308-4c84-a5cb-18c0a0c7c91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4e82bc-19a2-46ed-923c-0e7d2cc99143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759e26a7-1417-4735-a3fb-a185cda65d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8051e9-b00c-43cd-8c38-a571ac3de437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797b1cd0-196e-4dc8-99e9-7e2ab75cd3a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6518e59a-d407-4ac3-a2ba-47166a0ac43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4698b9-ca11-4f92-a71b-54a4a68fda51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ead7de-6b4b-494e-838b-c87a282e304c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c79366-c0da-42c0-b431-8df1b3fe1a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92c98e6-d95d-49d0-a74e-101ce72303be",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6293202-792f-407b-9ced-e88feae63914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3105f0bc-ea98-417a-bdc5-9191703ee6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee8c1b-f1c1-4d85-aa60-7bb7201a2c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73969fec-ff72-4b43-b4a5-7a105733ca29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9992b52d-3746-4c8d-8b04-90ae99f4d604",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f04b8df-7a62-4efe-b4a4-16bdef7491be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac76482c-e6bd-42fa-a00c-ee1ab0cb4779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2e944-8d70-4403-88f2-bc907b9430ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf98ae7-851c-4c1c-ae59-ba47f80d0414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2497ec-d70e-44e9-a9e6-a23a44cbf587",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8fca6a-c901-4753-a50f-1b1eb5a9fd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ac5d38-5dc6-4084-8151-f77fc7843465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1d68eb-ddc5-4bbe-912b-624ce7c33b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096ce305-6858-4b9f-bde1-d5d593979d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb9d66c-0ebf-4023-8fe7-1baeb4fefd7e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580287a3-7750-4320-ae27-b6d5a2201a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cdd2c5-4ee8-489b-93e1-9d43d0403919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97f3e12-3009-466f-95ff-5b054172977a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afca6192-0745-40e4-a468-b8b291b9d82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8467d4a5-3131-40df-9f06-b2243f388f24",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3883f927-a837-44cc-9226-c3ec4ebdeb86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285e3428-5b4c-4fc8-99c5-faaabb2cbb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57a0d55-80fa-4ea4-b126-11dd0b69b176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89ecccd-9618-45bc-a3f5-97def6d0a133"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c046e8e4-e20f-4ca8-8f94-153dceee63b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "325ae243-5581-4fca-becd-a649db94b09f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e9a4e36-63ee-4477-9248-5e0f8c330f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dad620e-adb9-446b-9849-cc7d2679ed36"
                    }
                  }
                ]
              },
              {
                "id": "1114a62b-23d9-4ed0-b724-aa181ebe493e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "454f2cc6-e44c-4c57-96b6-42b0aa38324c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ccb958-6657-4cb5-b5db-6b89ff289d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "64147a9a-cb5b-4051-896c-df6cde87f94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfb99fa-24fc-4ea4-8a76-e71a78ab4f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc401e7-085f-4fc0-84b0-d822e2491bc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5e75ba5-adde-4685-a6c2-d49027dd99fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6929c7e1-eed0-4d9a-a9a5-0304ea8b7fe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "705af922-d2df-496b-b327-5a84f122197c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4affbe5-5218-4321-812a-8da430d1db45"
                    }
                  }
                ]
              },
              {
                "id": "2d5a3088-6b22-4b29-ae1b-3dc03f492e96",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "376247ce-fc67-4029-9223-02bcf4c93e29",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9ff30-820b-4441-99e8-a11107970900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9c4b5b81-bbb1-450f-bf7a-f2bdb301934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf6ce86-c937-42cc-aaaa-167ed1ecc0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b02472-7463-4b76-9927-579997c60058"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d960b1a-f1aa-4649-8d3d-5c91ac4993ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "432196c3-57d2-44dd-9ee0-d31a8e51846e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2e9fdd3-4eed-44e5-802e-72d8c7b7fde2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "254902e7-1527-4330-87fd-5a82432768e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68fc89c7-0f19-456f-8259-4b5ed450e6b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4fc3a37-3707-4c69-b397-7df08f5d1d00"
                    }
                  }
                ]
              },
              {
                "id": "6b1c0654-0be8-427a-964c-e78b6c878bd9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a96d5564-ec65-480f-993e-8de51debd301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7036a7f-cdd1-44cd-a22e-4a836f14c321"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3baca45-fdcb-4821-9219-70f5e467df66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44824b8-3adb-4115-947d-79e127dd8a95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a00c18-950d-4caa-a1c9-badce488a1a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e868309a-4208-41e3-8807-8eaf28bfdde7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "792a5fe6-9196-401d-826c-6a27a10ef7ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f167cca-6cc7-4fe9-8649-a95f6520c16f"
            }
          }
        ]
      },
      {
        "id": "ee3beae6-e0ab-42d3-abb5-a9080e4f9a9b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8785493f-a199-421d-9d02-950df7a98bd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47234588-a53d-4a40-9ab3-645bb8dd72a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72d071f0-467e-47c7-96c0-c73f21b1bac2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2adc85-5a4b-400f-841a-a46cf1bb15cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "da3a126f-0d7b-4283-ae27-5c253165f5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1afea35-673a-43fe-bc06-5c4ff03f693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5964c3f9-8915-4215-9a5d-c9b6e2ee7c2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ee81c8-8d1e-41cb-ad45-cc147b605dc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c869ee20-c4d0-4d0b-9ed9-b7604b12bf87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1201d600-160c-4b23-bcc5-205f6d011ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12e3f53f-caa0-4c0b-8ba1-a656a30aa0b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53ffcab9-e3ed-4855-ad1a-b49c44a12f83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "52a6a791-c568-4251-99ea-b6e470cbc74d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2cf9196-da29-469c-8c65-0b885d1d5731",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d54b884-cf39-4f95-ad8b-19aaea747770"
            }
          }
        ]
      },
      {
        "id": "2da488e3-ea8f-4caa-b14d-2db86fc175da",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d64ba105-f559-4edd-8dd2-85c9fbeea18a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e15eba47-8ce6-4a50-b836-d85f2221a343",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42250dae-b964-453e-8bf6-bf4572f32231",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ce13d-85c8-4f3c-a850-531cbc161aef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2f4538-3ac5-4f21-99d6-e4c8bee1caec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73469f27-46cc-47f7-ba81-ebe47096d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2588d476-4abc-4f56-b395-94b681bf7583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ba0c0dd-3e45-456d-a5bc-df4bf491d913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94402936-d3d1-419f-afb9-34a6a0de76c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33f80708-b1c3-4a73-87c5-7d7ee5207c51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af7e59e-c366-4e03-bab8-55791cadcaff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c115f4cb-5f6c-4f55-9baf-1a35552a61dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1722f95f-63c8-488b-82ef-be4862c3dc82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a85389f6-2d8d-424f-9a8e-f6ab49b38d0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a71b379-3e8c-4bdd-b8a8-dff4dfdab878"
            }
          }
        ]
      },
      {
        "id": "14fe6269-ca51-47db-8e0e-de4b2f803948",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "44f703cc-6b62-4747-906b-04792ad11cf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddc27de7-f48a-4f5d-a87e-c802a9466ebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b9e43d9-1b61-4ae7-b069-e0b273aa91ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec305e0-a9d6-4ef8-b18b-328d2c79fe0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d1e6b3-9182-4c96-9ffe-d4aa67af0544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d5dd2-cf4a-46e9-8af8-642622fe1ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9c48712-589d-40dc-a400-c9780f617788"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4606cc63-b725-437f-b91e-04e336195b18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a14b162f-3b95-4042-9999-a7f03dc85b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8542834-a73f-4b23-adda-dbb4c4b75ab2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c6e2483-830e-4101-bb90-cdafcee199ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e62ad4-cd05-4169-8313-d1c6e8f69f32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a535c8b-0fdc-4dbc-8e43-3c69cc57f631"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52bfe1bf-07c1-4db9-9c6d-3514a269d0ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ba40d13-6642-4b00-8ce2-721ddac82bfa"
            }
          }
        ]
      },
      {
        "id": "4e809434-11b8-42d3-9b74-40d3d4b00584",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44790f21-dc0a-4c34-9417-9274fc0ca35a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3acadd9a-ced8-4cbd-a991-5be004a4b2b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2e620de0-845c-43da-83f8-c658656d1622",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b665336-3fd5-4077-9d8d-6d226c96ce7d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7efb3d5d-3c66-4426-bd98-16f26c1b8d17",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 132.4798387096774,
      "responseMin": 6,
      "responseMax": 3828,
      "responseSd": 393.72425619474217,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715992588229,
      "completed": 1715992629168
    },
    "executions": [
      {
        "id": "652ecc40-7548-4125-922c-c706b8770bc5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "90e9601b-3d38-4be0-b025-8855d10b1ebe",
          "httpRequestId": "1439dc36-4cb2-4fea-81d0-e68b8d982d07"
        },
        "item": {
          "id": "652ecc40-7548-4125-922c-c706b8770bc5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4df8df6-3c8c-4c16-b9d2-cac0aa73956c",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "54d4d0ad-0dec-4c54-83e2-093928139bad",
        "cursor": {
          "ref": "3ad08886-6f54-4013-8bc2-7a1ad1f01f4a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47c62546-3e22-4a7d-abb1-453f7b68ae94"
        },
        "item": {
          "id": "54d4d0ad-0dec-4c54-83e2-093928139bad",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "93f8a8b7-19d0-4ed5-9d26-d2babc7ee6d1",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fbd6375c-eefe-4868-a05d-8dda11961439",
        "cursor": {
          "ref": "408f1e82-10c8-43ed-b3da-3d6b7dd6126a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5179cd05-a88b-443b-b3c4-ff67b5da14ee"
        },
        "item": {
          "id": "fbd6375c-eefe-4868-a05d-8dda11961439",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "022e3879-1ddd-4f73-ab32-4a3644f3674f",
        "cursor": {
          "ref": "ef040082-39ba-40db-929d-da265d34432e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a44c97b-4d3c-49e4-b152-db7d4955af7d"
        },
        "item": {
          "id": "022e3879-1ddd-4f73-ab32-4a3644f3674f",
          "name": "did:invalid"
        },
        "response": {
          "id": "dcf14c10-3724-403f-b8e5-cd440bf2d4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2023,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022e3879-1ddd-4f73-ab32-4a3644f3674f",
        "cursor": {
          "ref": "ef040082-39ba-40db-929d-da265d34432e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a44c97b-4d3c-49e4-b152-db7d4955af7d"
        },
        "item": {
          "id": "022e3879-1ddd-4f73-ab32-4a3644f3674f",
          "name": "did:invalid"
        },
        "response": {
          "id": "dcf14c10-3724-403f-b8e5-cd440bf2d4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2023,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04abfdc2-7b13-4b34-bed7-703822680ef5",
        "cursor": {
          "ref": "a702c736-8bc6-4544-b305-cf4d71b43576",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aff3cc9e-b857-476c-846a-d530706c2370"
        },
        "item": {
          "id": "04abfdc2-7b13-4b34-bed7-703822680ef5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fdb81372-2010-4ea8-8e03-848864962bf8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2537,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0baa2e7-0cf8-4788-8337-effaa97dbe87",
        "cursor": {
          "ref": "6d643323-1ef6-4609-9a91-3fa6cc4b9a29",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1a7e14f4-5a2a-4fb2-87f4-7c113eca8a07"
        },
        "item": {
          "id": "d0baa2e7-0cf8-4788-8337-effaa97dbe87",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5755fd87-9421-4ff3-8bde-3ed45d2e5263",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2249,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d585ddf-60b0-4d95-8d7b-b10ae8a5ee16",
        "cursor": {
          "ref": "2afea1a7-0f05-4393-9d21-126beb53cd48",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "733efe7b-0908-46e5-9406-8411b1560c49"
        },
        "item": {
          "id": "6d585ddf-60b0-4d95-8d7b-b10ae8a5ee16",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "065a4830-06eb-4642-90e5-c6de10a0bf04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "b2df290e-b38a-4254-a1be-fefa118befb5",
        "cursor": {
          "ref": "d263ebcf-1821-4660-addd-527888ce704b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1b56f8e8-1052-4942-aad0-9d0301c8e4f4"
        },
        "item": {
          "id": "b2df290e-b38a-4254-a1be-fefa118befb5",
          "name": "identifiers"
        },
        "response": {
          "id": "7b9cefd4-d1e1-469d-84dc-7e01308863a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "3ebb5fdb-1849-4455-a7da-472a5ba721fc",
        "cursor": {
          "ref": "8809140e-a126-4c04-be8b-7d7f7e5b5c31",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "208e8f5c-16a6-492b-9ec4-c71acda3d235"
        },
        "item": {
          "id": "3ebb5fdb-1849-4455-a7da-472a5ba721fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "74e01366-1618-499c-925c-1a404c427317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cfe65d-5d7c-4b5d-b7e6-6ad8106fa718",
        "cursor": {
          "ref": "24289350-d077-4c94-ba78-6f776013c2a3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7841c9a2-e186-4d99-8420-97d710371991"
        },
        "item": {
          "id": "f8cfe65d-5d7c-4b5d-b7e6-6ad8106fa718",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c1838bd9-80a1-4647-9f0f-3b9bdc8417e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db389091-bfd6-4532-8d55-c3c759997b89",
        "cursor": {
          "ref": "dd6abfe8-38d8-48e6-90e9-837dc37932e6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b4e29bdf-12ed-4c7e-afa7-2aaed468850c"
        },
        "item": {
          "id": "db389091-bfd6-4532-8d55-c3c759997b89",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f516c318-2fa1-4d82-94e8-9a9faa3b7497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2278e730-0d70-4d50-b256-9d241a576ed8",
        "cursor": {
          "ref": "3d8b4b98-fa79-4c95-b0b4-bd35f272c7b6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eccebc0e-7894-4e8d-8b60-988db303dcd7"
        },
        "item": {
          "id": "2278e730-0d70-4d50-b256-9d241a576ed8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "de727775-2d96-46e3-8aae-62d5dcf2f22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc8626-0f9d-429e-a116-28e50fa9cb66",
        "cursor": {
          "ref": "704691a9-b76d-4153-8a40-e81fc4d1979a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a14ed59f-bd31-45ae-a4f8-8dedc76694ec"
        },
        "item": {
          "id": "04cc8626-0f9d-429e-a116-28e50fa9cb66",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d8c3a6fa-a948-4223-81b0-36f18a3b5854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24cddb5-5113-4246-bf84-f3a058a80ddd",
        "cursor": {
          "ref": "6c8f0976-c841-48f2-b895-1aeb4d463727",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fd5097f6-a030-4752-bb56-7e2f4e61dc82"
        },
        "item": {
          "id": "a24cddb5-5113-4246-bf84-f3a058a80ddd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "81aea974-9bbf-4226-821d-8c6f0955e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc7c51b-49e9-4c7c-a450-374566304fa6",
        "cursor": {
          "ref": "4e077704-0d39-46d4-a9c1-1e21818f4d47",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f79f472b-041e-4258-89f1-fbc8c2fced9a"
        },
        "item": {
          "id": "2dc7c51b-49e9-4c7c-a450-374566304fa6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e7adf0f7-05e6-4321-b697-5be879fca547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c310a4-fd66-4704-a5b1-183ac2c008d3",
        "cursor": {
          "ref": "a2694f1b-2de2-487b-abc4-3bb808834fbf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "61596751-8831-46fb-896d-1bff13e25c36"
        },
        "item": {
          "id": "08c310a4-fd66-4704-a5b1-183ac2c008d3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7e3c8537-c4f9-4550-9fe1-2cc25600d49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821b1168-5c61-490f-9309-f4a919035be6",
        "cursor": {
          "ref": "f6b7e0ef-f299-4a1a-8c21-6234e43acbee",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8446785e-2e36-4784-a360-069adb7683d3"
        },
        "item": {
          "id": "821b1168-5c61-490f-9309-f4a919035be6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ab555cad-20c5-488b-8d60-dee78a80b941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe88cc-04d4-41fc-9725-4fed3801c485",
        "cursor": {
          "ref": "2d527cbb-44c4-41fa-a40f-0a0d1e7ac9ee",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc933886-c39b-44a1-a4f8-b63791369f8e"
        },
        "item": {
          "id": "4bbe88cc-04d4-41fc-9725-4fed3801c485",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2d1b3ae1-39f5-4be1-9d24-a723e671d477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b397b9-dfb5-44d5-ab4e-c2258bbddc6b",
        "cursor": {
          "ref": "ee4ebc96-4869-4d88-9ddc-5b7c123016f1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1f2693ae-c7e4-4e02-8911-e3f0d1cf7de5"
        },
        "item": {
          "id": "34b397b9-dfb5-44d5-ab4e-c2258bbddc6b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "036f2c9d-9a41-4e2f-959c-b32946816ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de558ddf-af97-4a40-95d5-835f04914703",
        "cursor": {
          "ref": "37c2d176-0511-493a-aa4c-4364f282a3ff",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b732f18b-203b-473d-9574-03d0f09b7a69"
        },
        "item": {
          "id": "de558ddf-af97-4a40-95d5-835f04914703",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f0aa942b-d867-4474-8ea8-efef99068353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c54f7f-44ca-40a7-af61-a70843bb019a",
        "cursor": {
          "ref": "d923a0ad-5362-4cf0-9044-d7d9d5784e2d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dd8d15b9-ea88-4e90-8e1d-59e91c384991"
        },
        "item": {
          "id": "52c54f7f-44ca-40a7-af61-a70843bb019a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "748ce6df-fe94-4eb0-8585-0c756f439ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9531b65a-4804-4c29-a773-c3367ea5c252",
        "cursor": {
          "ref": "4a5658a8-6300-4d59-ae35-4dff718f35a2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bbcdd06a-ad23-454b-ac67-3ec82cd2e455"
        },
        "item": {
          "id": "9531b65a-4804-4c29-a773-c3367ea5c252",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ae5da2e-c601-45df-816c-12c0681b9b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4765939-f627-4355-87fa-2acc2d9c8f02",
        "cursor": {
          "ref": "fe32307d-c5c4-4959-9c4f-2ccc84bd0c85",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e77b5bb-ce70-42ab-ad2e-ab5a5ca36e5f"
        },
        "item": {
          "id": "c4765939-f627-4355-87fa-2acc2d9c8f02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e59cc7dc-79ac-4012-b9d0-2ec81df987fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30435c7-89e8-413c-bf9a-feebe4b56a1d",
        "cursor": {
          "ref": "47666007-1658-4374-9f42-4a20c1ad42bf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95b4f988-a306-40c8-a7ab-53a1dabb286a"
        },
        "item": {
          "id": "a30435c7-89e8-413c-bf9a-feebe4b56a1d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b7e25f47-85bc-44aa-9f76-7372eecdfa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bfdc98-ebf6-477b-aca3-8cb4f2a6620d",
        "cursor": {
          "ref": "6fd1aacf-50c4-4e92-903e-9f43d325f376",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "846a290b-3c44-4067-bfe8-4e348d51ee39"
        },
        "item": {
          "id": "d1bfdc98-ebf6-477b-aca3-8cb4f2a6620d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "08787bf4-f0a9-4498-97f9-0644c4595fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28624e7d-560c-46bc-89d0-d373360f33c0",
        "cursor": {
          "ref": "a5dd14ee-0736-4d62-bcb8-d8288b008ecd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "46a469da-793e-43d8-949f-3c35ce619238"
        },
        "item": {
          "id": "28624e7d-560c-46bc-89d0-d373360f33c0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b130b842-b3f9-427b-b99c-0a8771045be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d06496b-3939-4dec-a326-227aa49ba632",
        "cursor": {
          "ref": "0bda4764-102a-4de6-9192-f836ce4d9608",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d511504-fc63-4165-bc6d-7140a6b585ed"
        },
        "item": {
          "id": "7d06496b-3939-4dec-a326-227aa49ba632",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a90e7732-9827-4181-ba75-1e3bcec4e30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccc0fa5-a05b-427f-ad83-5893fd84ac14",
        "cursor": {
          "ref": "4dcc8a04-2208-4af5-88e2-12e91607ebe6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "37d7a2b6-1b74-4007-be26-adbbe2a32318"
        },
        "item": {
          "id": "cccc0fa5-a05b-427f-ad83-5893fd84ac14",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3581ac0f-7e9d-4384-a63e-ecc1570a3ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9a709a-9242-46bc-8fa9-0fd8408c9794",
        "cursor": {
          "ref": "d8e49cf0-ad97-4c37-a30a-39e75aa6d31b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c5c9ccbc-fa67-4ee8-ad72-eda46198960f"
        },
        "item": {
          "id": "1f9a709a-9242-46bc-8fa9-0fd8408c9794",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4dce359e-4932-489f-8a99-378d35e311b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872584c7-6c3f-46df-af7f-2f85ded054b4",
        "cursor": {
          "ref": "3b4caeeb-dabb-4ef5-b8ec-94a7a1342c02",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "962f982f-4bfe-4fe1-8264-9fd984dbe711"
        },
        "item": {
          "id": "872584c7-6c3f-46df-af7f-2f85ded054b4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "07a7c98e-228a-4a0e-a7a0-3b179763acbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0eb44c-d177-4354-b40f-144e64288dcf",
        "cursor": {
          "ref": "37db8eda-bfda-46ed-aadd-4a8b82b38ec0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f7f86009-ca90-471c-9f1f-a8205bf88a87"
        },
        "item": {
          "id": "3c0eb44c-d177-4354-b40f-144e64288dcf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "53ac349f-e0f3-4e17-b213-9de048bfe3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b0709e-2250-4bc4-b365-14418ba5489e",
        "cursor": {
          "ref": "4e7b234a-0289-4161-a9ce-ddb49f7e5895",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fc89829-184f-4669-b990-aca048c215ec"
        },
        "item": {
          "id": "17b0709e-2250-4bc4-b365-14418ba5489e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "739a9755-df2c-421c-9320-918c094c97a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c447a696-292e-4195-bddc-cead08a93d5d",
        "cursor": {
          "ref": "2b34febd-c89a-4c95-9c8d-e8a3a817499a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1614aebe-fba7-4b97-9ef0-dc22e510a689"
        },
        "item": {
          "id": "c447a696-292e-4195-bddc-cead08a93d5d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8716447e-df20-4a6d-a607-0677aa194105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d542e0ef-bf18-42c6-b1b7-0f63e193720e",
        "cursor": {
          "ref": "be0d1777-abe9-4fe0-b3f4-acdcfadc18a5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b76d9926-ec4b-41e4-9ab5-091111e501a2"
        },
        "item": {
          "id": "d542e0ef-bf18-42c6-b1b7-0f63e193720e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a364e41e-3330-4565-a115-d594af3ec120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05787593-f785-4930-bc2b-9a51cc4fb050",
        "cursor": {
          "ref": "aa35643c-012a-4730-90c9-61cd2be663d1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1e9ec2b3-f90b-48e8-80f6-fa03b9dcc9cb"
        },
        "item": {
          "id": "05787593-f785-4930-bc2b-9a51cc4fb050",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "82d47160-5c2c-4768-bb93-e2315bd1aa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeac3c6-5826-4eca-ac0c-ddcee8b3eafa",
        "cursor": {
          "ref": "22d323e6-9e01-4b99-b680-6d8c19fc144f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64a3b668-8fb4-4be6-b79d-b0853551e182"
        },
        "item": {
          "id": "bdeac3c6-5826-4eca-ac0c-ddcee8b3eafa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a698637b-c225-488f-9275-0c9d34a11f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d54336-23d1-4c83-9a2b-d100397e3bfb",
        "cursor": {
          "ref": "c347f5a3-4bb7-4e0c-87d1-2352cb51b580",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7f517c57-fe10-43a6-a121-aea2c694fa98"
        },
        "item": {
          "id": "f8d54336-23d1-4c83-9a2b-d100397e3bfb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf22b109-ec32-44cf-ac47-901538a496c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e904d58-9e9d-41d6-9673-6b763d25606e",
        "cursor": {
          "ref": "20017f63-d670-4d1b-8631-8af5c033acdf",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9a5ae857-5f37-491d-83e5-28878cb8f2e0"
        },
        "item": {
          "id": "6e904d58-9e9d-41d6-9673-6b763d25606e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "586ecf80-2e76-4573-a378-66bb299f1998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fd8885-8b2f-43e2-9df9-8f4091f59447",
        "cursor": {
          "ref": "cdf3fc32-e253-4e2d-b256-86b572b596b7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0f43df53-817b-4685-928a-c1df4a5d90b2"
        },
        "item": {
          "id": "58fd8885-8b2f-43e2-9df9-8f4091f59447",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a2289169-ee7f-40a1-b93a-e677ebff8870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4461fc8-fede-464a-9a62-2309a3cc8c19",
        "cursor": {
          "ref": "8330eb9b-3739-4656-919a-1054002ed8ee",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16aa7636-0a8e-4d3a-8f16-d1273a696dd6"
        },
        "item": {
          "id": "e4461fc8-fede-464a-9a62-2309a3cc8c19",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c06f644-997d-4191-9b69-f63c3d960f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bc8b62-e856-4b91-99e6-14b45c029f31",
        "cursor": {
          "ref": "1a367b90-d6a0-4d4b-bc19-d52f94e197b7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c57b5102-0919-4ab0-8ac8-b51829476d5f"
        },
        "item": {
          "id": "e6bc8b62-e856-4b91-99e6-14b45c029f31",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33c5e57c-bde9-444b-ba26-cd767f467c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7f5b71-d184-4919-a017-cace261afe3a",
        "cursor": {
          "ref": "d5ec4c18-4b27-4f16-ac71-7bb7afe49c2a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c4f0abb-45ce-4268-94a5-90a530906586"
        },
        "item": {
          "id": "df7f5b71-d184-4919-a017-cace261afe3a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a2773900-5fa5-46a9-9a44-cce0f8c81df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05726a9-ec6a-49f0-90ef-0306a7e11507",
        "cursor": {
          "ref": "b90edad2-98d8-46be-9941-70cf27de10a4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "af0fd6f1-4ddf-4e69-8567-74fda30c5131"
        },
        "item": {
          "id": "e05726a9-ec6a-49f0-90ef-0306a7e11507",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bfa796e2-501e-443c-bdfc-ec4a9412e5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f423ab89-3bb1-4cf5-b4ad-ae14e692b331",
        "cursor": {
          "ref": "8c4b75ff-7403-460d-b7f8-5d8bf59182cb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "348c3078-5731-4224-9c2a-5c59d35c77cc"
        },
        "item": {
          "id": "f423ab89-3bb1-4cf5-b4ad-ae14e692b331",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "90b2041e-c85b-4ade-a7a8-b49d956611fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452c979b-08da-44ef-b6ae-0c0079fe6f48",
        "cursor": {
          "ref": "c49399c8-02e2-40f0-a224-1e41388ac051",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6abc970d-ff23-432c-852f-df0710b4a3ec"
        },
        "item": {
          "id": "452c979b-08da-44ef-b6ae-0c0079fe6f48",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d14a05d-f254-47c7-9ece-363035c22fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022ee7f6-a1b4-492a-86ed-6336c474da20",
        "cursor": {
          "ref": "4be2010d-601f-4d1c-9fc3-c8fc567c4631",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4d6808ee-ece7-48db-8cce-9fc1f2b3a396"
        },
        "item": {
          "id": "022ee7f6-a1b4-492a-86ed-6336c474da20",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bbfb5415-d525-4477-991a-f154fc21c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a66cc-1a5f-4c95-b940-5afe3d77b367",
        "cursor": {
          "ref": "926ffe92-f549-4544-9a0a-6f1f0a5b6ae6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "24b7ae3e-0a59-4b10-969d-f435a42d9bc4"
        },
        "item": {
          "id": "396a66cc-1a5f-4c95-b940-5afe3d77b367",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fabcd707-99b4-459b-85ef-23ad3c91025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60192144-abc8-440d-90f7-69b8e03f88ae",
        "cursor": {
          "ref": "6eceb369-bd69-4cb0-9332-39dd6d427e87",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "589ad0c4-ed8c-47bf-99ce-209c8d2133d5"
        },
        "item": {
          "id": "60192144-abc8-440d-90f7-69b8e03f88ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "edf249b4-e9d3-4abf-a783-2335dc453d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940b4b24-34a3-4290-bb3e-4ae9f666260c",
        "cursor": {
          "ref": "bdc2be2a-6bcc-4fe7-a04a-4f7d268198d2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d92dd5b-bcf9-425d-b0d7-b79b0aa782b1"
        },
        "item": {
          "id": "940b4b24-34a3-4290-bb3e-4ae9f666260c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d216ad6e-3596-4e7e-8006-950bc0c13e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a84347b-5eaf-4b16-84ca-d5d7e6e9a710",
        "cursor": {
          "ref": "662fd5b1-2c20-401c-bf32-834c3189d550",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a0441ef-4167-4311-b8fb-84a460c6af1f"
        },
        "item": {
          "id": "4a84347b-5eaf-4b16-84ca-d5d7e6e9a710",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b21a5a04-9781-47a9-892d-16d07da7bfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69bfeae-8817-4885-8e72-9d034ef6aec7",
        "cursor": {
          "ref": "3c96d581-a702-4703-9527-ea1cc6dd8caf",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77ba0b4a-0585-4aa7-bbaf-fe1b6c3b5835"
        },
        "item": {
          "id": "e69bfeae-8817-4885-8e72-9d034ef6aec7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "adce6532-fb65-4941-89d5-8a4fdd9e8fef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33f9621-617b-469f-ab28-801a207bac41",
        "cursor": {
          "ref": "cba60942-228b-4177-b60a-34b1f0773c47",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f119bdee-2e47-4746-bcb7-19a0ca960b80"
        },
        "item": {
          "id": "e33f9621-617b-469f-ab28-801a207bac41",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3cc4b5ae-7ef4-4bf4-88ec-56bab14078de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef82459-35ca-41cb-8ee7-9d5a29dc9605",
        "cursor": {
          "ref": "f1b09d98-5f8e-48f2-8e9d-3fc83866343c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "28e9488b-c803-4d97-9c3e-228638ff5eb1"
        },
        "item": {
          "id": "6ef82459-35ca-41cb-8ee7-9d5a29dc9605",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7c28feab-9e5d-42eb-a541-cdcb32d7b643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc671966-2577-4ddd-bd95-571144a8e9d8",
        "cursor": {
          "ref": "fb52620c-3238-48b2-873c-2826bbd8e6c1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0ab345fc-5808-430c-b4ef-9b799e02d35d"
        },
        "item": {
          "id": "bc671966-2577-4ddd-bd95-571144a8e9d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9337af35-30b8-4e76-914c-cc346917161e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dddc5bf-7456-4f85-9ba5-3ccec3d1e516",
        "cursor": {
          "ref": "bc4153e7-3615-43fe-837d-31d79825a96d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "062be7f0-9a29-4e56-9022-ae733612e7e4"
        },
        "item": {
          "id": "9dddc5bf-7456-4f85-9ba5-3ccec3d1e516",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92730f44-cdff-4279-9339-835c86235cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051199c1-ff21-4d60-ac0b-72419f0869a9",
        "cursor": {
          "ref": "c360c751-a1b9-45a1-8545-66f109b1241f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8410f96e-0b30-4571-baeb-9774026d907c"
        },
        "item": {
          "id": "051199c1-ff21-4d60-ac0b-72419f0869a9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "70d9bcd9-20c2-4087-b4fb-538f84c50bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a6295e-8d39-4650-990f-29a0fff5a4dc",
        "cursor": {
          "ref": "e30d42f0-deb5-4182-81e7-2a268b123b7a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "634571c5-5214-4b36-ad43-21aacecc593a"
        },
        "item": {
          "id": "87a6295e-8d39-4650-990f-29a0fff5a4dc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc5185dc-1fb9-4a27-9715-f1889078e0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c6ee41-5fda-44bc-b728-af76e71cebf9",
        "cursor": {
          "ref": "87f97fc9-eebd-4100-95b7-5c14ced18c1f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0d6cac11-067b-405d-8c52-b944ef3a5caf"
        },
        "item": {
          "id": "d5c6ee41-5fda-44bc-b728-af76e71cebf9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78f3d491-9d58-4767-b365-8cff5bccba47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bd88b3-5f55-41d4-ab84-93a3edb9db66",
        "cursor": {
          "ref": "93ba153b-cfa5-45b0-ae6e-56137f9e0849",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e33ead48-61f4-4512-a825-c2a05032231e"
        },
        "item": {
          "id": "09bd88b3-5f55-41d4-ab84-93a3edb9db66",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "afb938c9-ddc7-4217-a1af-16bf11d29c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe348cc-8ca0-4f49-b45a-54402a6bb396",
        "cursor": {
          "ref": "8ce15327-9ebc-460f-9b9e-32232ee103fd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cbe80364-d38b-4338-a7f3-3ecf4f597947"
        },
        "item": {
          "id": "abe348cc-8ca0-4f49-b45a-54402a6bb396",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a7618456-261f-4582-ac75-80bb5c39d7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683681c2-1e28-47de-a425-e97dbfcec841",
        "cursor": {
          "ref": "139e5cb5-3254-43e3-ae65-3075d3dd2e12",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ce195cf6-5e48-41f8-bd73-58c58e48382a"
        },
        "item": {
          "id": "683681c2-1e28-47de-a425-e97dbfcec841",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fd737e95-a65d-43df-8ef8-a10f88db5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98807f7d-dd21-4acc-a5cc-ee0c4c0e0c6f",
        "cursor": {
          "ref": "bcd23477-3657-4e0b-a38b-5540f7e4eb20",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d1662317-3b77-4f28-8660-6ac0164df39c"
        },
        "item": {
          "id": "98807f7d-dd21-4acc-a5cc-ee0c4c0e0c6f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2d04acd0-2e50-4b2a-a6e1-832fb3b5d117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af436f8d-9ba5-4e2b-878a-dc57c3540c25",
        "cursor": {
          "ref": "b96d6ac5-7dfe-4633-b386-f61b614af1ee",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "641d6fd0-c856-4eca-8442-d4f953f1783d"
        },
        "item": {
          "id": "af436f8d-9ba5-4e2b-878a-dc57c3540c25",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a525a79f-ffb5-4acf-9e35-aeb2441437de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d376cedf-bac4-4f42-863a-a57b4e205e55",
        "cursor": {
          "ref": "191333ae-049d-4747-85e8-249028732d93",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "64a70926-b0d2-412f-8a48-ed72d0226ad9"
        },
        "item": {
          "id": "d376cedf-bac4-4f42-863a-a57b4e205e55",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "31189d6d-7f30-4c4b-94d1-82ea0ddcd108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3c26e-609d-4def-b377-70b4e6ce8b53",
        "cursor": {
          "ref": "3c17bbb6-92b6-43d3-8514-a41fdfef1109",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "45e856a5-2dde-49b5-a8c1-a961b0890c70"
        },
        "item": {
          "id": "aae3c26e-609d-4def-b377-70b4e6ce8b53",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5cdc62d8-df22-42d3-88ea-7e8dcd190211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dbf6c4-cd58-40a2-b3be-725982a76906",
        "cursor": {
          "ref": "36237efc-e906-4fe1-bbe2-536066a52a66",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c55e2056-ea05-47c1-938f-f74d8d38cf28"
        },
        "item": {
          "id": "87dbf6c4-cd58-40a2-b3be-725982a76906",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "533df70d-5383-4190-9a27-3465ed183193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f265c2f-4ec2-41f5-b7d0-8cfbd43193c7",
        "cursor": {
          "ref": "ecffbeb6-7754-4412-bdfd-e4161f173f38",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cd66bd9b-fec4-4d30-baca-244cb3d6d44b"
        },
        "item": {
          "id": "1f265c2f-4ec2-41f5-b7d0-8cfbd43193c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67977423-5d3a-4ea7-bccd-d64b842f143a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166ee4da-1d31-4032-ac93-a38b0bd6059b",
        "cursor": {
          "ref": "0894336e-f6d5-4b15-9fce-2d652a14ed63",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bb493581-8555-49df-b6a8-17f9cd3bb36b"
        },
        "item": {
          "id": "166ee4da-1d31-4032-ac93-a38b0bd6059b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "947c5850-fb3d-4a17-8d74-b3f766fa712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ada304d-129c-41ea-af55-018c5f7aceb0",
        "cursor": {
          "ref": "b4d0e6da-6e56-495e-9b9f-ff02ff814ffa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1ab5b28a-4d72-4260-98a0-f2d766859eb7"
        },
        "item": {
          "id": "5ada304d-129c-41ea-af55-018c5f7aceb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8d5e7f66-a86c-4e19-85ff-d64ba7e580a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4e33b4-c2e8-4eaf-bf3c-da31ab7d3777",
        "cursor": {
          "ref": "a50d5507-b6bb-46fa-946f-a39bfa1d134d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "89e78641-100c-4d6b-bfb4-f67e6dfba42a"
        },
        "item": {
          "id": "9c4e33b4-c2e8-4eaf-bf3c-da31ab7d3777",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5b1aa096-0e19-4768-b7d3-ef4edf958f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46ccdde-583e-45c1-930e-e043ae79107a",
        "cursor": {
          "ref": "0afbf960-0d66-4475-b320-805ca26be8de",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "03cb898a-fd9c-49ad-9da2-213e1fff9ae3"
        },
        "item": {
          "id": "f46ccdde-583e-45c1-930e-e043ae79107a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f3f79ff0-ced3-41c0-8459-9266887cf9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222c4e32-9540-40ac-97be-3cae54935c01",
        "cursor": {
          "ref": "8d0d7729-acfc-4ac9-8a38-5ef45072ad1a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4096699f-c0c1-42d4-bdf5-8b130baa424a"
        },
        "item": {
          "id": "222c4e32-9540-40ac-97be-3cae54935c01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1ecd1a9-e976-4334-8ba0-9b2d314e17d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e733c845-85d5-4439-ae89-bcd4c9d4401a",
        "cursor": {
          "ref": "15e86f97-b943-44bd-8f25-6a1667da4d59",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c1e1d591-5267-49f7-88d5-f99f0fd162ff"
        },
        "item": {
          "id": "e733c845-85d5-4439-ae89-bcd4c9d4401a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4fc56b44-6de7-43fc-9220-7cd9fbb636ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3718c3d7-c942-4335-a210-5e809189b13d",
        "cursor": {
          "ref": "5f20172d-46f4-4527-8865-085ecfbf3e70",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e60f4cd-d01f-4d5b-9b66-d249e83d02eb"
        },
        "item": {
          "id": "3718c3d7-c942-4335-a210-5e809189b13d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "87f6a58d-cd20-4040-891f-38aee8c6e424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ce1c93-43c3-4b9b-bbdc-0dc755327635",
        "cursor": {
          "ref": "f793b627-e2d2-4286-bfd9-400947251403",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e55411e5-28cc-4fc0-9754-2241abeb60ca"
        },
        "item": {
          "id": "46ce1c93-43c3-4b9b-bbdc-0dc755327635",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9c544190-77a7-4d26-854c-0458ac23040d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc78c22e-38a8-4177-bb38-3941430de55b",
        "cursor": {
          "ref": "75e76e85-4988-4d89-8e85-45f431fc4df3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6957d8ea-7c7e-4b55-ad99-229e1b96fa66"
        },
        "item": {
          "id": "dc78c22e-38a8-4177-bb38-3941430de55b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e57a9a3-5aed-44f2-90b7-66f57fe3685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9014c1a-8920-4fd9-9af7-9a87de8b7d8e",
        "cursor": {
          "ref": "1b8e8489-f5bb-4ce0-8cf6-4162da2b2c64",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fac129e0-647f-4a68-87a6-6cb7bfa476e5"
        },
        "item": {
          "id": "b9014c1a-8920-4fd9-9af7-9a87de8b7d8e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b771363e-e2fe-4e24-a18e-91b2e3517069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0578ee9-4b0f-43ac-ae2e-828be0599b7e",
        "cursor": {
          "ref": "c94cf9f3-53f0-4f7b-877d-6abf05478f77",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e7c9bee7-4159-4594-ae83-c10f38b62f0d"
        },
        "item": {
          "id": "a0578ee9-4b0f-43ac-ae2e-828be0599b7e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08e0d759-203b-497c-8750-66ba5f0498ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9138b8d-4e0f-401b-b117-4d1df0e4bcdf",
        "cursor": {
          "ref": "456756b3-b68d-44f1-8eb4-fabc26bb450d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6b76e121-927b-4f3d-b0ba-a2ba47936f64"
        },
        "item": {
          "id": "d9138b8d-4e0f-401b-b117-4d1df0e4bcdf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2abb8d25-5179-4a91-83b8-cfb5ac6bdd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b62b17-2f7c-4957-9149-2e8728eeff9a",
        "cursor": {
          "ref": "f8c0ac14-9e3b-4919-8ee5-1c09a1fab17c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49f938df-5e46-4b7c-8819-29e5e2f8b57c"
        },
        "item": {
          "id": "09b62b17-2f7c-4957-9149-2e8728eeff9a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "58e33feb-5c71-4a6e-bae8-77761f8edb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9ca25-8309-4ead-ab2b-a41b1435be34",
        "cursor": {
          "ref": "39f811d1-17b1-4b26-b37e-c51c28688652",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ba428d8f-4b39-48a9-b623-8b9df8673a36"
        },
        "item": {
          "id": "11f9ca25-8309-4ead-ab2b-a41b1435be34",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d40b1bb-259a-42e8-97c5-85c163c5fd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d02d51-c648-4172-9e60-8dfabbfd9fde",
        "cursor": {
          "ref": "4e9543d4-5aaf-462a-a4dd-63542b9ffd2b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42ece675-bc14-40d2-830b-317766c9de69"
        },
        "item": {
          "id": "c8d02d51-c648-4172-9e60-8dfabbfd9fde",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a71544ea-c0e1-461f-a3dc-bc979cf42f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0114e08c-12ec-4c61-ab1c-010682e65caf",
        "cursor": {
          "ref": "d6fe03f9-7b0d-4b17-892f-8301de3dc8be",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f2c4fcd-3f59-44bf-91ac-699b2744fc77"
        },
        "item": {
          "id": "0114e08c-12ec-4c61-ab1c-010682e65caf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b5fe5531-6645-41a1-81de-67adfa4e8c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206f484e-63d4-4d86-a600-677541b84551",
        "cursor": {
          "ref": "27c4bc39-984f-474b-80dc-daeaf9ce1665",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "207919d3-2b38-4bf4-bb35-ba92d133486a"
        },
        "item": {
          "id": "206f484e-63d4-4d86-a600-677541b84551",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0e0e6574-da35-4759-87c4-24803e08ccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41970764-f059-4cd8-bc36-cdc51b72377f",
        "cursor": {
          "ref": "620ae29b-2ae7-4ddb-979d-39c3861afcb6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aa796da2-21a3-4932-a770-2b697f24de90"
        },
        "item": {
          "id": "41970764-f059-4cd8-bc36-cdc51b72377f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "441b73c1-539c-4af0-ba54-bf5c2e24e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a3f2d8-dc1a-4f78-a1a4-d2cb37069dbe",
        "cursor": {
          "ref": "31ed5392-234c-4678-8eda-5ab351432711",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "88446113-64bb-4963-b61f-6471ae626640"
        },
        "item": {
          "id": "b1a3f2d8-dc1a-4f78-a1a4-d2cb37069dbe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ca43c8f0-f41f-4964-9883-5f9ee5a38d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bca870b-1449-4ad2-9568-733ede4454a0",
        "cursor": {
          "ref": "5c57c79e-5d7f-4b62-b2ae-a9a19ba34323",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7f65b09d-9607-48ce-84d7-ead88657ba1a"
        },
        "item": {
          "id": "7bca870b-1449-4ad2-9568-733ede4454a0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5c3ef2b-6492-402f-9425-b5fe3fb3c5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82605b86-7a3d-4f60-ac68-50982211efeb",
        "cursor": {
          "ref": "e68043e5-c95b-43d2-9701-43daf0f70653",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6cd794c9-2ab4-4aeb-bc3d-02ccf53a0f25"
        },
        "item": {
          "id": "82605b86-7a3d-4f60-ac68-50982211efeb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a09185a1-3c6d-46d1-bd39-f724ef8bc42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d75b9c-c002-427c-9549-0e5e28cbc1da",
        "cursor": {
          "ref": "b9787e60-d11f-4662-9b95-34b2a43ab332",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f33cc6fe-6671-40c8-999b-6957dbfeba04"
        },
        "item": {
          "id": "84d75b9c-c002-427c-9549-0e5e28cbc1da",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a7f25a3c-ef43-42f4-91a4-55f269522e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc16c1c-70e4-4a7e-84cb-cdf456d94282",
        "cursor": {
          "ref": "0bff6e42-bf39-43fb-81c8-8ba741a636e1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0b96e54d-8846-4c54-8acb-abd1ec7b490d"
        },
        "item": {
          "id": "dcc16c1c-70e4-4a7e-84cb-cdf456d94282",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0201923c-dae6-48a8-8490-99be86ba014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4b3a34-8acc-4334-9383-d17f4b2cb7cf",
        "cursor": {
          "ref": "bc232f9b-4bec-4242-8423-491134280a2e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "99c1873b-d2a9-459e-a700-8ff7ae8ba28f"
        },
        "item": {
          "id": "9f4b3a34-8acc-4334-9383-d17f4b2cb7cf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cf180a8a-7014-47b4-a573-7e5d3d5ee2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf057c02-8000-4003-b4f2-560805102b77",
        "cursor": {
          "ref": "e95c76a6-ab40-4577-9893-c0e0ce5fd912",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4cb1aae0-843c-4120-bd3a-c60754bec4bf"
        },
        "item": {
          "id": "bf057c02-8000-4003-b4f2-560805102b77",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc46e710-6192-481e-b693-8ce05cc1285d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02106a29-49f2-4f14-85c9-0cfb88075430",
        "cursor": {
          "ref": "4096764e-b731-47b0-83ae-16838c0db3aa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c5f5b51-cd08-424a-afc6-d36ea4c68143"
        },
        "item": {
          "id": "02106a29-49f2-4f14-85c9-0cfb88075430",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2194788d-ec0d-4bab-834f-24145bae31e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c92353-b36b-41b0-9f9c-70b17b504b4c",
        "cursor": {
          "ref": "73a3d0d4-f623-49c7-ba65-7870172643ef",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e0970d0-702e-4d1f-8071-1e0f9ddf405e"
        },
        "item": {
          "id": "d2c92353-b36b-41b0-9f9c-70b17b504b4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e5af5db8-7eab-44e2-941e-ddf43506efb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79f5af9-7501-4dd8-a0b2-4dc918f74a22",
        "cursor": {
          "ref": "a669bcf8-cebb-4aef-9756-5dcd74c01bbb",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dcbad65f-5f29-42e1-9b09-9cf2bb472538"
        },
        "item": {
          "id": "c79f5af9-7501-4dd8-a0b2-4dc918f74a22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "688ee9c3-aa0c-4c73-ad4e-1b98c00c1345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33fef75-25f2-4076-ad18-9a285cdf424a",
        "cursor": {
          "ref": "b81483ab-32da-47df-af51-67ddc8556807",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "41bcd2e0-faf2-45fe-8657-7b749be41cb7"
        },
        "item": {
          "id": "d33fef75-25f2-4076-ad18-9a285cdf424a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eb158767-a192-421c-a6f3-d8ed2af464e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5039e5-fa96-44fd-b3f7-dd8e8f509a6d",
        "cursor": {
          "ref": "ac22ccec-9a9d-4958-a388-bf304983adb7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "282b10a4-c8df-4865-8475-657967c14e0b"
        },
        "item": {
          "id": "bd5039e5-fa96-44fd-b3f7-dd8e8f509a6d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d8d0c70-dbfe-4256-bbd5-3c53663a929a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1086e5cd-a878-4b0e-a1dd-a9505d650845",
        "cursor": {
          "ref": "4d6f7e73-ea4a-4cd5-9d41-2a3d55452fe1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "810f1cf3-84ab-433f-9728-88c4c5b0c665"
        },
        "item": {
          "id": "1086e5cd-a878-4b0e-a1dd-a9505d650845",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f42125a2-16c4-40ef-96a2-b4a2cc21b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa2b22d-0138-4f50-8c93-395f83d4fc82",
        "cursor": {
          "ref": "f8afe0f2-c4ee-41fb-82a3-5199e492020e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0a6c129-8957-4922-8ba0-c2db1eb75fa4"
        },
        "item": {
          "id": "9aa2b22d-0138-4f50-8c93-395f83d4fc82",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a2cd026c-d8c2-4dae-8c21-ff0b458ac047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c290eaf-7533-4fb5-a251-abe92493c3e7",
        "cursor": {
          "ref": "e9cb5cbf-a1a6-4a06-bafc-3b0cb6f306a5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea9c92bc-82c7-4d61-a337-ef2fe7df49fa"
        },
        "item": {
          "id": "3c290eaf-7533-4fb5-a251-abe92493c3e7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "68d09d94-b9ed-4d18-ac1c-e720cc211414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44beba64-973a-4b6b-918a-72d075b58ce5",
        "cursor": {
          "ref": "037ef3c2-62d1-4cab-b9f8-cb5709f8bbbd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa77fad0-7e2e-4fc6-b741-7ca4b2d502e0"
        },
        "item": {
          "id": "44beba64-973a-4b6b-918a-72d075b58ce5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6370b581-6e98-438d-86db-a0443bc310f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32a435c-fcf0-40e8-aab8-5d8079eceab7",
        "cursor": {
          "ref": "5b31f5d1-0ff9-4452-a7bc-86d5440d4919",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0adef94f-ed6a-4e5d-9329-4b94fc6d036e"
        },
        "item": {
          "id": "f32a435c-fcf0-40e8-aab8-5d8079eceab7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "85218bef-e222-421e-8297-7f5cf901462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aa5f963c-e849-44b6-b576-b6a928c8874d",
        "cursor": {
          "ref": "c9c36a84-c2d3-4903-8e8b-2439dcdb96a3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b639f255-a527-453a-ae87-8d4186e9b6eb"
        },
        "item": {
          "id": "aa5f963c-e849-44b6-b576-b6a928c8874d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1c455ad7-0a1d-45e2-b4a2-ea0e89cf605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "55b16c2f-3306-4e3b-9267-7f84059a34d0",
        "cursor": {
          "ref": "e3b738bf-77b4-48f1-92e3-1c74d0376c39",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d3f80055-9067-4ee9-8a34-11cf6b1cdb09"
        },
        "item": {
          "id": "55b16c2f-3306-4e3b-9267-7f84059a34d0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cb9f6aa7-f65b-443d-9c2b-1ce3e04679d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1e6dc8fb-23d9-466a-b246-9c7b16167372",
        "cursor": {
          "ref": "4dbc029c-32cb-44ca-a0a3-0658ed1fd086",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6a432669-e1a0-453e-bee2-69a743e5e5e9"
        },
        "item": {
          "id": "1e6dc8fb-23d9-466a-b246-9c7b16167372",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e818b075-0636-4e92-a0d8-13a8e1529eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "49dbd8ca-5ba8-40fc-9029-692ed3164bd0",
        "cursor": {
          "ref": "80b0259d-0852-426b-9811-5a5578149b68",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93c9da25-5b15-405e-a9fe-716d44d1dd51"
        },
        "item": {
          "id": "49dbd8ca-5ba8-40fc-9029-692ed3164bd0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ed60382-93d9-48a7-932c-c80f36f61e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f16caf8f-10e3-4c3f-8706-a9980530f2e9",
        "cursor": {
          "ref": "729983c7-c77d-4c14-95da-e814e73f2535",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4a440dd6-79c3-4996-8a57-8ff4fe95086a"
        },
        "item": {
          "id": "f16caf8f-10e3-4c3f-8706-a9980530f2e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90267c76-590d-47f7-9fcc-7844b430e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0d2bcc9e-a866-4058-8bca-c189c2f78f37",
        "cursor": {
          "ref": "6937d5cd-42fa-4cec-bd03-bb5fee3e35b1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d5ba1d4b-b975-415a-96b6-67dff314549f"
        },
        "item": {
          "id": "0d2bcc9e-a866-4058-8bca-c189c2f78f37",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b655e852-6d0b-43cb-825d-1fc50360a91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6cbab067-476d-4871-9779-2dd500053bf7",
        "cursor": {
          "ref": "2d2fa8b8-f656-4d6d-9c66-be3149fc262c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1abc1a1b-2166-4e79-aa87-ed67fa687a8b"
        },
        "item": {
          "id": "6cbab067-476d-4871-9779-2dd500053bf7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2ffac37e-60d0-4d4a-b9f6-ec2ca3e86cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a720e4-3f5a-4e46-ae10-ba201743de5d",
        "cursor": {
          "ref": "9b6073ce-4510-4085-9735-3c92ff4d2751",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3ed0f51c-64cf-421e-af37-253585a3248a"
        },
        "item": {
          "id": "86a720e4-3f5a-4e46-ae10-ba201743de5d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "951b6de8-d013-46f0-b5b0-e43be1f1cfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a16fd-ee63-4276-a572-8a0781d4e75b",
        "cursor": {
          "ref": "b5ee04dd-c388-4859-8e90-d1c640e6fa52",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "652f5579-a33d-4e08-a286-94d35c745c2a"
        },
        "item": {
          "id": "141a16fd-ee63-4276-a572-8a0781d4e75b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf3818d2-d1f1-492f-9d91-6327832dbf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb6a981-5f24-47c5-b8cf-3a9f49e90767",
        "cursor": {
          "ref": "832f774b-46dd-423c-b3b2-9fe024c546a7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8f80d05b-ae1e-416f-b7e6-69e6d2c51fed"
        },
        "item": {
          "id": "2eb6a981-5f24-47c5-b8cf-3a9f49e90767",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "adb68095-da89-40b7-a01f-06bdd249788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b160568-6c37-48a4-b701-d4d67c6ff1a3",
        "cursor": {
          "ref": "8a44e510-b325-481a-b718-5df9ecf69133",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1209efba-36b5-4ed8-8353-b9385394dac9"
        },
        "item": {
          "id": "1b160568-6c37-48a4-b701-d4d67c6ff1a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "59bdb6eb-19d7-45e9-8db7-b6211f48af5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655bef35-6dd5-4201-abd5-d05bc47defd3",
        "cursor": {
          "ref": "3c1473c7-4f35-41e5-a13b-bf34112c34e1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "15b3c6a2-204d-4f90-b63f-add7b26da48e"
        },
        "item": {
          "id": "655bef35-6dd5-4201-abd5-d05bc47defd3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "191c68c0-883b-41f7-aa95-a2f10592c915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4933ada4-a740-477f-a5f5-ddcfef0050a9",
        "cursor": {
          "ref": "0ed9786d-6240-4711-afd9-c8b51a938deb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e1bd00a6-15fa-4dd3-81f0-139a50181c8b"
        },
        "item": {
          "id": "4933ada4-a740-477f-a5f5-ddcfef0050a9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e16838b-d9e2-4e46-bac7-7ba6b4382d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0727fb66-5fb4-46c0-b761-5a03e748c7c2",
        "cursor": {
          "ref": "94285b55-c7c0-4c6f-a5f9-cacb712c0844",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea00214d-2d64-4f69-87ec-106bc7fa642d"
        },
        "item": {
          "id": "0727fb66-5fb4-46c0-b761-5a03e748c7c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "355d110b-81f0-4fb6-9ce3-942276749434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4cfdee-aa92-440f-9074-b526b877f28d",
        "cursor": {
          "ref": "23cadce1-531f-4bf6-8588-21176845ea6e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d9fe6c31-6572-4283-a954-8abfc1c306be"
        },
        "item": {
          "id": "5a4cfdee-aa92-440f-9074-b526b877f28d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb36c7ae-3534-4e4b-9ade-cd70806546ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06b6316-17f3-4637-b2fe-b8e6f3ecc276",
        "cursor": {
          "ref": "dc0eeb58-c518-4b0b-906d-4de012548aa1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "51b239f4-3c8b-4aff-a43a-d0e11dbea2bb"
        },
        "item": {
          "id": "f06b6316-17f3-4637-b2fe-b8e6f3ecc276",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f55948f3-7247-485c-8a13-8dd839aef7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521d0b7-a9d4-4ea9-8ce8-0646f0700ba6",
        "cursor": {
          "ref": "6e5bda3e-5cbf-481e-9f6e-03c8d5c02915",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fb918ab7-c9cb-4b11-9f86-068f99518ed9"
        },
        "item": {
          "id": "6521d0b7-a9d4-4ea9-8ce8-0646f0700ba6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36b69385-cb0e-451a-911b-dc4eefcdcbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826ccdb8-48f3-410d-bb7e-82fd59d474f0",
        "cursor": {
          "ref": "d1e681e9-a64a-4e2f-8e25-5aead103afd7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "47e4b9c8-767b-46e3-9d7e-1533fc80868b"
        },
        "item": {
          "id": "826ccdb8-48f3-410d-bb7e-82fd59d474f0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a9a9764a-d4e1-4f5b-a387-9f23bc78df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568d8ef6-6125-4f0b-8871-cad27c51ad3f",
        "cursor": {
          "ref": "52418d3d-f3a6-4f99-8f38-0273386080db",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "572ab3cd-2498-476d-b171-f338b244d671"
        },
        "item": {
          "id": "568d8ef6-6125-4f0b-8871-cad27c51ad3f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fdc5a669-2f3c-427a-b3cc-e7057ca2555e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464fb30c-ee1e-41a9-a584-bad850445179",
        "cursor": {
          "ref": "65ff6e36-403e-47c2-8544-442751957a3b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "240418c6-cefa-4445-8f5e-55f74e1871c6"
        },
        "item": {
          "id": "464fb30c-ee1e-41a9-a584-bad850445179",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f1dd1a90-5ff9-4441-ae23-da3d46bb5a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1b60d8-8eea-461f-a9e5-46941703d09e",
        "cursor": {
          "ref": "b3141a59-1170-4350-a9a7-266b4bccb35e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9ee429c0-634f-4e5b-9edc-8c9a232b4c40"
        },
        "item": {
          "id": "9a1b60d8-8eea-461f-a9e5-46941703d09e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "63e714c5-1059-4f9a-a483-583f79b999fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bc5165-c273-4776-890a-ddfb5eeafeed",
        "cursor": {
          "ref": "1cbc2371-75a8-4517-b752-08f5363a9696",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26d4b8ac-1b1a-40ed-9b73-ee4e14fde7bf"
        },
        "item": {
          "id": "49bc5165-c273-4776-890a-ddfb5eeafeed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "638239ea-ff87-48f2-bdf0-8d1483a513c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e7ca0-e42e-4891-a1ba-76dfe0b67077",
        "cursor": {
          "ref": "ffd909f6-317a-41df-bcb3-aa74cab7ff07",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a155bb4c-225f-4db5-9066-d48f56189e9e"
        },
        "item": {
          "id": "af7e7ca0-e42e-4891-a1ba-76dfe0b67077",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7a455885-59b4-4522-aa9d-0cfaa292f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74382d8c-7d44-436c-9ad4-99a59cef732c",
        "cursor": {
          "ref": "af79e30c-70ef-43d0-ab6f-2acd9a28a189",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b15d8725-b99e-4ed9-bc75-3a275c016109"
        },
        "item": {
          "id": "74382d8c-7d44-436c-9ad4-99a59cef732c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a3e5efea-4648-4875-a592-8722c63edccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d78306-355b-4af1-ad81-e9e056043710",
        "cursor": {
          "ref": "ba13dfdd-a8dc-4961-8260-925c223b17aa",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3af878d7-aea2-454e-9bd8-fe7648e45fb3"
        },
        "item": {
          "id": "44d78306-355b-4af1-ad81-e9e056043710",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d6124864-5543-44b3-bdae-db8682a9e010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660fcb8d-a810-41d1-9c51-022e521d3397",
        "cursor": {
          "ref": "93621186-9404-4d8b-8b80-9942d7482b46",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "292f3289-1127-46df-a970-00435a4fabfa"
        },
        "item": {
          "id": "660fcb8d-a810-41d1-9c51-022e521d3397",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c7b7542d-698a-44a8-b2b6-e15411954751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309886a-dd7b-40e8-81ae-a3ce11d831fe",
        "cursor": {
          "ref": "8d8e6ea7-42d2-4fa9-8e1e-2943ef6be798",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b02b4773-1f39-400c-9652-dfa73759ac5b"
        },
        "item": {
          "id": "e309886a-dd7b-40e8-81ae-a3ce11d831fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c6eda0e-6034-4426-8158-02e2b7953986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e2da8-1fb4-46f1-bb3e-da96dce8cf5a",
        "cursor": {
          "ref": "ff0ffcb1-d860-4e5f-aaa2-211d4f4b13f0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1501bff4-8eca-4ee5-899c-e21fce4cf089"
        },
        "item": {
          "id": "8d8e2da8-1fb4-46f1-bb3e-da96dce8cf5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f623a2c-a11d-4b6e-9886-e9c0410ba655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc4d395-45a3-4eb2-9b1c-1e540ae80393",
        "cursor": {
          "ref": "c3a4837e-0bc2-4d56-9c4e-b64a660c7452",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80610069-4dc5-46bf-9677-f992cec72f53"
        },
        "item": {
          "id": "2cc4d395-45a3-4eb2-9b1c-1e540ae80393",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23e8a472-ae4b-4eb1-a6ec-1edb7abc9f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcceb0a-a330-4773-b053-3a0c00d9d242",
        "cursor": {
          "ref": "519c2931-2240-4197-92b9-339bb1dbe147",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "35ffeedc-eb2a-42bd-b56e-a61148f7b75d"
        },
        "item": {
          "id": "2dcceb0a-a330-4773-b053-3a0c00d9d242",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ecddbac-bb1f-4580-9202-c215769b74d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23231fb1-a02f-4220-81cf-3090e1a323c5",
        "cursor": {
          "ref": "5610a17b-0d16-422f-b137-be30ae70d0c6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05065690-e919-4a62-bfc6-0a46403f3294"
        },
        "item": {
          "id": "23231fb1-a02f-4220-81cf-3090e1a323c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41d54445-b130-4db2-96b3-ff8b36344f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f0a43-fd09-4080-b9bf-dafa7e3fb814",
        "cursor": {
          "ref": "40f4e82b-588e-4892-82a6-b7c94c8aa0dc",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3fd38238-4284-4a7f-b3ac-57513cda4c6a"
        },
        "item": {
          "id": "668f0a43-fd09-4080-b9bf-dafa7e3fb814",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1815193b-ce6e-4312-b760-5cbdf75f1545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dd56ae-9d8b-4720-a5f9-9b40ec67f614",
        "cursor": {
          "ref": "4414737a-cbeb-4fbc-8503-0ab0770f1f5a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9a0c0c8c-19ff-4db1-abba-cb10559876b1"
        },
        "item": {
          "id": "70dd56ae-9d8b-4720-a5f9-9b40ec67f614",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc2f2096-f6db-48eb-a03e-50e20b171ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aabd5da-be37-417a-a5da-e656729408e3",
        "cursor": {
          "ref": "b8ee92c9-1825-4a78-8bad-4f0d59d3054a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "71847e7c-fc44-4cfd-8689-33de583140f0"
        },
        "item": {
          "id": "8aabd5da-be37-417a-a5da-e656729408e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5995b76b-72db-43bf-b15a-7ebeaef486c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d9d7d6-d72a-4682-a554-b1a0c202bfb2",
        "cursor": {
          "ref": "7408e0fc-c624-47cb-a765-2cd296c06e8e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f8f89b6e-2d5f-49c3-b39c-f439883e880a"
        },
        "item": {
          "id": "e5d9d7d6-d72a-4682-a554-b1a0c202bfb2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cba3e205-e4bc-4722-81c8-34574497f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583b7b0a-1c77-49ba-802f-b4edc462685c",
        "cursor": {
          "ref": "3d22a601-e037-44a0-be60-632eee3836fe",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3731eea3-cfae-49b4-aae7-de1c1807fa67"
        },
        "item": {
          "id": "583b7b0a-1c77-49ba-802f-b4edc462685c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e3bd2110-2a22-4805-927e-9b72dbb3643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ced0c0-8037-4ddb-af73-b4a8afad69a4",
        "cursor": {
          "ref": "7214aa14-c61a-4efd-b004-37174eb7df97",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "75f4ef3c-4b68-4fe4-b526-b4dad88bce84"
        },
        "item": {
          "id": "44ced0c0-8037-4ddb-af73-b4a8afad69a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f366f7c-4c27-40b8-9745-7e8b72ffc5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa22d373-a6a3-4111-8166-68f6783653fb",
        "cursor": {
          "ref": "1ad45cae-0bec-4a03-8956-d37492177572",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "274a5b3a-561e-4fcc-899e-aa5220bcf9a2"
        },
        "item": {
          "id": "fa22d373-a6a3-4111-8166-68f6783653fb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "308dcd9a-3e9b-4e27-9da1-5bcf43645a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61fdd79-6b43-400c-a05e-06d30d75d4fb",
        "cursor": {
          "ref": "6e035330-2982-4b61-825e-e254fd061a42",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "11018438-66f2-4f4c-8dc6-06b10a5bd897"
        },
        "item": {
          "id": "f61fdd79-6b43-400c-a05e-06d30d75d4fb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "88d4d298-f121-490a-8d4e-52f0062ee577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5281f31d-c388-46b8-a18a-9b9e06f17263",
        "cursor": {
          "ref": "11a2a0ac-e20f-4806-b3ed-a49ef05e804d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f06e306-c44c-4d29-b814-934b91062d41"
        },
        "item": {
          "id": "5281f31d-c388-46b8-a18a-9b9e06f17263",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97a0a291-bf8a-4c2a-8ad3-d16acb5c8e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c447a79-b7a3-4e5a-acc7-9b7136831b81",
        "cursor": {
          "ref": "74277ec1-80b4-4436-8294-b11f9764fccf",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "83d50bff-ce78-4649-9526-7df9c529fb46"
        },
        "item": {
          "id": "8c447a79-b7a3-4e5a-acc7-9b7136831b81",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "376424a6-ddcb-405b-95a7-f49500c58cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7643ecd4-e071-4a6f-a6f7-c54b1f5b46a7",
        "cursor": {
          "ref": "6e2813a2-5da3-46dd-ab9d-4c93c2dfc493",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8ffabc3e-1b28-480e-8f1d-c5827791ceb3"
        },
        "item": {
          "id": "7643ecd4-e071-4a6f-a6f7-c54b1f5b46a7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "77e28fbb-e5e7-43c9-82c5-99da15e57db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e6f845-8a05-4024-8781-ecc0a6520cc8",
        "cursor": {
          "ref": "52cf6dd0-e218-4159-8af3-416f66ebf1b7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "37fae80b-a5c9-493e-8a34-7ca6da465127"
        },
        "item": {
          "id": "59e6f845-8a05-4024-8781-ecc0a6520cc8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e36ea298-2eec-4544-8263-39b00407839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb3172d-6fbb-4cd7-a55b-c3d939cdaa46",
        "cursor": {
          "ref": "d1d2de53-5b0d-43e5-a88b-b0bc0efb1d5e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e34047dd-b5a9-4f67-965a-cdbdf3778836"
        },
        "item": {
          "id": "afb3172d-6fbb-4cd7-a55b-c3d939cdaa46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b28253d-c9f3-4336-b3b1-d377f0a6d414",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c82329b-3408-4e2f-9d6d-c44751265704",
        "cursor": {
          "ref": "362d3bcd-842b-4d09-a576-c25c9309ff85",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "df83e149-fb0f-4401-83bc-1b87c75e6a40"
        },
        "item": {
          "id": "8c82329b-3408-4e2f-9d6d-c44751265704",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5545456d-099a-4222-8e3b-00c12594857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d80e99-74ae-405c-879d-5ed58bbc1601",
        "cursor": {
          "ref": "6eac8c51-ccbe-41a9-84d1-6c505d4eea18",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c3c7c110-89cf-4875-8887-43665b83a17d"
        },
        "item": {
          "id": "31d80e99-74ae-405c-879d-5ed58bbc1601",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "47947825-893d-4833-8947-d3a4d2b38295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec16ac6-3f72-4e26-8817-cb0109c763ad",
        "cursor": {
          "ref": "5104a8fd-fb72-415d-b979-a37bf2a47531",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "77fb3adc-84c1-4f44-8074-46856940f9cf"
        },
        "item": {
          "id": "cec16ac6-3f72-4e26-8817-cb0109c763ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "340eb151-846e-44b5-a2d0-574b5cb04527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967737fd-ce22-4007-b98c-85343d28cc60",
        "cursor": {
          "ref": "2e273ee9-d62c-4b4a-89d3-ef6b8457cd1d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bd7a5a28-5cb6-4fbc-9f47-76d3fb54b4f3"
        },
        "item": {
          "id": "967737fd-ce22-4007-b98c-85343d28cc60",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9b71e30-6d2e-46f5-a08a-32d79a134d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b6c75a-457a-4935-9e4f-36624483c1bd",
        "cursor": {
          "ref": "66c33bdf-d83e-41d5-bb88-2114740407fc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "829ada98-b65f-4a18-a4b9-7a1270c2afa1"
        },
        "item": {
          "id": "46b6c75a-457a-4935-9e4f-36624483c1bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0905ee2d-3576-46a0-b85f-ab3692d5de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048eb702-a90d-42d1-a9a2-5d5adf079e47",
        "cursor": {
          "ref": "154025c4-e69c-468f-883d-899b36fb1397",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2debf56b-3049-4915-a748-00d72701cc3c"
        },
        "item": {
          "id": "048eb702-a90d-42d1-a9a2-5d5adf079e47",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4f33c22b-3dd9-467e-91ef-c9a327c8980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e119425-094c-4d4d-86d2-276a5c13c8f2",
        "cursor": {
          "ref": "106845a8-92de-46c9-981c-ffd8268ed0f5",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23c3f77f-5c8f-43f6-8e4a-133764265da7"
        },
        "item": {
          "id": "9e119425-094c-4d4d-86d2-276a5c13c8f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1d8446a1-a616-454f-9cac-c6d5a5164a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb6c311-5a4e-4106-a36e-4d72dceb7c00",
        "cursor": {
          "ref": "e20ed720-df53-4547-9a40-a12b47e61802",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7f922cc0-5f88-4792-b69d-7187b92baa29"
        },
        "item": {
          "id": "bcb6c311-5a4e-4106-a36e-4d72dceb7c00",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e5780f9e-d484-4300-b14a-b0490f2aa3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cd35d0-89b7-494f-a864-c145bc5eb0fd",
        "cursor": {
          "ref": "f4e91c6b-10ea-4b6e-930f-69b7c5dc5e3d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f2eb1f3d-3710-44ea-a1e4-7b49ebd50d39"
        },
        "item": {
          "id": "d0cd35d0-89b7-494f-a864-c145bc5eb0fd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59e16950-5552-4d70-a00d-648897729068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952d92d-54d1-482b-8800-34f86dead3ec",
        "cursor": {
          "ref": "2a856e39-7cf8-41f2-bbdb-a4701f9bc7ca",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "65150dbe-c117-4e98-8152-8a7f466bf547"
        },
        "item": {
          "id": "8952d92d-54d1-482b-8800-34f86dead3ec",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "692cc4cc-be7f-4369-bb43-ff6a0cc2b912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572716db-679a-43ef-b671-efd76919eb37",
        "cursor": {
          "ref": "75219815-3d0d-4964-8e71-04a5be2c2a1c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aebb4a45-7da4-4ac1-be40-5a4d62c78126"
        },
        "item": {
          "id": "572716db-679a-43ef-b671-efd76919eb37",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "530f251d-e8e4-47d7-8986-4dceb7f403d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eef4bd-6e82-46bf-b448-a181180a6817",
        "cursor": {
          "ref": "2fd05dae-293d-4a90-886a-7e1ae619d697",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "46ac9958-1927-4da9-98a3-54959556ba7a"
        },
        "item": {
          "id": "04eef4bd-6e82-46bf-b448-a181180a6817",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4b4ac12a-ad33-4c67-8f44-3e4ba42f187d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd6f1e2-3cbf-463f-9073-b78d3f03a749",
        "cursor": {
          "ref": "735ca17c-0023-43a2-bac1-b5e2ef4324b0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "06d8c1cd-f216-4b24-9450-699770e1360f"
        },
        "item": {
          "id": "5dd6f1e2-3cbf-463f-9073-b78d3f03a749",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c43545d1-67f9-41f2-b017-2bd9857083d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f5e576-47b2-4ebf-a13a-840bda0f42f0",
        "cursor": {
          "ref": "a75bb88d-1cd8-4d27-b0c2-d8e625b4d17f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "95db032c-6396-4e66-990d-5e2f00924b77"
        },
        "item": {
          "id": "87f5e576-47b2-4ebf-a13a-840bda0f42f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3128ff97-7e5b-4e10-8f82-8965e7d7abb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ecaca9-c084-4af8-89fc-a10b6cf8847a",
        "cursor": {
          "ref": "b78980be-0aba-4363-a744-768769cfbe63",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d5be6973-20fa-4580-87a1-eb56e136dcb1"
        },
        "item": {
          "id": "79ecaca9-c084-4af8-89fc-a10b6cf8847a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "22e72bf7-c717-47f7-9c52-f3894ff3d28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134ba416-19e6-4978-9d9e-b927e9abe95a",
        "cursor": {
          "ref": "4f5bc6d9-2c35-4da3-a09f-6a4dbfca9df8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5d573973-3470-4b7e-afe4-1fe07ff5a307"
        },
        "item": {
          "id": "134ba416-19e6-4978-9d9e-b927e9abe95a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a7c4c584-5a25-4023-8582-d6dc8eaf55fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c5ae4b-9efb-4401-9916-8d21d7e82f35",
        "cursor": {
          "ref": "312a50cd-5d36-410f-a4b6-8a3415095fc7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "de4e0f52-e2d9-4289-8f19-3f37477b3e28"
        },
        "item": {
          "id": "81c5ae4b-9efb-4401-9916-8d21d7e82f35",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "84c9ac3f-6b9e-4872-b525-e044be939fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a6dff2-431f-4df0-857e-0eb1887aec8c",
        "cursor": {
          "ref": "3ecb32eb-4e4e-4a94-b29e-d700663a1aaa",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f51e39f2-1069-4222-8b58-94a8f8c19833"
        },
        "item": {
          "id": "25a6dff2-431f-4df0-857e-0eb1887aec8c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73f8f15f-d6e5-4dd4-bbea-d4d79a745647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5235017-34a3-4026-9e97-46ac36776829",
        "cursor": {
          "ref": "98bfe24a-90b5-4a2b-a7c9-a52187012446",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "18e31094-0a93-402f-bfd4-47f1f8551056"
        },
        "item": {
          "id": "a5235017-34a3-4026-9e97-46ac36776829",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "573cc716-0e76-4b1c-835a-e240bc6d8327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e50d278-96c6-46a4-9ee3-d51b2fae5705",
        "cursor": {
          "ref": "eb3882f7-76dc-4def-b1aa-7849be88619b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c87e083a-90d4-455f-8d73-38dfc675deb1"
        },
        "item": {
          "id": "6e50d278-96c6-46a4-9ee3-d51b2fae5705",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9db24c89-730b-4d5e-a770-c957fe977816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1e4f3f-e794-4ea1-a544-85985d1c91bc",
        "cursor": {
          "ref": "115afd3e-e933-4e1d-b62b-4dd48aaed80c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "573b8e11-0d59-42e8-b074-70ee9215896e"
        },
        "item": {
          "id": "ce1e4f3f-e794-4ea1-a544-85985d1c91bc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "67b5eb12-d999-43fc-9e6d-f7f7f82007e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfe0f29-8bab-4004-89c8-5d9bb83a5fd9",
        "cursor": {
          "ref": "7dbd0603-d53b-4909-8cf8-7e8d36af7f20",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8a18d7ef-a44a-402f-8f14-fbe741083801"
        },
        "item": {
          "id": "fbfe0f29-8bab-4004-89c8-5d9bb83a5fd9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9d3ebefa-04c9-4ec9-96d4-7f05effe355b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade43492-dc13-491d-bd2f-6abc56fc9f38",
        "cursor": {
          "ref": "bdb8455e-ff69-4ffd-b926-0833932b3016",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "27e485d1-8248-44f7-8eac-2cdd8d36515b"
        },
        "item": {
          "id": "ade43492-dc13-491d-bd2f-6abc56fc9f38",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95dd9282-cad0-4c88-86cc-a9972e19b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c33d4-d989-4ecd-8683-08361ef45837",
        "cursor": {
          "ref": "e96d37e9-6fca-42e5-9cce-118b601824d1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "04252f57-c4cd-43d1-acae-7494eb8f965f"
        },
        "item": {
          "id": "9c1c33d4-d989-4ecd-8683-08361ef45837",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e5947edd-cd6d-433d-ab08-777aed0811b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde6a318-46e2-4296-9c81-8aaf5fa9d92c",
        "cursor": {
          "ref": "d4cf94dc-62d5-4eb2-a611-793c54afd554",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ebac34d5-435d-4d24-87e5-477303c3b461"
        },
        "item": {
          "id": "cde6a318-46e2-4296-9c81-8aaf5fa9d92c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "257c9adb-e118-422a-abf7-abc9576c77a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fc6407-36ee-4a41-a84e-ac1c644d7f48",
        "cursor": {
          "ref": "3ca21e7e-5bb7-4742-b599-2484c81086a8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c7a26e6e-2d57-4142-9dbc-e4a312c1b302"
        },
        "item": {
          "id": "37fc6407-36ee-4a41-a84e-ac1c644d7f48",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e271579f-987c-4194-84e3-1886342d0775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2997cb-ce95-4376-b491-1d5f47120546",
        "cursor": {
          "ref": "7a90f181-5be7-4161-b6c7-9db4bac30b7a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3ba99906-1b73-4319-9004-dc19c812c56d"
        },
        "item": {
          "id": "3d2997cb-ce95-4376-b491-1d5f47120546",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72e3c11a-067e-40c3-abb3-41e05a941d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1305c8-c949-469d-9395-0b242c05c574",
        "cursor": {
          "ref": "3ee3f0f3-3c46-4d6f-bcf5-005d9661528a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f9696626-62ef-4e6f-98a8-60df55e81512"
        },
        "item": {
          "id": "1c1305c8-c949-469d-9395-0b242c05c574",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c13167d4-6dd8-4c26-9ec9-2c67e8b4a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00ec0ca-79ef-4cd8-9979-bf60f597be32",
        "cursor": {
          "ref": "951ae407-e3aa-491a-80bf-a8c92c015eca",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6b607860-bae2-4fdf-9b38-da59d1ec5007"
        },
        "item": {
          "id": "c00ec0ca-79ef-4cd8-9979-bf60f597be32",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49878ccf-e75c-4f9c-bb92-a5a0ccebc302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd73e65c-a2db-40ca-b821-9a3f208d13ce",
        "cursor": {
          "ref": "81cdb1b3-0afb-4978-868e-25207a743e84",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fce6f8a7-c9ed-42a4-a8f3-8c036e09ce52"
        },
        "item": {
          "id": "bd73e65c-a2db-40ca-b821-9a3f208d13ce",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6b3f6a59-ca7d-40df-856d-438305194d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73d7b03-8b5a-4f05-8ebd-10dba8b4b64a",
        "cursor": {
          "ref": "3d6ee945-fe12-4243-9b1d-24be2ae081ac",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fc1d58f0-3522-41a6-9b12-21e7fc72401f"
        },
        "item": {
          "id": "e73d7b03-8b5a-4f05-8ebd-10dba8b4b64a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "541762c4-01f6-4bf4-a480-d57bb4f6fedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0c932c-6635-44f5-9d71-4a7dc281b3d4",
        "cursor": {
          "ref": "6d27fad6-eed9-42fa-8482-da935ed7502b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a19087fc-822a-4af2-babc-615225610f69"
        },
        "item": {
          "id": "0c0c932c-6635-44f5-9d71-4a7dc281b3d4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bc2546a9-74c7-4b14-bbf5-93ecf6868ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bd6fb9-a979-4cc9-8cca-6b05b37a0e51",
        "cursor": {
          "ref": "fc6043d7-730e-484b-aa96-3b23874da6a4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "db07b9f5-d86a-43ba-a334-f918fa0f21ac"
        },
        "item": {
          "id": "b3bd6fb9-a979-4cc9-8cca-6b05b37a0e51",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2277bb27-6a75-4177-b384-62fddf56c964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a81adf-74e8-4a54-9a78-19c9aa8a721f",
        "cursor": {
          "ref": "7eafbc28-4578-4013-82b1-bcc1abe8b8bc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0d62c5ec-053c-4899-9fa8-199c292c7b3c"
        },
        "item": {
          "id": "d7a81adf-74e8-4a54-9a78-19c9aa8a721f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "997e2acc-e474-470b-bd0d-2254ca1b2df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73b789e-9686-4248-a627-df5bd4f9d516",
        "cursor": {
          "ref": "d66ee7ee-d85c-4161-927c-2de5489d0319",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e1657256-4f38-42fa-a609-32ecf35cbd80"
        },
        "item": {
          "id": "d73b789e-9686-4248-a627-df5bd4f9d516",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cbd9bf48-4528-49fd-88e9-9b29852e0f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a519cc-2042-4901-9724-469eff62c8b0",
        "cursor": {
          "ref": "466a728d-de57-4e46-9362-18ec6e0f840f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb274de0-f741-4a7f-b0af-d68272878f70"
        },
        "item": {
          "id": "b6a519cc-2042-4901-9724-469eff62c8b0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "08b522b7-fc9f-4972-aa2f-a812d0c44644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54904df6-9435-4c21-b08d-1ce0178743cd",
        "cursor": {
          "ref": "36b20a5d-cccc-4ce0-94bd-e14233579ea9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9818a4ec-b96e-4236-91be-be863c08d73b"
        },
        "item": {
          "id": "54904df6-9435-4c21-b08d-1ce0178743cd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6abe33cc-28e7-4cd0-bbbc-740139c605f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8a96c1-1b5f-4fff-85be-42c36f38c3d0",
        "cursor": {
          "ref": "d0872a9b-6296-4a70-948d-19f1dc84fcd2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "579ab070-6e6a-4a64-8515-09e137179f4d"
        },
        "item": {
          "id": "db8a96c1-1b5f-4fff-85be-42c36f38c3d0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a87d93c7-8ea9-4667-b462-cd3fe3fb0f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1273b70-2548-4905-8a3d-9271baf95ae2",
        "cursor": {
          "ref": "9131201b-032b-48b4-b1cd-70c328d23afe",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "983646c6-935c-4fe6-bd63-722ead5801ce"
        },
        "item": {
          "id": "d1273b70-2548-4905-8a3d-9271baf95ae2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e04d9f34-98a1-41a5-b85d-bc962c89e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99172e0b-9150-4fdf-bcdc-500819768afe",
        "cursor": {
          "ref": "1388f860-e669-48bf-8c16-9ff8da4c5c87",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5d7b4057-2313-4483-9bdf-85d466258170"
        },
        "item": {
          "id": "99172e0b-9150-4fdf-bcdc-500819768afe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d3b5cf9d-e282-47a0-a64a-362c5bbee77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1bf5b8-c0d3-46b6-9c32-0b64b7cc6761",
        "cursor": {
          "ref": "7edcc123-1f96-4836-8360-7be5ced35c4c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5c238931-10c2-4d0c-940d-bf1dec5ff236"
        },
        "item": {
          "id": "dc1bf5b8-c0d3-46b6-9c32-0b64b7cc6761",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bdd54181-65b2-49ae-9dab-dfdad048f347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e2bd2-d980-490a-90c7-7d62167e7857",
        "cursor": {
          "ref": "75ead1a7-ea06-4f62-8a1c-2df62467cccc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54060871-b781-4a64-b775-c0d665bbe90e"
        },
        "item": {
          "id": "929e2bd2-d980-490a-90c7-7d62167e7857",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2a8e24f-6cd7-4097-921c-c19329a8a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247b2ae4-a0d5-4130-8fbb-bac380abb10b",
        "cursor": {
          "ref": "d1df7c14-10fd-4332-9e0c-7d2ac91139c3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6ce51ab-46cf-4b13-a652-bc35c7824ead"
        },
        "item": {
          "id": "247b2ae4-a0d5-4130-8fbb-bac380abb10b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fa6d6631-3097-4027-ad44-ff024437d4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f75d1a-fd00-4f93-bb88-79cbdada1e91",
        "cursor": {
          "ref": "4c7dbd36-48fe-410c-a843-d9058fc8365d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fe18a386-4b45-459a-8373-b3547e5116b1"
        },
        "item": {
          "id": "51f75d1a-fd00-4f93-bb88-79cbdada1e91",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "37354a8f-3291-47aa-a86f-7fb4c7f6fd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47c6580-c09c-4d1f-a524-fcd22c36b920",
        "cursor": {
          "ref": "d8aca1ff-0f98-4120-9f77-abcb2fc39b32",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "790db22c-6899-4db7-a195-51843d9b96ab"
        },
        "item": {
          "id": "f47c6580-c09c-4d1f-a524-fcd22c36b920",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d82182c-c8d7-47f0-9186-4fdc4bed0739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99bc3f5-fb6d-4cc7-bc5c-cd164f9c368d",
        "cursor": {
          "ref": "0b42f070-c441-477f-8fe8-ab30eeec614a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8c53ee75-0bfd-4076-ac31-23b2e0cb6986"
        },
        "item": {
          "id": "f99bc3f5-fb6d-4cc7-bc5c-cd164f9c368d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c73b3670-8537-4535-bd73-9a6810ddf2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49917939-161c-488f-8f9f-0ba89a86e48c",
        "cursor": {
          "ref": "138df449-7144-4667-9345-f6d5c0b1052e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27ceea71-1617-4213-ade9-33645f5c67a7"
        },
        "item": {
          "id": "49917939-161c-488f-8f9f-0ba89a86e48c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8377d485-0e4f-4b97-bc91-ea07bb990726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf025566-cd73-48fe-a8f3-afd175d1a1f8",
        "cursor": {
          "ref": "494bac3e-2917-4168-915d-7eb7a6efb305",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8bd5ad65-a97e-4ca5-b3a2-0a58d6bac822"
        },
        "item": {
          "id": "bf025566-cd73-48fe-a8f3-afd175d1a1f8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7dec2bac-e13d-4584-912d-0aaa9ab6d671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f23d8e8-bef8-497d-b4cf-db4daa70e694",
        "cursor": {
          "ref": "459958a9-8507-4a7d-bc0c-145072bd434a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dfc451f7-1f6a-4e66-a330-12518aa3b1b0"
        },
        "item": {
          "id": "9f23d8e8-bef8-497d-b4cf-db4daa70e694",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d9fe03d5-fc0b-4474-978d-1fe5efb778ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491f09c2-e879-4fa7-924a-4c8a9d23cad1",
        "cursor": {
          "ref": "b7c59f01-34a4-415a-b671-fa581d5c2a6e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f5a3ada4-2c7d-4dee-8322-0ba7bb0644ad"
        },
        "item": {
          "id": "491f09c2-e879-4fa7-924a-4c8a9d23cad1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "99247c6d-d2ee-4c22-8218-7a6a32b88cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf694e-c30e-4fda-a9e9-6007a20105a6",
        "cursor": {
          "ref": "d607bd8a-c5b6-4b3b-b064-18bba87bfc68",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "93039272-0008-4feb-8015-f4dccce42ac5"
        },
        "item": {
          "id": "1cdf694e-c30e-4fda-a9e9-6007a20105a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "14e8558c-e064-45c7-9023-700c619eba02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf604c-0bf7-4d26-aaca-1852a1fa412f",
        "cursor": {
          "ref": "7dda7615-c2ba-44ce-8d27-3333e8470cb5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "244a66ce-34df-4dc2-9ae9-8494d8254bdc"
        },
        "item": {
          "id": "cecf604c-0bf7-4d26-aaca-1852a1fa412f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4108c107-cd5e-4fea-ba19-db1ab1ad1885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f1d5dc-4eb4-4718-859c-3d6c4caed2a1",
        "cursor": {
          "ref": "feb6945d-b760-4033-a878-21209ab1c7ef",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "115842f4-a9e7-435f-977e-7ffcc45f2dbe"
        },
        "item": {
          "id": "28f1d5dc-4eb4-4718-859c-3d6c4caed2a1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7f421837-c885-49e6-92d5-2a42175387f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c391edb-32a3-405f-aa50-92b1803e5c30",
        "cursor": {
          "ref": "5b92bd0d-57c0-4548-9924-9331afcff0b0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7858a945-2f47-4d53-aacf-d66401161f0e"
        },
        "item": {
          "id": "9c391edb-32a3-405f-aa50-92b1803e5c30",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "473c08f9-6a99-4a82-a5c8-46faf7b3f2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28f0896-ac58-479a-9ea6-d81a007dda4a",
        "cursor": {
          "ref": "4ffde6d7-d6e2-425f-9f51-affa5ac0f0a3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "36efb6a1-aa3f-4eeb-a216-9a4e9afdad53"
        },
        "item": {
          "id": "b28f0896-ac58-479a-9ea6-d81a007dda4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "20f5f9ab-362a-4d48-bd8f-ea6b72e25238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a501a0-5b91-4600-8547-45a66a6fd16a",
        "cursor": {
          "ref": "585f3b67-88b8-43fb-9e1f-62018b5f2b68",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2f93f805-9f5e-40ff-bf06-e80328f6fa8a"
        },
        "item": {
          "id": "78a501a0-5b91-4600-8547-45a66a6fd16a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b6fb5197-d448-415e-9506-879fdd2bbdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bba148f-0934-462a-92c9-a26da4062c14",
        "cursor": {
          "ref": "b5caf0a3-4dde-4787-b08e-8be5a8850c78",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "02e9cd4f-9e2a-4575-972c-82943a9ff2df"
        },
        "item": {
          "id": "8bba148f-0934-462a-92c9-a26da4062c14",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "41a0362d-00b9-4093-8193-4bd9c979ebb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6968f0b8-eb93-4b52-8f22-68884291f2c5",
        "cursor": {
          "ref": "d4429fa3-dcec-4b7d-8b63-36898e2314e7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "624bc285-a495-496a-9f01-9261a42d08a3"
        },
        "item": {
          "id": "6968f0b8-eb93-4b52-8f22-68884291f2c5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5fb0a748-bcad-48ed-b79c-7c16b2a3e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41539942-58ab-43f0-b59c-32d9c8637412",
        "cursor": {
          "ref": "7b3f424b-e273-4c04-b064-1f5aa4a44c16",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bd0230b4-7741-4c9b-9b26-6340fe231cf6"
        },
        "item": {
          "id": "41539942-58ab-43f0-b59c-32d9c8637412",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1ac0a80-94a8-4a94-bd18-5c8c530844af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27277dbc-72bb-419b-a979-93c5036095e1",
        "cursor": {
          "ref": "7fff1809-ed88-463c-8555-160e9a0467e9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3851159c-c8cf-483b-a834-cb3c6d947268"
        },
        "item": {
          "id": "27277dbc-72bb-419b-a979-93c5036095e1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "db559098-6842-4639-8c6c-381fede5d76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245e24d6-7da7-4ba1-b9e4-5f1899c9df0c",
        "cursor": {
          "ref": "a8f5f2b1-1d3f-4923-8f51-b9cdf110885c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8c4d3291-871a-4961-a094-0a563606f53d"
        },
        "item": {
          "id": "245e24d6-7da7-4ba1-b9e4-5f1899c9df0c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b776286a-b3c3-4948-bab3-b4530233e7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e7b8f-0709-4884-b547-cd8135a881a9",
        "cursor": {
          "ref": "c9befcdf-ed42-4e02-83ab-83e9d760ba36",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "339d26b7-7ce5-4e69-8e1a-90b55f964cf8"
        },
        "item": {
          "id": "584e7b8f-0709-4884-b547-cd8135a881a9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc1d6fc4-e576-4698-aa1d-8a6ff1856e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c1f807-8ee0-4fa6-9248-0701ed915a9f",
        "cursor": {
          "ref": "990dee2e-ddb6-41d0-95c6-d5756d1b3a9b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1aba6669-6b8b-446f-90ac-270185eb1329"
        },
        "item": {
          "id": "25c1f807-8ee0-4fa6-9248-0701ed915a9f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a414e3c2-6172-4dea-871f-6a650e65dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d40a1-e322-43b4-860e-b1c5006ad872",
        "cursor": {
          "ref": "d6136b78-6daf-4bee-b517-8e7647b6043a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "53e24932-2d74-492a-9a39-ebd602e7162c"
        },
        "item": {
          "id": "620d40a1-e322-43b4-860e-b1c5006ad872",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "741f6fbe-2147-4f4c-b40d-035896ef3a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff42439-0b16-400f-bacb-2f2647d6c17f",
        "cursor": {
          "ref": "8707711b-f891-4026-8c27-abc4c34442ff",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "87d90932-1339-4bb3-913d-a9a4b4d38077"
        },
        "item": {
          "id": "8ff42439-0b16-400f-bacb-2f2647d6c17f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5a92c581-23c1-45a7-94a4-9e8700926db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36807599-a0c8-4cbe-b3da-649f6edcb5e8",
        "cursor": {
          "ref": "3a77cb6c-c0cc-4a9c-8102-f664ab9ea7f7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4715a610-0a6b-4064-b60e-ba85bbdc4944"
        },
        "item": {
          "id": "36807599-a0c8-4cbe-b3da-649f6edcb5e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fa3a455c-83ea-4baf-9e43-205ee2e958e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa5707-44f1-445a-a682-f88670587029",
        "cursor": {
          "ref": "036531b1-8a48-4259-bbae-a6e2a7526dd2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "07c3b16e-3132-4153-9ab6-a7e2d42c2c37"
        },
        "item": {
          "id": "feaa5707-44f1-445a-a682-f88670587029",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab2d01f0-4792-4e1b-972a-7b1736849b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3160f4a6-9fb2-42cf-9390-1b5e8b952321",
        "cursor": {
          "ref": "99841699-9a23-4dbb-abff-8d3d43dc86a8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d0268869-19fe-44d4-8f86-7d6f5108ca3f"
        },
        "item": {
          "id": "3160f4a6-9fb2-42cf-9390-1b5e8b952321",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "870bd000-3a31-42aa-9fd4-eef8b3ab6bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e6565f-f31e-4f54-9f98-3ebc634726af",
        "cursor": {
          "ref": "0a2af517-10b9-46bc-8a6e-75e414bd9c72",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7db37c49-1c9e-4083-9e90-c629d717d0f5"
        },
        "item": {
          "id": "b2e6565f-f31e-4f54-9f98-3ebc634726af",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e51b1a12-a21f-462d-b6a9-217238393949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e856f5eb-33a5-444d-b38a-df584e6cfd48",
        "cursor": {
          "ref": "832f073b-5126-400b-8fb3-0f6ea8c9abbd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1bf43e73-9006-4220-8c32-6ac4afd65ecc"
        },
        "item": {
          "id": "e856f5eb-33a5-444d-b38a-df584e6cfd48",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b0a2609b-7f4e-4be9-8b9c-a8543ef0a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb8de08-9c0f-49d0-ba18-15202f0aa432",
        "cursor": {
          "ref": "2123a745-cb70-42d8-b69f-e48f9de800e7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1ddc3de6-584d-4908-80b0-e4b3b68221f8"
        },
        "item": {
          "id": "cfb8de08-9c0f-49d0-ba18-15202f0aa432",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ea9c86ee-d267-4a03-abd9-94c99cd92c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a451c0-f962-458a-90e3-2c151d88b54c",
        "cursor": {
          "ref": "a4a2cb4c-e2e4-423a-9c25-fe635a222fc4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ee6032d8-c12f-4d5e-a077-eee14776f2c4"
        },
        "item": {
          "id": "24a451c0-f962-458a-90e3-2c151d88b54c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e80396bb-5bb5-48db-9ba5-60c4fc7a1596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec85abfb-a219-4e72-b1fc-d228e34065b4",
        "cursor": {
          "ref": "3122a7fb-3d82-47a4-bf40-54c5bfba4f1c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aac461ba-d6fe-4889-b733-cd4f7825e619"
        },
        "item": {
          "id": "ec85abfb-a219-4e72-b1fc-d228e34065b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a745578a-2aba-4f8a-a994-0b5719ed3827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094c448-5241-4567-898e-6d363686d6fa",
        "cursor": {
          "ref": "a991a09c-c590-40bc-ac5a-119e901e7e04",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd8cbca2-dc30-4b88-ba8a-8364a87ac114"
        },
        "item": {
          "id": "a094c448-5241-4567-898e-6d363686d6fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1c5e9fe4-6c4a-4d83-bfb7-bef5744d8c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e3c9c-f414-4ae6-bfac-8563de56f42b",
        "cursor": {
          "ref": "dd6ca4b7-6415-47a3-ac58-64655b47ee59",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "78317d4b-e1bb-45cd-b844-11c40efd30de"
        },
        "item": {
          "id": "cc3e3c9c-f414-4ae6-bfac-8563de56f42b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7231dd96-db9e-40dc-b2b7-968bad073ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e93379-8f6b-4804-908f-0f0832ccd00f",
        "cursor": {
          "ref": "ce924116-b5b8-4959-a315-e25daa7d6e16",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1106c9b8-eae4-4b8b-a8f4-cc159a20d210"
        },
        "item": {
          "id": "35e93379-8f6b-4804-908f-0f0832ccd00f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d3beefca-d317-467a-b81c-c38d450d9bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37135f-5ed0-4d9d-bbd0-829223bbf80d",
        "cursor": {
          "ref": "a5ca35ed-fce6-4d03-becf-22d8644a7726",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c8fc4e49-ba03-4863-ada9-256026683f6a"
        },
        "item": {
          "id": "3a37135f-5ed0-4d9d-bbd0-829223bbf80d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "378b4220-8f55-4032-b221-d655fc5d6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a0135e-673e-4c79-af9a-e09d4ff4593e",
        "cursor": {
          "ref": "95249700-0cf3-4f4f-81c0-3987c68cdfdc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b259bd25-c939-44f5-972b-f3ef65dcc0ef"
        },
        "item": {
          "id": "32a0135e-673e-4c79-af9a-e09d4ff4593e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "020930b0-a27c-4b25-8ccb-6455293ce1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30519167-70f1-431b-9d1e-9e68d1e60e04",
        "cursor": {
          "ref": "0f671066-2757-4db7-a7ef-8caa5539f4a6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d6eadd05-fd19-4460-ad5d-2e47163c0b9c"
        },
        "item": {
          "id": "30519167-70f1-431b-9d1e-9e68d1e60e04",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c18c3df0-9b49-4485-b665-c4e2ad7c2ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29ac00e-98b1-4510-8da9-33c42032aff3",
        "cursor": {
          "ref": "9319edc6-6dea-4a03-9e46-78281a0716d7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "440c6f91-fa6a-48bf-b130-d6c687457999"
        },
        "item": {
          "id": "f29ac00e-98b1-4510-8da9-33c42032aff3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "00d06715-39f3-4da3-b546-c6be1173cea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f210a8-5c13-436d-b1aa-60c6db00dc27",
        "cursor": {
          "ref": "018beaa0-dacb-4653-acbb-fb85fd6057e9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1ffe3a05-27cf-42e8-8671-26ef13f77d81"
        },
        "item": {
          "id": "a1f210a8-5c13-436d-b1aa-60c6db00dc27",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5253d5cc-e6ec-4bcb-abf3-6c093dcb164a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8737075a-0690-43e5-8aa9-609ae8b2496c",
        "cursor": {
          "ref": "46f85db2-6b6a-4094-a2ae-5935d09688ba",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bd4a7646-2a56-4df5-aebc-34acceee0d35"
        },
        "item": {
          "id": "8737075a-0690-43e5-8aa9-609ae8b2496c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8e90d8ac-3b02-4379-9199-807606373d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998bd88d-f3ac-4884-b278-5a219384debe",
        "cursor": {
          "ref": "6cf8d830-a340-4dd4-8640-73f3eb492c9a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4245a77-429b-4bcc-8fee-b50106dd235c"
        },
        "item": {
          "id": "998bd88d-f3ac-4884-b278-5a219384debe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "11decb2a-c80c-4d40-ad26-c34117f7f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ed7287-bbfe-4cef-9b9c-a047132fb760",
        "cursor": {
          "ref": "33147bae-5157-4a57-bcaa-2f1ddb88a3df",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a21be24a-1182-4103-bfd5-61fe4cde1a19"
        },
        "item": {
          "id": "30ed7287-bbfe-4cef-9b9c-a047132fb760",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f9672237-3d08-4407-896f-3121f9250434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f633073b-ec8b-48d1-8a92-872ec5a18bae",
        "cursor": {
          "ref": "befbf1bf-2002-41bd-b0eb-aaa4d103e405",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4e2abfa2-0ad9-4d5d-9e20-529a3c4d4491"
        },
        "item": {
          "id": "f633073b-ec8b-48d1-8a92-872ec5a18bae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85588f72-e896-470c-9ded-5f221452be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d5f85d-3dbf-4942-9237-1f7601452087",
        "cursor": {
          "ref": "22c23e8d-5490-4fad-9af7-fb1040929146",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5734054a-96ca-4b0f-9c5f-6dacfa1de27c"
        },
        "item": {
          "id": "83d5f85d-3dbf-4942-9237-1f7601452087",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c0555299-3ec1-42a3-ae4a-464b4c5a6ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fe2a58-a4bd-4094-995c-c66da62e3240",
        "cursor": {
          "ref": "f6356e5f-eceb-47d2-8d1b-d6a7ceaa2eb2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "456a6e54-ab6d-4825-a659-67cbbd8adac9"
        },
        "item": {
          "id": "b8fe2a58-a4bd-4094-995c-c66da62e3240",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2c166969-32e4-491f-b0ff-634018b5e9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c099e5-6aaa-4670-bd9c-b57fa4ff5140",
        "cursor": {
          "ref": "08ae2913-91a3-4d6e-a906-59b888519763",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ee7f47f6-933c-4fd6-9198-5890d9477fcf"
        },
        "item": {
          "id": "b5c099e5-6aaa-4670-bd9c-b57fa4ff5140",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2f4fa6be-ed00-4b16-bbde-a462de93b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a172298f-d4eb-4580-bad4-70d0621918f4",
        "cursor": {
          "ref": "1485052a-532c-4051-94fa-40fe62e7564d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "957a7260-5f5e-4461-9cd0-2a98efee2a8e"
        },
        "item": {
          "id": "a172298f-d4eb-4580-bad4-70d0621918f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6153e4b6-604b-4247-b2fe-5c79fc604f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11a0713-dea9-4531-92d0-2d33d34ef01a",
        "cursor": {
          "ref": "6fc38aef-d40f-4623-a189-a9b1f9ad6d47",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "15af785c-337e-4b00-a58e-f23e7d2470fb"
        },
        "item": {
          "id": "d11a0713-dea9-4531-92d0-2d33d34ef01a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da653679-b7bc-447e-ade7-0f2ee22bae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e210842b-501d-4132-b195-03b16652e7a6",
        "cursor": {
          "ref": "dcc0bb00-2dd6-42e0-9aaa-2efa82e4bc1c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ee04ca4-eb77-4031-ab29-ae8ca71439be"
        },
        "item": {
          "id": "e210842b-501d-4132-b195-03b16652e7a6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95f9a511-c96c-458a-b0bf-7559bf027a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797b1cd0-196e-4dc8-99e9-7e2ab75cd3a7",
        "cursor": {
          "ref": "59e39705-a945-4973-aa1c-1f2e05ce4abc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "06759bbc-e178-49e9-8bd1-e0ee1d073d4e"
        },
        "item": {
          "id": "797b1cd0-196e-4dc8-99e9-7e2ab75cd3a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "62ffe730-aa3c-4181-aca4-8014d219525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92c98e6-d95d-49d0-a74e-101ce72303be",
        "cursor": {
          "ref": "1b9baf6b-9f9e-40ed-b467-488fcee92258",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "47ca3999-e2dd-4c48-8484-20e749026c84"
        },
        "item": {
          "id": "f92c98e6-d95d-49d0-a74e-101ce72303be",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0eb2923a-d5f7-47aa-981b-a8baf8c0adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9992b52d-3746-4c8d-8b04-90ae99f4d604",
        "cursor": {
          "ref": "545c5cd7-e4c3-4f38-b8c5-d3f0823c715c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ce8df0c0-5fad-4e6b-a113-867ce4ad1061"
        },
        "item": {
          "id": "9992b52d-3746-4c8d-8b04-90ae99f4d604",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9c6abfc3-06ab-4756-9983-a8cd11a4820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2497ec-d70e-44e9-a9e6-a23a44cbf587",
        "cursor": {
          "ref": "e2450489-2653-4cb1-97d3-f3b61a119040",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5bc2f1bd-0665-4a86-b9b7-12a28d00ca00"
        },
        "item": {
          "id": "cb2497ec-d70e-44e9-a9e6-a23a44cbf587",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fd39d390-3286-44cf-9c2f-fc4065534c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb9d66c-0ebf-4023-8fe7-1baeb4fefd7e",
        "cursor": {
          "ref": "e733e059-18c9-44e5-ad64-7e2d6a1e05cd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "50b9dc36-543d-4672-a30c-d498a816079c"
        },
        "item": {
          "id": "beb9d66c-0ebf-4023-8fe7-1baeb4fefd7e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3027c677-e885-4373-a29a-b74412548cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8467d4a5-3131-40df-9f06-b2243f388f24",
        "cursor": {
          "ref": "9ef19ecb-13c1-4670-adfb-adaf50cebb37",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4a20514e-87ca-4d28-bc24-6bdbe3b0d83e"
        },
        "item": {
          "id": "8467d4a5-3131-40df-9f06-b2243f388f24",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ae396633-cf7a-4270-9e6b-2c77a951a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454f2cc6-e44c-4c57-96b6-42b0aa38324c",
        "cursor": {
          "ref": "5657a8a9-6955-4e28-a3db-89c8a3942bce",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee50bb56-18ab-4d3b-9929-a84bd1d4bf4c"
        },
        "item": {
          "id": "454f2cc6-e44c-4c57-96b6-42b0aa38324c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "606971eb-0ab7-4cb3-83cc-1b1e437e94da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376247ce-fc67-4029-9223-02bcf4c93e29",
        "cursor": {
          "ref": "c53a9093-b825-4344-9c79-f62f65bfd684",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "28e7a1ea-3da9-4ed8-a10f-0d93822a6e5f"
        },
        "item": {
          "id": "376247ce-fc67-4029-9223-02bcf4c93e29",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f49954b4-4d2f-4b90-b3d1-cb1d49095680",
          "status": "OK",
          "code": 200,
          "responseTime": 1998,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "432196c3-57d2-44dd-9ee0-d31a8e51846e",
        "cursor": {
          "ref": "f1833cd5-56f3-4516-83a2-814029cb3a86",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6c0b4543-89db-41be-b9c4-da43d5b80345"
        },
        "item": {
          "id": "432196c3-57d2-44dd-9ee0-d31a8e51846e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c52fc129-3cf5-4e96-a9ed-0d474e548959",
          "status": "OK",
          "code": 200,
          "responseTime": 3828,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1c0654-0be8-427a-964c-e78b6c878bd9",
        "cursor": {
          "ref": "7ebf6f1f-13b8-416d-81e2-15b9ddd92ce9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9e15f7ae-1474-4333-baf6-7e179e151e20"
        },
        "item": {
          "id": "6b1c0654-0be8-427a-964c-e78b6c878bd9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "61fc7193-e406-4b70-b204-4ab3e0d0fefe",
          "status": "OK",
          "code": 200,
          "responseTime": 2661,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d071f0-467e-47c7-96c0-c73f21b1bac2",
        "cursor": {
          "ref": "39da7beb-eb87-4f9d-92d1-ef55e18e929d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "749ceb78-6bd8-4805-99d6-1124d1e48282"
        },
        "item": {
          "id": "72d071f0-467e-47c7-96c0-c73f21b1bac2",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "42250dae-b964-453e-8bf6-bf4572f32231",
        "cursor": {
          "ref": "eac56797-35bb-421a-beb4-905ee75def35",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "70c4fc81-2b6a-4b91-acb9-a3df5aacd84c"
        },
        "item": {
          "id": "42250dae-b964-453e-8bf6-bf4572f32231",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "1b9e43d9-1b61-4ae7-b069-e0b273aa91ea",
        "cursor": {
          "ref": "5e4b1567-c8d0-494b-8a07-ece3dee7a9e0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f5f0c55-e749-483f-af33-acc0c6bfa264"
        },
        "item": {
          "id": "1b9e43d9-1b61-4ae7-b069-e0b273aa91ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}