{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "632c4771-bc0a-41fe-8275-c161648a7149",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1e8fa1e-0bfa-403f-a815-d0e7c5e5221b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38c20e7d-8b32-4d2a-b996-a28a77589823",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca3bb7ce-9aa3-4234-a4e9-1407bc6de08f"
                }
              }
            ]
          },
          {
            "id": "f0f917c1-8039-4f69-a844-cb82fc3fbadd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f9a6c95-3c60-4e6f-9774-2a05ec67db14",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "214e9ed9-62d6-4657-b748-23c5ddb53e56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9d64d710-8e50-4d80-9818-47bc706bb621",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ce88923b-7b72-42e8-b280-33ee0f83ee00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03b80fd6-00aa-4724-91e8-e5b088924a20",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbca34fe-dcb2-4554-a3be-ad4c5f8d4690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8f3ce7a-96e7-4fa2-b837-5c012822ea7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9fc6697-239d-4ad2-82d7-9566d8aec578",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e3f5f26-4734-4061-ae27-fdb7469aa6e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d569568-73a1-47f5-ba0d-6b06090fcde9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63624031-249a-47bb-a3e1-512ddac64861"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89e696c3-6276-4da1-9e6c-9365fb56bd4a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59f819d8-70c9-43fc-813e-f2398a48ddad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23bbd078-61a9-46ef-981a-f5d4b12b4dbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7340c02-45bc-4837-85fa-907799b38ec9"
            }
          }
        ]
      },
      {
        "id": "08082ac0-9aea-40a2-bc80-d3138aac1332",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c3a817b6-03a9-4d05-8b7a-ae68f5f972d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a8206e8-a01c-4f0d-9423-2b3ec7ff8b1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a5b2266-1bbc-40a6-aced-79a92f86949e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d0bc56-7918-409e-be80-b69fd0f29523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2365351e-3917-423c-b04a-d31b1df4b8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39328cc5-14a0-416e-9fe8-03f390bd76c3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e745e29-579a-406a-90db-8a37e51a3900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27c49561-9998-4027-a4ff-2107e21b48db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49bbef1-23fb-42bb-9f82-c1b5aeba2d9c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55a2120-590a-46ba-8b9a-a43b332ff375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d460919-29c6-4249-a1ec-2c5affa7e5d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04230aae-f54c-49b0-8f7a-f6f241f9c712",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "230e47a7-687b-4b1f-b1c3-c2eb86f5b591",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e43fcd7-7df6-48e5-9edb-954312c561f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e587154-440b-4b51-8d8a-f31fe06525b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600464a1-cb6b-4dee-a2fc-d7735ef62dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844e4eb3-ce6e-4c86-8467-a2b4c60bf197"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fa31e28-fdba-42c7-956a-dfbda05ae479",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3504951-b06b-41f7-9f04-6b475a3ed5ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76b900c3-b34c-43b1-904d-aac44b476781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9f0c7743-17ab-422f-8ed1-0d94f8ba2311"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d2065a9-8c16-44be-bdf3-18d5c16bb5d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d5916c2c-b660-414e-a888-e73b5f2cd639"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "715fd3cd-17db-41c7-86d5-712d0362db3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19be16cd-cd74-4130-9daa-8a7a598aa202"
            }
          }
        ]
      },
      {
        "id": "9b04ff2f-9c96-4f4a-8a2f-b543cd305df9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6c12d583-c5ce-4de6-9e77-fa850bb3958c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf913636-0d90-4b61-9c3f-bc477b4d6f7a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3412eeb3-f079-45b3-bd59-7487818c60bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89e0d5f-d5f3-4432-842b-b9e93d792ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042e4aa7-4a23-4b84-b9b5-58529fcadb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b2003-7cd4-47e6-99b8-f9cf897d3dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c1d3cf-0324-458c-a6c4-0573b2b798cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7326342b-a267-4359-ac61-fe67c3e022df",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd87b0-de3d-425e-8372-98467f09884e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50339b23-8920-4b8b-8e9e-332bb0c10e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9b3bb0-112a-43a7-b6de-d25d54520ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9227b4a5-2751-4c06-a30d-b32f93e80ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb5d34-23d0-4e40-acee-a747d710cec3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce51f799-d0d0-4784-911f-86edf0c55517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0a3983-74f1-4b59-b5ba-ca537dec0eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952375a4-332e-4bbf-9e5a-eff3e0b3247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1756e6cb-cb79-489c-87ef-7c60b4a66795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7692f029-42da-4a5b-90d6-7fc907aa3a9f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4470ac-1038-4839-b247-499c654c30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34e8cde-16f5-43c5-b94f-d6a663fecd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441fce7c-4a5d-4704-b80d-df476cd75caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1041b1c0-f982-4a9c-95be-682885bb335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de9db3a-203a-4bdd-b7c9-8cd6fd3f141c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2daa48-ee8f-448e-8266-035ff178dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f46a1-eee7-4f36-b3db-f8b43d23b8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6a4d20-952f-4871-9a7a-3b70849bef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784f2fcc-0f06-4c50-a669-650f75844727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1897289f-6724-4523-bc3e-29e6f4b2dc13",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f049567-f9e6-4128-96ba-47642b7c295f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca019fd7-cc8d-43d3-9516-cee381f3b79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61a7fc7-512b-49e3-a77f-092df248da5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f12ffe5d-1500-4620-b5e5-1795fdca4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fe4dfb-8ba2-4087-9b8a-d5682b460fd1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd222f7f-b297-4915-877a-3b5aa614d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7a4e02-a027-4132-bff5-c34a7c9b5272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec54dae0-999c-42e8-bde4-b6507779d2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4508c802-01c3-4c06-b31c-837952691c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af12d16e-3393-49b6-9631-aa6cd25b0ae8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbcdda4-ed54-4dca-b259-1dfc2374766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ad831d-e72a-4bb6-abbc-f28ba825a2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36794d40-0bd5-44da-9358-b6a8b6ebbc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "262ef111-d8ef-48dd-a426-8374fc37e7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43a27b2-929e-46ee-bf3b-19cf6ce52ae4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ca5b0f-2bbd-42e9-9a8f-e9247d341e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bf5155-5c0f-41c8-b470-dd9f250da4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfa553c-6981-4182-896f-c933085f38fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "580f18cf-5416-4e1d-a6c1-97561a8914d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c7ec21-65b1-48d3-9267-ea036f45ed3c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50111dbe-80ff-4bbe-9931-33930479b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43540a43-7efe-4ffb-9599-03684878d949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e09d14e-434d-420f-83b3-5f4b573cf915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38cb6e91-9f12-4a0a-ab08-6072efa1d87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85230329-dc0e-4d6b-9982-45399740909c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24948f46-1d7f-42e1-b4cf-a7b75b1e0819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96f61ca-3e75-4745-866c-4c18d724a2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8236672b-6765-4bf1-ad91-94259c671060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceeeea69-6a43-4879-86d4-2da1a0d16c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86820e17-18d4-406f-b9db-1e87b2e24d47",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da12686-516e-452f-89d3-e970eaec2cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cf00cd-20db-45ae-89da-dbadc2d54870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83392e88-255e-4ae2-8541-1d6cde477e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03989b79-ca04-4e26-a5ad-d06d8e8d6a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb09e274-7bf8-4f55-8270-5c7817085b73",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de40a02-1147-4de6-964a-2f1b3321f482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1a3adc-4964-485b-838f-c1725ab5989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71fdfe-ab40-4510-8f1c-d99444f63354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae1f602-5c20-4d44-b74a-069c2867d18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d524f65-783a-40e5-b6bb-ff23bb8126d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3e1a42-fa48-4667-91e4-a0212a035c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccb0eec-eaf9-4109-b9fb-721e766796cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ae0af4-a3ef-4187-a712-320f1605b399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "449bfdfd-2918-472e-9afb-7083fea386c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fb140a-b459-4f7e-aa41-8714ce2f96c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3befdfe3-17c5-48e1-ab11-5a7d93ab9175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adc1e4e-a927-4e60-b2ee-747d7b161972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf23f90-1657-444b-8673-e3e0cf417f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fadb9da-5498-4ad5-b5d8-8b272e638872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ff20fc-2433-425e-ab9b-f6182ae8b514",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f064de70-31ae-4f60-bf19-5cacd29191ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ccedf7-4f65-43ff-8cbf-3e67c862cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0856f34d-1898-416d-8fb1-225dfb18ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59b7ca3-05c2-41be-bef2-a4d841399379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483d93c1-207d-449d-ace6-ceedb9258389",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71029542-2fb4-4e7b-81f4-f80a7b06a51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4685432a-1181-4935-bff8-502889928b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f206a3fd-7b1b-4bf9-9d12-e83a84facff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae455ee2-66e4-42e6-a689-2d8eb41924cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd0139b-0e90-4af8-8363-eb939ae380d1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da2fc66-6fb1-4dc7-826b-333639ab26d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7dace5-97ee-4229-a858-a602df20d011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c45b4aa-3c88-42f4-8678-dcb8994bb646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "81aa8aee-e9ea-4bc9-9c7e-4000b7326c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b05759-1473-4a7c-afe1-952eb789f25d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc4e90-b632-427c-9b59-fa1447711651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89119c6-0895-4217-a0b8-5fbc186d2bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed335a7a-35ed-44d7-aa8b-fdaa7eb087de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb64e89-8572-4b39-8121-7a54fb747f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9509f7e-2e4f-4f6d-9a59-e7d4fd3cfea4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0bb41d-20ca-4010-9b04-d4b3b37e7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed85186-1e28-4312-ba79-d3aed6e046e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5581cd92-3e05-4791-b0c6-6b653dbd78a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c126a972-75c8-4634-854a-8565a8b8bb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9979c-5169-4633-8aa9-6746b6211cab",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd00f39e-caed-44c6-9497-9b8b4b8a98ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf76eab-07ac-4cc6-9b3a-827c1a0feedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c3f7b4-ae76-437e-a93c-abd3869a2e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cead7e8-be09-4d5d-b78f-097d5729aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b399e494-d3a9-4224-b92a-98db69f13581",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425d3cd-1700-4d80-be72-afbaf92ce825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bb6276-a1dd-4c5f-99c0-e7258e8ebd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b7eb7e-91e3-442c-89a1-64b825f6ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f099dac-3a3d-4a23-8b48-2df65e046aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ec5a4-e1ca-4934-bf38-79651f29daec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e1f61f-e8f4-40cd-8631-639f5bc27ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fe7d29-9626-4179-b2f4-08cb075d3ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3548343-e39f-45c2-923e-f5a206379107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09b7b326-608d-411f-8db9-fe6b9c032f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7251b8-8716-4a35-bdcb-b230c654e4aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2efe5ef-b5c2-4e13-89bb-1de973e71276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9849b3f0-c4d2-43f7-8952-2880da1f60fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ac48bd-765d-44b9-b2b2-42c244347990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d92bf8-e58c-49e5-b32d-dee493061f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a0ca1-37f8-447d-8c51-3baf1dd2ce95",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ebce30-c2d5-4962-9303-71a0bf705527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232e2848-7954-4f5b-9333-769bc0da7ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c19ddc-044a-48fe-853f-cae376e7525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd7a462-c724-4bc1-aef7-f1956edc7e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a12440-d085-4e9f-9df4-2a2ee9c86fad",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8fe72-7b5b-4eb9-99b8-1608129e33d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d17363-57c0-49c3-807c-938144751f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c67222-e8a5-4372-b617-f983516e681b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e1eca7-35b5-4856-ad7f-e9fb7c301508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff16a0-23c2-430f-b843-b16b1c45f1fa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8a619d-3272-475f-8ae9-ad28cfec732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1781afd-1c57-4568-bebb-ec2d4533805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11ece71-c43a-441f-bf81-6e676868d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "278c9be7-7e3c-4271-9394-d976c06fab57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2608ceab-a8a5-4c08-b486-0a578e7dee01",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235170e-50ce-44e7-b6ec-aefd1bad482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3378d9-7808-419c-bd5f-7510d80e4ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde7ae24-d3f8-4cc6-939f-746b5ba170e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9f5542-972c-4179-896a-deb10351a3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d11f5f6-b1a9-405d-94b7-fa95d088d97b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de20f5-1411-4a60-8cff-96a5cd37d468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab936dd-8550-493c-9540-cbfc18cc6a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cede615-77c0-4e8c-aba9-9578b09c1181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a4fdd0-37fd-47c0-ba8b-beea1be56b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b78cb4-9901-4993-b59f-e35ca8ec8c42",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8f825-97aa-42ff-913a-4c4d5c4ba8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac46342-7463-4ef1-94c8-be55c69e34f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c22b29-d05e-4d46-83c2-5069dae56300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc93cff-582f-4775-96ec-e2ce7210230f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad086ff-71f6-4efc-a9d9-fed4508e8c2c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0314e-5afe-467c-a97d-351e694e2ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7bb297-710e-4f31-946c-91c7679c64f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b015c342-fe3a-4c78-90d3-03be7d7ad1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11513436-4040-447c-ae78-944433e17317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0621b6-fe81-42d8-baa1-5d58b0d827f3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d3fd82-c07b-4519-b67d-05095496b370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1436d1-82f4-45db-a1ad-ffc83c73ab74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa443f5-0de7-48e0-9d0a-69115f5a4759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b695adf7-3a4e-4d2b-b1b0-e0167892ce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c8000b-55af-457c-b0b2-45a3d15ed487",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864fee6f-8536-4bdf-be13-5408e5832ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3178e1-e223-4d46-9f11-931be4de9645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc6cf7f-083c-497f-8689-7e8efd986d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e654d4-30e3-4d8d-a245-706f583e2286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5328ed24-6527-49ca-b93c-ab32277e0531",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcaa3ca-36c3-4ad7-b198-87187d6b3f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30179f60-566f-4cb0-aab1-f5f2ac09bfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c802176-ed3e-4a07-9561-eb68c057d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ded2d4-7f4d-4e9f-8f9b-d3682e68d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1132d1c9-4be4-4ffb-ab53-43e947ce3c2c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e019ac-4e0e-4968-9c0e-6b9f07ee7593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf6dd9b-674e-4338-9c6a-d605b533cc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a806d9bb-4ac6-456b-a74e-f76997d75340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e04c1f7c-df1c-4d7d-ad06-433db0bc4490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57459dc4-5316-46dd-b9a2-94ef743f59d2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9edbbea-2d06-4c76-8801-35fd8306b9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dccf5657-438c-45bc-b385-b24cee47ab6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25976c5a-f2c9-40db-b5d5-cc304d8ff8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35e4b7f7-a611-414b-89d5-79c354b509fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787a043e-1324-4336-99f4-85ba96153128",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f47879-ca1e-4cfa-bfa3-438091c23c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1818592-067b-4c1c-950e-aa799fc85228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ee39a-5e97-4d30-9cff-c6b4c25dc9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c69aaf-0772-4c7c-a54d-839d53f17106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be0f100-2107-43c2-9562-30702d61682c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9766bcd7-a321-4b35-b28d-e050a6764118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c6d193-5f87-438a-b0ef-30fd9fe2236f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107840d0-59a5-4fb5-a290-98ba69238d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c220c57-b04e-409a-8eb9-6d712014f788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc49bb-9141-4ab6-8a0b-cb5736f72bc2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe37120-db1b-4929-9db7-8d5e492e9163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9fd349-083e-4c6d-a6ed-8b7f87284ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a688b7bf-f3f5-427a-896a-d49eac9c7c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10088f5d-dba3-482b-bfae-7c96fdaf1a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911d2c0f-ff1f-47fa-94fc-89d25707a848",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e491b552-a4cf-4b9e-b74e-fceb2c65ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b6cfd0-f955-4242-88a8-1b76a60cefdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b6eae8-76e8-4f14-a5bd-2a6b1185dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeedf077-3f44-4494-8a80-8122a0cf3696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cce4d7-56a0-40d8-b0d1-59a225d0ca2e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce0e6df-f4ae-418d-8106-b70b8d556b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdadd2c-88bf-47b2-87b3-e0956b85b1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2bb4dd-0ce4-49d6-9d39-60325aca8741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ddb47e-8643-414f-acb6-d07f86b48484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f828fee3-dd99-4197-982e-934d1a19f3ed",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39c65f-ab26-49a2-86a6-d5f8c918a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a41c63-ecc3-49c7-b9be-1b9aef53a3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00135c57-927d-46ce-804c-720877c8dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "159490f3-e741-4f49-9f52-7d2fae65a63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c261c49-751a-47c3-9115-71fb7e4f22e8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c288bf3-023f-40bf-b102-a2e0a36cf466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2b4687-bbec-4b3b-8af9-ff3a0f977800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84d029e-1160-450f-a4c8-5cc651d95522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0090461f-6b21-4116-bed6-2deebdef503e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0789245a-dd98-4e41-891a-7c66ae5f5067",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e87c22-d8f6-44f3-9637-104f08a3c308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c46b0d8-beb9-4d3c-a5bc-10cf854e359c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d64cb1-ace9-47a1-afdb-533ac6e72b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa823d2-e341-448a-bd09-8594c7ab84e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e709e3d5-edf0-4834-9d09-81825d5ae465",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a1d146-5a17-4748-abc3-2400d8dcb5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcef7417-35e7-4ead-9255-8078be9c2744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b98fd-17e0-4142-af36-d07d7af9bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ec363c-4bb6-4f8a-ae2e-9ce0b4921b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380c5e20-c88b-4459-8515-d5edf3f2ebd0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95628d5-2ced-48bc-be8e-d1b3b4ab32e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59d8872-88f7-4d1a-be31-0a492e2ab07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d308dd-3af8-49fe-9310-83c5a0015dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e893ef9-20d1-4e92-9586-c1465c0d2524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4101ba1b-7f34-4ee5-afd2-e03a21a90d0e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce8b42-da5e-49d7-a2db-df50314dffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f75100-b550-4331-90e8-40da781788f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1a749-9a21-49ff-bbcf-90286de59886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60cf1ca1-78ee-4dad-a115-5a945e53efab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfef9a9-e03e-4268-aaf9-37a8bbde5ae7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ed316d-f8b4-4c8c-a3ab-acb7fbd21693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d74ebd-8d07-4209-ab97-658992f44ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a877bd-3b37-4727-ae4c-41932cd99a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9732c831-61a4-44a9-a292-a3c5590dbd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60973afe-1069-40ca-8916-2f19a77d57ea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15463f4-6199-4dbc-95c0-03cc568c35aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee541fe-5504-4c45-8464-d484d6e980eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031739c2-641d-43e5-b51c-7a1d8c6d3106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc47c387-85a3-4077-a0c1-fde7ffcd0344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a47ff21-0f2e-444e-ab82-53de2d01bc7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d130c0dd-edb2-462d-b9a8-2c5ae48a5487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff1d745-3bd7-4727-9e49-0f72f4344edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cdebcc-6722-45ee-bcbd-af255714cb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4e4d36-0b97-4392-863f-b21c69dae367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ede0046-f6b4-4872-82f2-4407d9cdeab4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c6cb34-d616-4bf3-ac39-7e22e559da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8b9e3b-e8f5-4f4e-b98c-267a3a00d984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d62fc8-fc8e-4299-a282-3a2d9ea334df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08e04bd-94d3-442a-b709-9c6c9913a4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab961d09-cf80-4274-b1bb-5a6acdc3d62e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77080d0c-b616-44a6-82bf-997958bd5322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f21f0d-240b-4178-8142-4e75a11dad0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d9111c-c619-4b47-a244-d611405d47f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66853d0f-d975-4bfe-b387-77455ffdc3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf6ca5a-7180-49be-bfa4-2620dbe9bf9b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc027aee-caf1-4327-8cf0-67584f8bf661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2724221a-687d-46c7-80ac-c71f2536f615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36423ce3-7e10-47ae-be24-c66654930008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad0be49-9470-4bef-854c-def4f7c8eff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836cb8d1-2ff6-48ee-b311-47c8b764bc00",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb027a90-d7a7-4fb8-9faa-a6f630a19846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb51bbaf-ce88-4407-927b-db5309782e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e172b-bea8-4520-bc0c-1721b9bbd09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b4be3e-ac08-45ec-9b78-e3ae6a5ab475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3282655a-d98a-49c5-8ea1-96c647ca38a8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db39dbff-f8ed-4d6d-a3de-63937979c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b02dca-396c-43cc-aa27-f8351bef97f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbea660-ec30-41ae-8f3f-9a77dad241b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec538ff-d5a7-4a29-8f77-b28b63b77c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14ed7fb-2805-4cfd-b7c6-d7f499cea990",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21210403-614d-4d48-a9a8-12feb469c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4f784a-3806-4a69-96c1-7d903d18d7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceb1e98-960f-4043-8501-4b5d5a94db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf1e9ce-5ddb-4822-abb7-acb773b4b870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aac75cb-ac56-450b-af72-9dc982d712be",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679daed1-d9f9-44ca-88e0-c3931f11f6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad43719-d22f-41f1-8e21-7778f0fd0767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12d7a0f-00df-403c-91ad-aeb5c3e04bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e642df-312a-4f1d-842a-dbb6cc69adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c8e552-fb10-441a-8365-63becad8d743",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9cd928-0001-4f0b-9d7d-ecf8a2233128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e63db3-163f-4dd6-a3ac-9385f2f6f5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8547832-548f-4bf5-9341-4d7bd42510d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e1e7d6-6e93-44b9-b69b-485f78fea13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b840848-b6d6-43e7-9e8c-4f8d7f956b7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5cb62b-b497-4155-a540-4a2008599d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83455e0-d384-4ce1-84ca-2a6711971537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c90e831-0cae-4d70-9ddd-8fb374a86fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c116c355-a7c1-42af-bd99-a70694f11feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e987c-d8ee-4393-b58b-2a57e30e3938",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b79c17-cca6-4c30-91f0-8c0d0e4aefb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab474ad-8613-434e-8fba-2c56fe95819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3004775d-cdbe-4529-9de7-2499aa6a6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2babba5a-b1b4-4c6e-8134-39311dae0107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c03953-36f8-4d0f-a1ca-4c79f7b2903b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27204786-470f-4723-a34f-96f8e5014b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75f26d8-a342-4753-8845-2abb5b2aca27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f536864-aa6d-4c96-be9e-92cf28ee395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e08582c-3858-4c7f-bc36-03d45e2509b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972f6244-8256-48b5-a59a-0228cb4f6955",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67407f-8de5-4161-9c70-fbcde14f9163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12974573-d57a-42bb-b3fc-6c1de03f56ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c349bdf6-6a40-42e4-9ae4-d41e67dcbb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c086e597-fe7e-4027-a634-022ab273bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9446470f-99c6-46b5-b05f-0ab21a911f28",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c67c0-41b2-44e7-b687-eb5728a0eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35aa2fd-4357-4775-b278-6339d783a0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acbafe7-9233-4bd1-b888-51aa25e9c81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d31d2d-9f45-481d-a6db-758be5492eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274ad892-41fc-434e-9186-e07bc0a11c0b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc64d30-2c1e-4ac5-a1df-17e4eea1c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08331be-53a6-4fef-808d-9e12a592537b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfcde4c-76db-484b-a2af-781afff66a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "214a017d-30a8-49f6-ad1c-b462c0476d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be95468-23b8-4c2e-9ff1-dea7f8fe6cba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39499520-0a9b-467e-a2a3-2a0879539c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7094b446-3ff8-48f6-8183-fef6d7f76692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5302cc83-becd-4143-bb71-e82a01ad99c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "000d1df6-5618-42e5-b304-74e2814ef37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95285d-e0bf-4ddf-97a6-da18faa525d4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ada8e8-58bc-4f48-bce0-11ddfcb45f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710fe41c-d33f-49ab-aefb-7bfb2b1e462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12739fbd-94a0-49a5-8b9e-bc01b6ec3617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e185b9-2afe-41b7-a5b1-baab4d4742be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7b98bc-0f9f-40a8-b389-203988af92d1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4bc6f-5d3c-4638-9f2e-b5261f2a1aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84b70bc-c1b3-410b-9025-ac2fd4263b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c4dbbe-5d7a-4b78-bf26-d58c100713b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b173d7-8b79-43ec-a085-4f5f75a0f2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6d15cd-5d04-4b5c-96c5-bb3dcbff71a9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e36135d-6c1c-4af2-8bea-90c534144327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8277dbb0-6734-4112-ad32-cef3b6e61187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb804b1b-cb17-4ba1-99cb-e2444278a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7afd9b2e-df76-48c6-a569-57a4647f21a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c445b5-8161-416c-b6fd-e71548f5aac1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6de62e8-79d8-45bd-a40c-5b8192365332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37271d14-ba7c-468c-a5eb-7c259543c3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9c69b0-bb6d-420f-910e-3d8ecd678ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecadab7c-705b-4d0f-9370-7e8a1a26fd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3287705-ac75-4272-818d-18d4afd67901",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c322d9cf-4e19-4a4b-8b91-63e81e647ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d13daa-17eb-48d0-a249-47ab6e788af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ebb12a-f3a4-4e27-bcc4-8413f2f743b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8e8f7a-0f9a-4358-baa5-e27974a3335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a86c4b-3581-431b-8bfb-f106c4053906",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bd97c8-8b4b-4fb6-b858-3a932a54090a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff16f518-530c-43a6-82c0-c67f8a49cdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af2fd41-c3a8-418f-bdd1-64e0c39a2609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74a4c54-2d61-4997-8a92-1d1c97627180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edfe5c5-9bc5-404b-97e6-97a13483e607",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ae933-ed53-4462-91db-0649015252ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76030104-fe4b-4c52-9310-5a30a256cfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76355c05-96ae-40e7-9783-998bc42e0b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47fc2587-0dd1-491a-94e7-f567ab2f9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e2ea7-5eea-4289-8ed2-caf1dea682ed",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d5c79b-d4b5-4273-8233-e65a50ef186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d924798-79d8-4642-b5b3-5ccbaeddf5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6720014-5980-4027-9d78-e6d9a121c3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1de9636-7ee9-4fc5-8012-12b9563e871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3a0064-7ad0-4d1c-a02c-ab4224ac9001",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296aad2a-e82d-41a8-bdbf-de934edb3027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bebe56-eb59-4596-ba79-d9cafad58af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fefb136-5e5a-4990-b960-76a0980ff8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8ddca5-cec7-493e-a985-b6475a2871a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bc9996-79b8-4bf7-be13-308fdaae9b26",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa626f5b-fa50-40da-8559-194a0c49ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa36fe07-654f-4320-9ddc-580370e4161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10bf200-33bd-41ff-882c-19f9410e0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6810163a-6ca9-4472-8c50-ad4112d78d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55eda55-412a-416a-a91f-0181a5adb196",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d6562a-ad13-43d0-8d17-bdf97ef61c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cf4140-a83d-403d-9a49-babf903eef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb28ee93-fa11-49f2-8f28-bb55f93b21ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4adee48-9ad6-4c8e-a193-a5f0da70113e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e69f2b-87a6-4ad2-b090-665ed49dae76",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909bbbd9-3fef-4872-bd98-a2ee4fd09b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fee0b76-3305-4bf9-b337-0ce2195f1f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dc0154-2390-479e-86c0-6a937c34d433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb76fe4-9fc1-47e2-af2e-925d4cc20be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f0068d-a917-4ac8-b1a6-6108d640b118",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dfbf53-a1b5-4791-8198-643b09f33712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652bcca7-6d72-4f0e-8d11-e5d24dee9453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470a82b-8939-4e4d-bc6e-866f4919e051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e56135-c21d-47e2-8e99-132d4c156171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac63e4f-3f44-449c-b606-e2079bcc0dea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2fd1cc-9e40-4b86-8de3-ee09b44e476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547456aa-195f-4517-8cd3-f6b130c5302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2882a9-bece-4290-95eb-a251a2b79fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3da7ecf-dd31-491b-ab33-c7d1c98514d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed38953-752e-46b1-a8bf-25896435af6e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1db4d8-9324-42d1-b8ba-88ca8009b5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474f365e-fdee-41a8-a682-f3097cee4dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9696ec-551f-43dc-a3ba-2120408cf65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6352e975-fa71-4a1f-9761-240b5d602157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e571c050-8226-4bc6-9987-e561ce1d432a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a42467b-f348-42f9-a05c-b3a9df0b234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e85b7c4-dbbc-4b23-b4a9-5538b8a22fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379e69c4-9100-4cc2-93a5-a39a9b6070b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a7df94-2b14-4328-8aec-05f24f36f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2187e12-e66d-4c59-84f0-facae29d8ce0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875aa7b-f890-43b6-b91c-53c5265f51ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817fedea-7f7e-453d-8fe1-eabe1963b9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c541bcb-a60c-470d-89fb-c542646c6189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7488f25f-fb77-49cc-95e3-b79bfc538394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869e85fb-3235-404d-ac89-71f496492379",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13e53d3-a00e-4a24-a520-68a2337050af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ac5d2b-4697-4128-b6f5-39bcddd2db88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f31410-61f3-471a-b8d5-c6b4e3e89fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f3c568-d809-4a08-bc8c-00d7c14a28f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d3ea5-f203-4a7c-89ec-85e357567453",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c87d05-7200-4709-8ffd-9295fd5ed33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c97e05-b023-4878-902a-331241eaa901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c7ac59-e1a6-4355-88ff-74a7b6607b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c24b066-bdfe-4487-a830-76bce806d277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbdc93e-5656-4444-8b19-bd6dec61aae3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee57f5ff-9ce7-4f54-91aa-f0e347800487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd36eac-9e5a-490f-8459-02afd41e2b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba91bbe4-2e8d-4961-b3ba-728535ed29fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "516db2ce-1480-40a7-9cbe-710e356e7668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1797bb0b-d4c3-426f-b0bf-c969eeb58292",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca63ec94-f1f3-415e-8d54-82aeb3c845f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad242522-d510-42d6-ac10-f75bef2c0fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12740d-26e9-4ca4-907f-1a8a65aae500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "035f8508-9d59-4f33-a3f5-e15d1a3fc9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5994fde-843d-44db-8114-1d30399839f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb40814-3b12-486f-8bc3-87a581d989e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb73ca9-113d-4a4c-9ea6-2494a6817923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff31313c-d96f-4179-9a50-bd7b8cbf4961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "667cffea-2ca6-4908-b7bf-e477fee00a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4c3e8-22a5-463d-8fd8-ab58929e33a0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eee4ba1-1f48-4ff5-a96a-199cfc38ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71aae0d-5371-4604-bf57-4524dc1e9500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd0bdee-a49b-42ff-89a3-76db6e64b517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0bbcc2-9d89-4fb5-a847-41129c259f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4148943f-e933-4229-bd3f-a3d3633ca1e4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eeb5bc-82e0-426d-95b1-d298f51887c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0b3f7e-99ea-435c-ae81-028c892a79af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc8b7f6-8155-4b33-a569-fe6f45aad8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5a92af-d0cb-4f54-bcd5-dcdc1fbe0a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d5a934-2df4-45d0-a771-4a2b58ddfd5d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058c2486-505b-4cdb-8561-8b803e20187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482590f1-bd39-49e9-96e9-3522cd805c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8af816-b10d-461f-a45f-c3998788b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f178cfbe-a1eb-4fea-b38d-6baeec81f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb08e12f-d198-4f50-b25a-124775954ced",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e06a94c-8695-4eae-8975-0990eb21a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d719fe26-1c79-43f7-9b92-f5c7083bb924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0078b1-1612-443c-b6e6-be9bfc8b52af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a936741f-8f0e-4197-a29c-cd0d8bcc7ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395a7f35-9965-48fa-8ff1-bbede2397304",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b4593b-d6e2-46fc-bd2c-d4040c8c9fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dfb29f7f-eeb1-4d70-89cb-88cacbdb2feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30c1172-4557-4579-b707-c763c35c4cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ad461e-dc9b-4c90-bc4e-e57d50789324"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18c969a9-9e46-482e-b0df-8e895540fb80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37b25977-e706-4af7-babe-e8eab0169e1d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7370056-d4b3-4c31-b375-a895eca19f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab855a06-51fc-4dae-9975-271d8e4139a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaa18ae-9801-4277-ab35-842a2dabc906",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab7a9a81-f308-4a50-a062-2515f00a1888"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d90644cf-1180-4cc2-921b-49b244c5fea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f42189b8-8431-4412-972f-be77c1da8545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "820ec520-44c1-4d21-b1cb-1c7d2377095d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eed0e29e-fee4-4516-85db-8d4c06609076"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3194595a-cd9d-4f8f-932b-91a1f197c405",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3fa9ecf-c171-4418-b250-ac5a2712a924"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a87dbf77-9564-431b-a0b4-3e0e7bad3e3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3ef665b-3b95-4f7e-92ef-9145454b7a70"
                }
              }
            ]
          },
          {
            "id": "ac9c23d9-3797-4812-9c96-9fe7c1e2feee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e1e2b16-d0d9-459a-b220-718e57859389",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5fade03-2711-45ec-b79e-d0786204f1a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e4079bc-f42d-49ce-b38c-dd3dbce65b00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1247312-6b9a-42cb-a944-dc9fe4a497fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54660c09-6d5f-4290-8437-1e46328952f8"
                    }
                  }
                ]
              },
              {
                "id": "99745ea7-163b-47ce-9425-e01f75e45b00",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebe3d441-d3ef-4e4f-b6d3-5d3bb2321971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55ce13be-9435-475f-bb21-08cb31578b4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f75f82fb-8927-4336-9c69-fc8708637075",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "613adc88-8606-4785-b47f-6dd361554ced"
                    }
                  }
                ]
              },
              {
                "id": "e6f75da0-070d-4cd1-ac52-035da70c422d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ae938e-874f-41a3-8f86-8bc7266420b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0d90f48-6b3e-4f1f-b18f-c45e7190534f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c3918e7-78ce-4a02-bfef-cf5b9407d0dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed6b7227-4ce8-4934-a3e9-acb139740bd9"
                    }
                  }
                ]
              },
              {
                "id": "cee9966c-fb57-4a21-800d-b02a292b288c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d922dbd-d151-4967-b9c3-ffd45ec6eb45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702f0139-4f4f-40c2-8f0c-320b001664a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f41eacb3-9285-43ab-a43e-22c33015115d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dfeb59cc-81b5-468d-bda0-e7bb602fd33b"
                    }
                  }
                ]
              },
              {
                "id": "f7072fcf-c8a5-473f-9ee5-c95904f1491e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c69672b9-7e6e-4a2d-ba83-8cc998ee7fe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "873f815c-d563-4e53-8c5b-ac354b1ef095"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cfa0d1e-a511-4656-878b-8342616113b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ab0b8d0d-c089-4f8c-a153-0eeb659dafe1"
                    }
                  }
                ]
              },
              {
                "id": "bc5ab2ec-d3ee-417f-8460-d5df1ac4f776",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf1ce1c-6e40-4d05-b969-926fc0e27a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5dc06c7-ad91-4693-a253-cb84992c265d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0cec23-d8e7-4e6e-9964-1d424c6ae960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "619b2ccd-af2d-4242-8647-b81772c6b141"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c525478-674c-498e-8921-c43952d411c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35553b55-9340-4420-a920-184e7b9eeffb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b0a8009-e66b-4c8b-8354-76dff78cad16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1480249d-f3e1-4906-afef-57b3b387670b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a44bf921-7ef5-4268-bcc1-3d1a1df859e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ca6c07ae-c8cc-4fd0-ab85-5dc626aba322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "617f7193-768a-49f2-903a-57a32bfa0804",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5494ef80-2033-4b91-b8dc-3ec347b96cfc"
            }
          }
        ]
      },
      {
        "id": "290ff8e3-a8d3-4b38-835d-66161dc4c279",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8d821a3b-fadb-4a58-aec1-6cfaa645be2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5d33aa9-dd21-4471-ab82-91ac49c34c90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc94541c-ba42-43ff-ad63-02410e5c6812",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852c71aa-d561-4aa2-8feb-d2381ef12fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78390b5d-020b-4cbd-865f-1cd84ee8e3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb53173-13ca-4201-a2e0-e3b0dba16761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13863af-f94b-478e-9dc5-219d5287db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4513109-d93a-41fa-86d9-db23f971e537",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c990e6-1ae1-4a04-93f1-f9f4c5a408f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3906bb41-674d-48de-85dc-f62c4ac2a7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8cd519-9945-4451-9cfb-2574af0fed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27e759b-2ff7-4f61-b1d3-e112e53d64fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d670fe-a0fd-4aeb-b5a5-303a196e8a67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f944fe39-a556-4924-a729-2bd32ce25a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c695d2-f1ef-4b3f-aacf-746a1a2a3b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca119a9-8708-45a8-9ffa-110203f75afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daad2026-0283-4374-b9fa-e7f94f2f051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e471628-8b40-451b-b0f2-fc0fbceb2724",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4680420b-5d1a-48b7-a778-e83f52ba871b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35acfe84-6f21-44a1-a0e6-8295e37bdbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19013062-df61-400b-b301-ae0cea3492a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c57c40-fc10-4f70-b5f7-1cee27adfe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a38f0b-a7a4-4557-94d9-50ae3f9dc6d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767edaaa-23ed-404c-be1f-40c3660057dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb149abb-8fca-4d77-a05d-10d2c122d5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cbcb68-ea88-413d-8cff-a011c1a31b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be13755-b43d-4144-b735-fd811fb8bf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05842817-770a-4530-8c47-6f719ec85808",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe77da-1013-42b1-9cff-59f1dfce2333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e893f6-02bb-4728-a0a9-5d288972c3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86d49f8-801d-44b3-af0e-3e4ee6feeb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41184b02-a471-4bf9-809c-9a4a96e265ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea903a56-1435-420e-9572-38f667d2be1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a61f7-b0d3-413e-b83a-576cf21cbec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9a97bf-1710-4ff8-aa27-68937d609ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb22c2a4-5012-4556-843c-beb8dfcb9bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8e9287-7942-4c9d-a696-cdf81fbe836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50007b52-0846-4324-b56b-20b77413b9e5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f6003a-8a19-4d56-bc91-56a08ef59832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa0e59c-517e-4ac7-86ce-526f5c2b37f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a41016-e60b-45bd-9991-19214ec50b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea7f46b-54cf-4980-a7d1-0366d37fa08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd61149c-93df-4599-8a82-f0c772cd26f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a9f304-6076-4639-863f-4671ffc097a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3cbbe2-793c-4491-8459-1a882307289c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4052208a-9f01-40a1-a8f2-80d09f6af846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6b6113-80ac-4b63-af44-df107b3ea43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758f3d70-8f09-400f-b4d3-f48ca0c3554e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c558db1-bdcb-47ea-9973-7bdb12ccaf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03325714-f3ea-47d6-bc21-38637783f261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c6ad6d-b35c-4628-9953-ee91099ff7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea2b478-f860-4bba-8282-af795404804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7b796-26af-4bd5-bfb4-53c4878ef912",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ee5555-208c-441b-9da1-1aa556f923b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6171d76-bdf1-4893-86bb-9fccaf432a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f0b37-0bf7-431c-b1ff-7c6da27192b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dad4b785-d194-4529-8a83-e79604698db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45b9a56-d8e7-4da0-aa73-0123b57b107c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03ab167-4b0a-4fbe-9292-0086c10ade20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73989c1b-2dea-437a-8690-5b014bfd667b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21d199b-caed-4fee-aa63-8a63c20a1848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "defa843d-c8e9-4d54-9357-cbfc83b7dd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f611552-788c-444f-8209-b3173d9b2166",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a619b2e-1361-4734-871e-3da9f3319428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a631316-a25b-4fee-9cf3-c390901a6598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e82b1aa-9fc9-4aa9-be25-1fbcb6edc77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "574f4be2-3fb4-4e68-843c-a3f9cdca9afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c708ac-7782-4586-8aac-5619bf5daf24",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62abfea0-0cb5-4b1e-b2b3-b9fb4ce71081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68792d4a-79ff-4ea8-adf8-717f25a4b829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18f60ba-4719-4885-b32e-ca3b92fd2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4feb90e7-42e7-44c3-a610-5a1b4c7fa93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89befcb-9e5a-4a24-a4ea-dba345292f7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ecba55-4bbd-48ca-b09f-3d9fd89be837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb87ec5e-b626-4f61-ba3f-7b0b34307d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0ebd63-4593-433c-a5dc-59a7d2bed51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31700406-d6a3-4a8d-854d-5a955442982d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e200aa2-b1bf-47f6-845f-9274f3fa2f77",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bd5c75-bcb9-4ab7-962f-2c0f0dabfa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39627c11-f5a9-4489-bd04-341166a3edf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60379a90-0f88-4d56-b01a-47274cc56d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "432ce62e-6501-4c6a-a3b8-7bbc534ad29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e358b91c-1878-434c-a031-19749124291b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1b56c-8fa9-4f35-8b36-d55c25b6cf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a346921-8cfc-457f-a224-60541c56f3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2584dd3a-3f9e-42d6-9aeb-5f2ceacce77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a58d61a6-3571-40d5-9cb9-7e8cac727d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c4da0-d475-4f4a-aeae-88c1e57feb55",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae26705-e98a-46ad-a28a-970abd698be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600cd296-f997-4e2d-9baa-975af367a803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d77777f-bc0d-44db-b73b-a8061b5dacb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04181c8-5d32-4ae1-a679-56dcfe9c0a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92d31e2-f41a-4bec-bd51-af679a2bf0a6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7cf018-5e34-4931-a38e-75e2ac3ce7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ef5841-1aa5-4133-a4a5-c71cf2c831af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f9e74-d534-4645-8e8b-80fa44af5234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "907884b0-f09d-4406-b809-d6eb048e49fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25872053-4b51-4fef-998a-149962ef80ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beff0a6d-c5fd-488b-8962-791e59858b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296b799-ba0f-4b56-9648-5d28c207a0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aeef4f-2493-4b6f-8889-d0ed985b0d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72881023-7690-4ec7-8b7a-d4b1f43506fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251627bf-c9a6-4a27-929e-d9d7852ea10e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3160f9-f59a-4b85-9572-310da8f6e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e353b4d-9430-443e-abf2-301576defb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a37128-70a6-439f-a4f1-bb1934401627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d91185-7ac1-4157-b553-60e932cb5ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21818892-a587-4f9f-9e26-4fff2baa77be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3331db7-1abe-4571-9594-59fcd17caf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b17678-6fe6-410a-97e9-3855ef8a2813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73c092d-2580-493b-80c9-634a29752732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25ad065-7321-48cb-8479-8c5e22a19283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757c0c08-8a92-4b13-b020-2ab0da8ace0b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9931c590-d77a-4fa5-98fe-e70002b8a87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76b11f6-c003-4342-a3e7-0a2208e5eac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bad07da-9a68-40fd-96d8-307adebcaeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b983a2e8-2eb1-4fd0-928f-4266a1371fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fde952-7298-4d70-9baa-6229a77530c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff82cc08-356a-47da-b49c-890572271531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c72c865-ec37-4e9d-8b32-11acfe8c1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b88c63-9275-4458-9f5b-55cb638299bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd26151-0178-492e-b463-72175a8dbf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59756006-5018-40da-bf0b-f6c6b23955d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ab682c-cd88-4df7-ae5e-147c848112d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5a35e9-a02d-434f-b977-9b7893900c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c95d2af-4b74-494c-bfce-2a6d72f72dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2116a7-6f42-4a6b-8bb5-f2102734ef6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec74a62-4aec-4ee1-af04-8cd5420ac4dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b80fa2-aa5c-4446-8c3e-7c6ef8dd03ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fab60f-4c42-4fd4-acef-9ff5a1bfd375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8bae85-231a-48e7-aa6a-5bb7f804070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab982b3-374a-4a1b-a6a9-24718187ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c16b3a4-f16b-43fd-86e2-729bc4966032",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05939022-39cd-4c46-b9a5-ec54321ca5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53a424b-e3d4-4ff2-b80d-65065f9d98b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92943ef1-f252-4551-a235-8ab273a0aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c5185b-7b78-4441-8d78-c537e0f926b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739d8d2a-f2d9-48ed-981f-56481115c752",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad46cbe8-4d19-4ea6-971c-63b48958faf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df178484-92d4-45d6-b792-0f8faad45ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8384380d-9761-4e5e-bb05-61a23f71c8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df923e1d-1c95-4d9d-ae6f-338acf379554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a0a569-d0da-4a95-9cd5-505c261ddced",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb0cdcc-787c-4c41-af38-216c56a7754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e722847-da8c-4061-a201-716d7a54869c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1d8b45-7248-492b-8eca-b6b5b5e0061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1441c72-9bcf-4280-8d68-a300c770ec4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c8723e-30f5-483f-8a55-f3f943e7eec1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d028c-6d3c-45ad-8341-7c32868600f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5324f331-c733-45a3-9194-439729f17ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89453af-4dd9-458a-bf82-c9b041aa2a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1ec98a-1e7b-4047-ab3c-17545edfc999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a8e817-8ddf-44fe-b592-641f608b93f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a88706-ef1c-49b1-9cc8-e6bad0f118d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c97ac-6fe8-4408-a604-a9076622c567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69807870-8977-49fb-8669-423ffecfb834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602b07c8-24bf-40c8-be42-4d54e0d86c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201939d8-1ea0-4271-b651-c5c0d1e22461",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c20ffa5-6ab3-4dae-bf4b-cba3dfdb7d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d611a2c-14be-43a1-a6bb-0f7c8f5bb830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e20485b-c77d-496b-b7a0-f3e4f87e0336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fecbe6cf-9e7d-421e-adfe-b5c51749597c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a988c3d8-6027-4f8b-8be5-e28f14f5e2b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41baa1d7-a5ca-4fd2-856d-4db6dd47dff1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09de58c-e6b7-4957-8ffd-913ef4704f4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29d46398-0f66-4f2f-a801-f5190003bab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354bf64-fbc6-4997-ab60-2188c5b4aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d005296d-d534-49ce-99a2-a182e012ed01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1001866a-8633-49f7-bec5-f6f4e70d9b74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632b42b6-1bdd-457f-b0ef-9b1d8ecc50ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5edc8c23-647b-4fee-ad58-6267ba47ed95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "339bfe7b-1163-46bf-b3c4-902e95372cb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9ea3de-f6f9-4f0d-9391-445992c7560f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aceadeb6-0b76-4a83-ae55-b175a15245c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f92c715-f9ac-4ea1-b355-58cf7913a9ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d13b3e3-10e6-4432-af6a-9f5e34388f81"
            }
          }
        ]
      },
      {
        "id": "1e81fadc-5fbe-4d6d-83a3-1e1cf5d45d1f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bf56758c-9cc2-4cbd-8398-9b9fa9f368a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58a0ba66-9e5d-4ce1-a8d1-5dcebe505e0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff4a7bb7-33e7-4ef1-9cdc-42bcce596867",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11220c9a-e3c2-4c9e-8ae3-1a741a4e0d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5531c6bc-457e-4c4c-97c5-52967559e221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d2c11a-ea24-4d0d-bc46-ec1219b2e39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "934ec347-e559-443f-91f3-4b3fbe036c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b940c6-8a91-435b-bc0b-31cd10ab159c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b463eb1a-956c-45a7-bd42-41a3cdcf17ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44fa263-a28a-4dc9-aac9-72d9d334c8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6ba75-ce66-4dbc-801a-2a86df468de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be16077c-2c4d-4a2e-8e18-8ee4033f96e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383bc290-70e4-4ffe-a658-2bb0b6655f0f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48113732-e501-4436-bcdf-52b779dfa11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba0cee7-7101-4163-b03a-6e43ace52fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c152d-5407-4814-b747-e336ade95474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4bfae1-1491-45a8-a975-178a1b757be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aed0c62-45fc-4013-ac58-2c65f9621362",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0624cb-c74b-4941-bc89-0cb8adf00d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1284f7d1-4491-473a-8896-9e0e420449e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dbe014-e1a4-49a4-8cd2-0d8e0bf26efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec5e178-deef-472f-9f92-4020e4c01ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aac0d3-9d46-40af-95f8-0e69c427e185",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c834f6-4abc-4a3c-bb56-d3726ba86fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12034a29-a05d-47c8-afa7-078d7ee90d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d35795a-7d99-4c56-92b4-73408a513722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec73f84-ef4d-4370-9840-4d16b3a2af9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b465c5-da3c-4157-a0bd-288250f3031b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf364f4-f306-442f-8d5c-24ced8fe7135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3397713d-3c22-43ae-a9ba-0ee2c33d33b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb0e4f7-41db-424d-9edc-8c86cecf7402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df337744-f36d-4fef-933b-c76e8e85569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a4582-5b84-46dc-a28b-d9799afa68eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204ca59f-ab6f-4209-951b-ab41aa0bff1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e826ff-bc51-4a1e-a2fa-c771d60b69f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027c3d72-ddf4-4238-a716-ab5f0952c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1ab173-25e9-40ac-8d64-29ed8eacc053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b532d10-af23-433d-a050-31a9b3e3fced",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984e8c4-c975-483f-a03e-b6a15e1692d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abeed0f-7ab8-4ca4-a853-99ba5a90a57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465d95d4-d96d-4d81-8e04-570b7b88308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88d222c-2d06-463f-b1d7-42a205de4870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64538af1-ee6f-4db6-abdd-346e3d9552ca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d321bff-3762-4d60-93c1-383af65f105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6936b0-fa53-4d03-b001-4eb0416d1d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31cd241-303f-44a2-abb8-738cb1d0bb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb6cb2b-0361-4ab7-9163-24b0a9b74770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6ec0c7-bf1d-44a1-878b-01c9bdfeb321",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2eeafb-fb97-4a4e-8afc-4e9a8bea06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9694a76a-3729-4841-9cd5-5934672953b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd81c535-d590-4068-9cb9-781ed3f47371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "240a75cf-dcc5-4428-85de-fa7c62626a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a3a6ef-f7bb-401b-bac4-bbc62b2b6c26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3599baef-6fa0-4e60-8349-f8cfaa76eff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857b9db1-31aa-48da-b56c-a162986e0659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78544eae-b65e-4769-baeb-a0d4a5af6a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "862e416b-148a-45f8-b7f0-539a2e27ce3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db24cc7-0ce1-4e93-a696-a3f24232c0e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1352ca-e29d-4220-b772-1aebc5c7243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6496c720-ebe6-4f49-abb8-5b3a04641a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ecd6b-ab21-42f2-a16f-e7c34144acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81c63c53-bab8-4234-97d0-189a346dd0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e684b1a-31c1-4865-ba99-940782c87802",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d219d6fe-4190-4c9c-be06-f3f68e131614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412142db-8cf1-493a-b8dc-70e216c79d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb00ec5-b74d-4565-bbf0-f6c37c8ec3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae184cd-41fb-4d5e-9d8c-49f296dce876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0d6f8a-c43d-4a40-9c9d-5329a8e419ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40195959-147b-4b4f-9ad3-18204faf273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a224b25-39a2-480c-a82d-8a44292dff8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf8b075-9d06-4180-9569-8b389107bb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2569f5-7c69-422a-a23f-4b8280c59f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a963c930-c12d-4aba-b635-f4a0617fee39",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f50185-ecdb-4318-9b79-6b41d2ace5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1671eb8c-7777-4b97-87b5-b62b53ebea90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4d439-9477-445c-a7b8-c4013908a803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35256846-ebb3-456b-b55d-ca53a03e138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e591454d-2eb9-416d-bfc8-5068d2ee95a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b463521-dc0f-4131-9cbe-8f4e702fd870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba62ae1b-5adb-40b0-a3b4-751dfcb74946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8846d212-c0ca-4bd4-8e9a-f581350e8b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6dd99a-d739-46eb-bb41-b50f416c95d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d71414-6a02-4bb1-b1d0-dc73f809b4f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771da63b-a1ae-4d04-942d-4d83d63c94c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6917b5-3ad1-42fa-b114-2b962629aed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379c2a44-2aa8-42a1-aa8c-e12d7eb2bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8509d0e1-646b-465a-ad9f-cb02e695b199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38afc884-f730-44a1-b039-58c10c2db87e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd2cf4-a287-479a-bda9-7e7fae2ce7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db214781-020f-4183-b8da-e64c19c93c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4006672-aa7e-408a-b489-930628a8ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dcdc4e-d0ff-41c9-8a50-90a0a490c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ba1687-8b42-4a65-b925-12dfd187a8f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a52f25e-628e-40eb-9115-122376d10bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087febc5-bc42-4caa-9ec8-a9f737b53ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725d7110-d9bf-43ed-90a3-67866673eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63527bd9-1e46-400d-a52c-e80a92d71f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716cc4f2-5e7e-4a4a-af5b-010fdf241d16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3317d551-2088-47b5-8ea6-767f1262b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfd8afc-724b-47bf-998c-b57fb9caa4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d425ff-2872-4e3a-908e-fefcc6506963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a115ee4-73d5-489a-89db-7fb43b9c4140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b6ec9-d672-4155-9cdc-01f1b457361b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b68a86d-71e0-437a-b318-bd8869e7207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97707ef7-e397-4004-b813-67c77c252684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1c8a69-8cb4-4739-8183-7f82d3c54a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31ad556-e2a9-4a3c-93d0-da12a120c4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390ce917-1d91-4a73-9ebb-ce5b76594518",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f52a99-c887-4180-95a6-1e9a2d405192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983d6c4b-a53b-4ff7-9a2f-6b0adf795eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2c58a6-da5a-467f-8df6-9c64fb84367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ec990a-70a5-4d37-a5db-1b42b47ef6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c28c3a-2db7-441c-824c-e16d82021018",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d552055a-9d35-4aff-a12a-c5535f28d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dc4ffa-afec-45b0-96a3-7e75043fa8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89ed67d-94bb-410d-8c71-c9de40952de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d92a550-67bc-4bd3-a312-20ac77f5a856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821c1c0b-8a97-4edc-ae42-f0d191a82bac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886c1884-2fd9-48da-8966-24e40b4c93b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a8a924-a0c5-4d12-aa55-1db5fd72e4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd307afb-3b41-486b-b5cd-46c2db37539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e5a6ab-9e49-4edf-99c3-061e9e71d870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e71706-2ecd-4844-8235-462bb12ccae5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a506760-8ad7-4423-9a9f-7e6777d31d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92009e29-b3eb-4b63-a37c-3b2d3d4590bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225a38e-860a-44e4-ada4-8605a5b843fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a6763b-c41d-485a-a8ba-94329f878c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2513edbe-6958-43ff-925b-9391b8cb2228",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877c98b-5a7e-4df4-a56c-173c43fafbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da17b58d-3c4c-48e8-8ceb-1f6b787f9a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a593c4b2-cc7b-49a6-a4c6-ec07551b49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df19d29-36bd-4dda-86a0-5543f5e5f081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddb04ff-75bc-44be-ab3a-fe639b6f223c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1987c874-5c35-4f68-9373-73ff84efff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46d07f5-258e-4eec-8804-b1ee92029792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d909b64-8376-4e2c-8bc9-7d9fe21f34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd0a5d8-d336-4672-bb2a-b44b33669ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2c7fd0-157f-4613-a5d3-b491e5b419b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8539e2-7899-4589-a366-301e6fb5885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89af301-d978-4bc4-aace-452e6ff060aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc369cd1-aee9-4f7a-a926-10cd8778c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc58ad96-df3e-41ea-8cd1-45b0ea78ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54855b74-3378-430e-810c-015fa082a1f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede662e8-c2d9-4688-a1b0-f6a7f9212333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b2ad10-dbf2-47ba-b49d-7edc6e979d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8478605-02ca-4f0e-b101-095434a8ebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ff0fa4-21e5-422e-92ea-02469bd2d332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1465cb5b-668e-416d-9fdb-d7c85b124391",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff6cd29-725d-45a6-bded-a352a2c30221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25638c9e-4c43-4875-a58a-c60610784804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec04eb3-8ae9-4769-9227-81d1a0a5aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27b064e-86a2-4fa0-83f7-5d9f9fbff673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c9bd8-2876-471a-9c61-d412ecb1da5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6003ce-0dbb-4cc0-ae06-4ecbe4190751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bc29ab-04c2-44de-b9f9-318a342683b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567b4b90-c9a4-48ab-a6dc-472c40ac8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbf4ac7-f8b0-4ebd-a817-239cd6e4f855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fa5992-d9d7-4964-8e14-50c986f2b154",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d7d01-22cc-47c8-880f-d15d45914b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468670d7-742c-4aed-b9df-82aa4f613b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7c7827-dbb2-4a70-9ae4-f81dc6423bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbf28fe-949a-4d5a-a841-a4fdff0e4f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4777f4-a3b3-4dab-b922-f7e7dc2629b5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c401f1b2-9449-451f-aba3-364b852e28fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c813c0-0c77-475e-8e10-3bb2522e5067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306658d7-63db-4bb4-91fa-5b2f3c0deec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55dcdad4-5976-4247-9ff6-40d05f7cc365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b5955f-3554-49ab-9bbd-e6fa3e375550",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbf3d23-d059-4097-a075-6602ca045ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e616d624-79c6-4fd0-a2e3-d11416db4dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd7048a-b4fb-40b7-9efa-91a7b1085b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9bfeff-89de-44d1-ac10-d34e41997a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681e3375-b83c-484e-8954-4fe39156491e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e5b2f5-6872-480c-863d-ae34cf6ad24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be7d3e7-99fb-438f-8558-220b5af08d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ddb454-2337-4666-95ec-847c4088e268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "130e0f2e-24c4-45c3-aec3-a951cfb65bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1e8df6-0ff0-4ebc-9481-a788c45ff7be",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeb1111-39fb-4521-86af-6f18517b04ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd53c103-2695-4a50-970a-a2748a2527fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1803a894-7679-44f4-a17c-e147c6c3d7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0ca767-a61b-4e77-ba33-83344cb13923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a94e1-9931-49e2-9dcf-c8c891f9e5c0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c94196-d53d-4af5-89af-413973d85ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aa33ff-3ec9-48b6-aca5-bc34fdfc372c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0edf9-c9e7-46ab-a084-0fd9f05aa8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba78e47-8024-4bb5-8300-68d3e5a98ce2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c28f5f9-b9fd-4e39-a158-a69ac969e252",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8eed567-8e31-4cd8-be19-6e006700f11e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a6355-b3fc-4799-bd43-1e7e5e21ac41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "188c5103-a4b4-4ca0-9c85-67601e252c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16adac9b-0d22-4cba-b5db-3fd04fe09adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b4d0a89-4e24-43ea-b6e4-86c6d6c6c4cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff888279-4c9c-4dfb-8aa2-d819f68a91f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "988e1592-2e4a-4cdb-833c-771ccb8fc3a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e0c079-0195-401f-a5f3-90f2dd574e12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed88cb30-1826-43c9-b0a8-9b7adb14d828"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8474eb26-fae4-4058-9698-c3826cabd7e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c63ba39-7121-400e-934f-05c3b715366f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2bdeaed-bb9a-4344-9deb-a61da4b3acf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16eea0bb-a305-4c61-9f64-f7d1cb85a92c"
            }
          }
        ]
      },
      {
        "id": "52dab4e2-6232-4833-a690-2a9b60e5ba6b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6782a084-6f2f-4116-8ad7-36b14136db3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78278425-2884-4bc6-ab4c-228d32b0a5a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e42783c-cc06-42da-8a85-3c13115d9f5d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beac8cf-1989-4d2c-bfa9-749f6aae1ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253edc50-27da-4357-b5e8-37092a1ff43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07114c-0f81-4d23-b7da-a4175f3d8ffa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed319dbc-ea3e-4c9c-b2eb-9ff857d85cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818d1a33-21cc-415d-8528-c5e64d1921f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e15aff2-b58f-441e-9589-50be14ae9696",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4258c15-564b-448f-830e-762da015abe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12b159e-84fa-444c-a770-94511172c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0373e31b-b5c3-4426-b97a-7ee60038aa28",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684e7191-904a-4bb8-acb1-833e436af706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f522012-c9cb-4587-818c-ff7c9f7ba00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c853c1-def5-4b67-bbaa-acc5b1307db3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d76fb9-6904-4969-b625-34836cf2c6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f183f9d-da3c-4b63-8d1d-283d65e4605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247212a5-544f-4b33-a492-48f388d2c118",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a794f-88dc-4713-8ea3-c27b86b55ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c061e0-e596-454b-a738-ff7affa81dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b153a13a-c55c-4b40-b88b-32aa40a88e02",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c9e353-fc7b-4ffd-9077-39553659adf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0eb80ea-578a-4810-8a10-8c9b7a8e745d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72cebbd-ef74-4aa2-a0a7-748a3545351d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a1b6c-eb6f-4ebc-a047-0a0a9c90f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912ff0f0-d514-4b59-8b49-58882d9b0997",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950b3ec4-4971-462e-9c53-9f336b32b858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a65051d-1e80-4595-a2df-956f0efbf356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb027021-96d6-4eb5-a504-9cd8615ff0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec5f264-f767-4cc3-8e2e-a23b65c2c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e763e6-8c75-4e60-9546-52f5acf14b94",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcd4654-9dbb-4ebd-a760-199c43e2400b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175a0580-db79-4a08-a72c-b6f4a755704f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724153c-d2f7-4034-ad32-084135c18336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea2798a-97c0-4341-bbc5-a9dbe3191022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0793c3e-645b-45de-b632-ba715b813b49",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1092e1ad-ccf0-42e0-82f1-8b1ce488032e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba348457-cfff-4b0f-9475-ec113238b9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c952038-e60b-4878-8642-231549e9b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4908cf0e-ef5b-410f-938d-c88850b17ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947887ef-4da5-47c7-a527-77a7e9e2a568",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e876b8-7b43-4a96-8f2f-d91e38f09d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad3335e-431b-4ee5-a0e9-9070b1d4a0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e12740-0acd-463b-b7ac-5fde09c065aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a11f38-6bdb-498e-bdac-f1b864597c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210763d6-577c-49e2-ab0d-dcc2dd0145cf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8345ba0-a4e4-4dcc-983f-c6f2d5468125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e909cbf3-761e-44e1-acbc-9d62c8b489d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94f510-ee1f-4e12-b794-f0cbbad682a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2967d722-8f90-4aae-8519-9c6f2cc648f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c2f1e-8bdf-427a-b823-1c3c79effedb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7795f1a-21c7-4a3a-a1a3-de2c40854793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838081f4-c5af-4696-a746-176b0b0086ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6823db7c-d83f-4525-b9af-462fac692433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd81c71-8238-477b-abd1-2b95195fae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313ff461-8c98-4411-94f4-e8a2ce0207b0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dda6081-30e5-4488-b67e-602086dcad61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e54902-f712-42e2-8b38-3c32b93113de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e30fb72-b9a4-4ef4-a258-b861ae275b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23685aa-0e5d-4ede-b007-3e3e2978e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a69368-d706-476b-b2e7-d976a913287a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5657335-8c41-4530-b868-da7476435208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed4f645-7c60-42f8-81e1-77d0eb61b33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9309f8-23f8-4879-8d25-5cdec80d552f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cd40b0-76bd-4b66-b150-2b4496e851c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc44358-6f3e-467c-ab2c-cedcc67f7fb9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a573e-f17a-4760-8125-b96eca94c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535f6cfa-a319-43e3-9540-1bc5e5507ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca294b-1f26-4d8a-ba7d-df0a80069ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8759ccb-c56d-49f2-92fb-a34610a0739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230fb2ea-7df9-42bb-ab3b-a53b421e60c0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1af64c-0d74-4ad8-bde5-a9001ed6edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbff0e61-e815-413b-8fdd-84c85a6f8a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc1c979-bb20-4ef6-89c2-6fe411a99b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129ff8df-6206-4278-98a7-dc6b04c3c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac169a-ffa8-4b2e-adee-7f305fdc6fb3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c502374-c8bf-4c71-b8b2-14ce7eeed506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beddcb37-9f9d-4686-bda2-b6bf90ab37fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b281275-fc2b-424b-8cd0-967ca9f284da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d56fd-c41d-4c90-9f11-f83e44218920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49919558-9c9e-49c7-b864-132a89c87cc0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ceedf2-6749-4733-857d-263448bb6a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4e81fd-11e6-4a74-afad-775e40df2df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ebb0c9-1cda-4da5-9fac-c9dcd27c3ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96753acd-443e-4a65-b23b-70f8ed740475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95afc20-f030-48e3-adb9-b0be2835efae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f25423-2a8d-4d84-bd62-6b1bb0b1a5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc81c3e-f6cb-4730-bfde-4b4353d574f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ededdc-7ac1-4707-a967-723953e4d81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913b9802-f144-46ae-b990-9610edb18aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3f69b5-772f-40e5-b373-4270f9cfcf95",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f65d0c-c2aa-4234-9feb-0e92cca38d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577a1750-f2cf-4c38-9250-a7ba54c03af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d99fbe-5928-44c9-8c36-f2d676620f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67d2273-0f82-4a98-9b49-196aa9285531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a7bd58-e790-42bc-85ff-1b5f570a8b77",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6242529-9397-4acc-bdcc-c0032dfa9af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7811973-45f8-4854-bf63-94a378b202fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0921f3-4f46-4d92-8ca8-ecceb13f83c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36566a89-4a45-4627-a458-a98b32a3fb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021b8413-d302-4878-a56b-4fa365824d99",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9f0ead-51aa-436b-9889-81414bf4ba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e424ac97-d7c8-468f-9d0f-bedf4182567d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2da757b-ce40-4448-b1c9-3cbabc7d9180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf24339-1608-4e55-876d-e1c2eeb54ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d7680b-6456-4024-80dd-a50f13dad3ba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eab4df5-d4fe-4344-9dde-1d35f7a8022f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f03161e-1869-40e6-aeb8-68dbeff805ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a4c01b-1e9d-448c-bba5-f4c1efefa11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5747531-7213-456a-9edb-1aacbe6ce61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7dab41-63cb-42fa-9f03-6c20355be132",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3506764-f339-47cd-addd-247968a7bcd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907a8bb7-9e5d-4e9f-a46a-5894a99f0eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93387baa-5ccd-41d6-af12-9c3a47186146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5147a187-b4bc-43e1-aff8-acfd7dd377a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4ba559-998f-427f-b91a-f2ea58526be6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8c82f9-6399-4e5b-853b-29fcc76b9e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec86cd24-d3a4-4363-800b-1035eecf2eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49b87c5-ae0b-4c8d-a53e-5542b8d61836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74b04e6-6035-471d-a3b0-28c31147cf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea5914d-9718-4ba4-8519-6af9024776b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3c633e-00ac-4e69-b603-21c7adc7c288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9704a7-2a75-42cc-8c30-4b81be4db94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b480ffe-01c0-4632-96e5-7dedefcc5700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12daaad4-88ce-4d7d-b3a1-f19b1e5f809d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2858fdbc-4084-455d-996a-d674ec3484be",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80e4d74-3842-464c-8b9f-c30296c20ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b07c3e-0253-4860-810c-0a212782260a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81050b60-f25c-4903-867e-1e9cb96716a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b37480-053d-4452-a978-0df002a84d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b303009e-18a2-498d-bbf5-5dacbf4fc22a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8116e94d-66f1-4882-bc88-1681addbe513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f3d0aa-4608-4212-bc56-3be1f7fce287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9b13e4-8167-43c2-a31a-ce269da6e977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc87f68c-1dd1-4d62-9407-946ab376c443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a19f96a-2682-4caa-83c6-e9fd1630b876",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea10018-6f26-4a15-8fa6-5f3e07c2b154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06f7b89-a39a-4455-9f6e-8215115d1ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6487ad39-65ee-4b6e-b0c0-ef0c6d79ce1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaeb777-f552-4343-8559-4a0433483160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3006dcf-61a5-4558-9ae9-6e98769e06f5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7641f585-ea41-47b8-aa12-796f76f16d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334d7600-61ea-441a-af5f-1846e334a8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab8ae8-3ba0-4cf9-87f2-a2f4f1ea2730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2be3676-5d74-4fa6-a2fb-2845220e5864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f7826c-b3bf-4e34-8a69-8a31e2e9e3cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e8461-3b22-4000-a5d2-0843014f5866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaac292-3a35-4302-955a-9b0c84f25e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540af7b-d86b-4f9e-828e-f24c6b82a918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb999cb-b90e-4918-b519-06e27286a95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51986224-336c-44c5-a015-7c257f41d508",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f88113-64ac-4f2c-8358-29c791b603ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c478549-32c4-4305-83d2-fb1926b37a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e660739-9d06-4c0b-8554-fe5c2049ea8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f8779d-867e-4853-9e48-fa09e34f98a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a68a60f-c5c6-4075-a156-37a9771f1b6b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e075278-8c3b-4b10-bc59-8348d05eabec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b6dcd0-1e72-4dff-85c6-59fd740d52c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd6eefe-51b7-47fc-994d-18fc8e6c0e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178f1809-b85a-453b-be71-ab7c98eb7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971e2a91-b56b-46c4-8d7d-eeca6f40fc74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6e32dc-3974-498c-9e42-32fc5c573342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93acbbe8-4add-40a0-b756-528377037eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9561750a-5cb2-4ef9-b3fe-8ccbb7d2c021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c2528b-3b88-4b43-9dbf-e70c54c41852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac94626-0924-4e5b-b308-6fe0080e4bdb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87695003-0b83-4ad6-b1ad-98b3492de258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57d1157-de71-4b95-aa55-e0784c8c88ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32797cc9-c99b-4316-a854-c3392d49dc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac096d95-90df-4a48-8b61-7d1a98cb90f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f4fb57-9081-454c-b2b7-c29b11ff4825",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee45c19-2a40-4c8a-9933-925c9a3fd6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7794920-9f87-4e23-9727-5f1e2cbdb9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73b14f1-f0a0-4f23-a2ae-c891a598fbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b3e621-a5c1-4d0b-b4a4-4f4ee2b46422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7df571-33f5-4391-91d2-a057d8c5618c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe110007-7694-4934-a4fb-41571fc21212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e175fe-e1bf-4f31-9e7b-f33818b38117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3196c5f-6216-4658-9cf9-2eeeffb8a23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3060ce36-73ee-4fe8-acaa-abce0538f8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fd2dd6-15ef-461b-a3ab-da0bfac3d203",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c4b030-8f0b-4000-bb8f-1a19dd7a711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec58ec8b-edb4-4c0c-8145-14acc60b6011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85693bb-4abd-4c89-b4d4-9d020a67a2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e089a08-33e5-4dea-b914-1b95f5462bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee7c570-caff-456d-827c-65fec0c0821b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff789f38-2e00-4518-9d17-e4d107623128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d71404-5dd6-4102-b0d3-c16d635cc01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5f578d-5938-41da-aa91-5e3f0084e56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54ec724-5e45-4cd5-8276-16d9c822c0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a9a77-06a5-4f73-af42-cbc1bcab4355",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cfa3f8-cf2c-4a51-9f25-2672a62d2963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba650414-9d5e-4f31-a676-6e0bbf04b63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27591d3c-f07c-4361-90da-732787fecc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d10fd05-b8bb-45c9-919c-1d380a010a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225ed423-41e9-4c00-a8a0-4428fa8d7c28",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14632460-2b1b-49d2-8938-462f273636dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b266efb-532d-460c-bd2c-c7c1169d1e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688cf4c6-0658-43b9-a903-78e7518c1571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8ea430-8702-47b5-b42f-ebe5aeba649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f6105-8e25-4cde-96c0-0f9651b1e1ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63284cd-7682-41ea-baaf-a391d2bc9b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c071d61-8aa5-41d8-8da0-1aa332a8887e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c9a300-0e68-4dfb-9d3d-66d4d3d4408a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5b2542-fefd-444d-93ad-cea9bab45e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3112a-50f2-4d8e-b72a-a0e0b7b9a8af",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848a862-34c0-4e8d-b1b5-7767a43cc01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01c84c5-c4bf-43e3-8b52-5af1decae1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ce975-f58a-4afd-be41-90eebdf1013a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc6d46c-ac72-41c9-bbcb-a188b501ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a5c8c-49e2-4d34-89a9-ca1c81e44122",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7fadea-670a-4b98-bcc6-0e7f9ae99a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c18d35-89fd-42fa-a293-155b638bf125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec58408-7ea6-4fc9-aced-83a6d9d08cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b200d7-e17e-49cb-b383-0536958c5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3adae-c839-4007-9b3f-a491d07b1bd9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b92cf86-10c8-4e41-83db-b06f140c0121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5615c9bf-7f79-45b0-9153-7d6c98975463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b8dc75-4da2-4122-a8ca-e2c25030258c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a64a6a3-1035-4ee7-a672-a6226aebc990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eebd886-ae8a-4eee-a8ab-57416f4223f7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708db728-a282-4add-90cc-8d1f428367e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c068869f-4adc-47c1-8db3-f83f660f43af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b48e96e-ec9c-4763-91c0-3978c557d53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86694c59-ba31-468c-8be4-a6982c86ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6672c0b-d6d3-455a-935b-33905c4b71ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7f1a8b-7bfb-40ed-8eae-1f12aa624c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d38c90-7e85-4a19-aedd-99cccd9aa234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf43722-3575-48e8-b849-5d0bf172a99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058cfe32-5265-46c3-8e20-024679154c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec4ddde-e030-40c6-b77b-76e12e9dd8ee",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97f8f83-6c88-449d-955e-84ad7c4b8dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d22bc0-982d-498d-b6c5-c5b62463c8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c0f81-e19f-4291-9e5e-02a950aa1179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c6e62f-bab3-488a-8ee7-2a7beb8dbd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af195b-a79a-4ce9-b6a8-416a755d9f29",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744e6dc8-1eed-47b6-8e16-7c7ab158922b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7605ebde-f762-4693-9ead-05aae9fa68c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6be21e-a84c-41e5-92a8-fc7b2fc4e9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73920378-0253-4fa5-92e7-38a3a0813d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aab4ef-9568-4bd7-93db-92de88acda4d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c561f2-3de2-4e7d-8ebf-1bbf14d5b709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cb342e-c4a5-480d-9750-f2ac7e8b2985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d709a734-5e3b-4fbd-8f9e-357c12f67b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d874ef97-a6a7-40a0-95b7-0fdbde395cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0646805-d8b9-4576-b792-09c29160542c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5883cda4-5f9c-4f8f-a4b9-bd5373e1efec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267ee27d-99ec-46fd-ac2b-cbf518f120ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494bdbac-8604-44e1-a416-effab1a7abcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572e5a10-c47a-44da-9130-8c7da290735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18506d78-465b-400a-b9a5-43566504d3b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7bcbfb-7b6c-4655-a629-936328876df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46400caf-af45-424b-9868-1bcfee0c84e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b754d419-ec87-4d76-8a6b-33825063844c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d242fe86-800d-440e-9104-2956a2b7274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460df1d-9edd-4339-a17c-1d32d6e4295b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4cf84c-fb33-4f88-a04f-96963e47facb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b96ab0-edcb-4ffe-89c1-51a677d47def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188f1174-7c49-44a4-9fd2-0a0ef7bacfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe8ace2-13c1-4337-9748-d9ca244695f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2fcd08-a294-4463-b125-33aca1744be9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89561c8-5f17-4545-9f22-089eb838dc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9522225a-05e2-47c1-9468-6704d9e006e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a3900-1262-46bf-ba45-db478cee32e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9f0ce9-ad0b-4279-9427-b61133ba5cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c727f3-2715-4975-a719-687f1c440197",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943e0958-a8f5-4e2a-b4fd-7309311afc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2966d9b7-b5e0-4571-a883-74d60335c0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6c4864-8814-49c2-8d2f-2976a9b0b030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50aa232-8b0e-4a96-9b64-96bb501e56d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b08faae-3db0-4cf5-a2ed-9a4f457bcf8a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be65a8ab-8e1f-45dc-98cc-c95bec899ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febeeb5d-b540-4ad2-8e2b-12c3b3267380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce988318-075d-45d6-8803-e12216b6af25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15ed1dd-f219-447c-aa64-50bf29fc38ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be3ea6-edb8-416a-a3cb-983364ee5ff3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d1469-01a1-4739-a237-274962c786da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efca1d0-0101-48e6-b53b-bb357c5eaa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d7571a-0ceb-4ecf-a719-749936c98f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e6811a-cbce-43ae-98dc-d1d1fed9ce42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc9e3c6-82d5-4e92-b0ed-e110af13d5ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4bcf0d-c0d8-4443-b1f7-79bf8e57fade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6748ed-9807-400a-8b51-fade448e2587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aac186-49ad-4f01-b207-8d9273cbbd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83523e53-0fa5-4dd8-939c-2422769ff6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc83296-0934-456c-ae61-0e167826ab68",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e26320-4e1c-47b8-9685-06b6922b5525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eae39c-aefd-4875-b151-4c0fab088425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783710d7-5878-4c93-985a-f4f7b5d83442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448277fd-6405-438a-902e-f1c276c94346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95346ff9-5f78-4ff7-991e-fc58eb0e5378",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada96e7d-fa9b-4e95-99b3-090c496f2f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405b94eb-e0c4-44db-8738-aeee82b84db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423c3acb-71a2-4a0a-bef8-239ae2148ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf77d5a-d82b-4be3-a931-3cbaea7c36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec9db24-5fe4-41a5-97c7-a26427cea0cc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e627d458-669b-4f0b-a339-8f15b4af4fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003e7c2f-31bb-40ac-8f26-27e45995202f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5ff4a8-f4df-443d-b9d1-0e1ff5a58674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edeef93-e91f-4f76-a8c0-f43b1feb7b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d387f4d-6945-491b-acd3-898f3196add0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa38c08c-5b8a-46af-8674-8d4376764124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a43e6a2-5a2b-44a2-92d5-68244e14fe6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644ea19e-8552-49bc-89c3-f1c89ce1eab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c936a7ee-7e1a-4343-af76-08218c344f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd496f1d-09a0-4203-8ff7-99d9a7626d88",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ac5a3a-7b02-43d8-af7c-df25de97f48b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44d13ce-f8e6-47f5-8712-02447d5d9f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad20f828-f1c0-478e-87fe-18cd43054a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73304bd-a05e-4849-a574-9b3f098a90eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a966a933-e0be-4a75-9e92-6ddebf384388",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ed44c-04c9-4000-bd1a-cb69fc2b0e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8feef2-1220-42bd-a4a9-87b456b57514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b83d6-8e1b-4fbd-99ad-9587a0cb45f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78ba0cf-6813-4eb2-97cb-91445c13562a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e1b884-f6c8-4ef4-b0ad-9ae569906dae",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028faaa5-2f90-4d87-8f15-f98d23652749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc03f98-37d6-468b-b127-8710b1ba530b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309c9b51-7c9a-467b-a258-53036b846cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8b7c13-7158-44b5-ac13-27bd103e0f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa68d9c9-db3d-4caa-8a99-49d60b50697d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f800cfb5-c578-469d-82a9-815204de1379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db2d221-7d38-4ece-b547-42f17711059f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2133c96-256f-4c0d-85a8-bb208679646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e88886c-700b-4c9b-84ae-e3a7b28a7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aae8f05-32f9-4f6c-872a-ed904e36d857",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a96861-1ca6-49ad-8c28-66465aa58a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0f5291-3d75-48fd-b134-0c7b574ff81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db33202-8fe7-4347-9ea4-c66ce07787ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49540fa-9ae7-45f8-bfa3-5ef51fefae8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25b4d78-4f23-40fa-adf6-eb06cfa36b58",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90645f46-0d3c-4ff6-9bd7-13b9ae1b7587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5c36a0-edd5-4acd-97b8-add117462052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca1127-2e00-4989-b496-0b61d479a697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c699b8e-06c7-4e8f-95a8-0aa92125b89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9a33e-3972-429d-871c-352f15db933c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1479716-f550-4113-90d8-a81bb3bbae6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fcacd2-b9fc-49cb-91bb-e347afc74fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f413d62d-175a-4e30-957f-c44f6588ea02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b4e8b3-b2f3-4ce7-980a-e248cae9f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c06615-9e27-4c95-a2ed-0b6167482834",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42db3021-c63e-4909-a6fd-44b684d1537e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddf317a-4e76-4f0d-acb0-d5834959959f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5b8f15-bd0b-4cf0-8787-ac33890e2548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b602aa-6300-4989-b9e8-2051fc5d436f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfae3987-1813-4851-82b3-fab9ea68412a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cdcab5-e1cc-4d84-b4d4-43d2171e586a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88536e6a-b178-46be-bd4a-08ed37288d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4fa024-c609-460d-a468-8cbe1e8ffd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c63815-983f-4beb-be5c-64705c473918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6758077-5bcd-4929-b926-2e8adaab8f37",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2098a8f-b0ce-46e9-ac4b-3e3212dc08d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db7d6e7-8f8c-47ae-84b0-33fa812bea76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24175b65-7ffb-45a3-8ffa-6a43a25b2d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743eabd2-a61c-4417-b322-09a3e6850714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ce264e-7833-4372-8004-ced7584ec10a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaac0b8-5905-4214-9710-f8914c7999a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c254acd0-fc23-4eb8-80a5-82c679ae1633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f0bf1a-bd75-4dba-aa36-5cf5bc01671f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8f2a39-e15f-411e-ad3f-aeb47d1ab10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e38286-813c-4e79-8404-b42cdca5ed8c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701864e5-4d29-4759-a5b7-8e9c846f6081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d95b30e-db86-4f2f-947a-23c2beb0b92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0fabd4-dcc6-46e0-984d-7f0c46040ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21529a94-a59b-4ac1-b202-1131ba9db6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d88750f-d72c-4b36-94a2-52bdaa584ba8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68543c8c-24c3-45ac-b84d-35f9f0971608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc03ffd8-f45f-459b-bab5-73bfc3b6fa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a482a9b-d52c-4a76-a04b-c5de4605bdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1e98dc-b8ed-4d10-91d9-6693e2f4026b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b5f70-24f3-4c92-8841-0309cc5c47c5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9155cd85-024f-4002-a828-028bdf535783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03cd30b-dceb-4585-9a2c-52c0407b529a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4131a904-c678-444f-882c-c3e3aef2a249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26091d71-728b-484c-9d77-75f0dccc9208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59943447-27a9-4ee9-8e17-5147d18fd091",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff328d2d-a352-49e3-910e-036bd970855f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a9bde7-b7ac-400d-8303-f02a28861271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d95e01-9356-44fd-a8d0-f72c0ab80622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a6ddf9-d2af-4dfe-869d-fc68e11fc928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d26a54-657d-47c3-8638-6f0cf06244e3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91577747-2ec7-463f-a410-6bb30e698c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167f3bdb-b2ec-49a2-9fd2-6c845a8a45cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8917f1a9-3696-480a-bf34-ce9a354efea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b47b61-1c33-4ff7-8ef6-73303f39224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89b23cd-88e4-4db3-bf1e-4836aaba83ed",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a54d2e-e7d5-4318-85e9-eaaec7bdb96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcf17c8-2f68-4a23-9824-48aa8f699eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ff2734-dc8f-475e-a936-455979464c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb6449e-7eaf-4ad1-b646-df0e51bfc689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a70fda0-5b69-4e61-9b91-ee035586e039",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0968c310-3b9b-454b-acd5-38fdc3d3bdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a1611d-445b-4f49-a7c1-3b87587af32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584fb61c-2d15-46bc-8274-6869a66b0015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3035f04-6a63-45e4-aea2-63095418a9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858d7696-45e4-4b6b-bfa6-6e902d2b2f67",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3215e1-b62c-45af-aa83-2c631aa1a631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3fcf66-3ccb-488b-903a-56c2d3d22ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13239c30-f38f-4c75-9aac-7e1e68ae87ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f7ea5c-85fa-472b-8bff-9b62930d989c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b9073d-f3d8-4723-a65a-07e9bc1fec0a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eb4fa4-366d-4da6-b1bd-24f2b2070475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f0042f-b6dd-484a-92ff-55d69992af90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c42a3a-a30d-4406-b580-8e9c2183558b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786456bd-a266-48f5-a7b0-e85f0397c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfff8e6-dd01-4fd9-ba1d-ac045f193cd1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7583e126-9e8e-44f2-af61-7aec0dad841c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74a6aa5-6909-4cbb-9e2d-035c03287ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81017488-a2dd-4e58-a56f-cb44c7992476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc446c0-32aa-4561-b3c0-cee3b140baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e3b03b-2426-4264-9143-c4503e23d2ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c4fda0-2652-4a06-920f-d45a7d619afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e865ac5-05e5-4e8a-8a83-41694e633cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121aec4f-e734-464c-ad42-90146a323f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0743c2-4d11-449e-b242-e6895e342ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e78180a-4017-4012-a5bd-18c8982cf871",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df5514e-682d-49d4-9dff-496bd2e0cef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc08988a-1a6f-4ce5-b8d0-cb9e611af7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cc5142-990f-4978-a6b3-7f6d59e8d68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7cd014-34d4-4117-b51a-2dd97813cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0369171e-899f-49a5-9d79-dcde2bf32fc1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e9bc3a-e558-4753-b3d3-0f771b370e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b940767-c7a0-4e72-97eb-5f09cb56a457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2271b37f-43bc-496e-8860-df243d42694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2c73e2-e5c7-4c24-bd28-d9a4fb2b1c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae191c7-53a1-46d9-aaa8-9d50ed00ff21",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a80017-6f33-47a1-9681-ec123256ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be50810-314b-4079-9bbd-ff3f010c3eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae51150-f39f-481e-9fc3-877244c2f7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5b9cf8-47db-47bc-9c7e-95a765ed8a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5c1513-3031-4271-835b-8b8c6a349a37",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920c4a1d-794e-4224-b48d-9c864d8c9599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50db4cf1-5027-40ec-a0a8-e678187ca1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b391f-6d5a-40b8-b4b6-acb808c79d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ae9f1e-1db5-4ce0-8118-8f04e4b7338e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f189bc48-16e0-4c74-9c3e-2e02d97156f6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9b09a6-7b6f-4d9e-bbaf-d2e79aff03f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82617431-5d07-44e1-8636-97d66edc7fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51e481-3689-4c42-ba33-1f28b81bbe89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b24a702-15c9-4747-a912-df0e09e066c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f30909-6dfa-4f3d-99d4-36014a6bd9a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb020c8-ba85-4504-b4f2-76b168b37a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1a74c6-632a-49b6-9864-9f87ccd62b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f4cc1-1428-435b-99d0-624dbcd9573d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f1c854-9c29-4e70-ab7f-dc94f117fe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5b20aa-c542-4032-8145-9a14f20bda76",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7412ff57-904f-4bf6-98a2-a4e283736aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e94c91-21af-4f29-a23d-fb4600a27821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51d3a2-c72d-425c-bf8c-163b73703801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a42d1f3-052d-4d39-8459-4ad149dd9d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31d1d2e-11ea-40f3-bbee-29ad0804471d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e3be5-0d12-4b78-b05d-a7fa4a6bfd61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac252ee-3ebd-4440-8aaa-45feb77dabde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8c995f-f64f-49e6-a879-0bed5d0e2d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b61bce1-8cad-41ad-b868-2e55370f1238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df5c86b-1cef-47ec-b6a7-fee52b5eec4e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240eeab1-ea3f-4362-8ff0-1ed471504b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82abb093-951e-48b3-a6b1-052fe7376c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff22c5-b71f-4cab-a841-243ff14d506c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2a14f0-de70-4744-85c2-1b9519b25a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68976bc3-a4e8-4d30-b23b-7a7741276a21",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed767c-4d51-4af8-bb70-5143a3aa83fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88c75ec-2fb2-4d35-a3a7-0bfc64d9d633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fbf3e7-13d2-4fb5-91bc-7d6542a0db86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a92d00-646c-4ff6-8e82-bb5e6186bc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df25ac19-f981-485a-9bf7-9a0edf891676",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cbe760-cfaf-45f9-a801-9e8622af1a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d36e20c-ea0d-432b-90af-b7115de946ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639a9ea4-b815-4adb-acdb-6e5877d529c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d4ff80-f286-4204-ab42-e2db9f7ab24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb36c343-c56d-44e5-acac-edbbc36f49c4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd70c1be-b3af-4cc4-b9a0-e9d7eebae102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2aa6fe-cf52-4030-aa1d-acda02bba333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1097f67-0b9b-407b-a651-ea4a305ab6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462a1c6f-b294-4007-bcdc-bd5afb82f914"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de47e158-7831-4478-b481-34e5989e6fca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb451b19-03d9-42cd-afab-816b06952a61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3328af2a-4855-48b2-a64f-3c8807ee27e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbf0104e-5b00-4840-bf54-767e371a05c9"
                    }
                  }
                ]
              },
              {
                "id": "ca0fb68b-80fb-46d8-90a4-a024f7223562",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4096d2db-a541-40a0-8412-f942faabd37e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be31de20-56ad-44d9-b2d5-3a3308a94796",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3661a878-7714-4e95-8c34-395c8cbd92eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b3f9ed-3c17-403c-8dc8-0c2330074021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7e846a0-333c-4691-b5f1-8164dd6609bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f330136c-bae8-448d-817e-8400341421e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623e7f14-405c-44d6-a21b-8fa91abb1b35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bccdc7ff-5899-4a3b-b3fa-9313c703679a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f09c15b6-5810-4ec8-b751-f42531b055ed"
                    }
                  }
                ]
              },
              {
                "id": "4c542002-68c6-4fc9-8a58-dd6023e9f954",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "232dc5ae-1f21-412b-8476-1ad0e3dc4a15",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb3ef61-8a0c-4207-b1c6-f96d73b5092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "01ffe2e7-5c88-4310-a257-b87520876bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0077c3e3-55fe-4ae7-a727-a725347b2b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c024e253-20b9-4df6-acdf-8acd3a4131cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3279c8cd-4ce7-4a0f-afd2-a0be77ae2d01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38b09e6e-6eee-4fed-93ac-35d57eda6a04",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e0c5fb9-b176-47e8-85c5-cedf1631fc12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5dd87e0f-4393-4ec8-bfad-6adc4806e485"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b215ed38-a2b7-4e55-a31b-578bc0aeff0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b0a02a-4ea1-4b38-867c-99b240b6e57a"
                    }
                  }
                ]
              },
              {
                "id": "0ca77f70-dc3c-4350-9830-4b8922e4b74f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b2fd8d8-5c80-42bc-b981-170cb0bcbfaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "60a4346f-fcc2-478c-8454-4618dc6741a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ce9b10d-14cc-4cc4-a199-7e4f4cb1eaf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdf77900-b0fa-4acb-b998-a2e2a5b6c5c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1de1a28-1b63-48ce-9829-8502d3516be1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d052aae-0d60-41e1-a41f-e35ac2eaf6d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6245aa0-8214-41c9-890b-84afc218fc7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e1fcd7c-5ea7-48be-b54e-a79a8b064512"
            }
          }
        ]
      },
      {
        "id": "293f6587-7860-42c6-873c-797c2ac84dce",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d23e4b3c-bc51-4fa0-ab73-3c2e062e5c34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a29ee342-0688-4115-b174-501c796c3125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84e5d7df-f3a8-4516-9d90-072a87fdb225",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce3dca-d0e0-49e0-b2a4-3db6ba62692c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62bce272-6d3d-48f7-b819-93b7a36b22af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d226c3b-d636-41b0-9656-be0c8d0ba197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1f21fc2-c312-4e16-b98b-632a48118597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d4ade70-8b8c-495f-b1c3-b4c114e3ee3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bb859f3-ab4c-42dd-8e8d-1f4de6efc2c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e452cc-89e7-4c29-b95b-561cefe9ef17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "164205c9-0851-4337-938f-baf756b7de47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eacdfee6-4cfe-488f-a308-f006f37c0412",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dadbf49f-43cb-4164-8679-0ff3ef5e6a10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8593990f-fabd-479b-8245-61b3c9c99249",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74396693-e1dc-4710-8b2f-ca2ab139032a"
            }
          }
        ]
      },
      {
        "id": "e41cc1d3-5c1c-4ca4-800d-99127986b395",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7895fa1-3d57-4a78-b8db-3ce33ce3a0c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c198752-b65a-490b-830f-37b76a5874cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b746bd4c-1549-4998-b872-3a7d05052fbd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6614ef-2465-48ee-98a2-b3dedf5e838f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b859b22-0702-4b85-9eaf-8236b82c2dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e1b281-785f-40d3-b673-5c7276848ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5760fc93-c0a5-428b-a4bc-72045fff5bf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0250e49d-5377-44dd-8a40-95c5be3d1272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbf85d30-9698-492e-9cf4-eff59839ca2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6366757d-4f7d-4ee8-8412-d5960ba231bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b74ff9d5-ff7e-4d52-9099-2c2fad9a2257"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a525750-92ce-4fed-87e6-151a7236faa9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b22bc94-4cbe-408e-b03d-7bafa589ca1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "967257ee-4cac-4142-8b70-5c64aeb2ced5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "600f232b-5ef0-4fd3-a6e8-3cba6a0f8fbe"
            }
          }
        ]
      },
      {
        "id": "22633116-4580-427f-85c0-385857fda6bd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "05bf143c-891e-4ac0-ab2c-4d19aa5bc37a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf799b7c-dd4b-493d-89a0-e5c65c49fe2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0c8702f-876f-4c39-9feb-bc4f4ee0ff85",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d73ab16-1e33-46a3-ac96-c315a519f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf4120d1-9a95-4c5a-ab43-2523c1c63df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632aab1d-5859-43c3-8bbc-2e9f48ede2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a0afbf7-e986-4fb3-9324-2becc99febdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20673598-6d15-4b56-a7ea-9b6bfb3c23d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31493f54-f557-4d49-a898-b6cdaba5ad59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de76265c-8f1d-4248-b896-482fde4fa5ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3637f86e-93df-42ca-90ea-008b2971706b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7798137a-7f83-4635-8832-34893bcb1673",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0a96f95-712d-4ac6-afd8-f25f6ebfbfe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b90a0b30-ddf2-45ca-bd57-a9ba120f99f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f2ced40-a83a-4628-8001-15f422cf1076"
            }
          }
        ]
      },
      {
        "id": "9fede5d9-9c69-4742-8e26-a2a64d6ff17a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "328b2dc3-4798-4b59-8c5a-082a60ba67fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d37d4399-dcd8-4a12-afc4-4612cff6f060",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0d6274f-7499-46f0-a48c-8533b51342f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a83f6ddb-0af4-4af3-bbeb-173f5f0236bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eb7405e-c51b-4e36-a352-ce15a36facea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 619.4542253521129,
      "responseMin": 11,
      "responseMax": 6193,
      "responseSd": 724.7097291789665,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687394548124,
      "completed": 1687394736170
    },
    "executions": [
      {
        "id": "b1e8fa1e-0bfa-403f-a815-d0e7c5e5221b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "44d7a304-c0b9-450d-b66c-dfc24eeb1a44",
          "httpRequestId": "7b1dfd33-7965-4696-b661-9a9c3bf89a63"
        },
        "item": {
          "id": "b1e8fa1e-0bfa-403f-a815-d0e7c5e5221b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e6bb1a0-e858-4c47-9b6a-b0e6834baec6",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "f0f917c1-8039-4f69-a844-cb82fc3fbadd",
        "cursor": {
          "ref": "b0d62db0-62c5-4d8c-bb4f-2edb517eb29d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "38abea1d-0560-43d0-aab5-e4386dc9afa8"
        },
        "item": {
          "id": "f0f917c1-8039-4f69-a844-cb82fc3fbadd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2b868fe6-0059-4bbe-a26e-f2ad4d7a3d37",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "03b80fd6-00aa-4724-91e8-e5b088924a20",
        "cursor": {
          "ref": "c636845d-dbfd-47e4-a682-ba8e504b54f6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "674754ae-4b59-447b-976b-563fc6b2eae0"
        },
        "item": {
          "id": "03b80fd6-00aa-4724-91e8-e5b088924a20",
          "name": "did_json"
        },
        "response": {
          "id": "26f0c992-05c6-459e-920c-877b33debcd1",
          "status": "OK",
          "code": 200,
          "responseTime": 1134,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b2266-1bbc-40a6-aced-79a92f86949e",
        "cursor": {
          "ref": "c113f6b8-8946-4bcc-a8bf-96f8f5e1ed02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28bb8dd1-335d-4fdd-82fc-00d9532f641e"
        },
        "item": {
          "id": "0a5b2266-1bbc-40a6-aced-79a92f86949e",
          "name": "did:invalid"
        },
        "response": {
          "id": "90f6bd83-ea4d-4f4a-b844-46cc909aedf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b2266-1bbc-40a6-aced-79a92f86949e",
        "cursor": {
          "ref": "c113f6b8-8946-4bcc-a8bf-96f8f5e1ed02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28bb8dd1-335d-4fdd-82fc-00d9532f641e"
        },
        "item": {
          "id": "0a5b2266-1bbc-40a6-aced-79a92f86949e",
          "name": "did:invalid"
        },
        "response": {
          "id": "90f6bd83-ea4d-4f4a-b844-46cc909aedf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39328cc5-14a0-416e-9fe8-03f390bd76c3",
        "cursor": {
          "ref": "f3a9e0d5-40e3-4b0e-9626-d1f5586f936f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2c010435-f256-4f83-a35e-bd2bee0e9913"
        },
        "item": {
          "id": "39328cc5-14a0-416e-9fe8-03f390bd76c3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f6745c48-3996-49fa-905c-7dd3491f1145",
          "status": "Not Found",
          "code": 404,
          "responseTime": 667,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49bbef1-23fb-42bb-9f82-c1b5aeba2d9c",
        "cursor": {
          "ref": "4f2b2930-dcd5-49ee-8d17-6d651d8a238d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "35b4cf2b-ace8-4a2c-b248-3f1720fafc21"
        },
        "item": {
          "id": "b49bbef1-23fb-42bb-9f82-c1b5aeba2d9c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2e339eaa-0172-4d53-96f7-1b4b9e3988a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 727,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e47a7-687b-4b1f-b1c3-c2eb86f5b591",
        "cursor": {
          "ref": "882752ca-cae6-493f-ba73-e424f1b8f014",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "da23d900-451b-46c9-96d6-f26c33702f5f"
        },
        "item": {
          "id": "230e47a7-687b-4b1f-b1c3-c2eb86f5b591",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a0b0745b-bed5-4c9c-8bb8-6a7c08a9e866",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3504951-b06b-41f7-9f04-6b475a3ed5ff",
        "cursor": {
          "ref": "db72bcff-010e-4336-9ea0-e5b7a1c7237b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d39387c7-1ae0-40ba-97bb-0cf6ad543831"
        },
        "item": {
          "id": "b3504951-b06b-41f7-9f04-6b475a3ed5ff",
          "name": "identifiers"
        },
        "response": {
          "id": "0a0b9f99-0006-48cb-abb6-81d9446154e6",
          "status": "OK",
          "code": 200,
          "responseTime": 1278,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3412eeb3-f079-45b3-bd59-7487818c60bf",
        "cursor": {
          "ref": "bceb41a0-6969-4532-82bb-940c0ab69370",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "364b595c-d31e-4bc3-a218-319bf6fc8669"
        },
        "item": {
          "id": "3412eeb3-f079-45b3-bd59-7487818c60bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23646198-5153-4c1b-98e0-3382c40cce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7326342b-a267-4359-ac61-fe67c3e022df",
        "cursor": {
          "ref": "ad32ee9c-3f2a-4075-962b-3acc1239a486",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d56ddb6c-0b53-46b4-a1ae-f74c3152df87"
        },
        "item": {
          "id": "7326342b-a267-4359-ac61-fe67c3e022df",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7328974a-824d-49fd-84ea-2815c227d4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb5d34-23d0-4e40-acee-a747d710cec3",
        "cursor": {
          "ref": "5e5275ef-e559-4685-80ab-0736f740b4dd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "109091be-5560-4ab1-b0c0-22bedc7a207b"
        },
        "item": {
          "id": "02cb5d34-23d0-4e40-acee-a747d710cec3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f46a35d7-0462-43b4-b5b4-b9a77c8de8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7692f029-42da-4a5b-90d6-7fc907aa3a9f",
        "cursor": {
          "ref": "4847da45-a4bb-4254-822c-72feccd2e806",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65ebd7af-604f-40c9-8082-9bebbf4ed8b8"
        },
        "item": {
          "id": "7692f029-42da-4a5b-90d6-7fc907aa3a9f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9bd9abab-806d-4cdc-b3f5-5858fd9b0f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de9db3a-203a-4bdd-b7c9-8cd6fd3f141c",
        "cursor": {
          "ref": "5a15c82d-25de-4314-a3d2-03376be7211b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51f33d89-ac48-407e-9cc0-1eb9ff8d3d98"
        },
        "item": {
          "id": "6de9db3a-203a-4bdd-b7c9-8cd6fd3f141c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3145e5e9-e8d3-477f-a983-68fe9de0e88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1897289f-6724-4523-bc3e-29e6f4b2dc13",
        "cursor": {
          "ref": "ff7606cb-a234-4dbf-bb4d-d180b411b944",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9fe1587-0625-4c94-8461-5d0400724dbb"
        },
        "item": {
          "id": "1897289f-6724-4523-bc3e-29e6f4b2dc13",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "21c8e437-2c6e-4bf8-b26a-a0ec50d226fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fe4dfb-8ba2-4087-9b8a-d5682b460fd1",
        "cursor": {
          "ref": "d5855799-ee76-40b7-a1e4-7d0b53665b12",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1c1c24f3-d2c0-49d3-bca5-1921bfcec5c3"
        },
        "item": {
          "id": "77fe4dfb-8ba2-4087-9b8a-d5682b460fd1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "17097561-5b56-4188-baff-296bdb202481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af12d16e-3393-49b6-9631-aa6cd25b0ae8",
        "cursor": {
          "ref": "ca7cf3af-1e93-4f19-8c50-3487c1453816",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "512914aa-9808-474d-8ec4-937d13e0f50f"
        },
        "item": {
          "id": "af12d16e-3393-49b6-9631-aa6cd25b0ae8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cc6b39a5-4c9c-41b1-998d-42566bcd7fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43a27b2-929e-46ee-bf3b-19cf6ce52ae4",
        "cursor": {
          "ref": "4c0001ad-0d72-44e0-9183-d9e400268f33",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b5f88f93-fde2-411a-921f-313a5ff51d76"
        },
        "item": {
          "id": "e43a27b2-929e-46ee-bf3b-19cf6ce52ae4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "14ee47fa-456b-4d03-aa6d-65e6216f59aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c7ec21-65b1-48d3-9267-ea036f45ed3c",
        "cursor": {
          "ref": "6be7d4e6-f998-4c40-ad69-a5d2fa78c140",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20ccf502-b67f-44a6-8cde-29609e3e432b"
        },
        "item": {
          "id": "92c7ec21-65b1-48d3-9267-ea036f45ed3c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c97b499e-d6ea-4f85-b1b9-8f090f660842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85230329-dc0e-4d6b-9982-45399740909c",
        "cursor": {
          "ref": "b68538e2-609a-48a0-a1e3-9d96cbf49c10",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bc2c8aa-96ec-4d5d-80d1-ee39c0cf091e"
        },
        "item": {
          "id": "85230329-dc0e-4d6b-9982-45399740909c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "df233529-104a-44d3-816d-cd7b0aa9951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86820e17-18d4-406f-b9db-1e87b2e24d47",
        "cursor": {
          "ref": "89abcb57-70fc-428f-af95-ca43f4b780a5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0bcc66ad-2817-4fb9-85bc-43605975ca88"
        },
        "item": {
          "id": "86820e17-18d4-406f-b9db-1e87b2e24d47",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16589e2e-0be5-41f3-93f3-a245d95a69ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb09e274-7bf8-4f55-8270-5c7817085b73",
        "cursor": {
          "ref": "a2e3d9a6-c735-421f-bc21-dd587952c9a7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4c50bd3-eabb-42a3-8090-54d8b320af37"
        },
        "item": {
          "id": "bb09e274-7bf8-4f55-8270-5c7817085b73",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68e51eaf-ad88-4339-a6cd-f1d7b01909f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d524f65-783a-40e5-b6bb-ff23bb8126d7",
        "cursor": {
          "ref": "6dab44a0-5c2a-489d-8697-578dde0896fd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dafd1d53-5c1e-4a77-945b-7e6d0dcb4e04"
        },
        "item": {
          "id": "8d524f65-783a-40e5-b6bb-ff23bb8126d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8c3e4c91-4eea-4bc7-be88-5dd75ef45926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fb140a-b459-4f7e-aa41-8714ce2f96c8",
        "cursor": {
          "ref": "bd7fcc0c-0599-4bc6-bfe9-b72ef8a4aa4e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a7f5daf5-5dcb-439b-81e3-c086d5c2d3b3"
        },
        "item": {
          "id": "11fb140a-b459-4f7e-aa41-8714ce2f96c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "854d8693-1805-463a-8e36-630677e54b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ff20fc-2433-425e-ab9b-f6182ae8b514",
        "cursor": {
          "ref": "27079d8f-fe90-4ee7-b9ab-ed5335267f91",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f8d18915-8197-4bdb-97da-97d89c6b2560"
        },
        "item": {
          "id": "64ff20fc-2433-425e-ab9b-f6182ae8b514",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "91b36597-5a40-4ab0-a6af-7441bf0bc018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483d93c1-207d-449d-ace6-ceedb9258389",
        "cursor": {
          "ref": "f3303184-4de5-4eee-acdf-065b346a70b8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "983bfbf3-f383-42f4-a094-8ecd5c4345f7"
        },
        "item": {
          "id": "483d93c1-207d-449d-ace6-ceedb9258389",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3d377729-380a-4814-bdaa-5adee0685dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd0139b-0e90-4af8-8363-eb939ae380d1",
        "cursor": {
          "ref": "ff1df58c-ad1f-4b62-acc2-2e0130b52a35",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f5c3928-d0fc-47d1-bfdf-c945af750e4f"
        },
        "item": {
          "id": "ddd0139b-0e90-4af8-8363-eb939ae380d1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e5c2fc96-610f-41e0-91df-215148de3e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b05759-1473-4a7c-afe1-952eb789f25d",
        "cursor": {
          "ref": "e993f9a4-c5d8-47d9-844c-ae0cb6cd5b6f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "37bd56ea-62a6-459b-ac0b-43f631ece27c"
        },
        "item": {
          "id": "29b05759-1473-4a7c-afe1-952eb789f25d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5375249d-497b-4741-9bfd-fc2390e0f6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9509f7e-2e4f-4f6d-9a59-e7d4fd3cfea4",
        "cursor": {
          "ref": "b45bdf5a-f1d3-4cd4-ae5a-a99ebd7ee5cd",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5b304fa3-7124-4ed8-8618-11adb7ff16a4"
        },
        "item": {
          "id": "e9509f7e-2e4f-4f6d-9a59-e7d4fd3cfea4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "83674cda-1b67-449a-9db1-8fc74fcb618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9979c-5169-4633-8aa9-6746b6211cab",
        "cursor": {
          "ref": "0c894041-3747-498e-86a2-e427af3e0e1c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b0a748a3-f386-4373-b2fe-3c5b1ac694c1"
        },
        "item": {
          "id": "ecb9979c-5169-4633-8aa9-6746b6211cab",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1fbff06-3dab-4fc9-9cb8-c8d44dc91ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b399e494-d3a9-4224-b92a-98db69f13581",
        "cursor": {
          "ref": "6c3ac5a6-4e47-4086-857d-a5fb4f38635f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e325d49a-905e-4c3a-b60d-74996fb2dbf6"
        },
        "item": {
          "id": "b399e494-d3a9-4224-b92a-98db69f13581",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b2f0045a-6f78-45d8-88bd-24f8bad8d132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ec5a4-e1ca-4934-bf38-79651f29daec",
        "cursor": {
          "ref": "aca55a01-10d3-4233-a9fc-03d4bdda4cca",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e3a581d-5d34-4abf-a262-e9a35658e76d"
        },
        "item": {
          "id": "118ec5a4-e1ca-4934-bf38-79651f29daec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c83ae0c-87cd-40d4-8ad8-3655fee17cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7251b8-8716-4a35-bdcb-b230c654e4aa",
        "cursor": {
          "ref": "56dcd126-bd91-42ac-b433-0908782f6d13",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ef4fe190-e545-4c0f-8e01-c73894b51d80"
        },
        "item": {
          "id": "5a7251b8-8716-4a35-bdcb-b230c654e4aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "021ae485-6f1c-4433-b96c-1e8f9571f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a0ca1-37f8-447d-8c51-3baf1dd2ce95",
        "cursor": {
          "ref": "c18cb349-65e0-4b0b-ab37-d72fa3c15ad3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e0605b8-25f8-4e48-ba9f-3168e869e4ce"
        },
        "item": {
          "id": "dc7a0ca1-37f8-447d-8c51-3baf1dd2ce95",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "afe91d62-d0c6-4399-8ad8-feb9bf5ad152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a12440-d085-4e9f-9df4-2a2ee9c86fad",
        "cursor": {
          "ref": "edbe2c27-8c33-4f43-a2d6-0af5b48f869c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "abda9b2d-b093-4e0e-b799-b7876b7ed728"
        },
        "item": {
          "id": "97a12440-d085-4e9f-9df4-2a2ee9c86fad",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6e6d7aac-a04a-4643-981c-71235f067f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff16a0-23c2-430f-b843-b16b1c45f1fa",
        "cursor": {
          "ref": "faee5d9e-9bf4-465c-838e-c0ab01a52bc6",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4ee13374-d241-45cb-9142-94e69c4cae01"
        },
        "item": {
          "id": "05ff16a0-23c2-430f-b843-b16b1c45f1fa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "239394a1-f1e5-472b-98b8-12f2f260a96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2608ceab-a8a5-4c08-b486-0a578e7dee01",
        "cursor": {
          "ref": "053b872b-61d9-44d6-92dd-a4f9eeff2637",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "489b6f43-103e-4af7-a57e-18b21c06bfe2"
        },
        "item": {
          "id": "2608ceab-a8a5-4c08-b486-0a578e7dee01",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d37cd917-75d0-4cc1-942c-35e91540f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d11f5f6-b1a9-405d-94b7-fa95d088d97b",
        "cursor": {
          "ref": "2e8f2486-fcc8-400f-8cee-9edb4a7c5493",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2238f6dc-f2e0-4453-8040-1ba50daa8463"
        },
        "item": {
          "id": "3d11f5f6-b1a9-405d-94b7-fa95d088d97b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "48269b83-55b7-4fd4-9f69-7df72fce2eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b78cb4-9901-4993-b59f-e35ca8ec8c42",
        "cursor": {
          "ref": "9c5eb712-79cd-4ef7-8685-72d542b1a4b8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "05e52399-a260-419c-9455-78892de3e54f"
        },
        "item": {
          "id": "f9b78cb4-9901-4993-b59f-e35ca8ec8c42",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4a27b9b3-c9b8-40e5-95a7-57e8d2a2bb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad086ff-71f6-4efc-a9d9-fed4508e8c2c",
        "cursor": {
          "ref": "7251357d-c205-4b60-ba01-84a52589c451",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b6f9eda-a284-4df2-b47d-37fe13228811"
        },
        "item": {
          "id": "bad086ff-71f6-4efc-a9d9-fed4508e8c2c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a539094f-3b51-41cf-ad03-f7e6484ead90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0621b6-fe81-42d8-baa1-5d58b0d827f3",
        "cursor": {
          "ref": "6a2b7676-0456-436d-83ae-1df84ef7d6a6",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "32208d8e-8087-499e-b50e-971896525042"
        },
        "item": {
          "id": "ac0621b6-fe81-42d8-baa1-5d58b0d827f3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3aa72b27-fdb0-42d3-a7b8-a53534ea0a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c8000b-55af-457c-b0b2-45a3d15ed487",
        "cursor": {
          "ref": "3d7f1d8b-df91-4336-a3be-66e2179eedf0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "afa20276-3233-4511-9d64-1d9f631e7137"
        },
        "item": {
          "id": "c3c8000b-55af-457c-b0b2-45a3d15ed487",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "52d716b9-39a8-4496-bc16-0c53d16127ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5328ed24-6527-49ca-b93c-ab32277e0531",
        "cursor": {
          "ref": "29b3534e-235e-49fa-a0f8-cf42443a1b34",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "afcf893a-d7a4-4a62-8d5f-80c15d0d777f"
        },
        "item": {
          "id": "5328ed24-6527-49ca-b93c-ab32277e0531",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8b25cd38-4b7a-46eb-993e-7096ee92c0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1132d1c9-4be4-4ffb-ab53-43e947ce3c2c",
        "cursor": {
          "ref": "46a6726f-59e5-4537-9528-48ec4a93706a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ee5fa4d6-b03b-474f-84ca-339be457d93b"
        },
        "item": {
          "id": "1132d1c9-4be4-4ffb-ab53-43e947ce3c2c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bed65051-cebb-4d3d-a7c7-cb8840abc525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57459dc4-5316-46dd-b9a2-94ef743f59d2",
        "cursor": {
          "ref": "8614bf0c-ddf8-40fe-8576-61e0d8658f27",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ae66bd4-ecf0-4c3c-ad23-84e1097b9a47"
        },
        "item": {
          "id": "57459dc4-5316-46dd-b9a2-94ef743f59d2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3ad91b36-101b-433d-8429-9eb788e75abd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 735,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787a043e-1324-4336-99f4-85ba96153128",
        "cursor": {
          "ref": "323d0439-d1de-4dcc-b9d2-3c90222e0506",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "018da046-93dc-4c95-a0f9-4eee75253055"
        },
        "item": {
          "id": "787a043e-1324-4336-99f4-85ba96153128",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4ce43568-905c-4d48-bc2f-e60bf0ab131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be0f100-2107-43c2-9562-30702d61682c",
        "cursor": {
          "ref": "e09a5906-ab2c-4eeb-bd18-c64d7fc755ad",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69b1d07d-cf5b-4a48-833e-ba870a60c7b5"
        },
        "item": {
          "id": "1be0f100-2107-43c2-9562-30702d61682c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f225dde-7ac2-455f-bb52-bbba4b2aef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc49bb-9141-4ab6-8a0b-cb5736f72bc2",
        "cursor": {
          "ref": "8743a8f8-2cbd-4065-9318-9e8a2abf1da2",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2446fdde-2f33-43ce-b7a3-ae06fbd011ef"
        },
        "item": {
          "id": "92cc49bb-9141-4ab6-8a0b-cb5736f72bc2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8e986f0f-e32f-4b30-87f0-2aed65b41702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911d2c0f-ff1f-47fa-94fc-89d25707a848",
        "cursor": {
          "ref": "d1159d35-b897-42c1-a403-d5d16ff7f4f9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "524b77a4-74ac-43b3-b65b-5f4a4803f794"
        },
        "item": {
          "id": "911d2c0f-ff1f-47fa-94fc-89d25707a848",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e166a6bb-7767-49a8-9dcb-4bfca723c6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cce4d7-56a0-40d8-b0d1-59a225d0ca2e",
        "cursor": {
          "ref": "3d14cedb-98a9-465e-81cb-bcfba2c2e8ea",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d6d908c5-4995-435d-bae9-c1b52b9af667"
        },
        "item": {
          "id": "08cce4d7-56a0-40d8-b0d1-59a225d0ca2e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c6191673-be3e-4d6f-aa6d-bbe9667e8393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f828fee3-dd99-4197-982e-934d1a19f3ed",
        "cursor": {
          "ref": "7b1eef90-04e5-4f4b-93e1-0f5d4c7a7dd5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02d31dae-be62-44cb-a2f4-493a896e299c"
        },
        "item": {
          "id": "f828fee3-dd99-4197-982e-934d1a19f3ed",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f56f3a7-ca22-4fc8-97d0-291f5788b6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c261c49-751a-47c3-9115-71fb7e4f22e8",
        "cursor": {
          "ref": "4dbf79ec-4d4c-4bcb-abd9-35a119d56668",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0dce81c4-e63c-4cfb-9ab0-10efcccd6ea4"
        },
        "item": {
          "id": "1c261c49-751a-47c3-9115-71fb7e4f22e8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "79398c75-7c97-4e67-8e8c-c8f6b53a6a77",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 745,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0789245a-dd98-4e41-891a-7c66ae5f5067",
        "cursor": {
          "ref": "d2002c83-8826-4d33-a252-32845294224c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "efbbf791-fec8-4dc2-ac5b-1efe3ca47090"
        },
        "item": {
          "id": "0789245a-dd98-4e41-891a-7c66ae5f5067",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0082d279-e2af-46ba-bb32-4f77fdd55b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e709e3d5-edf0-4834-9d09-81825d5ae465",
        "cursor": {
          "ref": "5a43d474-9044-4bac-bef0-028430f67b54",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f7b8e81c-946c-4930-a328-4becfbb738c6"
        },
        "item": {
          "id": "e709e3d5-edf0-4834-9d09-81825d5ae465",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3b4a9a4d-7e81-4a7e-a38d-d22285ee854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380c5e20-c88b-4459-8515-d5edf3f2ebd0",
        "cursor": {
          "ref": "8a461854-1ae9-4b36-817b-5a58b76f1299",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8508a8b6-8b94-493d-9f60-a4f0d70736eb"
        },
        "item": {
          "id": "380c5e20-c88b-4459-8515-d5edf3f2ebd0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "45f75fd7-6ec7-400a-b839-776df4c2b636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4101ba1b-7f34-4ee5-afd2-e03a21a90d0e",
        "cursor": {
          "ref": "7431c715-4f68-4c33-b112-2117464348ed",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39ff8cf6-7d90-43ad-bb62-d65e8b99769e"
        },
        "item": {
          "id": "4101ba1b-7f34-4ee5-afd2-e03a21a90d0e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b206e752-e50c-41c1-ba65-c8e0efed7a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfef9a9-e03e-4268-aaf9-37a8bbde5ae7",
        "cursor": {
          "ref": "0e721031-c759-40db-8fd4-52cb0e3c98f6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4c820c5c-2410-4116-add4-16ec7c35cd1a"
        },
        "item": {
          "id": "7dfef9a9-e03e-4268-aaf9-37a8bbde5ae7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6001f801-e1da-48e0-bfa3-fbc1b1743068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60973afe-1069-40ca-8916-2f19a77d57ea",
        "cursor": {
          "ref": "adc685c9-bc94-4bf1-8282-7d269e38fd76",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "52e429c1-bc9c-4b13-b0d5-b1699c317bef"
        },
        "item": {
          "id": "60973afe-1069-40ca-8916-2f19a77d57ea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6dd10a6f-d2ac-4fa1-b306-a5c8f5f76a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a47ff21-0f2e-444e-ab82-53de2d01bc7b",
        "cursor": {
          "ref": "818cc378-5d7d-4661-a316-e3c222d7d123",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "306aa7c3-7fa4-493c-9c17-4481af4d8727"
        },
        "item": {
          "id": "7a47ff21-0f2e-444e-ab82-53de2d01bc7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b3c99ddd-63f2-4cd2-92df-b1413bfc6f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ede0046-f6b4-4872-82f2-4407d9cdeab4",
        "cursor": {
          "ref": "d040d189-e29c-48be-8a70-e0049d60d4e8",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "909ccbdb-7529-4781-a009-01130c28fdcc"
        },
        "item": {
          "id": "2ede0046-f6b4-4872-82f2-4407d9cdeab4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3f335428-7d56-4fd0-88cc-994f617a6c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab961d09-cf80-4274-b1bb-5a6acdc3d62e",
        "cursor": {
          "ref": "c1badf6d-0fe8-4592-a14d-33904d5ab50e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "89c20024-7a42-48d5-a269-4af71cd2d928"
        },
        "item": {
          "id": "ab961d09-cf80-4274-b1bb-5a6acdc3d62e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6b3b1cb1-fb0f-4043-a337-f840e9221198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf6ca5a-7180-49be-bfa4-2620dbe9bf9b",
        "cursor": {
          "ref": "b85f42e2-e6ab-48a7-8c29-ffd1fcb3d284",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aee51fa2-a4c5-49c7-b13d-246242624b91"
        },
        "item": {
          "id": "5bf6ca5a-7180-49be-bfa4-2620dbe9bf9b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6e746277-3a17-4410-bfce-b898324b654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836cb8d1-2ff6-48ee-b311-47c8b764bc00",
        "cursor": {
          "ref": "69c376a5-5cca-4e7a-81ae-0cdea7cb1298",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "87dabc49-f169-472f-91b2-eed464792fd4"
        },
        "item": {
          "id": "836cb8d1-2ff6-48ee-b311-47c8b764bc00",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "94b92363-f0b5-4f4a-a58e-ec8ae4eca2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3282655a-d98a-49c5-8ea1-96c647ca38a8",
        "cursor": {
          "ref": "374c6899-94f9-4b9b-acda-a749e0499afd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "172128f5-766b-4670-82df-ddba975441bf"
        },
        "item": {
          "id": "3282655a-d98a-49c5-8ea1-96c647ca38a8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c8b5ce24-4c39-4eca-9d1e-0fc07f02ec84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ed7fb-2805-4cfd-b7c6-d7f499cea990",
        "cursor": {
          "ref": "6afdfd65-24e0-4a41-93ec-89851f83e58a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f90cf8a-7c33-4a2c-b1a2-4c87f87b5a7b"
        },
        "item": {
          "id": "d14ed7fb-2805-4cfd-b7c6-d7f499cea990",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "30a6dbb2-ff7a-4244-ae38-bba7b6cc040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aac75cb-ac56-450b-af72-9dc982d712be",
        "cursor": {
          "ref": "c979feeb-fd2a-42ce-ac85-5c083c62bd1d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b84c4ed5-1ee8-483f-ae1b-19cd91671a50"
        },
        "item": {
          "id": "5aac75cb-ac56-450b-af72-9dc982d712be",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aab38518-373e-40d8-8678-2ff1ac1f1cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8e552-fb10-441a-8365-63becad8d743",
        "cursor": {
          "ref": "f7927ed4-90a3-4494-b222-75c421f56b62",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05d364b3-ba3f-4a17-8dfe-d0361b8fb177"
        },
        "item": {
          "id": "b9c8e552-fb10-441a-8365-63becad8d743",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "93bd6374-8d01-41a7-8eff-069423dc6554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b840848-b6d6-43e7-9e8c-4f8d7f956b7f",
        "cursor": {
          "ref": "e3617a67-14c3-45d3-aad3-0fb7b3e26f85",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f23a443b-3c43-4525-8ee6-8ebdd96b69c3"
        },
        "item": {
          "id": "2b840848-b6d6-43e7-9e8c-4f8d7f956b7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79bfd8a4-b077-478b-b7b9-46829da11310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e987c-d8ee-4393-b58b-2a57e30e3938",
        "cursor": {
          "ref": "ff9d46be-3fd8-4329-a421-fcbfd4631f06",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e587fb6-da1c-4732-8b30-63e4ed882f79"
        },
        "item": {
          "id": "650e987c-d8ee-4393-b58b-2a57e30e3938",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "52630345-1a13-433f-b623-f2384935fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c03953-36f8-4d0f-a1ca-4c79f7b2903b",
        "cursor": {
          "ref": "8755242a-451c-4ccb-ac58-abf64895f164",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c0556ab4-2702-4709-be56-58cdd5380619"
        },
        "item": {
          "id": "53c03953-36f8-4d0f-a1ca-4c79f7b2903b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "972b9e31-14b8-426d-882f-e2ef8af36682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f6244-8256-48b5-a59a-0228cb4f6955",
        "cursor": {
          "ref": "d9c6e812-1edc-4ff7-a296-67bcd5fba57b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3a972c3f-5a27-4ab7-87fb-6897d2043b34"
        },
        "item": {
          "id": "972f6244-8256-48b5-a59a-0228cb4f6955",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f790d180-bc82-4bcc-a522-1915bbf9e229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9446470f-99c6-46b5-b05f-0ab21a911f28",
        "cursor": {
          "ref": "06fa3152-1558-4115-860b-e9a8c4d5fbae",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ceb4b09f-77f7-4a0a-a124-f20e7e65458f"
        },
        "item": {
          "id": "9446470f-99c6-46b5-b05f-0ab21a911f28",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3e723e4c-a809-4711-85ed-c6ad4d44bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274ad892-41fc-434e-9186-e07bc0a11c0b",
        "cursor": {
          "ref": "79018100-278e-4390-9d30-5e3b09dd2e76",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f18c69ad-f4c2-4ccb-b236-df2ceda3e812"
        },
        "item": {
          "id": "274ad892-41fc-434e-9186-e07bc0a11c0b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7be7e46d-2713-4530-8902-ea6de4de3c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be95468-23b8-4c2e-9ff1-dea7f8fe6cba",
        "cursor": {
          "ref": "2927205b-4cdf-47f4-8340-4bfccf8198d9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a54d9de7-bfd7-4d4f-b4ee-92666bf65552"
        },
        "item": {
          "id": "6be95468-23b8-4c2e-9ff1-dea7f8fe6cba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3e17e544-57f2-48d1-885b-01c2b622f207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95285d-e0bf-4ddf-97a6-da18faa525d4",
        "cursor": {
          "ref": "4f285bc4-1e14-49b8-95c7-fea4904cb416",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1d7bfe0e-e76c-4ad8-abdc-1668a1077716"
        },
        "item": {
          "id": "3a95285d-e0bf-4ddf-97a6-da18faa525d4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c66893a7-0567-4fa5-804e-69bc35e96f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7b98bc-0f9f-40a8-b389-203988af92d1",
        "cursor": {
          "ref": "f929089e-b3cf-4101-8c01-1396dfd043a3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dc85e889-dfe9-4f75-b3ee-7696a2824bde"
        },
        "item": {
          "id": "df7b98bc-0f9f-40a8-b389-203988af92d1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c28c33dd-5e8d-45d5-adb0-9ca557831d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6d15cd-5d04-4b5c-96c5-bb3dcbff71a9",
        "cursor": {
          "ref": "0b31132c-ae90-45e2-97c3-d55b5119ae43",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7ed3a616-f211-4c7d-845b-32aa4d829aac"
        },
        "item": {
          "id": "2c6d15cd-5d04-4b5c-96c5-bb3dcbff71a9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "628f4930-276f-4631-a489-654266ca511a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c445b5-8161-416c-b6fd-e71548f5aac1",
        "cursor": {
          "ref": "072c6248-5bad-4edf-8511-789b7f4a2f11",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "37f4a50f-abf4-4ded-b573-6238e0dfa8f3"
        },
        "item": {
          "id": "15c445b5-8161-416c-b6fd-e71548f5aac1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "49bb1e7d-2e1c-4023-84ab-01f6c7085530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3287705-ac75-4272-818d-18d4afd67901",
        "cursor": {
          "ref": "51b05930-478c-462e-9f05-1a244063a540",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1767d0aa-8af7-41c1-8905-dffb71a145da"
        },
        "item": {
          "id": "d3287705-ac75-4272-818d-18d4afd67901",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "20b5357e-8d04-470d-94b3-8709a183546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a86c4b-3581-431b-8bfb-f106c4053906",
        "cursor": {
          "ref": "7ffe3c15-fb29-499d-89fb-83731742bfff",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c59449b3-6b0b-4772-a566-ba661f38c812"
        },
        "item": {
          "id": "13a86c4b-3581-431b-8bfb-f106c4053906",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3926e1dd-b260-4bdb-86c1-c2678935a8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edfe5c5-9bc5-404b-97e6-97a13483e607",
        "cursor": {
          "ref": "9a1b2b88-3a68-4854-b11f-67879d70d57a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14b624aa-2a0f-4ba5-9ed2-b79fee00efa7"
        },
        "item": {
          "id": "3edfe5c5-9bc5-404b-97e6-97a13483e607",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c821db27-dcb9-4386-b571-074266d33380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e2ea7-5eea-4289-8ed2-caf1dea682ed",
        "cursor": {
          "ref": "a33db0cb-0b26-4437-bb7d-fe12e9878b37",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "252f7fa7-95be-496c-9b5d-a31a66c5700f"
        },
        "item": {
          "id": "7f5e2ea7-5eea-4289-8ed2-caf1dea682ed",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9e48c523-49d3-4740-99bf-efc77bc7ca61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3a0064-7ad0-4d1c-a02c-ab4224ac9001",
        "cursor": {
          "ref": "ac5caf17-b55b-439a-99de-9caebeb099fc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3742fab9-530a-4115-aeb0-6c05efe50d62"
        },
        "item": {
          "id": "7d3a0064-7ad0-4d1c-a02c-ab4224ac9001",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b2e36d95-8c0c-4f2a-8a19-7cc35215ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bc9996-79b8-4bf7-be13-308fdaae9b26",
        "cursor": {
          "ref": "ea7b3c31-7df0-48e3-9c06-85c7836d8351",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "239415e0-2961-4b6d-abe2-764c52651eb5"
        },
        "item": {
          "id": "18bc9996-79b8-4bf7-be13-308fdaae9b26",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e3568a40-c9c2-4891-9e75-2251b726c51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55eda55-412a-416a-a91f-0181a5adb196",
        "cursor": {
          "ref": "3a6de1e3-7c63-4f18-bb84-03eec7876b5d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "907c4b64-dc85-4acb-9145-3512cf5c3b01"
        },
        "item": {
          "id": "b55eda55-412a-416a-a91f-0181a5adb196",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d8a72c7-8bf1-49e2-b2e9-83b8fc104593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e69f2b-87a6-4ad2-b090-665ed49dae76",
        "cursor": {
          "ref": "7493668b-7322-4605-8d4e-08609e11b112",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "05760195-ceb1-44f7-bdee-640cd59dc532"
        },
        "item": {
          "id": "e2e69f2b-87a6-4ad2-b090-665ed49dae76",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "499be806-1c98-4c24-bf48-0c205a6ef4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0068d-a917-4ac8-b1a6-6108d640b118",
        "cursor": {
          "ref": "7dadcdb8-d5a4-4822-a066-1a59048f69ea",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "44f481d6-8260-4326-8bfc-66242a4365a9"
        },
        "item": {
          "id": "85f0068d-a917-4ac8-b1a6-6108d640b118",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b33de3b1-d282-4257-ab85-f38ac334fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac63e4f-3f44-449c-b606-e2079bcc0dea",
        "cursor": {
          "ref": "7605dc9c-0f68-44d1-a590-aa99339a5fb0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "664aa3a2-2bfd-4ae6-b7ae-d63788b6351a"
        },
        "item": {
          "id": "bac63e4f-3f44-449c-b606-e2079bcc0dea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eba501b2-d184-4833-ae13-0d01c7cc2910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed38953-752e-46b1-a8bf-25896435af6e",
        "cursor": {
          "ref": "3a5f1f0f-9895-430f-9cab-cb41b19e03a1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "33b3d300-5d0f-41da-b056-b2f90e279fbe"
        },
        "item": {
          "id": "1ed38953-752e-46b1-a8bf-25896435af6e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fa6738f0-db58-4669-bbc1-0731716628e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e571c050-8226-4bc6-9987-e561ce1d432a",
        "cursor": {
          "ref": "873fda10-34cf-4e2c-be2f-4f1697c43215",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4109ac09-6270-48be-a456-cc3af5f135de"
        },
        "item": {
          "id": "e571c050-8226-4bc6-9987-e561ce1d432a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0668cb44-db76-406b-9e5b-ce4a1833ada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2187e12-e66d-4c59-84f0-facae29d8ce0",
        "cursor": {
          "ref": "e398c4c5-b3ba-4cba-a8ae-d033e39235a7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2860724c-f598-470f-ab53-e3f05c3ef606"
        },
        "item": {
          "id": "d2187e12-e66d-4c59-84f0-facae29d8ce0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0c01e9c-a523-442e-b0b7-bc2dec43846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869e85fb-3235-404d-ac89-71f496492379",
        "cursor": {
          "ref": "5283936a-b1b9-4d84-8fa0-7fe294c5b556",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "44131cc8-873a-48a9-9ba4-d11b56802702"
        },
        "item": {
          "id": "869e85fb-3235-404d-ac89-71f496492379",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ba79c69e-357f-4800-9dd0-15771e4a997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d3ea5-f203-4a7c-89ec-85e357567453",
        "cursor": {
          "ref": "b8fc087f-9784-47cb-8b98-72e868a2d639",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d7d4e4bf-bd0a-4de6-aff4-c01a96384fd0"
        },
        "item": {
          "id": "1e9d3ea5-f203-4a7c-89ec-85e357567453",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "749cb1a0-a5cd-446b-b673-f3a32d930c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbdc93e-5656-4444-8b19-bd6dec61aae3",
        "cursor": {
          "ref": "188ac890-ab25-4b08-978d-801086f69965",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "130bc3d0-9182-42f5-a683-3e103e55a154"
        },
        "item": {
          "id": "5dbdc93e-5656-4444-8b19-bd6dec61aae3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "18b633c6-5207-4b0b-9ac7-fe32446b3179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1797bb0b-d4c3-426f-b0bf-c969eeb58292",
        "cursor": {
          "ref": "70b0a505-a51e-4f67-8313-1aea5e3ccf00",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43fb38b6-302c-4921-a4a3-b25110e081cb"
        },
        "item": {
          "id": "1797bb0b-d4c3-426f-b0bf-c969eeb58292",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d0289410-c897-4c46-b082-56a26f2a0b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5994fde-843d-44db-8114-1d30399839f0",
        "cursor": {
          "ref": "aa40f83e-61f9-4441-b74f-eb289824aca0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "45f3b66a-c094-4aa4-8a98-9e83d76965a9"
        },
        "item": {
          "id": "b5994fde-843d-44db-8114-1d30399839f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6373fc8a-f5c7-4495-b75b-43d141cc2262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4c3e8-22a5-463d-8fd8-ab58929e33a0",
        "cursor": {
          "ref": "83ec9bda-19e9-43c9-9a80-ebd0daf2b87f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1bdd0f51-879a-4932-aab1-9ec06e5e72fc"
        },
        "item": {
          "id": "b0f4c3e8-22a5-463d-8fd8-ab58929e33a0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0deffd16-5d43-4fa6-a480-8f7cc43f7ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148943f-e933-4229-bd3f-a3d3633ca1e4",
        "cursor": {
          "ref": "26ebf4f2-7ca2-4f23-b775-ca2dca63bbad",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65d45a5b-7608-49d6-afe5-92f245849f66"
        },
        "item": {
          "id": "4148943f-e933-4229-bd3f-a3d3633ca1e4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "384617e2-9b23-47d3-8644-e31010feda32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5a934-2df4-45d0-a771-4a2b58ddfd5d",
        "cursor": {
          "ref": "bc766d78-1c55-4496-9c0f-6bf7305df3e6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a3271b5-5120-4c3d-8959-b96352f2ef65"
        },
        "item": {
          "id": "d5d5a934-2df4-45d0-a771-4a2b58ddfd5d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7d96eb28-8aa3-4e0f-a75d-fcb6e3f8c664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb08e12f-d198-4f50-b25a-124775954ced",
        "cursor": {
          "ref": "ea07b0e4-5282-4f0a-b9d1-f564b9e686e9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4173e109-4f9c-4ac4-9d63-8603dc46af58"
        },
        "item": {
          "id": "bb08e12f-d198-4f50-b25a-124775954ced",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4b1a4b06-cbc6-400a-b72f-93a94569e08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395a7f35-9965-48fa-8ff1-bbede2397304",
        "cursor": {
          "ref": "5cc56626-3e1b-46de-9079-9236129cc41e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bdeec47d-e9c7-4428-ba3a-219b8c4f6504"
        },
        "item": {
          "id": "395a7f35-9965-48fa-8ff1-bbede2397304",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c39f93a0-6778-49c4-9f1a-9511aec2db3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b25977-e706-4af7-babe-e8eab0169e1d",
        "cursor": {
          "ref": "8103de6b-4012-403b-93ef-a4c4b1ae8ed4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b59d8c56-dbe9-4ee3-9ac8-0874a5285c8c"
        },
        "item": {
          "id": "37b25977-e706-4af7-babe-e8eab0169e1d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d406adbd-261f-46d4-8463-766ad16edc39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e2b16-d0d9-459a-b220-718e57859389",
        "cursor": {
          "ref": "19ed7ed5-dc94-4ae1-9b97-8ec7ae448124",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3382d94-a876-44d0-ac70-4d3a354b625e"
        },
        "item": {
          "id": "0e1e2b16-d0d9-459a-b220-718e57859389",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6765c698-b8f4-48f1-ba8d-f2787e06f706",
          "status": "Created",
          "code": 201,
          "responseTime": 6134,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "99745ea7-163b-47ce-9425-e01f75e45b00",
        "cursor": {
          "ref": "f37c9dab-e403-416a-aae8-e597344ad62e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b045ede1-1243-4ca6-960b-6abb598e6638"
        },
        "item": {
          "id": "99745ea7-163b-47ce-9425-e01f75e45b00",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a7041eb0-c0c7-4519-b4d9-18a8c70601e3",
          "status": "Created",
          "code": 201,
          "responseTime": 5595,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f75da0-070d-4cd1-ac52-035da70c422d",
        "cursor": {
          "ref": "a9c0a743-9c4f-498d-841c-73db62f0e5a9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b07808df-5353-482f-a9a6-df9d54af1152"
        },
        "item": {
          "id": "e6f75da0-070d-4cd1-ac52-035da70c422d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6c806d5e-1857-4e5f-80c9-c24c5d942dbc",
          "status": "Created",
          "code": 201,
          "responseTime": 6193,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9966c-fb57-4a21-800d-b02a292b288c",
        "cursor": {
          "ref": "140a696c-75bd-4438-a63a-f55beb23a74b",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c953ae5b-271f-4112-b316-7918d28e917a"
        },
        "item": {
          "id": "cee9966c-fb57-4a21-800d-b02a292b288c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "41e6e63c-6871-4229-a0f2-d1a679400071",
          "status": "Created",
          "code": 201,
          "responseTime": 5857,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7072fcf-c8a5-473f-9ee5-c95904f1491e",
        "cursor": {
          "ref": "645f30a0-909f-4457-b3fe-b8db7797ce05",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bd247ee0-4af1-4fb5-a222-3d32940da755"
        },
        "item": {
          "id": "f7072fcf-c8a5-473f-9ee5-c95904f1491e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "148a8470-9f5e-42f5-b4f5-f4694a533801",
          "status": "Created",
          "code": 201,
          "responseTime": 5501,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ab2ec-d3ee-417f-8460-d5df1ac4f776",
        "cursor": {
          "ref": "55f3a64f-933c-4cb8-a9ee-3487de7d028b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dae27c8b-3540-46a6-b7d2-2c32014aa03f"
        },
        "item": {
          "id": "bc5ab2ec-d3ee-417f-8460-d5df1ac4f776",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "839271ac-1e09-43ec-84be-826e2875e2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "cc94541c-ba42-43ff-ad63-02410e5c6812",
        "cursor": {
          "ref": "8e8340e1-c67a-4c10-b814-8e8724fdbdd3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d4f701f0-c75b-486c-939d-23160f670c43"
        },
        "item": {
          "id": "cc94541c-ba42-43ff-ad63-02410e5c6812",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "370101cd-009a-482f-baad-66edff899aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4513109-d93a-41fa-86d9-db23f971e537",
        "cursor": {
          "ref": "059540d4-0be5-45f3-8687-235073655474",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "130e25b8-85bd-4982-9cc4-80e99daa57cd"
        },
        "item": {
          "id": "f4513109-d93a-41fa-86d9-db23f971e537",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e77ab13b-e07b-477a-99a9-b121c6bb1931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d670fe-a0fd-4aeb-b5a5-303a196e8a67",
        "cursor": {
          "ref": "0b3f540f-dd8c-4014-b556-e2bdd6fb9637",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a7dcf1f9-04ea-41b0-89e4-aacd1dcb0f5e"
        },
        "item": {
          "id": "f8d670fe-a0fd-4aeb-b5a5-303a196e8a67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6036044-8455-4858-b099-96257b558646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e471628-8b40-451b-b0f2-fc0fbceb2724",
        "cursor": {
          "ref": "e1016c6b-0eda-4a2c-af2f-c4e4744aa734",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b6c9e65a-708d-4df3-9c96-5d347d357a25"
        },
        "item": {
          "id": "7e471628-8b40-451b-b0f2-fc0fbceb2724",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1bc423d-e312-4144-956e-0599de07f725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a38f0b-a7a4-4557-94d9-50ae3f9dc6d0",
        "cursor": {
          "ref": "12c72e72-4ffd-4361-8b0c-a8a509c6197d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "574d9f0f-b9d3-4d33-9a20-35de0fa7451f"
        },
        "item": {
          "id": "52a38f0b-a7a4-4557-94d9-50ae3f9dc6d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de4a3ab8-33d6-4032-8c39-d0d93c6e5772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05842817-770a-4530-8c47-6f719ec85808",
        "cursor": {
          "ref": "4326f058-a396-4914-97b0-9031ccde5e2b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2e778de-6f0b-41c5-a229-60625b6ddc56"
        },
        "item": {
          "id": "05842817-770a-4530-8c47-6f719ec85808",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25b000df-e9d3-4da9-a49c-5c5fc8450f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea903a56-1435-420e-9572-38f667d2be1a",
        "cursor": {
          "ref": "cc1a8f6f-a44f-4153-90d5-50d7c495e3c9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d6ea479-9bb1-4637-bce7-ff5f3bf8f503"
        },
        "item": {
          "id": "ea903a56-1435-420e-9572-38f667d2be1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ec840bdf-38e6-4e7c-8753-16df60449ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50007b52-0846-4324-b56b-20b77413b9e5",
        "cursor": {
          "ref": "d3b0c958-a7dd-4440-9aa3-43de3471911d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "89e5e719-cf26-4381-a149-79e3e68d1e2e"
        },
        "item": {
          "id": "50007b52-0846-4324-b56b-20b77413b9e5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c68fca1-74b9-4173-bbd8-955c42fb4aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd61149c-93df-4599-8a82-f0c772cd26f9",
        "cursor": {
          "ref": "5a36ee77-23c3-4bc2-9a61-aac756a2ae76",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1e6224cc-57ca-4f75-a470-96310d1a11ec"
        },
        "item": {
          "id": "cd61149c-93df-4599-8a82-f0c772cd26f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f8e1fb6-0758-4f0d-bf3c-66aa1cf194f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758f3d70-8f09-400f-b4d3-f48ca0c3554e",
        "cursor": {
          "ref": "325c469e-3334-45eb-8eb3-39e43388e2a4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ddb51826-9efd-4eea-a18c-8fcfd5a8a153"
        },
        "item": {
          "id": "758f3d70-8f09-400f-b4d3-f48ca0c3554e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "95501dbb-4259-4454-aac9-2480dfa33d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7b796-26af-4bd5-bfb4-53c4878ef912",
        "cursor": {
          "ref": "fb858a14-4496-4d2e-ab0d-7cb4f6978997",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "96468db7-45ea-4108-af7f-9658a5670ceb"
        },
        "item": {
          "id": "e9c7b796-26af-4bd5-bfb4-53c4878ef912",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "210d7955-985e-42f9-9e5a-766dcf8d58b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45b9a56-d8e7-4da0-aa73-0123b57b107c",
        "cursor": {
          "ref": "639ec7cd-5211-4c71-905e-ec3e22fb46b5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "19ff7337-8e28-48d3-8cab-44eed8caef8f"
        },
        "item": {
          "id": "f45b9a56-d8e7-4da0-aa73-0123b57b107c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "565a433d-e852-4d79-bd9f-80316c11aeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f611552-788c-444f-8209-b3173d9b2166",
        "cursor": {
          "ref": "ebb7b072-c50a-45e3-b022-a3bf0115c630",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ca6aeafc-bd3c-40fb-91ea-cee887277e06"
        },
        "item": {
          "id": "2f611552-788c-444f-8209-b3173d9b2166",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1231223c-7fb0-4428-8d1d-7bc69b18a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c708ac-7782-4586-8aac-5619bf5daf24",
        "cursor": {
          "ref": "76d0637f-0092-4a20-9804-c93e4f393fb5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "38c7f1c6-1f07-4b62-bfb0-afe578905744"
        },
        "item": {
          "id": "b1c708ac-7782-4586-8aac-5619bf5daf24",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a71f4c49-26bd-490a-b87b-6a4bbf789593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89befcb-9e5a-4a24-a4ea-dba345292f7a",
        "cursor": {
          "ref": "05585626-d052-4993-93ef-f655d7bd5b78",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0a7456ca-0de1-4219-8293-911ff284df87"
        },
        "item": {
          "id": "c89befcb-9e5a-4a24-a4ea-dba345292f7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "13166022-2807-409e-83d4-1f6cb0a1fa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e200aa2-b1bf-47f6-845f-9274f3fa2f77",
        "cursor": {
          "ref": "26d52499-0f68-4178-a270-15167d5a6597",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9c2cffe2-981d-4a10-a8da-203d2fdc32d0"
        },
        "item": {
          "id": "6e200aa2-b1bf-47f6-845f-9274f3fa2f77",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6be7b170-0381-4d41-8d63-39ba9b6971be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e358b91c-1878-434c-a031-19749124291b",
        "cursor": {
          "ref": "00e4cd18-95e3-4933-8ffd-58da06c63bdb",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0b682b32-4109-4ce3-b130-df25b56386d3"
        },
        "item": {
          "id": "e358b91c-1878-434c-a031-19749124291b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e47cdca-3301-4288-90f2-7fb1e6da1b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c4da0-d475-4f4a-aeae-88c1e57feb55",
        "cursor": {
          "ref": "f26b5475-0434-479c-b723-494996c7c0e8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b00ff58e-d795-4c2b-9cbb-327211976259"
        },
        "item": {
          "id": "ba6c4da0-d475-4f4a-aeae-88c1e57feb55",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e41bc574-0425-4b4f-b143-8c36d42038a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92d31e2-f41a-4bec-bd51-af679a2bf0a6",
        "cursor": {
          "ref": "4e5c6133-e6b2-486d-a8d2-548527e136ea",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9ce0845-db7d-4cdd-9413-73de1633be12"
        },
        "item": {
          "id": "d92d31e2-f41a-4bec-bd51-af679a2bf0a6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c6301f76-4d04-4573-aab1-8df57555f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25872053-4b51-4fef-998a-149962ef80ad",
        "cursor": {
          "ref": "07506a42-6ff3-4625-a9d5-6f5f2f510d6f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e62e0fb5-3d6c-4426-86e4-0e2beeddecc3"
        },
        "item": {
          "id": "25872053-4b51-4fef-998a-149962ef80ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dcac686b-be19-4754-b344-d7898f703d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251627bf-c9a6-4a27-929e-d9d7852ea10e",
        "cursor": {
          "ref": "e2abb32e-28f7-4395-8951-67349cf07413",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "df995943-de4e-41ea-b829-ab9868bc6a8d"
        },
        "item": {
          "id": "251627bf-c9a6-4a27-929e-d9d7852ea10e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bcc7f49c-c41d-4df9-8e85-e08898f9a3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21818892-a587-4f9f-9e26-4fff2baa77be",
        "cursor": {
          "ref": "0ab08ad2-b35c-4c2d-a100-35ed8036e013",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2af07f1f-dab4-4a71-a3eb-31ae773e059e"
        },
        "item": {
          "id": "21818892-a587-4f9f-9e26-4fff2baa77be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f1b878f6-58aa-4be2-9d60-069f74368d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757c0c08-8a92-4b13-b020-2ab0da8ace0b",
        "cursor": {
          "ref": "d561edff-374c-4736-ad1a-48caacda8a0d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "126916c4-7c71-4dfb-841d-bad408cbe381"
        },
        "item": {
          "id": "757c0c08-8a92-4b13-b020-2ab0da8ace0b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44d09d98-80ca-42cc-827d-1bb7ee37b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fde952-7298-4d70-9baa-6229a77530c1",
        "cursor": {
          "ref": "490aa26b-69a5-444d-a96c-655abb0727ee",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4020de88-0916-464a-b018-7cf444618700"
        },
        "item": {
          "id": "95fde952-7298-4d70-9baa-6229a77530c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f249878a-7d17-4c7a-b20b-95d3247fe11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59756006-5018-40da-bf0b-f6c6b23955d3",
        "cursor": {
          "ref": "ac6f3ebd-d853-4055-8a46-e491873e8865",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3b9a5f5-3499-4362-88a3-24e84bb35549"
        },
        "item": {
          "id": "59756006-5018-40da-bf0b-f6c6b23955d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "087ddc29-8389-49b9-85bb-23e9341a572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec74a62-4aec-4ee1-af04-8cd5420ac4dc",
        "cursor": {
          "ref": "f587be49-96c3-4a7f-90c0-f9df315268fe",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "04b08360-e1b1-40ed-b98e-f7a753132eb8"
        },
        "item": {
          "id": "8ec74a62-4aec-4ee1-af04-8cd5420ac4dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6e96a5c-6bd9-46a9-b5c7-453089bb383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c16b3a4-f16b-43fd-86e2-729bc4966032",
        "cursor": {
          "ref": "02268a24-a99c-48e9-8f85-0ea819599bde",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0871a2b9-f883-4c50-ba44-399c6002fb17"
        },
        "item": {
          "id": "9c16b3a4-f16b-43fd-86e2-729bc4966032",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "973f73e5-623b-477b-a0cf-c271b0593804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739d8d2a-f2d9-48ed-981f-56481115c752",
        "cursor": {
          "ref": "463a60dd-526f-476f-bb13-01d3188755cc",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "01f0d7f1-8603-4fb1-8e53-6de927fed602"
        },
        "item": {
          "id": "739d8d2a-f2d9-48ed-981f-56481115c752",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "439327f0-18cf-4130-afc5-2ee9e5ae2acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a0a569-d0da-4a95-9cd5-505c261ddced",
        "cursor": {
          "ref": "b0ab6352-0fa1-4d59-8b36-ee2e3a153f87",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fc84b442-1d01-460c-b404-08dce62f2dea"
        },
        "item": {
          "id": "68a0a569-d0da-4a95-9cd5-505c261ddced",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d63ebdb6-76f5-4596-aea9-e1ad55b6434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c8723e-30f5-483f-8a55-f3f943e7eec1",
        "cursor": {
          "ref": "5e589ad1-fe1b-4f32-90ad-b3dfb3bf1711",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7106ea3b-86d7-4baf-b77d-ff4d682fcc60"
        },
        "item": {
          "id": "07c8723e-30f5-483f-8a55-f3f943e7eec1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22f80b71-c191-41eb-a915-e4778aab7ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a8e817-8ddf-44fe-b592-641f608b93f3",
        "cursor": {
          "ref": "f1327308-9514-4c48-80c2-bc125cf1a307",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "09124f62-9a4d-4b62-971e-f96f8e70c2dc"
        },
        "item": {
          "id": "e2a8e817-8ddf-44fe-b592-641f608b93f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d72de3d-ba70-44c1-95bf-ab65a9ef6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201939d8-1ea0-4271-b651-c5c0d1e22461",
        "cursor": {
          "ref": "ab400523-ff0f-4c1b-8cc9-53efe4ee403a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2f5f1993-80e5-4a9a-b552-46e438e47359"
        },
        "item": {
          "id": "201939d8-1ea0-4271-b651-c5c0d1e22461",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d6d377dc-e558-41e2-b5cf-b99479fe6ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41baa1d7-a5ca-4fd2-856d-4db6dd47dff1",
        "cursor": {
          "ref": "ddd590fb-5482-4e73-aeff-f7ab9977f65f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2c84d8eb-e629-426c-9620-88fa6ad5801f"
        },
        "item": {
          "id": "41baa1d7-a5ca-4fd2-856d-4db6dd47dff1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e46e8b71-4b62-4acc-848b-9f9046a5b579",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4a7bb7-33e7-4ef1-9cdc-42bcce596867",
        "cursor": {
          "ref": "abd9d6c6-4353-4c53-b134-2ed60b19d646",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e491775b-a459-4758-8f58-bb8c6a63c7de"
        },
        "item": {
          "id": "ff4a7bb7-33e7-4ef1-9cdc-42bcce596867",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "594f83c8-b859-463c-9420-0871d525b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b940c6-8a91-435b-bc0b-31cd10ab159c",
        "cursor": {
          "ref": "f606a8a5-f0ce-401f-ae0e-c8a40a204c47",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d0e1b108-706e-4db6-95e7-5afa06588765"
        },
        "item": {
          "id": "c2b940c6-8a91-435b-bc0b-31cd10ab159c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "60017d15-1dfa-4b05-b007-8be0a576eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383bc290-70e4-4ffe-a658-2bb0b6655f0f",
        "cursor": {
          "ref": "ad9e6824-820a-4735-8ede-a4853066a50c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0f71898d-cd19-4208-b702-e585b1362aba"
        },
        "item": {
          "id": "383bc290-70e4-4ffe-a658-2bb0b6655f0f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7bce144d-e1f9-47ed-93c6-626d27446e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aed0c62-45fc-4013-ac58-2c65f9621362",
        "cursor": {
          "ref": "a723056d-159f-4d56-97ae-5cecfbd83b8b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b0e20df-1407-47f6-9c89-34b596ed9a2a"
        },
        "item": {
          "id": "5aed0c62-45fc-4013-ac58-2c65f9621362",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23dd03fd-3886-40a3-85dd-55c154371527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aac0d3-9d46-40af-95f8-0e69c427e185",
        "cursor": {
          "ref": "cc7fddca-25c6-44a4-b2c2-3dd60e9cfdf4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e5eddf5e-0774-41fd-b4f8-e410eee22a93"
        },
        "item": {
          "id": "b9aac0d3-9d46-40af-95f8-0e69c427e185",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f7d3a19f-6490-4c20-85f7-caa15529c15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b465c5-da3c-4157-a0bd-288250f3031b",
        "cursor": {
          "ref": "803f49d5-8ccf-44db-b1e7-3aabe74edb4e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7bd87bd6-0f02-4f24-86b9-c694ebe9bce8"
        },
        "item": {
          "id": "f4b465c5-da3c-4157-a0bd-288250f3031b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cb9d6418-1347-4746-8cb4-8244290b5f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a4582-5b84-46dc-a28b-d9799afa68eb",
        "cursor": {
          "ref": "2eb5a59d-cce4-4af4-bcaa-373326d3cd88",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f0060b12-a0f1-4369-ac58-b7f207d6b40e"
        },
        "item": {
          "id": "955a4582-5b84-46dc-a28b-d9799afa68eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "31df9119-0540-4bb1-aca6-dce806da2919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b532d10-af23-433d-a050-31a9b3e3fced",
        "cursor": {
          "ref": "07568537-5001-4cb1-801d-1db2284f9a94",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "91f952f9-a8b1-4b25-8afd-923120f1929c"
        },
        "item": {
          "id": "3b532d10-af23-433d-a050-31a9b3e3fced",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3c6c267-0e30-4183-8e67-a3bff2521913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64538af1-ee6f-4db6-abdd-346e3d9552ca",
        "cursor": {
          "ref": "da3535b8-e97c-42e6-9285-c362bf4cf9dc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a2eb9326-dcc6-4b3f-b946-d225a6e019ae"
        },
        "item": {
          "id": "64538af1-ee6f-4db6-abdd-346e3d9552ca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "99ffdd37-0ac7-40e0-9ccd-8cdaa0bece64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6ec0c7-bf1d-44a1-878b-01c9bdfeb321",
        "cursor": {
          "ref": "0599aa20-0d13-4737-9f85-0a8718e6ab24",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c806ab6e-7f73-421c-89f9-6fe20ea7c83a"
        },
        "item": {
          "id": "8d6ec0c7-bf1d-44a1-878b-01c9bdfeb321",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6e559b92-b7ce-40c5-a992-2636a5674716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a3a6ef-f7bb-401b-bac4-bbc62b2b6c26",
        "cursor": {
          "ref": "c17f6327-c78e-4c85-94dd-9bc737635abd",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0ab98ab3-3a01-43e5-83e3-0fb3880b9722"
        },
        "item": {
          "id": "b3a3a6ef-f7bb-401b-bac4-bbc62b2b6c26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a5839d7b-3d3b-4d31-b87b-75a2bf6e798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db24cc7-0ce1-4e93-a696-a3f24232c0e8",
        "cursor": {
          "ref": "0b8a71d3-0967-4c66-96c0-7884878770ff",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "62462267-67de-4509-8758-083670b71e55"
        },
        "item": {
          "id": "5db24cc7-0ce1-4e93-a696-a3f24232c0e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6917cee2-560e-4415-95aa-c389327aabe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e684b1a-31c1-4865-ba99-940782c87802",
        "cursor": {
          "ref": "6de015bc-ea64-4065-a565-a7dfe764395d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "723a60fa-71e0-44e3-893d-f97002801687"
        },
        "item": {
          "id": "5e684b1a-31c1-4865-ba99-940782c87802",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "730ab313-0d98-4650-8f02-4285f9cbe55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0d6f8a-c43d-4a40-9c9d-5329a8e419ff",
        "cursor": {
          "ref": "453a213f-2c4f-4ed0-a5de-f07021ea3b33",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d4b82084-7f06-4273-b216-27e2fa3f5214"
        },
        "item": {
          "id": "1e0d6f8a-c43d-4a40-9c9d-5329a8e419ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5c58df7-044b-4f28-a1ab-f51dc78b064e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a963c930-c12d-4aba-b635-f4a0617fee39",
        "cursor": {
          "ref": "27b745ef-7427-47ed-afc0-3d6dd586eb82",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ede182df-d5a0-4e0a-9058-89ec2040d2e8"
        },
        "item": {
          "id": "a963c930-c12d-4aba-b635-f4a0617fee39",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b29f2643-6d0b-40ac-a9fe-9e2eeea36202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e591454d-2eb9-416d-bfc8-5068d2ee95a7",
        "cursor": {
          "ref": "e8fc3135-a1a6-4ff1-b9c5-01c1068fe86d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0df5b9fd-a698-42b0-a9de-5d099098b3f9"
        },
        "item": {
          "id": "e591454d-2eb9-416d-bfc8-5068d2ee95a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ace57eb-793c-4870-92ee-a5c972be8799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d71414-6a02-4bb1-b1d0-dc73f809b4f7",
        "cursor": {
          "ref": "d29ba96a-5057-4fb2-9a4d-4c583e8e2a7e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d3a4a4c3-3231-4649-ab41-a40471977197"
        },
        "item": {
          "id": "d2d71414-6a02-4bb1-b1d0-dc73f809b4f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aebc4702-ad7b-4cf7-aeb0-50ea9cb5e30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38afc884-f730-44a1-b039-58c10c2db87e",
        "cursor": {
          "ref": "45e0847d-a37d-43cc-8d76-25ee40e8fbc2",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f1fec8e4-300a-4b78-8417-069824984ea0"
        },
        "item": {
          "id": "38afc884-f730-44a1-b039-58c10c2db87e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "79905a18-8689-4e84-9633-21f8fb01f253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ba1687-8b42-4a65-b925-12dfd187a8f5",
        "cursor": {
          "ref": "9127df83-be40-4804-aa27-b439cbad4980",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "104522fd-7494-445a-925f-e56f9ba3bbdc"
        },
        "item": {
          "id": "d8ba1687-8b42-4a65-b925-12dfd187a8f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68ad60bf-9db4-402b-b493-5277ed5e4fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716cc4f2-5e7e-4a4a-af5b-010fdf241d16",
        "cursor": {
          "ref": "1341e45b-8dd4-410b-8382-f52eb1da657d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17706ff2-9ba6-4361-933d-07a333a8bd71"
        },
        "item": {
          "id": "716cc4f2-5e7e-4a4a-af5b-010fdf241d16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "758c9355-4129-4a14-b186-e898a176abd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b6ec9-d672-4155-9cdc-01f1b457361b",
        "cursor": {
          "ref": "e8b7ded0-39f3-42f5-9d8e-bb189274c507",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b09bf2c5-f865-4151-afe4-7fe0e428eb85"
        },
        "item": {
          "id": "2e8b6ec9-d672-4155-9cdc-01f1b457361b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c0110c6-ba95-457d-a227-465f3867c49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390ce917-1d91-4a73-9ebb-ce5b76594518",
        "cursor": {
          "ref": "07ba0677-350c-4221-98ea-87cbc0d74688",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fa3daebe-8130-408e-b004-151e02b095df"
        },
        "item": {
          "id": "390ce917-1d91-4a73-9ebb-ce5b76594518",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7aae1f7c-515a-41b3-9385-25fa26b94197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c28c3a-2db7-441c-824c-e16d82021018",
        "cursor": {
          "ref": "e8eb39e1-df96-455f-9726-e210ef90abae",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8f1162e2-df9f-44b7-913b-840fa8fed8f1"
        },
        "item": {
          "id": "92c28c3a-2db7-441c-824c-e16d82021018",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "647e5f9e-4499-41b7-8fe9-d08b8c346769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821c1c0b-8a97-4edc-ae42-f0d191a82bac",
        "cursor": {
          "ref": "2955d93e-571c-428b-9765-3130f70385a9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa4d70fb-dad4-421b-9a90-0d1b9cdf5590"
        },
        "item": {
          "id": "821c1c0b-8a97-4edc-ae42-f0d191a82bac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf1cfd6a-b2ea-425f-9ebf-1c5b7336e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e71706-2ecd-4844-8235-462bb12ccae5",
        "cursor": {
          "ref": "be9fab00-2e85-4521-8374-28df566667f1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eb229d73-c26a-4d60-8ac2-2eaad5bbf000"
        },
        "item": {
          "id": "12e71706-2ecd-4844-8235-462bb12ccae5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "be087a54-a2d7-4cb6-9163-a63c4f498780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513edbe-6958-43ff-925b-9391b8cb2228",
        "cursor": {
          "ref": "d3c61fea-1e24-48b5-887b-4b2acad42442",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0db61fe2-916f-435a-93c1-c29eea03661d"
        },
        "item": {
          "id": "2513edbe-6958-43ff-925b-9391b8cb2228",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "be07e08d-0948-4e94-b637-65d3149d6d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddb04ff-75bc-44be-ab3a-fe639b6f223c",
        "cursor": {
          "ref": "9e379614-7dce-4c05-ac74-c46d36d52f5c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6d09c0e2-2029-4be8-b474-fb5ec3048a46"
        },
        "item": {
          "id": "4ddb04ff-75bc-44be-ab3a-fe639b6f223c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "16ad0272-a481-49c0-b9f6-d439aaeb5894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2c7fd0-157f-4613-a5d3-b491e5b419b7",
        "cursor": {
          "ref": "ae20196d-c8c4-4323-b0d3-8b5abb22ed7b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ede8e97f-eb78-44fb-97f7-3030026bcb3c"
        },
        "item": {
          "id": "0b2c7fd0-157f-4613-a5d3-b491e5b419b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c4c1fa92-5aad-4f82-9855-6d2aea64917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54855b74-3378-430e-810c-015fa082a1f2",
        "cursor": {
          "ref": "ecc882d3-852c-41d2-a662-8595a0e63336",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d4663194-961c-43f7-93b5-ab49b9182272"
        },
        "item": {
          "id": "54855b74-3378-430e-810c-015fa082a1f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9ab49572-b9f1-41d8-b549-2113979df3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1465cb5b-668e-416d-9fdb-d7c85b124391",
        "cursor": {
          "ref": "19ab6dab-aad8-463f-8a0f-5bc7c31aaaf9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b74c44de-f124-4ce8-9b61-bb7ba8401eb6"
        },
        "item": {
          "id": "1465cb5b-668e-416d-9fdb-d7c85b124391",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f18b5b30-2643-40b5-bb8d-3b0265b9578e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c9bd8-2876-471a-9c61-d412ecb1da5e",
        "cursor": {
          "ref": "b02d15a6-031d-4982-95fb-d42a69aca72a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "394813d6-2b9a-4c93-8fca-e10f3f49e89a"
        },
        "item": {
          "id": "2e1c9bd8-2876-471a-9c61-d412ecb1da5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00732145-cd34-4290-8d17-070145f1d7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fa5992-d9d7-4964-8e14-50c986f2b154",
        "cursor": {
          "ref": "21557cfe-4f8e-4d31-b4e3-adf2ced63b49",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c9a0da8-99ec-4553-84a2-f98940cb3d6f"
        },
        "item": {
          "id": "01fa5992-d9d7-4964-8e14-50c986f2b154",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "37ff81b7-3a74-4b1e-b159-44b84d1cc141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4777f4-a3b3-4dab-b922-f7e7dc2629b5",
        "cursor": {
          "ref": "e898c6d4-b1f0-41a4-b0e9-859b84ee4833",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ec9c2c7c-ba6f-4a14-b050-797e371d403b"
        },
        "item": {
          "id": "4a4777f4-a3b3-4dab-b922-f7e7dc2629b5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d80d8a64-c319-4509-93ba-7a71bc02106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b5955f-3554-49ab-9bbd-e6fa3e375550",
        "cursor": {
          "ref": "d0ce24cd-d624-4814-8bb6-9d2752359c3b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4207b8db-de0f-4a05-b0a1-6ae325d05e3b"
        },
        "item": {
          "id": "26b5955f-3554-49ab-9bbd-e6fa3e375550",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "24226c18-1aa0-41de-8531-04ebbeea3f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681e3375-b83c-484e-8954-4fe39156491e",
        "cursor": {
          "ref": "86902c7e-b597-4bf3-9b2b-9b3fc809fb1b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e87b99bd-bba6-433a-b248-cac4e6f9f383"
        },
        "item": {
          "id": "681e3375-b83c-484e-8954-4fe39156491e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "67cefe56-1800-42c9-ac4f-9548097b2b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1e8df6-0ff0-4ebc-9481-a788c45ff7be",
        "cursor": {
          "ref": "a663a9f4-d06e-4ed6-aebe-308656347cb3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ed7909c-d8fe-42d0-8cfe-67346b18ccde"
        },
        "item": {
          "id": "9d1e8df6-0ff0-4ebc-9481-a788c45ff7be",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "47874ea9-0b1d-4fa7-b4d9-f5c39d90784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a94e1-9931-49e2-9dcf-c8c891f9e5c0",
        "cursor": {
          "ref": "bc171d29-ac66-44d8-9d65-75f0105877ea",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "41335e4e-949b-4163-963e-07f45ad261e6"
        },
        "item": {
          "id": "ea8a94e1-9931-49e2-9dcf-c8c891f9e5c0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "90149ab0-4b71-4012-bf8c-ce7864536215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eed567-8e31-4cd8-be19-6e006700f11e",
        "cursor": {
          "ref": "15a892ae-a783-454f-a6a9-42e48b1a4b55",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bc18e5d9-8df1-4f8d-811f-d30cb3da327b"
        },
        "item": {
          "id": "f8eed567-8e31-4cd8-be19-6e006700f11e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "da0bbccb-938c-48e1-90b7-803488415dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42783c-cc06-42da-8a85-3c13115d9f5d",
        "cursor": {
          "ref": "e4a98722-0160-41f8-9ae4-d273e2ec8a7b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7b79221-9c98-4393-b854-44e5ee26b469"
        },
        "item": {
          "id": "2e42783c-cc06-42da-8a85-3c13115d9f5d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d94d328-81a3-4564-b623-fc57cc7aaa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07114c-0f81-4d23-b7da-a4175f3d8ffa",
        "cursor": {
          "ref": "30748d63-4eac-4763-9c0f-5cbcbacf9ef0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e56c8da2-47ad-4eb6-b94b-30f09afd7ded"
        },
        "item": {
          "id": "aa07114c-0f81-4d23-b7da-a4175f3d8ffa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "29497bf5-ae9e-47dd-95e0-59ee4e85d7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e15aff2-b58f-441e-9589-50be14ae9696",
        "cursor": {
          "ref": "3c60da22-2882-4cd6-8f8d-f719378697c4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a84ed29e-9935-4ff6-9eeb-0f4f423ec2d3"
        },
        "item": {
          "id": "3e15aff2-b58f-441e-9589-50be14ae9696",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d7c3f3ed-4b3f-4747-bcec-a52386721e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0373e31b-b5c3-4426-b97a-7ee60038aa28",
        "cursor": {
          "ref": "79e055bc-a3be-475b-842a-6561151b7623",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "04717319-2fd8-415d-a6a9-9ad7d1cc309d"
        },
        "item": {
          "id": "0373e31b-b5c3-4426-b97a-7ee60038aa28",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9819c550-0dfc-49f8-be11-8fef6df6a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c853c1-def5-4b67-bbaa-acc5b1307db3",
        "cursor": {
          "ref": "c7fa766a-ae40-4cc0-831c-e134e3f08b5b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e47ea19-c299-47b0-992f-94955011ef49"
        },
        "item": {
          "id": "f5c853c1-def5-4b67-bbaa-acc5b1307db3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "00abf569-7cc7-4566-a11e-3563a94af6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247212a5-544f-4b33-a492-48f388d2c118",
        "cursor": {
          "ref": "31c84c0e-8e07-487f-9b82-091b400d6210",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4079cb8b-eec1-4964-be61-cd849b627059"
        },
        "item": {
          "id": "247212a5-544f-4b33-a492-48f388d2c118",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb2b431c-1598-44d9-b7dc-c923d9096025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b153a13a-c55c-4b40-b88b-32aa40a88e02",
        "cursor": {
          "ref": "f493f22f-b528-4993-8aed-40773e16f18a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f01bfd70-e84b-4718-8835-e74ff4249e8e"
        },
        "item": {
          "id": "b153a13a-c55c-4b40-b88b-32aa40a88e02",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "32149e2f-05ef-4342-aa0f-b4fc467092f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912ff0f0-d514-4b59-8b49-58882d9b0997",
        "cursor": {
          "ref": "fd7e6d84-179b-416a-845a-60ae0e536a7d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5e4a89f9-cab7-411e-ba31-d9c6daaaf713"
        },
        "item": {
          "id": "912ff0f0-d514-4b59-8b49-58882d9b0997",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0961774b-7d13-4f28-9a64-905589968ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e763e6-8c75-4e60-9546-52f5acf14b94",
        "cursor": {
          "ref": "fbd5a0ae-6252-4f6c-aed2-edf296887d18",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "33d3e086-8530-429b-bcca-06fbbd372a44"
        },
        "item": {
          "id": "d1e763e6-8c75-4e60-9546-52f5acf14b94",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "362fb12b-7129-444b-be2e-68ac4cdc9f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0793c3e-645b-45de-b632-ba715b813b49",
        "cursor": {
          "ref": "a95c97c5-0fac-4865-96b0-e4a39abb76d1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3d72cb0-ad61-4ca6-b628-a43a7536e64d"
        },
        "item": {
          "id": "b0793c3e-645b-45de-b632-ba715b813b49",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "451ee475-dff6-48d8-b70a-71aa96787510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947887ef-4da5-47c7-a527-77a7e9e2a568",
        "cursor": {
          "ref": "51de2da4-894d-48c6-9242-501d24aede73",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9401aec6-ab67-4655-86b4-2b5696a2df0e"
        },
        "item": {
          "id": "947887ef-4da5-47c7-a527-77a7e9e2a568",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "20e3d3a9-cb3c-4162-8a68-de6cf935bb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210763d6-577c-49e2-ab0d-dcc2dd0145cf",
        "cursor": {
          "ref": "c01a37e3-6eb3-44b8-a9d8-5d2ed1b510a0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f36d485c-edcf-44c2-8ec3-a40f74db2890"
        },
        "item": {
          "id": "210763d6-577c-49e2-ab0d-dcc2dd0145cf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a7403542-7149-40e2-ac9d-deb25b73d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c2f1e-8bdf-427a-b823-1c3c79effedb",
        "cursor": {
          "ref": "1b3600f1-279c-4e85-abb2-82694fb99003",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fbe07cee-3d07-42f4-b0c3-a0faa4a8f098"
        },
        "item": {
          "id": "1f3c2f1e-8bdf-427a-b823-1c3c79effedb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7df43688-4347-42b2-8316-31fe6ffdbcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313ff461-8c98-4411-94f4-e8a2ce0207b0",
        "cursor": {
          "ref": "d1c0ddbb-7d95-49a6-98f3-949f1e06ebab",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bce8c8bc-7056-42ea-b1b2-d168614914a5"
        },
        "item": {
          "id": "313ff461-8c98-4411-94f4-e8a2ce0207b0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9e0a9e1e-b66c-4aa8-8c6c-0286d91b8899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a69368-d706-476b-b2e7-d976a913287a",
        "cursor": {
          "ref": "bc0ece98-56cc-438b-93cf-35c0dc0d5246",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a1338fbd-8991-466a-b32d-a3a1f77b673b"
        },
        "item": {
          "id": "15a69368-d706-476b-b2e7-d976a913287a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f7a2e51-8ef3-4a15-8b61-2f02fe3c89e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc44358-6f3e-467c-ab2c-cedcc67f7fb9",
        "cursor": {
          "ref": "e1a728e9-875b-4522-a2be-776525f10084",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d09829c8-ce9a-4d39-8b1e-554b39b28a02"
        },
        "item": {
          "id": "dcc44358-6f3e-467c-ab2c-cedcc67f7fb9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d3f6a79a-c4e5-4ddd-96bf-c1998c7b24da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230fb2ea-7df9-42bb-ab3b-a53b421e60c0",
        "cursor": {
          "ref": "582ea045-6bf6-4e4f-8e3d-faccf517d9b8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c1b30ab-684c-42cd-a484-95f347c98b14"
        },
        "item": {
          "id": "230fb2ea-7df9-42bb-ab3b-a53b421e60c0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3e241878-3e2d-46e6-b320-98c67a55800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac169a-ffa8-4b2e-adee-7f305fdc6fb3",
        "cursor": {
          "ref": "cb8fb65e-11bf-4b9f-bd40-4b7e539030f1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4461f748-da8f-4c00-9e98-d456821d6c23"
        },
        "item": {
          "id": "cbac169a-ffa8-4b2e-adee-7f305fdc6fb3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6846c07f-1873-41f2-add3-db35b877e72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49919558-9c9e-49c7-b864-132a89c87cc0",
        "cursor": {
          "ref": "8b85cd65-9edb-474f-97af-d33258563f1c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e621d0b6-cb1a-4ee2-8345-1c1622fda24e"
        },
        "item": {
          "id": "49919558-9c9e-49c7-b864-132a89c87cc0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ca2dae7a-f1de-4433-a0fb-2e9355d2693a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95afc20-f030-48e3-adb9-b0be2835efae",
        "cursor": {
          "ref": "928855cf-984a-4116-8bd9-5e8829056146",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "507244c6-32d8-4b23-aa40-4a24cc682e00"
        },
        "item": {
          "id": "e95afc20-f030-48e3-adb9-b0be2835efae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b17224ea-a06b-4a8a-870a-943f71430e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3f69b5-772f-40e5-b373-4270f9cfcf95",
        "cursor": {
          "ref": "254a4ffb-0c78-4919-81a0-dfea8ba4b50a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6f687897-744e-4dde-87ba-7d9852ee0b9e"
        },
        "item": {
          "id": "0e3f69b5-772f-40e5-b373-4270f9cfcf95",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6d9afe37-17b4-4c56-b986-10b064b7e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a7bd58-e790-42bc-85ff-1b5f570a8b77",
        "cursor": {
          "ref": "0d05ccca-f0da-4b1d-a287-c5e022630b31",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "623e6177-4109-4022-b958-3843aa187a14"
        },
        "item": {
          "id": "c1a7bd58-e790-42bc-85ff-1b5f570a8b77",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "644b7fbd-f621-4a30-b585-b6216d42d5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021b8413-d302-4878-a56b-4fa365824d99",
        "cursor": {
          "ref": "942f3868-0c7f-4479-ae7d-9d250490ce90",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a15c7857-2133-4d47-8c6b-b17cd82e0c1d"
        },
        "item": {
          "id": "021b8413-d302-4878-a56b-4fa365824d99",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0585236c-c00f-4716-8ce7-07ab0e1e6bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7680b-6456-4024-80dd-a50f13dad3ba",
        "cursor": {
          "ref": "8f23915b-7a83-482d-a1c0-4d425ec07900",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "719324e6-534c-4b4a-add3-4ed44003e3a6"
        },
        "item": {
          "id": "97d7680b-6456-4024-80dd-a50f13dad3ba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c953cb7-ca5c-4b01-bd8a-d40a1b7b0604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7dab41-63cb-42fa-9f03-6c20355be132",
        "cursor": {
          "ref": "76a18475-6be7-495d-b689-3a18d4ba3d52",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9de65681-35c2-47cc-af2b-d36838d6e41b"
        },
        "item": {
          "id": "6f7dab41-63cb-42fa-9f03-6c20355be132",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c51d38c5-89d3-44ac-8658-e0a28094c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4ba559-998f-427f-b91a-f2ea58526be6",
        "cursor": {
          "ref": "1b505ee9-81a8-43be-aee4-35a6c8cd3edd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7fbd3e89-5a15-46c8-b20c-16b28cdf060a"
        },
        "item": {
          "id": "8c4ba559-998f-427f-b91a-f2ea58526be6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d8ee501c-b0d7-45b1-b891-fa6b35cdda3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea5914d-9718-4ba4-8519-6af9024776b2",
        "cursor": {
          "ref": "17ac72af-5938-45e0-92a0-bb6f54461b9e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0394d8c0-5f76-495a-afec-0731f51e473b"
        },
        "item": {
          "id": "8ea5914d-9718-4ba4-8519-6af9024776b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a2b56fc9-ab2f-4217-894f-d9e0ad0c417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2858fdbc-4084-455d-996a-d674ec3484be",
        "cursor": {
          "ref": "8209bbfc-9162-4264-8ce1-ac00c236d3db",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f6020734-5269-4051-a569-711ad3bf107a"
        },
        "item": {
          "id": "2858fdbc-4084-455d-996a-d674ec3484be",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b8dfc5af-4929-4080-ba17-69492cee0960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b303009e-18a2-498d-bbf5-5dacbf4fc22a",
        "cursor": {
          "ref": "812f8915-3198-4c0f-bb57-5ac714e78d30",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "03f200ac-7851-41a6-a2a3-538075eeed52"
        },
        "item": {
          "id": "b303009e-18a2-498d-bbf5-5dacbf4fc22a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "26f94350-b60f-4257-9c7f-a4933e6158f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a19f96a-2682-4caa-83c6-e9fd1630b876",
        "cursor": {
          "ref": "1355a50e-a7d4-4cb0-ac15-5590fe9abdf2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3a05bb31-b290-4153-88f6-47f81e5590b6"
        },
        "item": {
          "id": "2a19f96a-2682-4caa-83c6-e9fd1630b876",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f9e1d7a6-4597-43a1-bad8-bb27d2992b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3006dcf-61a5-4558-9ae9-6e98769e06f5",
        "cursor": {
          "ref": "de663759-2129-405d-8995-8d6dad50a92e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa972df0-9a09-4b9a-a07f-43ea8f666377"
        },
        "item": {
          "id": "d3006dcf-61a5-4558-9ae9-6e98769e06f5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b92f4482-e63a-4b9e-b8a6-b994d59fdc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f7826c-b3bf-4e34-8a69-8a31e2e9e3cd",
        "cursor": {
          "ref": "6b5b095b-0c04-43fe-8ced-4efce7424e06",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a0264993-fe00-488e-abeb-c29c37ad2446"
        },
        "item": {
          "id": "03f7826c-b3bf-4e34-8a69-8a31e2e9e3cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b7cc77e6-9c51-4e84-a167-b6ee62166ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51986224-336c-44c5-a015-7c257f41d508",
        "cursor": {
          "ref": "ac2a01e4-04f3-4701-8acf-fd76e6ff3d77",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d9b5f98c-545d-4683-89b3-0e93f3df7f58"
        },
        "item": {
          "id": "51986224-336c-44c5-a015-7c257f41d508",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7f538e1e-8972-499c-86dd-ed2d051c1d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68a60f-c5c6-4075-a156-37a9771f1b6b",
        "cursor": {
          "ref": "13ff3344-69ec-49d9-8844-807d49a2ad7d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "94aed5bf-e9ea-45f0-b54d-5694ba692d28"
        },
        "item": {
          "id": "5a68a60f-c5c6-4075-a156-37a9771f1b6b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3ca6e93c-f7ba-4d49-b0d1-91583783ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971e2a91-b56b-46c4-8d7d-eeca6f40fc74",
        "cursor": {
          "ref": "f8f50636-2654-4218-ab37-11d7a8359b70",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd7b6b28-4e42-4dc3-b89a-12961fa0e5c7"
        },
        "item": {
          "id": "971e2a91-b56b-46c4-8d7d-eeca6f40fc74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c1af716-f7d6-4208-875d-e381256f5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac94626-0924-4e5b-b308-6fe0080e4bdb",
        "cursor": {
          "ref": "3f8088ed-2ba7-4c3e-b2d1-ea3dfe6eb850",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1a36147-270d-45cf-bb02-4ed1f8113aa3"
        },
        "item": {
          "id": "aac94626-0924-4e5b-b308-6fe0080e4bdb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6a005eac-db4c-4a55-b1b7-ef4698a33d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f4fb57-9081-454c-b2b7-c29b11ff4825",
        "cursor": {
          "ref": "a4d308d3-4e39-4a92-8573-368ba9e02524",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8e861c8d-4fd4-40fd-a84d-41c2d814c10b"
        },
        "item": {
          "id": "81f4fb57-9081-454c-b2b7-c29b11ff4825",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "16e1184f-c904-4eb1-bef1-8c916aea3984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7df571-33f5-4391-91d2-a057d8c5618c",
        "cursor": {
          "ref": "80615914-9ece-4518-b6f0-d141fae712f9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a1adb85f-f44a-48a5-9e01-1b2f65c0a2f6"
        },
        "item": {
          "id": "2c7df571-33f5-4391-91d2-a057d8c5618c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "acafcec0-7b2b-4e60-887e-1ff00c78e9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fd2dd6-15ef-461b-a3ab-da0bfac3d203",
        "cursor": {
          "ref": "07e2d116-83ae-4b47-85a8-86b0a55861eb",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "701a8acd-650e-47f9-8c98-0322c0976e1b"
        },
        "item": {
          "id": "55fd2dd6-15ef-461b-a3ab-da0bfac3d203",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f80b4d56-7bbb-40c4-9a55-fb4d1b0c8c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee7c570-caff-456d-827c-65fec0c0821b",
        "cursor": {
          "ref": "9944b6c3-f551-48aa-974f-70b5269141f5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c1aa37da-e622-4782-8efa-4399e090ea06"
        },
        "item": {
          "id": "aee7c570-caff-456d-827c-65fec0c0821b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d500201b-d888-49e2-b419-6a98adb38070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a9a77-06a5-4f73-af42-cbc1bcab4355",
        "cursor": {
          "ref": "4aedba64-5a62-46d8-a30f-5c88fc17dad1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01fa5d12-03ad-4495-8c47-c9fd6b542eb6"
        },
        "item": {
          "id": "231a9a77-06a5-4f73-af42-cbc1bcab4355",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4af97d90-439b-4a85-a9f5-dda48b7d3779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225ed423-41e9-4c00-a8a0-4428fa8d7c28",
        "cursor": {
          "ref": "f0741a9d-d750-4321-8557-2edd5f7b0853",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0b6a493f-c49c-400a-9435-051532aab0c8"
        },
        "item": {
          "id": "225ed423-41e9-4c00-a8a0-4428fa8d7c28",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8ca40cec-bade-4966-94d3-fb3d1b265827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f6105-8e25-4cde-96c0-0f9651b1e1ae",
        "cursor": {
          "ref": "afb00a4b-2abf-4f4e-b7a5-d4a85967d88a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "41b9f7fb-3db2-44f9-b811-bfa97264e90d"
        },
        "item": {
          "id": "1a8f6105-8e25-4cde-96c0-0f9651b1e1ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7441a57d-83db-475a-a922-3de594385d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3112a-50f2-4d8e-b72a-a0e0b7b9a8af",
        "cursor": {
          "ref": "593cd150-ecfd-43d1-9d0c-5b2af11c8d0d",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "929f92fe-7a43-4bf0-8db0-8391c79ffb0b"
        },
        "item": {
          "id": "9cb3112a-50f2-4d8e-b72a-a0e0b7b9a8af",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4c2b91db-43a0-4d86-a842-f21037afa1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a5c8c-49e2-4d34-89a9-ca1c81e44122",
        "cursor": {
          "ref": "78bad544-20d9-4645-866a-3c26a4de6526",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba1dd130-5b23-4a8d-be0d-ad31de573852"
        },
        "item": {
          "id": "054a5c8c-49e2-4d34-89a9-ca1c81e44122",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1932a9e6-bb62-49ac-912f-f5677605bca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3adae-c839-4007-9b3f-a491d07b1bd9",
        "cursor": {
          "ref": "84eb2914-6db8-4c38-bb55-34e72d7d286b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d17ccc9-7e1f-4458-ba5a-6243197a1c3f"
        },
        "item": {
          "id": "82f3adae-c839-4007-9b3f-a491d07b1bd9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a4b2b840-440e-42ae-a43d-ebea0e10f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eebd886-ae8a-4eee-a8ab-57416f4223f7",
        "cursor": {
          "ref": "b261ca49-c9c7-4104-ac12-33c171fd9f81",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e615e819-1929-4d11-83a1-21d769f6598f"
        },
        "item": {
          "id": "4eebd886-ae8a-4eee-a8ab-57416f4223f7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9a98787e-2ad0-472f-adc4-9b45280f67af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6672c0b-d6d3-455a-935b-33905c4b71ec",
        "cursor": {
          "ref": "a12835d5-55cd-4973-908d-e8010a7ecfb7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9991828c-b738-4fc9-b442-bd4db7f226af"
        },
        "item": {
          "id": "d6672c0b-d6d3-455a-935b-33905c4b71ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d6618db-4f00-4890-9b65-b8893b13b4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec4ddde-e030-40c6-b77b-76e12e9dd8ee",
        "cursor": {
          "ref": "34a778c1-2785-4395-a921-fcb615753fa5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bdc611f9-7ac8-4334-9d5d-26057b73c055"
        },
        "item": {
          "id": "bec4ddde-e030-40c6-b77b-76e12e9dd8ee",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5cfbd6c5-db8a-4f22-83ba-5bec2f8e39e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af195b-a79a-4ce9-b6a8-416a755d9f29",
        "cursor": {
          "ref": "5545a0a9-b574-4e1f-848d-8c171e2fc154",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "68c1d777-9238-4398-a9b4-e66a3423b540"
        },
        "item": {
          "id": "b3af195b-a79a-4ce9-b6a8-416a755d9f29",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2d147a7a-1dc8-41e5-8a17-4923d17cabc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aab4ef-9568-4bd7-93db-92de88acda4d",
        "cursor": {
          "ref": "f14f311b-be79-42db-91ef-6761a9f428c1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a2de4f8a-0bd3-4423-b344-8b57164aeeb8"
        },
        "item": {
          "id": "89aab4ef-9568-4bd7-93db-92de88acda4d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7e38bfb-fe30-4c46-8a18-bbd2b147c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0646805-d8b9-4576-b792-09c29160542c",
        "cursor": {
          "ref": "2f2ab7b8-f68b-4425-9ef4-c883ebb76831",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0d767f57-3938-48f2-a38c-d7361ed64003"
        },
        "item": {
          "id": "e0646805-d8b9-4576-b792-09c29160542c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "62afa606-1a4f-4d03-a218-41ae151f2f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18506d78-465b-400a-b9a5-43566504d3b4",
        "cursor": {
          "ref": "8660b4ed-928e-4f47-a03d-bf94267f4648",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b37f22d-aa07-4737-a0b0-35acd62f5e9f"
        },
        "item": {
          "id": "18506d78-465b-400a-b9a5-43566504d3b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0d1e4be6-fbc5-4542-beb6-18e35babedaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460df1d-9edd-4339-a17c-1d32d6e4295b",
        "cursor": {
          "ref": "9c4505ed-1f70-4bc2-8a47-2668e3c141eb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "36a12d1e-c2c0-456a-b9f0-a5d9304dcd09"
        },
        "item": {
          "id": "3460df1d-9edd-4339-a17c-1d32d6e4295b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3e8d54a5-f4fb-4a0a-acc4-f7f223a29e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2fcd08-a294-4463-b125-33aca1744be9",
        "cursor": {
          "ref": "a7b4f64e-7149-462f-8f2e-c9ef9721adb8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "72f970e0-e835-4270-bce0-8ce81c14fa3b"
        },
        "item": {
          "id": "8a2fcd08-a294-4463-b125-33aca1744be9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1adbfa89-6159-42d9-bf26-50c8c38838d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c727f3-2715-4975-a719-687f1c440197",
        "cursor": {
          "ref": "e1403c5d-f1d2-49e5-9b31-6ec114ed7d17",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "879dc322-18e1-4169-a9bf-4b31910e97e8"
        },
        "item": {
          "id": "78c727f3-2715-4975-a719-687f1c440197",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5feb875f-237e-408c-8206-82a5bf7be5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b08faae-3db0-4cf5-a2ed-9a4f457bcf8a",
        "cursor": {
          "ref": "5a04c86d-6ed8-445f-8713-18e05b7bec37",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ebee0fc1-98f7-45d0-badb-dd6995e0e885"
        },
        "item": {
          "id": "2b08faae-3db0-4cf5-a2ed-9a4f457bcf8a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "05c3e965-d8c3-465e-ae54-364f3bf96bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be3ea6-edb8-416a-a3cb-983364ee5ff3",
        "cursor": {
          "ref": "609c88fa-e78e-4616-8f40-c85d546aee8b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f23bb432-370c-46c5-bfe4-a3b748d023de"
        },
        "item": {
          "id": "46be3ea6-edb8-416a-a3cb-983364ee5ff3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d078d0e1-be66-4406-bcff-31cddb06a632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc9e3c6-82d5-4e92-b0ed-e110af13d5ee",
        "cursor": {
          "ref": "c9e79649-9c99-4e84-94d1-a5a46bd24a42",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d531c3c2-78e8-4621-a22c-1252ffef8e5d"
        },
        "item": {
          "id": "5fc9e3c6-82d5-4e92-b0ed-e110af13d5ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f482e02b-acc8-4cdd-9f6e-b3639c10a5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc83296-0934-456c-ae61-0e167826ab68",
        "cursor": {
          "ref": "cec5338b-f468-4df4-8192-3d76890ee1b2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "113cdc5d-1688-4724-96ba-c33035257e06"
        },
        "item": {
          "id": "8fc83296-0934-456c-ae61-0e167826ab68",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "19427b4a-0d69-4bc9-bb48-e9826507300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95346ff9-5f78-4ff7-991e-fc58eb0e5378",
        "cursor": {
          "ref": "f72d5618-ae8a-436c-9f92-cbae3efe980b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9725718d-c790-4909-ace5-3a1ac462cf76"
        },
        "item": {
          "id": "95346ff9-5f78-4ff7-991e-fc58eb0e5378",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4df8ceb3-cab7-4a25-86d6-4dbb585fd237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec9db24-5fe4-41a5-97c7-a26427cea0cc",
        "cursor": {
          "ref": "d8ab5b80-39f4-44a4-a8ae-cbcfbb1ecd95",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b0f6356f-4a41-4c76-b3f2-2ce75ae63d5b"
        },
        "item": {
          "id": "fec9db24-5fe4-41a5-97c7-a26427cea0cc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d481bdf3-cec5-4c4f-ae8f-9543b51233fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d387f4d-6945-491b-acd3-898f3196add0",
        "cursor": {
          "ref": "93dba134-052e-455b-8aa8-74fff4827d7e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2f25da9-aec3-4f37-9e6c-1cd485e2087e"
        },
        "item": {
          "id": "7d387f4d-6945-491b-acd3-898f3196add0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a026daa2-44f3-4fb4-b4aa-bb4fdd9f9e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd496f1d-09a0-4203-8ff7-99d9a7626d88",
        "cursor": {
          "ref": "097fbfbf-8cf0-4149-9347-f2ee4845a39d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8bdcdcfb-68a0-4da1-b40f-b36a4a996862"
        },
        "item": {
          "id": "cd496f1d-09a0-4203-8ff7-99d9a7626d88",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9cb37b5c-af11-439e-b26e-4800c0d145ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a966a933-e0be-4a75-9e92-6ddebf384388",
        "cursor": {
          "ref": "e77365ec-4c2b-4023-ac80-db46403a1bdb",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b392d6bd-77a0-4f60-9448-c24fa898d7d3"
        },
        "item": {
          "id": "a966a933-e0be-4a75-9e92-6ddebf384388",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b8a7903-2ff0-42a8-b4fa-7b99d76db8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e1b884-f6c8-4ef4-b0ad-9ae569906dae",
        "cursor": {
          "ref": "2a8fe8c8-bf97-4597-86c7-b4032f1b4c0f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "af2ee00d-f069-41f5-93f0-b3baeddb1368"
        },
        "item": {
          "id": "25e1b884-f6c8-4ef4-b0ad-9ae569906dae",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a6a12c58-02d2-44e6-9eb2-b68348efc121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa68d9c9-db3d-4caa-8a99-49d60b50697d",
        "cursor": {
          "ref": "5f57928e-b8a5-42e0-87a6-7efaf9a6d1d8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46fe2c55-ce6b-4954-804d-f5c0229fcbbd"
        },
        "item": {
          "id": "aa68d9c9-db3d-4caa-8a99-49d60b50697d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e3c25b8e-8404-4ae5-b5b7-30a25d5faa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aae8f05-32f9-4f6c-872a-ed904e36d857",
        "cursor": {
          "ref": "829a63ef-2af5-4283-881e-3bc45706b919",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b43cb1ec-8749-4017-9895-8f5b91bb77cb"
        },
        "item": {
          "id": "7aae8f05-32f9-4f6c-872a-ed904e36d857",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb4a0759-3cad-4843-9eb7-0e621157f806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25b4d78-4f23-40fa-adf6-eb06cfa36b58",
        "cursor": {
          "ref": "d1e50390-359b-41cb-82c1-121dafbdbf79",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "857851ac-1d76-4032-9598-fa10c17aebc8"
        },
        "item": {
          "id": "f25b4d78-4f23-40fa-adf6-eb06cfa36b58",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b202e60-390f-4487-97b3-3139c424b51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9a33e-3972-429d-871c-352f15db933c",
        "cursor": {
          "ref": "9e8cdf4c-6c17-4c80-a2f5-bdc66cf2ca98",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ead77d0-d1f1-4062-86ac-ebd1441a9bb6"
        },
        "item": {
          "id": "00e9a33e-3972-429d-871c-352f15db933c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4041b093-e8fa-4012-b90b-0b199b804264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c06615-9e27-4c95-a2ed-0b6167482834",
        "cursor": {
          "ref": "3e97a962-e20b-4b75-af84-05c00f2f09b9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "88172a65-a65f-4349-8310-dff4df9a9b89"
        },
        "item": {
          "id": "c3c06615-9e27-4c95-a2ed-0b6167482834",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8d059006-7add-4bc0-b3ba-4bd8aac304c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfae3987-1813-4851-82b3-fab9ea68412a",
        "cursor": {
          "ref": "a575dc22-5788-4a84-baa4-649095946bd9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "41b7966d-7bd7-4ad7-ba84-3c01b1aa866c"
        },
        "item": {
          "id": "cfae3987-1813-4851-82b3-fab9ea68412a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aa939e70-8220-4ad5-ad6d-b4fb61108364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6758077-5bcd-4929-b926-2e8adaab8f37",
        "cursor": {
          "ref": "4575acc1-9f73-4a4f-94c9-fda20cc5c92f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a2b6d8d5-5f9d-415e-ab7c-029dd7398961"
        },
        "item": {
          "id": "e6758077-5bcd-4929-b926-2e8adaab8f37",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "99f7d8e0-cb73-429e-929a-161d5ab58f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ce264e-7833-4372-8004-ced7584ec10a",
        "cursor": {
          "ref": "082d01a0-3f94-4c75-8f07-f2335ab91c44",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "16666506-edc4-49bd-92d2-f08c859f00c8"
        },
        "item": {
          "id": "f4ce264e-7833-4372-8004-ced7584ec10a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c3a2b9c7-add0-4f12-8def-5b0ca3ec0e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e38286-813c-4e79-8404-b42cdca5ed8c",
        "cursor": {
          "ref": "83aee9dd-5715-41f5-a1e2-0802d96859f5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bba58bdf-aa48-4374-98a3-1f8e235571cf"
        },
        "item": {
          "id": "08e38286-813c-4e79-8404-b42cdca5ed8c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "19ec9897-fdac-4b79-b496-dcbbdf6c5f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d88750f-d72c-4b36-94a2-52bdaa584ba8",
        "cursor": {
          "ref": "2e44d6ed-cf3c-4f48-9498-a7721c480590",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "81506127-bdb2-4947-8bd8-9c23b9a54a7e"
        },
        "item": {
          "id": "1d88750f-d72c-4b36-94a2-52bdaa584ba8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fd8a05a3-03f9-4d2d-825d-783abf2da405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b5f70-24f3-4c92-8841-0309cc5c47c5",
        "cursor": {
          "ref": "302cb0aa-ceec-4c89-a86b-51fdd3286a29",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f85127f4-5e52-439f-b537-c1adfcfea475"
        },
        "item": {
          "id": "623b5f70-24f3-4c92-8841-0309cc5c47c5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "45879819-4c4b-45a3-9193-4f2bfd44480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59943447-27a9-4ee9-8e17-5147d18fd091",
        "cursor": {
          "ref": "97eb77ab-57eb-49fb-a7b7-f38068cffde0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1b316875-069c-4c5c-bcb2-65397d6499c9"
        },
        "item": {
          "id": "59943447-27a9-4ee9-8e17-5147d18fd091",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "864a2c13-8a7c-4d75-b2ca-0197822150a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d26a54-657d-47c3-8638-6f0cf06244e3",
        "cursor": {
          "ref": "1479f5d9-cd3b-4c3c-820b-3874a4515307",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "91ed67ff-65c7-42ea-aa35-b02f11a83588"
        },
        "item": {
          "id": "94d26a54-657d-47c3-8638-6f0cf06244e3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6b6e228e-2d81-4492-8710-06eec9175f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89b23cd-88e4-4db3-bf1e-4836aaba83ed",
        "cursor": {
          "ref": "e39899e2-98ec-4195-b8e8-d4ff5451d771",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6bfcf219-b199-43e9-922f-f02cb13fefe5"
        },
        "item": {
          "id": "a89b23cd-88e4-4db3-bf1e-4836aaba83ed",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c5f8e23-5264-4fcc-8e09-c531b6afe239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a70fda0-5b69-4e61-9b91-ee035586e039",
        "cursor": {
          "ref": "52814576-be91-42bb-b51a-634e0dd3256f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "921cc61b-c7f8-4be1-ab52-872965520f1b"
        },
        "item": {
          "id": "9a70fda0-5b69-4e61-9b91-ee035586e039",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c45b080-1221-4f14-8470-d4bbe9fa5406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858d7696-45e4-4b6b-bfa6-6e902d2b2f67",
        "cursor": {
          "ref": "929615ff-1e68-451b-a0d4-5f8b608cc698",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5771ee29-690f-43de-a931-849a089774b8"
        },
        "item": {
          "id": "858d7696-45e4-4b6b-bfa6-6e902d2b2f67",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f12fa689-d1c3-4d9a-b181-b8a63758fd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b9073d-f3d8-4723-a65a-07e9bc1fec0a",
        "cursor": {
          "ref": "f41bf048-a4e2-456f-b7c9-6aa0bd887851",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "22c73ec2-84cc-4f61-9df2-7d7e5747f7d3"
        },
        "item": {
          "id": "57b9073d-f3d8-4723-a65a-07e9bc1fec0a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "18b3a6f7-39f8-4d66-85c3-949d168d5d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfff8e6-dd01-4fd9-ba1d-ac045f193cd1",
        "cursor": {
          "ref": "528a709a-ee6e-4e01-bb05-5bd6e5ed3aa8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cb6fe97d-360d-4d7f-94c8-48afa39cd6cd"
        },
        "item": {
          "id": "bbfff8e6-dd01-4fd9-ba1d-ac045f193cd1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c35471fd-030d-4610-9230-a648af776850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e3b03b-2426-4264-9143-c4503e23d2ab",
        "cursor": {
          "ref": "50f0d0e9-5a6d-462c-b5ec-d51a1eedafc1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e3977062-9416-469c-9804-af49abb02a28"
        },
        "item": {
          "id": "81e3b03b-2426-4264-9143-c4503e23d2ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "01c06941-a52e-49b8-be7b-9622f5831bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e78180a-4017-4012-a5bd-18c8982cf871",
        "cursor": {
          "ref": "05e52674-16a2-4719-9ef9-78ec0665b76b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c347331b-ca7d-424e-a686-82b6cc5d000a"
        },
        "item": {
          "id": "8e78180a-4017-4012-a5bd-18c8982cf871",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ae2613ec-0b5a-4731-97dd-a50716cf11b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0369171e-899f-49a5-9d79-dcde2bf32fc1",
        "cursor": {
          "ref": "ef317d99-868a-49a8-a517-3e338050ec2b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3d988d67-d514-4a3c-8e05-841b12a383a9"
        },
        "item": {
          "id": "0369171e-899f-49a5-9d79-dcde2bf32fc1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "576e492a-82b9-4cdb-be72-246fad0a8684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae191c7-53a1-46d9-aaa8-9d50ed00ff21",
        "cursor": {
          "ref": "917e5b42-1c1d-4da4-b18f-b4028c620761",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2d4b45bb-7221-4670-b909-dbb24d769a6d"
        },
        "item": {
          "id": "8ae191c7-53a1-46d9-aaa8-9d50ed00ff21",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7761b7a7-683a-46dd-ba29-6f1ac33c672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5c1513-3031-4271-835b-8b8c6a349a37",
        "cursor": {
          "ref": "f8513234-1e30-43b2-b714-3662bc571790",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a3c651c7-eb01-42ed-bb3b-406367743de5"
        },
        "item": {
          "id": "af5c1513-3031-4271-835b-8b8c6a349a37",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fbee5459-9aa4-4d7d-a5b6-551fcb5327d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f189bc48-16e0-4c74-9c3e-2e02d97156f6",
        "cursor": {
          "ref": "c37f9f78-6efd-449e-afe0-0ed74c3c2c1d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "08a660e0-ef67-4970-bbaf-78b31f9a5593"
        },
        "item": {
          "id": "f189bc48-16e0-4c74-9c3e-2e02d97156f6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3dd3c272-a22d-4c89-9424-ab20059cb024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f30909-6dfa-4f3d-99d4-36014a6bd9a9",
        "cursor": {
          "ref": "8b379580-3233-4b3e-bd8c-43f7bc7b2642",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5dcaafa1-afed-4da8-ba1b-967f5e524666"
        },
        "item": {
          "id": "84f30909-6dfa-4f3d-99d4-36014a6bd9a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "45325113-1562-47f0-bb43-db73a3695829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5b20aa-c542-4032-8145-9a14f20bda76",
        "cursor": {
          "ref": "0b05943a-ff70-4b42-b69e-3e8b2b4417a0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "367d3d06-5e7f-4172-9d2e-1eefa7c80a7d"
        },
        "item": {
          "id": "1b5b20aa-c542-4032-8145-9a14f20bda76",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c9c3902b-e8cd-4959-b3c8-6d5b74ebe0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31d1d2e-11ea-40f3-bbee-29ad0804471d",
        "cursor": {
          "ref": "05c27eda-474a-47f8-aed6-432b5f5e9634",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "eedd05d6-2bf8-451e-8b87-66598ede8104"
        },
        "item": {
          "id": "d31d1d2e-11ea-40f3-bbee-29ad0804471d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4c940253-fd5c-4011-9215-5998ae718125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5c86b-1cef-47ec-b6a7-fee52b5eec4e",
        "cursor": {
          "ref": "3489bf5d-6456-41d7-9a9d-a4f370170251",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c0ff7d1e-a3aa-447f-a2da-e3e3e21d99ba"
        },
        "item": {
          "id": "0df5c86b-1cef-47ec-b6a7-fee52b5eec4e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5224ef3a-5566-4ffa-92c3-faabda268108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68976bc3-a4e8-4d30-b23b-7a7741276a21",
        "cursor": {
          "ref": "ed92fda6-227b-4f49-a5a2-058190890179",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "99a2ddba-7270-423b-be68-86221dd5a615"
        },
        "item": {
          "id": "68976bc3-a4e8-4d30-b23b-7a7741276a21",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d7f07d0f-fd26-4a0c-bb67-af752de2f627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df25ac19-f981-485a-9bf7-9a0edf891676",
        "cursor": {
          "ref": "5ae73efd-59aa-4ddc-80f4-1fabae9fbd0e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5087a60c-11f6-45e2-aa77-1333e09c180a"
        },
        "item": {
          "id": "df25ac19-f981-485a-9bf7-9a0edf891676",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "db2df69a-8c6f-4a2a-8712-da0944e08813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb36c343-c56d-44e5-acac-edbbc36f49c4",
        "cursor": {
          "ref": "3acdb782-74ab-4cec-b916-a4fd77c17e73",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d7ca1df1-dfab-4b09-b8a1-228f72b7fa8e"
        },
        "item": {
          "id": "cb36c343-c56d-44e5-acac-edbbc36f49c4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "65145236-ae46-4f2b-b32c-e8acfdeee6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4096d2db-a541-40a0-8412-f942faabd37e",
        "cursor": {
          "ref": "df1c7b40-3928-47c1-a787-baa9d0c007f0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fbd65a01-20ae-4c77-88e7-19748f92e300"
        },
        "item": {
          "id": "4096d2db-a541-40a0-8412-f942faabd37e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "234b0e79-8a25-4b87-8553-db90da5bea8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232dc5ae-1f21-412b-8476-1ad0e3dc4a15",
        "cursor": {
          "ref": "41310016-39ba-40ac-adb7-d517136cbd6c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b1c1f118-8dce-4921-b3f9-7b4be52e19ab"
        },
        "item": {
          "id": "232dc5ae-1f21-412b-8476-1ad0e3dc4a15",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c9b4d79e-3226-4e28-9c0d-b4e0128c1b0b",
          "status": "OK",
          "code": 200,
          "responseTime": 437,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b09e6e-6eee-4fed-93ac-35d57eda6a04",
        "cursor": {
          "ref": "5e2a02b9-0bdc-477a-8de5-8d691d5b9a7e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e7688ba6-d2cf-49db-a387-332f311eef45"
        },
        "item": {
          "id": "38b09e6e-6eee-4fed-93ac-35d57eda6a04",
          "name": "credentials_verify"
        },
        "response": {
          "id": "af905393-14cf-42d8-8559-7bff19e384dc",
          "status": "OK",
          "code": 200,
          "responseTime": 1622,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca77f70-dc3c-4350-9830-4b8922e4b74f",
        "cursor": {
          "ref": "799258af-1161-4077-9d3d-1e02303d5379",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "92db0f89-34d7-46e1-a770-bcc7bc5ad428"
        },
        "item": {
          "id": "0ca77f70-dc3c-4350-9830-4b8922e4b74f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "638ed40c-de8c-449e-a051-5668af75af52",
          "status": "OK",
          "code": 200,
          "responseTime": 1525,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e5d7df-f3a8-4516-9d90-072a87fdb225",
        "cursor": {
          "ref": "caa8a187-78a4-4f4d-aa1f-197885bfe793",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "caf15ee2-a8ed-418b-bf98-1d8f6155f17b"
        },
        "item": {
          "id": "84e5d7df-f3a8-4516-9d90-072a87fdb225",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b6cdaeb-01b6-4e8e-9427-a99bd917feb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e5d7df-f3a8-4516-9d90-072a87fdb225",
        "cursor": {
          "ref": "caa8a187-78a4-4f4d-aa1f-197885bfe793",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "caf15ee2-a8ed-418b-bf98-1d8f6155f17b"
        },
        "item": {
          "id": "84e5d7df-f3a8-4516-9d90-072a87fdb225",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b6cdaeb-01b6-4e8e-9427-a99bd917feb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b746bd4c-1549-4998-b872-3a7d05052fbd",
        "cursor": {
          "ref": "d8e5f6a7-133b-4096-9f89-01eefe310d00",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "993dd4ac-33e8-46d9-b052-2106c2107509"
        },
        "item": {
          "id": "b746bd4c-1549-4998-b872-3a7d05052fbd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "637304f9-e1c2-4333-ac4a-3a4e5ed5f54e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c8702f-876f-4c39-9feb-bc4f4ee0ff85",
        "cursor": {
          "ref": "ebf98e70-23f9-44e8-a389-4602ca7ee72c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4ed7d984-0b7e-4333-8439-c957e9161e8c"
        },
        "item": {
          "id": "b0c8702f-876f-4c39-9feb-bc4f4ee0ff85",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "716771a7-1101-4aa4-9484-338ae94314e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}