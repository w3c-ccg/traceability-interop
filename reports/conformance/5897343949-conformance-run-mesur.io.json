{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5138278b-a07c-4300-8c22-ec32fc23e9b9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e2ffdf78-7b97-46c3-8b06-a19ab2c5edea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57f55035-14ab-421d-bae5-9078eb288c16",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bcea9ab6-e00e-4dee-abc4-b989f331bf95"
                }
              }
            ]
          },
          {
            "id": "87419052-4891-4059-b3dd-06af29901847",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cba02c47-4038-465a-b841-307e6047a66e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ce388cfc-acc2-48c8-91c0-1912ecc46782"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de7caca2-af93-4427-a181-e5aac7b5f4f3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "891d5d98-19cd-4ea4-a638-1fea2c0d7234",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73eb8529-454f-4ad6-993e-af210a32e447",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "328cec5b-9380-4d7d-b14a-a36088f3bd4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c92cb805-7264-49db-9cff-bf28f045a8f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "075757f8-6e5e-48b7-bbbe-2fb52a95f911",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7121e118-a6d6-4fb5-b8fa-7480386510bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "862d9223-ea95-41a9-b38f-9d24405a40cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39b9592f-2855-409f-a773-70ef7183fd82"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c248ec63-54cb-4baf-9de7-f337f10d4a44",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "feea13a0-6768-417a-be79-ba735ee08962"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4869d01-5214-4498-9698-e8f3a3288f34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc03e52e-81ac-49bc-b292-cb56bf456ac1"
            }
          }
        ]
      },
      {
        "id": "e9356a43-83f3-4bc7-b80a-0853b671a3cd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "01c02dac-ff8f-4c2a-ab91-9b6204aba59a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "929551f5-834a-4a6c-8e22-ba951b8b10d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6408473-7c7a-4276-a3a0-935f2c6217be",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de0d5d-4c0e-44c9-90ae-6ca490b1f49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53a9fd8d-adcb-4499-8071-52139ecc7d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33aa473-0385-49f6-9bcb-8af823ca5dda",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aa1e46-002b-4f3d-b2c1-675c5cb2608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46490bd0-adc4-4794-bf1d-f51e4bfc6b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc87194-d05d-4960-9bc6-f273fabb60d3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702c142b-2651-4480-8058-04597c0fc981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63da273b-aea7-4028-9b52-e2a5f4a69ebd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ec8980c-ba7f-464c-9685-cff1849f147e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87b1f2a5-2df5-4e6f-9cff-b73f54a830b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c2ea8-7327-4a67-bf59-42740dcbdbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42a00ec0-6b96-424e-a560-6289166fab12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc8904f-68fc-4163-a303-4fa37b2b6bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62049a32-6119-4b4b-8126-4a1d22d2a96b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7fff6a2-14df-46b3-a8ea-20cf2714f562",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be7574ee-fceb-4d89-8d11-76b056dcfe75",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccae9565-45b3-4507-bdd8-6cf212ce5f9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "adeb22b8-89ff-430b-aaa2-0b6a967a478f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6a74ca-0e16-4284-8628-df4ceae94ea6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ee83196c-0f27-4f79-9dd3-36654b76b638"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77e9d16a-3ff0-436d-be3d-a1e7985d3433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "544c44f0-ed93-48e7-87f7-5f30e4cd31f7"
            }
          }
        ]
      },
      {
        "id": "6c0bba39-3188-4052-aa9a-d022ea0f1a59",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a3536c5a-6cf7-41d7-93d0-34ed7b3479d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ee5dfb6-947e-4a37-bc93-864c71581d2a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "45b8e82a-c2de-470f-8070-d89857a3bfb3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ef2ec5-8be3-4268-a521-142aeef5a523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8243992-7a13-4c68-98a3-1fafc1ced18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9ef18a-8bf4-4b5b-99eb-327a412ed3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4969d454-4b46-46f2-bdb1-d1c8c778e5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b14ab29-dee4-4b3d-b4ed-496569197b44",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55adea20-98d1-4ed0-8a42-89e3c8f069b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0b5611-514f-49b4-9f21-1973d3744cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263a9c1c-decb-4a65-ad18-cbf14450035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa2ebe76-0155-4c03-b0be-b087d9ef56e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ebff1c-ce9d-4679-854b-9616261d28ba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5820d5a0-c177-48dd-9169-92892573ee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191a2277-e002-48c0-b6aa-1c8c068802e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e3cfb-4477-4118-8331-fac78a8724a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f6a3da-73f2-4151-a0ba-9f8864b62ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed78e1-0281-411f-9539-0a08783d718f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d50cff8-4d54-43d2-88a3-df127176410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e2f927-ad8e-4fa9-9bde-36299f755e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dce12a-79dd-4c6f-b010-3621e93245fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f98b69-8ec0-46ce-af2f-07a56efc57eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19e748-1d79-40ab-80ad-a79329561d59",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b2898e-5822-4aeb-8a60-26e1cad98328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f67d8c-f1a9-4d7f-abb0-5dce76dc73fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b948b1a-bc48-4869-b5ea-31a12ec34c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "090febfe-6ccf-474a-af9e-d45fbabf45db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77486986-67d7-4a2e-b940-b52b1440776a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e62bdcf-563a-43e8-98cf-70ee66f7d902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7087177-3d96-4dea-9691-2daa7e6dfecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681016a7-4448-4bfc-9ba8-ef2226e6c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dce82253-6365-4a43-bdc0-5a32b129ef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4893d491-c8a5-43be-b230-1f2b4ee1a83c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88339dee-0c18-4c89-b41f-502acab71bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2123756a-218e-432c-95f8-4f055d59e61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bd8795-a8f1-4810-a4f2-b5a97df2468f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8229bb-e327-4b38-aae4-3329b224dce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0852d435-ed9d-4e12-95a2-962515575ad0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5a98b1-c58f-4db4-b3cf-1befd71403b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9c3581-6c2b-4561-a2a2-e8e7e1d48fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ddf0fa-cd9e-42e9-a632-ed9b9dddb45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75ed2960-6772-4adb-b703-65dde56682f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094cb4de-f83f-4717-90eb-8a66cf602b57",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412f4a80-6efc-403a-8153-4851ce19e416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4016d1-35e3-4cb5-8041-23712d82d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f992c3-fdb7-4b94-85fb-86e37b4863bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35ed2e4c-7a05-4044-9b00-731d5a574cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46ff4b-ca0b-45ce-86d3-7193e7d431bb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3fd46a-44d5-47c7-8588-8bd82948fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0b3911-bb63-4153-a2ce-288ff475fc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d6a16a-434d-488d-b769-37a656ac198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811af025-d93f-4875-8e45-1d571bec4cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99c42b8-0eaf-4495-a8fe-bfbb7c1545e3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e2a84-622e-43c8-9a6b-461952dd0364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d65f34-5880-4b21-b6ae-b901b03d4433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac71ac90-a920-458f-bd51-7b205138143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "834743c2-f098-41cf-837d-0177ba07a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf7b4a9-7d8a-4e8a-816c-850865099554",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e295a2-8ec6-4b06-b6ab-63196d851b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2644930-2e27-459a-8093-accb03299592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316246c1-af8e-450c-8f7e-549066e9d4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa624710-0a89-43b6-acc0-ef8821c49e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79907e-7918-4eef-bdd9-ae1bfdbfa374",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62c276-ddd3-4604-b4cb-95bb4db18d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749b7fa1-19a1-4016-b939-3003cc3da8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82e807c-cb67-40a5-8278-55eabc507f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c546abc-e2a5-4583-8e2a-8c815678aefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5e6db-f0ea-4ca3-8294-83af03276e56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61be68b6-bcc4-4bbb-8a9e-c6ac456c6815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5f19b5-febb-48fb-9e86-4759e67f0c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7f4b8f-244e-4267-9fa0-88776afe58a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07686087-8368-48b2-93e2-a515d656fdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e1e04e-7485-4dd4-a1e2-212a6414342e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3459f9d9-5583-4f30-b341-7e5ae4589fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f754e296-84ac-46d5-8da8-290a450ce867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f0773-7aa3-4e0c-8580-512552b24cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d6e85b-a9d9-4bc3-b928-813968ee2525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ad7a4f-1007-4c34-8cc3-2869c7fc3122",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50166413-32d2-4f3a-aa12-116a4d452a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402552cc-0de1-421f-8816-d919301e06ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e1fd14-92ad-4932-afa2-a1dfb910114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeca9025-0c68-4670-b744-acfc425f5cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4be2b6-d21c-44ac-83ad-9ee6bce1fc25",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c83f8fb-14aa-486d-885c-860b5e2a4e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ddd71a-bee1-4e33-9267-106a408f187d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3063bc-7b58-4539-8373-2814e9deb1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8a2dd41-b146-40d1-a53a-0e42a2f08856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7bdcfa-85a8-4a03-bdac-9f4372e949bf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae304893-0819-47ff-81f6-e659c45bcd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebaf091-00ac-48f6-9c12-ab30d44a5e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2035cf7f-751a-47bc-950e-21156b18151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "724191ae-45c0-485e-af7d-9483a3fdfdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f94bb9d-2008-476c-8672-c29bf689b7c3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85d4cc7-9583-41e7-96e1-65720074bdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2585578d-e859-4970-a991-a6177d6801c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eecfd92-b17e-4286-88bb-0abb42537196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2a9798-3875-4539-a745-8536021c2dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1498a5cc-7d76-43a5-9ba5-e20fc444188b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e5ac84-90ac-4bf5-8c41-34999df41f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753bb645-045f-41a3-9723-f9b5f4866f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3f46b1-2551-4ca5-b262-9e0d3fde93c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cbaa67-70fa-43b6-a3ef-897a278e6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e71511-2bbd-499f-bfbc-7a307100bd73",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55fd198-1c27-490e-a2fa-5fed4e078046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9b2466-a6cd-4360-bbb5-77e8cd5b9a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd84ddb9-fb28-4609-b069-873351c58a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bbc12d-7ac0-4d62-8bf9-198392453700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000d0c02-a86e-4261-890e-0107a087f827",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6e3e32-0d7f-41b6-8354-9c531530395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92436cb3-63b7-47f6-b149-f16289451441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0ca57e-1384-44ae-8d74-db41521adc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b240d2-1dbb-40e7-8c0a-64afa7458a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f875bd65-1a5f-4ae7-bd2c-920613cf85d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3115db2-84de-407f-ac0f-bb5a3dc08114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b36bae6-41db-4b4e-94ad-388555101113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6357855-021c-4b67-bef2-df9b9f33c84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2194e899-fd96-42c9-ae0f-3fdc26cfd9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb37bb05-17e8-4d8c-92a1-521f6f652e3f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaa82a2-cfaa-4b2c-9188-971b93342098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0339f77-b89d-40d8-a0e9-75745223bf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59243d68-bd01-4dac-a332-a87d03299fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c580f1f-670a-48cb-b04f-bc04d535a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc52e6b-3cfe-477c-ab9b-4b76b95f05c4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaa9438-4cac-46c7-90b0-f48fca7e6382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9e14d1-9460-403a-bea0-363071bf2b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3414a-a751-4a09-bad4-a4efd97be838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13b36fb-5ba2-41a2-bbd0-cfdc25424e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c955ebbe-279a-4ca8-9f30-88ed36a43acf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05f209-1daf-4ada-99b0-29245571e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887e9796-8368-4099-9428-14d9b18642e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d0a3f-4e99-46ab-83ea-7f31a59dc171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "929cc11d-0da7-4cca-839e-36eb2b0d0e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83197d6a-1680-4e7d-aef2-a8b133a25dba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049122a4-376c-4795-b0a6-f8f8942bfd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87226da1-4024-4d30-98a4-1627e67fdbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd47c5b-33a7-4c28-97e7-7a7cab2b4703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4e4112-ae53-4e83-b31d-f4558488b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a3ebf9-0092-41c9-bfe2-9faf2343cd8e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ef28f4-621e-4936-90a5-f6c7dabe567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f173e2-2475-4469-9976-a33cbd2dedd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41afb598-bf5c-48fb-9eb1-bb053f9f1319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac92c37-b2af-4107-af68-196521773569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188e7639-5b9f-4103-927f-189df4afa54e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d37d494-9b23-460b-a872-0f5d58ddc0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b2c8ef-96df-4f7b-b470-39c48bfceea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9c5073-6929-4209-99e1-32a5fef445f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7589ade-f222-4bbf-9a5a-b61c34d2e172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8220459-f171-45cc-b27e-184cdc414d8e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad75465d-e389-4525-bfe4-63289e7486b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5500f5ee-94ec-438d-8b88-bff3f1096564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323f0034-b2fa-461d-b1cb-fe7530ec90ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e14c95b-a66d-464e-8cb0-f9326185b236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc97bcd4-8ac6-4bf4-853d-fc408c038954",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c5315f-de18-49e4-85bc-a47dfc11521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830163c5-c8db-4fce-8207-63d93d0b1598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888d08ca-301d-4ebb-b059-d9b1998ad6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "366f92ce-79a5-4ea0-a550-928332ab3ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbebdd3-4fdd-4511-8b90-21efd20f04b5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7675781-22bc-443f-83be-c0008e713a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044648fe-2ae6-41ab-b367-79bcbed6a6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1910e5c7-a7b6-4093-b9e9-1395330543fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "276b1a11-3f39-4db9-8d0d-ca684e961dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0154e978-275b-471a-9914-e375c0d8e19c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67458bb4-31e1-42e0-ae3c-1b404198d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3b0ee4-5a93-4444-949f-96a14fe7f8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0471be68-d99b-467e-849e-2658953106fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4dd38f-3398-4a25-82bc-ee188e84ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac07c4f-1d42-4286-adc3-aa4d46285f3b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b3c773-51dc-4657-8401-783e0fe76122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e684b605-218b-46b4-826b-e59b9f54e8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f08cbf-f13b-45ce-bc79-ff5f9316b597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb96a090-9db7-4cd7-bea2-df71376483c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c492fde7-ce5b-4ac1-9074-a71befbebcd2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ab6fe-2a62-4615-9b8a-197861c31fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcef315-ecce-4d28-9a5f-00e1a7a45a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a848652-0c1f-4c57-9e18-da35c64102c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "abcc12ee-158f-4068-8e5f-65f2c30e7d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186f0dff-c1cd-4dcc-b9f4-1c5d4805f0da",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bb84bf-18c0-40eb-962b-fe6a6b671e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26d68126-e767-448f-8417-78153ec4593d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a560c9e3-0bba-41a8-ac21-383ac7c0f08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a28bfa3-be7b-418b-9639-874dc33e79d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adbbf0c-eac0-4f43-a830-8eedbf09107a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdac2d95-5d39-4b96-9c83-7cb2e5f6fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687c718a-e51e-427c-9570-95a67643a630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e128279c-66c1-4fda-a545-e813494a3418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3aa52f-3f31-4d55-8631-b1987d93997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b369f79-9c9a-49d1-8750-7cd109d4a166",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e44e4b-3c3c-4d5e-a346-8cefeda4eb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c465b1f-261a-41f9-906b-46c9c1fb1503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced9ad9d-252f-484b-ab0a-ffef1be3158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d837cd0c-e16c-4101-9344-f3b2cec18f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc330e-e358-4f05-92bb-020d4885f81b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c127472-4a07-41aa-b251-fd4924693da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0839c80b-6ea7-499a-b563-006eef755b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e34395-5671-4ac0-97a3-bc490dbc9088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "613a9ad9-bbe2-441b-9edd-34f7ce84111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee39960-0b55-4a10-ad9a-f793dc7cbb90",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe7303-4d4e-46d4-8d41-b85b37f494e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b64723f-7134-4738-9322-281feaa8d6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87762389-65c6-4aaa-80af-22b568d34033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "128d01df-6fda-487e-a2d9-c9f248210604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b55fdff-9b84-4d39-b552-0ee4f962537d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16386ec8-e891-4605-9518-d68a83fdab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252bf9c2-d679-4346-83e9-4ce3ab379baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6109ed7d-6c65-46ae-b179-9bfa1bdf58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede8ac81-9e86-448b-b32d-84a17119ef0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ebe8e6-1cde-42d7-ada9-49456f445f51",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ff9486-7d66-4c94-b9ce-cb3ae9041610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f000bedf-b590-4384-aa0a-0517274d1e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f7835-7137-41bd-92c2-15af73210400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "136d1692-2932-4368-8cae-adff8ee0a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b9ccc5-1687-4b11-ae43-8ad86758572b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504a8375-a744-4f0c-b6f2-4d323e5c48f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5293c961-82ce-407d-976c-3680e0cb1630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eafc2cf-32cb-461c-8b48-0fa7977c861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1c16fc-79e7-42ad-b59d-4a2d77eb04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b27640f-c64d-437e-bc6a-b59cced73789",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69b7ba7-c42b-4926-b1ef-37de8cbd99b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832f6618-f8f8-41be-b25f-efa860d75565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6c91ae-2653-45db-9d3f-816e07234b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff00717-2d25-447f-b287-a5aeab8954bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c74c61-31ee-4efd-83c1-b3d4947c828f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515eafe-70a4-4658-97b6-bd2d5292fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5117b87-67b0-4122-a9bc-ff4d32a6e6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09213a5-2f21-4d97-a3b5-52d9c9e51fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc71fca2-e195-4d9f-8e75-3d22dc093eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcea34c7-ab03-49e3-8876-8aaa282e7564",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667968c4-e3d7-4477-9961-f1166f7560b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa101506-a437-4c91-9a03-fd1653540183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73f776a-5817-499f-81ba-122d078b9703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc891fd5-3c4c-4922-afdc-cd7b28b5c515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312acf96-71ca-45a2-903d-e820f14c48ce",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642eac46-758a-4d82-9936-bc55bb5307fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4a3cdf-f9a8-49cf-9fa0-590e7b46e89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f05d4-26f9-4d5e-89a1-9d359d1a1264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a240bfa-07de-4379-be84-def1fa7405bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed116f52-adf7-4da9-bf52-b3ef25faf65f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3ef29b-e9f1-404a-a344-1f7eca15f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a334523-056e-4c5a-ab62-e69597c969f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0d78f-5c7e-4ece-aa09-d198b029f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "649a3c41-871a-4298-9d5f-f41368aac790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de7dda5-ba7b-4ac1-8f7e-fa66a00e646b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a66fcd-a38d-4385-b038-156ac0379092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b09477-b7e1-4e5b-ac8f-323397e26f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6aaf5-ccb5-4d34-958a-2bef55551c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "638fe650-db87-4d41-aaf0-f7b42681f09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f4f883-049e-42e3-b7ae-8c21c32d08db",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4d641c-4207-48cd-b6c0-007bfd3067a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ed0710-31fe-400d-9e63-183de6613806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b737105-1bdd-418f-a9fd-604b832c5d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76ce0b6d-2451-4113-ab10-a891289d1088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92426ce2-1b81-46dd-ba06-18f45f7f313a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edd40c3-7b2a-4ce1-8847-6583d0799c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c4b7d2-c31e-47ff-99f5-25813ed1b271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf3caaa-f718-4383-a93a-e67ceb6544f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "00670e69-9acd-4685-8534-1f1fd568e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f2320b-acef-49cd-bf14-3735981ea5d4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63040c2e-01e6-4673-92d3-d4194f37299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05950f46-6236-4bc9-95ac-dc97abd43e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2042a14c-7e04-47bd-979b-3ee6a69fe064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0ceba6-93d2-4f53-8b70-99bed5261c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee93735b-4708-4300-90a2-a68ccfe9acd2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd462a3-96fc-45c0-83c6-53f944439b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c00ca-a922-4a32-98ba-bde215f3f0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38070fb2-a61a-4bd0-b88d-47200fcd50ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf7ba9b-1141-4407-a0ec-940850247190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bb3283-c94e-439d-aafa-1f43b614f137",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6012cfd-c522-42ed-aeaa-3b2a68ae6e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6edc241-d082-446d-998e-a604c1d5a5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b63333-11ce-4b47-a90d-3b3475a0a03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b9a79-0e05-40a0-9fbe-2df71c8c9a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b272cf-0f5d-4892-bf0b-96958d467b9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c43ba4-7ea8-43eb-9dfd-158d1f18d837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9468fc3-54fc-4203-9f7e-cfd205084c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef21e4-0d43-4c96-9ed8-3d4f6c27fd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a2d8cf-e31d-42b7-a811-e8f9587c6792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a32580e-2e8a-4df4-a8cc-21979e111ee3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9978c0a4-ad54-43d9-81d7-47d31b95fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324f720d-d7cc-4ae9-b859-73ea27b0ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145cbb0d-d160-42cc-b6cf-e9a01bf2bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0b0e20-d8bc-4cca-98da-f53893bc41e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747eb12a-5045-4b04-abed-4f861727a839",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec59be1-2cfe-4530-b5b0-9bbf6ccf58a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da7eec-88f1-4eda-b454-4e5f63678362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e820868d-e490-40f1-9102-791b64191a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4b7397-1c3d-4676-9b59-f039fec1acb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3d8855-9468-4469-bcbb-47e8ef5d644d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a98448-4eb2-40eb-8ed0-12ab30b3046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c809c5-0791-4600-992e-cc427c103a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa33628-2240-48dc-9b02-bfd188c5ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22d783-6737-4d58-8c9e-0d036996d50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fb329b-7457-4643-a757-9e562cdeeb04",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a180c8f0-b128-4ddc-ac2e-e1a5bc3c7f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c717fd71-aa88-4ec8-b160-5660e6770963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c63dd58-538a-4fda-8cb2-976eea4b903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9911fb2-755c-46c1-9d0c-e5c3f55ac031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d438d5a8-c741-416c-aa4b-9e3607420984",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f20b97-6fe6-43c8-9e2d-66db09520834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e400f5a7-2578-4ffa-aed0-790054618419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d97795-555e-4fa4-9965-11164dd0b84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "030c6d49-fbad-4a37-b21e-1efb054c71b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f472d7-54ee-4fdf-b1ef-65077b73af99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124d3ac1-9813-409b-96f0-60518dfb490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cac2d5-77a3-458d-abbe-8d32e5172387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07711e41-0b81-4452-8d3c-72d62fb66caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e46603-f5a8-4363-889f-5b57ffd4f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a959230-714d-4a73-8a41-79a4f0b858ce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011def48-abe3-4807-bcfa-989bc459f183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4313464b-77f0-43e9-8c8c-044d1ce3e354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df80e380-8484-4cd7-832f-413193f92d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b148fa-7687-4be5-8b61-a8428667d2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452fe443-e3e8-4c55-9203-2c60ca782f99",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4b03a-55d2-4f7b-91d9-4f6fc7e2de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6819202b-c124-45df-b3b0-ea09e4e74044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f193bf-f490-4d0d-9c92-bce18c8678ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d10c24-802c-46da-b70c-3fc92a099b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db41928-8c07-476b-96a7-9f375910af15",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d002f0f-0d27-40d3-97e7-dfabc399ea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77532fb1-24e2-43dc-991e-f25f5f1f11c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe2602d-fe42-4d62-92b1-04344a3e1f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2d3844-22fd-405b-a8de-c589595f5f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d03581-2ff9-449b-9d5a-73675f64e0a0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8b1ee0-e97a-4c68-8458-fc2f567ba801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe3b17d-8cfc-42ce-b790-c8186b789ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0142b36-5d83-40be-ad88-ab4231d51f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "663ef5c1-fc74-4337-9639-33993cd97725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3288e9-1564-456f-b3ab-92a92e17637b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155a9f4b-3736-4bec-94b5-64a28d2432da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4a8978-450f-4c34-9d6d-5956b6671443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e21bdf-0db6-4473-ad78-a4b01a0842cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbf50f7-bb90-4d6c-874c-764dc4ce519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9269f31-db7c-4bf8-8153-eefacce28f36",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad7e4cd-12ec-4b33-b268-32aacea49cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94723cb-d129-41cb-9225-322524f4c72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e7a24b-60e0-4f13-bc31-557862ba45e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29cc1a1e-0594-4606-93e6-10df88860f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae72132-1c4a-4479-acb1-2a90de17d422",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1cdcfb-66d4-4e14-b7a0-a6b16b0cacd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b6def3-b53f-4cec-9118-21165601baae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59726468-6187-47eb-9d2f-9bb556614327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7ef939-eb6e-4c13-be64-c6bca9909ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58689d2-691c-43b7-a7df-620b710e3966",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13a82a0-8b4f-4ea9-a4e1-95b01ae4c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e041ba9c-b853-4c6e-81e9-69543b0aa32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b231fe1-a8af-40a5-924c-f617fe7e6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b019c498-cff8-424f-b011-c1970a3a2737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393b509d-be53-4e0c-8cf6-ffc0421e84fb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52a6b13-67d4-428a-8639-fafaa7d16da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a03b08-57d3-4f71-8b0d-b53f58d497c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd52e7b1-a7fe-42aa-aed3-5637fb17a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee80d71-80d2-4088-8543-0d11a289799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb90acf7-5b73-4c96-b307-2be1b36b1d59",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b30b4ae-54de-4313-bae1-c2cc054e2795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40679a23-f533-415c-8f8e-04e33e2e7eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9691fd9c-4e68-4738-99c9-030e68cef7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb6bee4-8fdb-4b4a-8489-5a08edbe4b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210b29a9-6f75-48b3-9c38-456397742240",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aad8a4-3370-43f1-845d-ff2dd0cb88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcf76e2-79a1-4210-90a2-09ea99bcbc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3669fad-183b-417a-8694-386cf1d9865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3888f35-2019-490d-8e97-220f2998ffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16e5622-d2ed-4890-b389-97e764a035ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18137400-dc1b-4d36-af08-5c20e4243b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103e2ac6-6aa2-421e-aa58-5ab646b4c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae538f7-a1d5-4e9a-adac-1f358d0deed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a00c12-81f2-429f-b793-91c4057f65a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9445447-c379-4b7f-961f-eab79e47a381",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fb63a3-1934-4f1a-a77c-e9744d104dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869af086-c9cf-4108-8216-7d1f04c899bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a9d968-22f2-4d07-bbb4-419ab7b3ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b27272eb-16b8-446a-a49a-4bee6f134e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be08f417-2b73-40d3-8a1a-def8d42dc25f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e063b139-d003-4844-8687-bd12145dc4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8056b0b-310a-4c46-b30b-a06971f2204a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcaf824-ce36-4dac-9212-0cfe806b35d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93284a7-7318-4082-9673-b00dc38253ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc02ae-c3fc-4dde-9c9f-09df95f92cea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837da485-e2ea-41d1-847b-8b438e9cd051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd6007e-600b-4f69-b41e-d1c1cac8f62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e0cbb8-eaf5-4c23-8c0d-c5b2aaa9412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f788b787-85c9-469c-9b74-1f4a03a51538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb96a0-f68f-4bb7-9333-7cf1d8bcf185",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c356e699-dd33-4da1-808f-b91401533652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f520f3-2bb0-4063-928d-31b65b510303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612b17df-ebea-4bc5-82ce-a10050f730a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6660ad2c-75e7-43c5-97b2-6f65e82d2af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4bcc34-a2f1-404f-b5d9-67e768f266f4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ad5d4-3dbe-4ae7-8dac-b936a6b3bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b588484e-9df0-44ef-a3f8-585a826d4e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e2d63c-98b8-4a5a-8333-5efe3cc369cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b345fb-b40a-4137-8ef6-eeb0462b6251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d144d733-d9bd-4691-9c28-27eac0becb91",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a5522-d5f3-48dd-bca4-e1d6d185858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0b8c2c-584d-4b24-ac0a-e0bb78d8942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96411bb-96e8-42ff-977e-697176fadc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2364d21-d27c-47c8-9efa-d8185e7adfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e221a520-c814-40cb-a156-63dbfcb56cf5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c82ce-dcac-484f-8ed5-7143deb1e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7e2b6a-d40f-4b0b-a164-56fa3d6bceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3ab3b8-1295-489c-bb06-7ade829f4c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d6f92b-85bf-4030-89ee-4ef053d6e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b057e363-0c95-4a07-813a-0f9652c78309",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5ce0b0-5100-4f3a-854a-0f42b9a3511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4cb25e-44a4-46cd-8531-e929273779fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71b8aa6-fadd-4bce-82c6-8a70628cd552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "684aafa5-5d51-4f45-8c64-abf0a91a37fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1e3fb-d666-4648-a78e-388621c8113a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e85f26-8bb6-4747-ab05-e745bdd7da51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50568a0-7dc8-4015-82f5-170d86779602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c2e803-3eac-4fd5-abfd-7e3cbfd26ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "698be3fc-a4c7-4240-930a-74e3ef6a6981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0705ed2-e0d5-45f0-995b-d6d4ebf93c33",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846e8370-9b7a-4332-8b07-c6b4ff1cba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ce38e1-eeec-4c85-af13-b70be9c10b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772d3799-9a34-485e-8e10-3599516d09b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6ed5fd-7a78-48b3-ac90-2a1072f6716a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f42872d-0fec-4baf-bbb0-23359e2de00c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ca189-e46e-4679-b7ae-fe8f5352acba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec3c1d5-0ae6-48c1-abbe-a6cae3970409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb9ce20-4acb-463e-b3e6-c38e21ba37e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae77b92b-6d49-47a8-8d65-2b7339827f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526da7dd-3c38-4539-bc2d-ba88edc442be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d129354d-9903-45d5-b716-0e02c54ba1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dc50f5-b880-429f-b82b-88d482ef1b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a416c722-2195-4106-b85d-c49fd62bf682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dffe63f2-dc11-4abc-9e72-2c0ceaa1c79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d684613b-d580-41d9-8584-ed0c809663d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c997294c-f2fb-4f06-91b1-6c9086e72d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28abd230-49c8-4c92-82a5-ac18f89905c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7414c0-160c-42b3-a8b5-748ec679c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b317f8-e05d-4433-8f5d-3eb566d8b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6252eb42-7d14-421e-98f2-b3fa8edbbec3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdb00ba-85fd-4f76-9de3-a489d9dcb711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d94f9a3-e408-43ca-a57c-f5368d11c3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57fe4ee-8274-43dd-9b2b-8af6fdda1f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d168883a-cc14-4575-93fe-e4aaef4bfe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21da37a-265f-4895-b1f8-6a7c951a97af",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfe56ce-cb64-4a9b-bc6c-7028ef61a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b51fb7-1519-4add-bfcf-01586e647757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932b094e-f445-4084-829a-e905d2ad60bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83e1b3d7-cea5-428b-b99f-661f80a5987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a3521a-c9ba-49cc-8298-b9243cbfdb8d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243ac3d4-833b-438f-bf16-c7146f0b0a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88ed38c-1017-4307-8080-2a170c3429b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719167fa-577a-4a89-830f-887e0d439147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f43d03ca-8664-4ff2-802c-5a3b6bec2563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f8a89f-37f3-4a69-802c-372cf62141ed",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86b7b2d-5373-436d-9da1-e47dcfa21f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d0ffa6-8de0-404b-94a1-f271acdaf700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0e91b-7e2e-4e78-ad64-de01e6a04d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3242aa-57da-4c01-8f27-d2254113f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff9c7c4-cfff-4dc3-81fc-9bd0eb020e99",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e943c25-ff80-421b-9be0-4a230546c6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab071bd1-f7e7-497d-ad7f-791505e0a394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f337ecc-3dcb-4dc3-87db-ba140f171829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21c346a0-55b5-4968-b454-5bcc37a4b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9420dd-e125-478a-841f-1cda40b3f385",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57fd838-91ef-4657-b2fe-83c1037d6ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1aa34157-c76a-45e4-89fd-04fb9faed620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc5d023-cd69-4c76-876c-2f3505a14bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "964b78fb-03b0-42de-ae2d-fa7be97bd773"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "734fa5d4-eb2a-46ac-b992-6f78498bc2be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f1f748f-7295-4298-bdf2-d2ef574396b3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82804cdd-da57-402a-aef3-b96b4e477cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a8d5baf-df92-47f4-82cc-d15bba2b1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543905c6-d2f4-40ac-870c-34b63acc255c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6cd8ac0-f5d8-4144-8a9d-c8a3770692b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1f753b8-2e68-4049-8ef7-70c9f25f619d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8d872d-9f92-45f3-8a06-677bd8b9f503"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ae81a4-2e15-439d-b143-1b192c9f7f5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d8fc7a6-7574-42cb-ac8c-f3bf9625c970"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8df13f25-355e-4e20-9527-d8f0021c5c35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a7cc236-956f-436c-a9f8-71d54e421599"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e67bf7c1-698d-4496-a0f6-fc23766aa743",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "005efb02-6e4e-446f-9b2c-35b0352db14c"
                }
              }
            ]
          },
          {
            "id": "e7b360c9-441d-4d43-b71a-2dd86a02bc15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7cd46e4-4f81-4f89-b4af-81ce68a38ff5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd2b6b8-aab1-4556-b3ea-9790ec2dbab1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb4f3bff-5c72-41ae-b200-00c21e126d06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec21d211-3984-4769-b478-043331a94b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35201393-dbe9-4af3-8229-9c163e8dc2b0"
                    }
                  }
                ]
              },
              {
                "id": "98ce97b1-f399-4947-b584-bb3f83668fc4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0292a08a-859a-4164-82f0-04b7dcdc53e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd03224c-194d-4a4d-97de-376ab6103e60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9d90f54-c4e6-44a5-a316-45983ac2ca2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27c187b0-4996-405d-9ddc-ae98e5763d00"
                    }
                  }
                ]
              },
              {
                "id": "b918f476-3da4-4a50-b7e4-9b7132d651d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe8341f-ff7c-45c1-8f39-2489af1b61fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b029371-3b2f-4dc3-a564-17ecd9b08c9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af3289d-beb2-41ee-a0b0-23fa6c15a38e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9581c7e-db7c-4e28-ae4e-004666b5cf77"
                    }
                  }
                ]
              },
              {
                "id": "4d2acbfa-3a9f-4d0c-955e-1ee87b35b046",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bcb602c-06f1-481e-a46e-bce60e8de3b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8413a776-d787-45ea-9fd5-5a0cf37d9e0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fe8ce7b-a674-4f51-b893-9b4592612740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eb59d8fd-b5f3-43e4-a528-fc81b18b310e"
                    }
                  }
                ]
              },
              {
                "id": "35ec16b3-5e0e-45d7-a4cb-8f25fa2dced1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35695d94-5a3a-42bf-a268-fed30be2e6d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b10b3b1-c731-4e27-8284-ce32c444f5b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b07f80f-2c2b-45f6-909c-2ed4f21b91bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9f8cce88-1d63-4626-a54b-9e05a606ab61"
                    }
                  }
                ]
              },
              {
                "id": "a9896307-fab2-4399-8d30-63e22429140a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5640f05-ecc8-495d-9bbe-6fbf6cf2bd19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "580322c4-278a-492b-9478-fbc395c60dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d34f6007-d25f-41b3-ae6a-e7cc99157678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d22c559-ff9a-46ab-9ba7-147070cee2f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce9e8848-2c80-4cc3-ad05-a00cc9632d0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f285072d-6ab5-4c1d-91a9-cf2c4a43f96d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fe56542-e783-4cfc-834a-c01d126a486d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec48c533-44f3-4a4d-b979-7ffb2375a79a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e1b789c-468d-480f-a7a5-f2e950aebb13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "798de8a6-241d-4753-b43f-d9c50e0a40af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fcb772b-d86e-4689-855b-ee82c0698538",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3157d9ab-3389-479b-b644-da7e4d308272"
            }
          }
        ]
      },
      {
        "id": "3d2ed50f-2115-4044-8cc6-b80bc0ed5f61",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "403540de-41f1-4230-86ba-611e039f5616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47af219c-0124-4383-8f80-a0092aa66bc3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1654274-f927-491b-a93c-167e91a64bff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27091f8-c4ad-42a1-95e1-c5b0cbd0e618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03488fa4-4f64-410b-9fda-25c9a27ae759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62507856-aa5c-4eca-a72d-25c0ad9501aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "01225c63-064a-4193-8ff0-a82c78900e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a271a142-902c-4b72-b54b-03aed2182801",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ea129d-ff24-4317-a876-1e3b01ebc1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e88ecef-d909-498d-a2e9-6404a6d286e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bb3ea1-4b66-43db-8930-0b610300a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "719a6727-5d5f-4401-b398-6744128d2f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f8d66d-2e77-46b4-82a1-a3d13ed22b58",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e5b5b8-f5ae-48b1-8501-3e444abe0e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911cf7f9-e191-4980-80c9-dcc01136b67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a0c50c-7241-4eb0-8454-3f08d91343ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9c5e16-0866-4af5-8600-614c97842668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c584f7c-9bc3-4d2c-94c3-bbba865cbacc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5c1743-4eef-4a0f-90a8-c5cd6ca25baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a617e727-d91e-40ec-b1c2-0bb0c1cdfa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e37333-846e-4986-a4a2-f021e9e51160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2e7343-cdc0-4aaf-8249-9e7f255ef8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a6ac50-2261-4bfc-b184-aacfdd1c5a7d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c6ca90-a761-4417-9e84-8eb68fe38c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067be2b6-030a-4e8f-8a2c-e19b5b516866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d8766a-1629-4b38-9d2b-68bb45bebc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce796fa-e041-4639-8b9d-a38ecfc5ae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07236ae7-94cf-4fc2-a7f8-60bb5e961d63",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f3fbc-2328-4da6-8d45-eec92d7d5c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192b8269-e40c-46e1-bbc0-2f7bebefa68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253272ae-5578-4ef1-896a-9cc31a90b532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "014c8a44-76a6-4088-b08e-4ed93b294108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df491c5-7438-469f-a8dc-9e5af4846089",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e902800-5df2-492f-af2c-0d3290e64f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0831154-3b3d-4ae2-ab23-a6673ca5d3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7008f9d-2b31-4403-9e5b-a0b7e3396c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50c2f44-42fa-45e4-8539-313eb6f82d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1298f37-98e8-47bd-8702-29fabfd575d6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89efa90-20ee-4b20-aa18-fb30e8352ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6564107c-a198-4bf7-a342-2ef85f41e12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8936110-6ab4-4c2c-a430-bd2af79041eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece526f4-e0d1-4645-8970-4e113e570f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065a727a-d612-48cf-a2d2-92bf2239d861",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb139cc9-4aa4-4db5-839b-7a85a3fab7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a76c555-2565-4d26-bb15-39743172a92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d757a206-adc5-4351-8bae-60df33dc5e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f3916d-5ef1-4971-8ba1-280651958342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0de7ed-f528-401c-bb5c-815a10f373a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54fef76-b47e-4159-b939-5c7cf1c424c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be30314-d7dc-43c3-9dc1-289a28432f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a9b2d2-a2c0-41f2-aed6-d569ee56724f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "893d9589-967a-4f5b-b20c-0a9a67dd78e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f12735e-b0ee-43a0-955d-217e0be5b750",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917ca41c-8968-4989-8372-728fa36e1f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d644127-4646-4d36-bc2d-0f912b682152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a51fc46-0dd1-465d-9b2e-00581339ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6587aaf7-7c28-4907-977b-96435d61a5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba44e5a-5271-4c51-ae63-f672d8970044",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a844e26f-2df5-4833-94ef-ad16e80a677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd19752-ca48-486d-b3f9-de9a8abc8da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b73040-f051-4cc0-83f4-886dfb9e0ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39c53c3e-57da-4c00-8c89-4af96d3d65ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d558ee6a-d623-4e63-af72-21220b7b3e3b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba05fd8-371d-4de4-9799-bee5be1b6ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbc53ee-2257-4a9e-8339-bf7173b14f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466bb60a-7597-44b8-abde-ff6242a44352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3af1ea-983a-45a5-893a-1b6f544ffebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74140182-fd64-48f4-94d6-f09f8cf6000a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e42b283-5878-46f0-8e77-91aa2c7da6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1b81d6-2c95-4063-bbc8-d9d2b9ca7e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8dc68d-8497-4000-b98b-12680847d43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c33451-9d77-4b7b-974c-6eeebb709111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802667c3-81bc-4a4e-8add-00bee038b82b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d72feff-9a0f-45a2-8778-1a1be82e92ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea6b3d3-b5ef-4bd3-9bbc-f33083f006dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2a6635-c8d3-4dcb-9a40-b8ef0423a04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9516af-377d-4de6-ac29-12791aadfe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d1f111-a463-4245-bccf-1c6a96634b4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e6a783-0afd-497a-b943-8f46b902e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddc80c8-f332-4e95-8d76-867081800681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7d18eb-4a04-4851-b0fc-95aa87166474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c79a4f-5e55-44bd-b36c-b3b3d27dddb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02ceea-5275-4897-bab8-36d9f61cd191",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16809367-aa12-4834-8b2c-1aaf69dd8b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edbae31-a1f7-41b9-8eb0-23eb49f341bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243db12f-673e-4908-9298-c082f77df193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ef8d8-f196-46cd-98d5-906aefd0017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9427d2ab-0be5-485e-9267-a04f8c0ff30a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abedbf8e-fd85-4b76-9e9b-7d4b78d16a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7153a166-e228-4680-b934-19a256991efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4efada1-6930-4083-95e3-d7e12e02bafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceef098c-543e-40c5-87c1-67ff4554ea27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b27543f-0f84-48a4-9754-beb174c40ff9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30230dbe-a079-40b5-9b15-297296e84d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9317536c-1fde-4141-b87a-caaef40364d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85fd502-8a7e-487c-97a6-e7de21e47693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25700057-3219-4d12-a638-f5394fdf0c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff17531-1756-42f8-b5d8-ef3e1168688d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2969ea03-caed-41a1-92c6-4e38684d57f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff658b6-3628-4c5b-8a3e-d99c65f1749b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78845cf-d853-4b64-9a9b-06eecc18f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d451928-ed9d-4014-8b9f-2c97642e1cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47ef80a-d323-414f-82e4-7a18836e80c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b74341d-1011-4a4e-af2f-9ba653935bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73db0c5-9833-415e-bdfa-c774574c10b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1af5cd2-116b-4ffa-80d6-6ba723265920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f6da3d-ef33-41a1-aea2-bbdafbc029c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b54a44-cad6-4d4a-9a2b-cc9a5e9ef3a9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8856ee-4d29-4540-828f-1927b2fa584e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f39ceb0-9135-4cf4-ae14-a12be0f2d297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3999f7-298f-4f3d-9da9-d171e03c1054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06065ffd-71e1-49d9-a942-158ab9835635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46831e61-bd6d-4e82-8708-b908e49dc04c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc97daf-881e-47ff-930f-ab04a00e07d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a409c3-d874-41bd-a63d-d902568aacf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd9780b-b63c-49c5-a77e-b0593e5d838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a170c2b-364f-489e-b2df-a83ebddc83b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fdd817-7094-4986-9b06-eda7d379fb5f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ac9d38-c6f9-44e5-a946-b5e0e1f22f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f4023a-ba45-4917-974e-cd398c3f7cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69fa5bc-3fab-4e3a-a182-8bd766a089b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b273228-f665-4613-bae7-83b2a26777ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44a1e35-de59-4fdd-8ae0-cc58ab006ee4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf7a83e-d86b-4f9d-9afa-403a30f7aca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a71f4e7-abca-4b55-97e4-2480321ee39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3734d3-5089-4b5c-9037-6b249a6f1585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ded2761-b6b5-461e-ade3-d689dfc66d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1516ca-e917-4be8-893c-c4276ecd6e0b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5a760-c7e9-4654-837d-5fc2d5ffe8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7096721a-fa00-4a38-8c9e-3d6f6fb2c784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4e4f9a-ba98-4779-8c96-e6a73fe783d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d3d2ee-0612-46e4-8874-8af7b4c5dcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076b53ce-2b68-420f-af50-9beb5c69108a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecd2bb7-8085-419a-ae3e-4e38d845ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d107bed2-e03d-44a3-9f48-12c664930a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8a6ff-c089-4255-bb76-f41efc991853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee248046-5f72-4bf1-b921-f89583227149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2066eaa6-b935-45ac-b455-db2209c7a8c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ccacbd-c2f5-4d5f-9ba6-ef120eb9c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c814ffe-a768-47b0-8cfd-041b1ccddcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a522e83-4826-4d9c-8f4d-4348fdab731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f59d85e-2cb6-4f69-8723-09ca2c0ac000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89521281-ec7d-4aae-8d17-98aa2e3fed3a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78342dab-3aa9-4c06-bc6b-338de4378f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cc966f-346d-48be-92ce-9fb758c57dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699a1889-8add-4a32-8027-44b425bdb2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15bf50d-ea8d-4725-8acc-59e89572f0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b95024-ed53-45fe-8195-116e7bd65027",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c146b-11ac-4cd9-aa1b-a64fa0fc9ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd325a29-f6f6-4617-a88f-0c8a4baf526b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb596c9-927b-4af6-b22e-35c3b5df238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec742aac-892c-4a03-9f05-aa8d22832ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b80b7d-d794-4ef6-b08e-fe1c953099d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db4b434-5a21-41ae-a0ab-5e3f1552d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90e9c57-b76b-4ced-8be4-3f4db5eba945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca7101-fafc-4a3d-93d4-110ee70f0730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363c6606-fa43-49a1-9fb9-68f2b37e1e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb2f7bb-cb2e-4a21-9499-050204287b69",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c00c936-928c-47e6-af6e-462d311dd767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4c4a31-0e56-4bdb-93c3-55a4e8bd4bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93374a1a-c983-466b-af12-d28d9be32b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c4f014-de72-4041-915d-4442a4af8a1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d438243e-405e-49f7-86c5-81472d52154e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "729cafdd-7ec2-4169-a5a0-65f77e737c45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40520f17-dee1-4d37-b5a6-00d671fb976c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a798de-3df0-4ce3-89f7-19dde13b31cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846624e-a8e2-4796-b7a2-42600d8643db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65f74060-660b-48d5-9869-c3d8a5cccee6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f9bd75d-ff5b-40aa-921c-b1f96dbf9d00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5accf742-9c47-4246-8b9b-89a8a627cd4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f73d081a-7f13-4260-8540-732de1eba7a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89cabd88-b704-466c-a5d7-3093fe5eb098"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22215b85-2b96-4052-9308-d5402be3941f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a7d7118-e538-4cae-8c1d-5fb9da00f16d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b699c11-98a6-4b22-8c08-b34e20bdab5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ed46717-8e76-4d35-b9db-49acd7c0f74e"
            }
          }
        ]
      },
      {
        "id": "022397db-9550-4059-a953-ad169a2d933f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "76349ee2-c197-4b84-978c-0f5dd6a6a6ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcba9800-afa3-4118-a6fa-b3d2454559f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1f24fdc-b7a6-4ab8-889d-d76ab6d478f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11352b3-05f8-4213-8d18-3b914ccfea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd37c3b7-df46-4aae-a93c-e17b21671837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bf88f8-7618-41df-967b-ed6a8c4e038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "61868573-4f23-43cf-9d0c-90c768d46ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c44aa1-b70d-45f7-9104-e6adca821b9a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79364a75-f961-431b-8792-3b5188950703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549100d8-b121-441e-abfb-90935196079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0230114b-3a0f-4f57-a910-5ed36002e22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa202de6-09a1-42c3-87be-fe37584661a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa078134-306c-4847-9c79-c7afe1e32ef8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7816cf90-8f23-4b0d-bc02-47a1cd152cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11662637-d7a2-4d3d-93fd-ccd6bd531a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72741d-7691-4a23-97c9-51c69227ab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d087078-09ca-41cc-8ebc-cd6991e0dde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d5bce6-4c49-4181-8078-a4708fb186d3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad18548-5169-428f-a8c0-3b2cc9edaf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695729eb-aff4-4deb-aa63-556e00576e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d10aee6-0f02-40e1-a1e2-3b2d8cdabc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d6c398-daf7-4cca-97e2-19a833ac5170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391b3d44-2181-454b-91b7-560615bc6efc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa0e8a-c1f4-4d0a-a836-b99016419314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e45923-9316-45fa-8c10-1c49dbac262b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d164a24a-1444-499a-9e99-93ae97f211c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74121a5d-044d-44b2-89b6-7fed2ba7589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4f2c56-a57a-4097-85b1-bf13ebaa541d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f243b8-417f-435d-9437-feef31211292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece88f0c-c2f1-42d4-a6af-c32b31f6d854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6241743-b915-40c1-9b3c-bca5066f2370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf005cd0-b3e4-4618-a7a9-ff122909cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15052f92-ad1f-457a-95a7-458c4578e8d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305353f2-173d-4cab-b1ae-4edb611eea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1706c7ea-3ed0-4ea1-9b96-1f4b322eeec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad0ca73-8726-47ae-88e2-453b40801154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae03770b-232c-4f48-9e59-995bf0a838f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8efc48c-10d4-43f6-92f6-450d96a2ba44",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e790c6d6-53bb-4e02-8212-e2f0bd10a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc4b10-757a-4c14-b25d-952bfae7751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547dd25-96b0-4b06-800d-9a74e844b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeafb02e-e9cf-4053-976f-a0b90b97b334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46345ef5-9929-4b70-9ec6-3a6d51e08a0c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d58d04d-7dde-4965-95a4-bdc21fdc22c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffa72a0-a49e-4c95-ac7f-7a7b3cf2ce8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b544fcf-e1da-4ef1-a20d-587d1a1000eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d068556a-76cc-437d-9cf8-4655731503ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67effa2e-039a-4872-948b-56849c36cf7a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8890a5-db93-4beb-81c6-b8e5dc550c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d1e2bc-32ed-43a0-9a5f-70881f938ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ae911d-c7be-499c-8412-ee95509f91c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6968b681-a740-42b8-b7e1-a20729ac22fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aecd0d-b4a7-4a6b-909a-0f1ffe35aa21",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e26da2-e1d8-410d-8c5a-bcc0eed9bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1116c6e0-9246-48f3-a4ee-1f0436908b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426051ff-3453-4df6-8a7e-fa1b55105c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5d97cc59-59e0-4acd-98e7-698fdc95d33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24043646-861a-4272-aaea-1cfc6276de40",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee8196f-9a43-4ecc-a869-296281c2b506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221de526-6a9f-43e0-a99d-28e0e348b90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677c02a3-6f29-4ed2-af95-a5411ed3b6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f66834d-338d-4669-8fb7-f038857607a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7651eda4-c9a3-4758-a8b2-0cee785bee90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4c72e7-a198-4448-bb5d-38a9004ea9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb21df2-2b84-4802-b387-6c40db5273f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ab6e6a-ff1c-48f9-9370-b46b052fe4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6031a09-d5e7-44b9-b3da-7ed3fe0c9c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e8df38-5175-4f1b-8ba5-87159c0192a1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ba03c0-559c-49ed-b7f4-4f22eabded9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9236f8-0f97-4468-b241-f84d6fa70e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f735d78-4092-4c51-8581-cc2875adf48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e96493-269b-4eb4-8331-897555c99106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8aea69-47b3-41b7-bfb3-f5c97d0c5b25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccfcbc4-7e1c-4ccf-ae8d-a821431e1207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfa9bb2-757e-49a1-b09e-00b923432c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc03575-967d-426d-8118-83f2f4b0dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "263f52c5-5de9-4c35-8567-d4a3d9a07992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c682b38-5fe1-4d8d-8060-73320888462f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28cf094-29ee-42c0-b1d0-598be4a9c2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d93704-454a-4bd2-8567-fc9c758b7f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35a4cf2-813a-4afe-b0c1-98a0c4490c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "14715f49-c581-4c4c-868b-9fd03a93f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4373874b-20d4-49e4-a674-4eb64551545a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010607f4-d9c0-44be-9b5d-9bea7f66c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee87113-00f8-4e87-a885-6be1b2cf34d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2498e7-e881-4086-b596-c4fef42d216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53703031-f10c-427c-ad39-d672d95e029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3a9555-f7ab-4756-aec7-26d2d02d4223",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd37d1ca-b16a-4297-b997-2a48fddba62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e0c23e-c20f-4bf2-94bd-b973e86d54c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a5d782-e1e5-4749-9c95-c345aedc081f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "072b6b01-f8e3-45ee-b506-8c3378d30c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0e3407-e061-485f-a5dd-1d5e6dbe523d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31586bb2-4e1a-436e-aa9e-3b99f42758a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5d9b92-c951-4fc5-92eb-24197da52fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae8db0-cefb-409c-bc7c-235398343a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb43c24f-ef92-4f4a-a35f-2d83501b4241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099e1b65-8fff-4d51-9238-e31e8627a337",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550e8fd-d111-4c45-876b-083555a5ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d6b40b-fff6-4768-8f7a-8df04acdb36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9357b897-bb85-4fe6-9c44-defac22d98f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ceb051-7573-4ccb-8f74-de898b549476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc0759-d61c-4843-ab9e-f8610d75fd73",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e18b14-1004-4660-87e7-bdc8e93ab8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f9316a-c2b7-4661-af3c-20f6680e169f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa1376e-f0f5-416e-a528-437920df44b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "118acee9-2025-4df2-9499-d999fe8ec43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d70381-453a-4aac-b2e8-b8ff336cf84b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4d34d6-e710-4788-9afc-3cc9aa956094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90045ce-2214-48e1-989c-15f7e8d5e373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8eca48-5fa9-4f6e-a0d7-275d5426ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a947d94e-9ce1-4ecd-9659-a5b41ba13d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff35412-e38e-4b2e-bfa5-de3443d2f242",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0abc24d-030a-4c8b-beb0-21049e774371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c4ffb5-dc22-47cb-9683-a58aaabf5af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a2b79d-1828-47ce-99ad-223a64b547c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb9d701-0248-4540-a6a4-53d3e1f84e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250eb514-143e-4b94-b22c-1ab65ba480e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f31c49-2619-4333-999a-e6849e4d8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b83d18-e63f-49a0-aa91-20d8a9d13f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1065f5-1166-4549-89e1-b64801a63a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "661485cd-0b91-43ce-b368-228748ca080d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef190f6-3c9a-4701-b9af-8862c02a2a5c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85420896-7168-406f-bfcb-1fd2ecb96c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1d1c57-75ca-43b4-856e-4ee5eb5d4a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6930a02a-6246-42d4-808b-52c2337a4778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "588c4d10-d022-43bc-b483-98f5e7eebe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ad1316-8412-459b-8914-3b64546b70ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cf7a77-7c93-4831-8b99-ddb6b876a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb75c98-2115-43d9-8d8b-3edb0e266a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee379a71-d9e5-4340-8048-ae803c757d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38e8963-37c7-44a8-997a-485471c2cd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fa825d-5a6d-4224-85e8-dd054f9a9f7a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3c09fe-5040-47fa-84d6-76419d1a590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5126e9b9-f4b5-4c70-831a-ecf60b05740a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af62c60-9795-4d5f-a1bd-3dd342bd5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82bdb529-ab28-41e8-a323-9fd24f2393f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af999c46-a1d1-49d2-8ef8-7c752add5e3f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0f809f-9b82-4d12-8108-09c7e10ed434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa16ff2-3418-4cde-9e6d-d9fbf8bd1eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ec4529-2398-4404-aa8d-0f0e04150146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d87aa3-957f-488c-9c13-7bc2489622a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af40a31e-61ad-4fa9-a958-a16f8a35fa1d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577d6495-ee7f-4cdf-ad7f-350a7300f0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e8219f-1f7a-4343-bab1-3b14477479e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31637950-20b9-4f39-bfdd-8d73d9d5fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aec180b-7e7f-431e-be2c-d4fd094b2060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89c04b9-009b-40a1-a025-2a23024b728d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad364cc-6ed3-429e-8f1d-3cffabbc0c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d504055-8e37-41e1-b95b-596de9b2c612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a31795d-299a-4782-ae9c-6f844face31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a244db-cc45-4703-b7cc-25b20a4908e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a30fffb-edf7-4d36-a02e-298383433cb0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484608e2-a941-4b62-8a02-fa5cfe3f5da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1157a5c-fbc8-4c98-868b-7924df603767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b6bb29-ec49-4489-b9ee-57ea27c5bda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "001fc5db-7d12-4c53-9ff8-d0d3123e2d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b5fffc-8874-4c13-911c-8a72daad1fae",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf560844-3099-4ffd-a112-5da4b828e547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e589ef57-b2a0-4a28-a45b-9cda12a9544c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85bd23f-c710-47af-a9db-68edf2b73dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae3f8c8-c04f-438d-baf8-8e2ed0f1c328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2c1600-616b-4523-9814-08e99a12927b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e39cc86-fab1-4fe0-9e3e-e300d03e9520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb9a971-559f-4942-981a-e6f67ca4695b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3acd545-0db0-4751-a9a1-00bfa468894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68345668-6199-4daa-9123-ba9b5a665bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b66c7a-2356-4a7e-a73a-f7bee23312fa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3000e32-e061-4a04-ba60-f5d653650f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf70588-b1a4-4713-9fa2-ed2eefd3eb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5fcdf3-1310-49e0-b9f3-6641345b1836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "855d5a34-26ed-4852-bbe6-7dab3493dd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c9e110-5810-4260-ba12-fe9acb16e073",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcdfad3-b463-4dad-b48b-7862d359afa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dd6634-7b92-4f26-9642-1112814cfbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c67f45d-f7d5-4535-9693-4f6d68cf0666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885466ce-52f0-4915-9198-8d3eb9475f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2555461-d712-46ad-a780-697eb656a7db",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec3d331-9821-4bcd-bb4c-467769895c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bd4835-40c5-4d10-897a-3511c3fdfd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6030a01e-330b-40fb-b198-2f0717d1cd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f20c66-9679-4d8b-9c36-8dda960c99c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed32ef86-9f64-4732-8c64-3c60ec02bdcf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e937275-6891-4224-95d6-d10994e52586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96d534a-bb1a-4ef9-90bf-10fcff901de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f926f2-2e96-4b13-a8fa-6caa33aee35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76785a9b-3deb-431c-bde7-e36ef4a1e8ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22b60bf7-c570-42ea-8af6-8616551353b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "483ac91d-2d6b-4a89-956a-34d2f6de6219",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f643de-b4f6-4850-9d90-4993dad8fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51a692ad-2dd0-4d42-8d08-46ca9bef15e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc08138-c807-4dc1-9cb4-e4383a2c9c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d2429ce-79b1-437d-8beb-5f5939cdd79d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a38ee744-0bca-40f3-902e-d04cc34a2efd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2862aa3-a5e1-42f2-b839-cbb7f5b2f62a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b74fb819-6081-44a3-839d-7d5c875557ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd262f9-b131-4a2c-a985-49df3b6dd59d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40381259-c05d-4762-8b11-b1b06355c2b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec6c407c-cf46-4dcf-be19-e66454a88cf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecc64300-e4e3-417e-859d-bed5906f7093",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df3c7a33-2cbb-4011-a012-9897ff106f5c"
            }
          }
        ]
      },
      {
        "id": "db5e45f5-a85c-423e-a00f-26f28aedb672",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "722a28f9-8079-4c65-90dd-ce8caab0835f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d53c0204-7e45-43ff-ae5d-271a855e2826",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5392fe2f-cf1b-4aee-80f6-372122c3cd0d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cc988d-54df-4f6a-8cb4-d15d4201d5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551acf19-a085-4784-b968-0a287be23771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957d4cdc-a2bf-4cfd-8caa-59729ac95132",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538fbadf-42e0-4f75-a5f1-6b08b023b727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d07940-09da-4831-8d3c-8817d0976288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdd7b49-fca3-4788-a071-0b5141560034",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e9cdbf-7551-49cf-b4f9-0ea1f256e6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8ab31a-55b6-4873-9a31-78d52ca99482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3a5b80-4da2-48b7-8e5e-9c165a6468ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28f7b6d-c728-4fc6-953b-ce205d1cc173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0340305-f367-40b0-8973-48324408e807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0252be1-5d75-4257-8f2d-aafd7e5046f8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f9169-64a8-4bf7-b204-1789de5139d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3ae773-79a9-479a-a123-3e611003c669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b0896e-e013-4a20-9a14-7c6973b334e2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369bce1a-5b51-4af7-8886-23e35c9d470f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b52e2b2-284c-41b3-aa00-40d0cb3fcef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a901e59-d0da-407f-83d4-e44cbd6d02f4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d36d33-4ad5-4f32-962b-5d88d8e78d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9735dc72-52e0-49e1-82eb-08ab351a535b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49d17b9-4a98-48c6-8ee6-a806fa96a4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509bf0e6-4eb9-4394-b455-949e0a839ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32010184-8720-42e9-8956-60bdecc609a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8bd1f4-4ba5-4b62-9536-bed4d8e2c642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8c5432-ff39-4be6-94ac-1c7055424f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2970aaa-9260-4039-b716-d1616769c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b24d9d-13e4-40f9-9e11-6faf84f3219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f54561-0e00-4046-a8e0-21b41c6ecae1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e95a50-9eb0-4397-b258-18215ce61c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2600222c-b127-47e7-ae58-0f72773a563c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207d2789-8a50-4bab-911c-50226e205d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e19f1a-66cb-4468-b5c9-f2dbf4ba174b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73dc71b-b7a1-423b-a0fb-76e9226ffa82",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6db71f-015f-44d1-982f-1e75034451d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4219ba9-291c-40d6-9330-7a06f2072063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d91e608-ff42-4a99-92da-3d5b39f573c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cc2575-d6f5-42d1-91d0-16cf76663ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e5c55-0218-400e-95ec-0c89e8b61444",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ea3b3d-7b62-4ecb-8242-6673e3bfedd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3bbb9a-c369-42da-ad26-ad79d301184f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292f8fc6-6fcd-4875-9466-c7aae6707787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabdf4ea-b869-4ea1-b670-dc69578b4c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242a7bac-85aa-4ce1-8383-5ec4a43c8e42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f828e1ca-77a1-44dd-98c1-a360351f8e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3f1617-b61f-4cd0-91f9-b7db43a5e351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aca8a7-63cf-4c06-97cc-7fd5e8b89ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d21215b-87bd-4675-a0ee-a2f658d6359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2244f8d-29bf-4991-ba09-4b898e601073",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599eb664-12d6-43b9-95a8-b04a58865f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6b98ec-df8a-42a5-9881-0eeb0e1f90bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63320148-905a-49a7-a128-e66dbff34c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd190eab-dcaf-40f5-9e51-6e7da38752ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23299a2a-e48e-4f0e-b8a1-47887fb16cc3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b44c1bd-3244-4261-b432-f10486cb4190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1943d13a-19d9-4717-975c-a261b096fc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752029fa-aba7-44a0-bdec-515e49fb97ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a92607-3991-404c-9e5c-2fecfbd44b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91988092-b398-4166-a416-c5fe8346b6c8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869727e8-5ac1-4397-8794-b73a9f81f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6933621b-8e81-4f88-b836-a681453d2ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e4692d-3cd5-4379-ad0b-63322988eb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a48916a-69df-4e7d-a9e6-eb8e67866276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bbe9d8-93bb-434b-9505-92ca0591f348",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b80e513-df40-473a-8faa-60394d4f8714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15eab89-79fb-4970-8a26-94a4604bc5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110b395b-4e7b-400a-9ce4-31a6c9ff247a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837360a6-7cdb-433d-8694-b239472d802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453dffca-ab2b-44c4-841f-01bcec2660a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516f940a-5be8-4384-9e5e-51f5c4dccf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1ccdfc-a6dd-4ddf-8897-65e0f18f6514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f941a34d-f0aa-4bbb-bc0b-85edb19c1e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d0f2ae-782d-4da7-839d-c0f2198de957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c245d0-b85d-4e89-8898-d44763816aa0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055c5227-077a-4eec-bd90-ba73ef4b359b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8276555e-237b-4d69-87be-e00c73daaa5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6601594-3c2d-4de4-9609-29cf0c2e0468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464af784-c240-41a4-9493-a43de9e61439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b1acf7-63cf-40b7-bc3c-4ecc2090cc5f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810eccf3-8244-42b1-8af8-2ba1221f8ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c22913e-b67d-45d0-9ee0-70c96964b7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf2fa7b-e2f9-4a4f-b07c-5a6e39b75de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efe75b0-d00a-439a-a43c-8ce49ad1275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656a1360-d574-4625-a6ca-a918ddac79aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9302da86-6e04-4e19-b844-aec7559bed2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0c97dc-b35d-4fc6-9102-8fa000f377f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5668838b-fc1f-4013-bd3f-f008b838c884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64be6c0d-27fc-4cff-bc43-e11f5b4b8e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442cc7b6-37cf-410b-b1ff-4aceb1c87014",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af133ee9-73b4-44fa-9a15-d7217a5e12e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da539a-8970-4bd3-935c-f6965082f8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc0852c-9a8f-485d-8611-7c4d669e67be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3042185b-45cf-4fd0-a94c-ee051ad87f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4e1f54-176c-413f-b561-8e07e6997910",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f492e51e-5540-426c-bcc3-81d5edb09ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fb449d-c3ae-499f-8ab8-14dd6b05d060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b300915-2ff5-4b8b-a40e-cec9c0ac2208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373fe7ab-8e58-411f-8308-d7456f00cbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf3f3e-89e7-43b8-8ac3-0e2fe492e5ab",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0370ad-9753-4d8a-950c-786bc90a1fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c868660c-1d67-47f5-9ac1-202721de72f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe478fcd-97e6-49d8-b882-264adde7fd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d610d9a7-3588-415a-b7cd-d5ff549ea7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1fd821-972e-4a75-bcee-f7f55c78838a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa306b5-9b67-474f-aaac-a024707f4de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05516f7-2ee4-4ca6-8584-94f8bf3f99d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c6a5a6-fd71-4d93-bedc-3f31aec0af64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3099dd06-2723-4c4c-a768-44c5fdccf247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21293f29-c9db-4160-867b-cff3bcb5eed2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17febd23-de77-4f9e-98c9-d976bd0c2084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54c2f91-8cfb-4195-83c4-ed548624fe93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d283e9d6-4c7d-4ea3-8a87-8ca29ff5ebf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318d6806-b940-4274-949c-b642251dbc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c546b9-c323-41bd-a793-b8d07c541ea3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7a8514-e19a-43b0-8b58-f0f997b28f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300dffdf-8cf6-40ef-9155-78cc55643ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796db50-6f38-4ac6-9f64-58088dcbcdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82571d37-f2e2-4666-9601-71a8be8c1d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c138c613-8dab-45ca-9a37-c8df1a711835",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd128c9-a902-49f3-aa74-f29325f052bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ee76dea-e4f4-4c6a-bf78-5113f574dc43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4cb28-7ea6-4e3d-b323-04e48e63ae72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75feb32b-9ca2-4301-b17b-10e4fd34e6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6059a025-47a5-41fd-b537-b38f90a85e2a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebd2606-8b6d-4a4a-9d6c-86743db13c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462cb12b-5a14-4565-a8ec-645da9bf80ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0f57ef-9102-4c49-9985-dc48f23bb504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932ce38e-6fce-4d99-a237-6f25096a6716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a6b44-983d-482f-8972-503248b692af",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0fea5f-fffb-42a5-928c-8245308107b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e118394c-1d15-4c72-bd7c-7b8a6746cf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ae622e-70b0-4b56-9a84-66ce0824c7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773f1fe7-428e-4d8d-93ee-a7924081f12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214ac688-1ef3-4460-8b14-965080a94049",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1c4b7-fb5a-468e-b204-2737957e62c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aacd477-bc44-48ef-a83c-487ccb02f178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f8447e-c35a-4098-a468-581971d69eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f568c7-3b76-4c1f-91db-41c6887657f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c47ea49-2630-4c39-8b37-e742728eda3d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d609b7-22df-4ae1-8a68-357c44fc01f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a35c236-663e-4f4b-888a-a48093f41198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d65bb-7673-4e38-8de6-5457db5691fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d382fda-b449-45ac-bcec-38a0b73823c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e23a32-5c4a-4f52-ad93-b16d9f17018d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40cdb70-1c89-484e-bc89-a008eb13e6d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd592b82-32be-4613-9746-8fbddaa842c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0b0633-78bc-4b36-a241-c457b0d73874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d826ec7c-949e-407f-8ce0-4baa39479a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379490ae-b3bb-4f28-b141-fda7afa6ac50",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f24b45-a4fe-45a5-99fb-5deb4fe5f029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c596c504-e469-478c-8fda-23f600a5e9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe17d13-12cb-49c1-82b3-fc3f975d686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb940ea-e1ae-468b-91f5-8d1bd964b696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55156937-fde1-495d-889e-e87b1a114928",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44c9a93-8b15-4bc1-ada0-47dfffa5e367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d036d60-9597-4912-bcce-b4a0e9e447a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb2ecc-4ebf-4182-961b-cad4762d1377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d933a52f-3d57-4133-a4f1-2a016e34d8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e0c5cc-ca79-4c9c-a3da-cb9ae2af0634",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cd6dae-3228-42f9-8265-417ec6709f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e5ea62-d805-4b99-a761-c7fb1294b3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebb18d6-1c9a-4ab4-ab06-5ec8aefeff51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e87bc54-c23d-482f-8fe4-62a6565f03cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa9563b-5a8c-499c-8631-33b4dfadc582",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0e0943-f9a1-4952-973a-5ccae4d7f1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9dc366-90f0-4c38-b435-4d8f93036e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffc8b00-8dff-4a4a-858b-08af2679c001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833bea24-7ad1-411e-b6c5-6ba74550f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77f0226-6550-42a2-8304-746b4e4e3446",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1763951d-a120-4537-8c93-31f33f3ecf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d61a84a-025b-449e-b048-c7b40f7bacb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4a0435-dda1-426e-aa93-90594b75d4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5277b2e-6359-4f9e-8740-6e3f1bc3d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a44cb7-0c95-47bd-b2d9-09eace6bc3c1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148baffc-3848-4116-bb06-528917d2f969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed16623-a7cb-4f3c-893d-705ef4e7978a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2db54-0c5a-4887-bad3-340e5568c3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cb44f7-7459-450b-9faf-d3f5f1a9a334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7269ec4-916d-42d4-88be-11dc002a2efd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2353209-b2cb-4efe-b884-7a9bb3df5590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4974d927-4294-4e79-99dc-4f65cb9e0f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59a8cd1-1914-40d5-9b59-b7518690ecab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9e539a-650c-4656-b760-0686930d517d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb59b9ac-0ab7-4a34-beb2-dc038de0bdd1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf92634-177c-4f47-a4ed-0aa9389f2b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2c8112-ff8b-4549-acf2-4d7bb9ffa16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637cdad-8a31-4e67-87ff-c8a33868e052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0f54f9-3f4f-4014-bcd4-02ec605de4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae35b9dc-ff6f-4676-847a-9434377cab3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2752a24-2a1e-430e-b527-d974947920b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ceae65-4148-4325-873f-cac71e50873c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5173e226-754c-43f0-8e9a-cfb52872a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a129ad6-bb0d-4b0b-8d86-44cd8049efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37519b-f65a-4fd4-acba-0f87b2950a6c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3b2c20-25d0-4cc0-af4a-a3e82b63cbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e1bd6f-fea2-4480-a524-7c47f1146a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efc05a5-56e9-4bce-8e76-1f152af0597a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a8d6d7-363f-4294-8c88-d271f690ff08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350a3a95-4886-41fd-b083-41fb80bf698a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc82452f-a9d3-49d4-9fbe-20d719a41137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a37ea99-59d8-4b71-92d2-f93b9be015d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b51145-9442-4816-a9b5-4bcb2f8f4c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80db52a9-dd2b-490a-8236-cfea3fb4de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692694cd-b1f8-4f1d-83e6-307c70421d6e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef92dec-3078-4f48-911e-c9512a367315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cedd313-ddaf-42af-a600-f9270e2bd928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732fa55d-50b2-46cd-814e-90d4a98e0478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f7c9ec-c28f-47f2-82ef-b9776dd47d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd283b86-19c9-48a8-b3da-c824fbc72586",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9d78c5-501c-4b7f-8c3b-8e28f964845f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff8e9b4-bb3b-49ee-99f4-c0950651c6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7214b13-eff2-4c2f-a65b-1b3e3f8ae74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f685079-9359-479c-a847-c1850f1269c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7972a61-9b63-4ac6-87c0-4d92c4c2524d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99909db-cb65-4797-bfb0-9a65a9e58ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53db5c6e-f069-47e7-822a-9bced692c9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66bf361-b8a4-456a-8a0f-bd8ba01b2258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8954585-469e-4149-b3ac-a49eed81ff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d749f19e-93aa-4f30-af9f-98c22e819855",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90974377-fd32-4ba9-94b8-efb6ebd919f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68046966-d614-4b62-972d-b533be12b46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a006c30-a574-4451-bedf-4a5fadb82360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ef06ff-efa1-40da-98fa-e8c8dce37e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29153275-4f65-46ae-b237-92421f09a2ab",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047645dd-213e-4bbd-b5c2-6ead79778504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d46e839-8b99-42b1-9678-c182303a7014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f8473c-29dc-4737-8fc6-92dec494f64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7bfcf4-a572-4f4d-b76f-4e5215ab34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d66af-2c6a-4606-8347-df472ca4e12d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01af477a-11d6-4f08-9c5e-dc1d5fadabc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a82975-9e48-4e17-a388-319617788fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0460cf1a-7bb6-4c4a-89ed-0a0c6127c460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61637d11-35e4-4cc8-86ef-7a4d4df73e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bfd9b4-d498-4ba9-afea-13e20e0d2c30",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3f8793-2cad-4b98-8518-ba01eff6af5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232bce1c-f734-494f-8851-24023b177bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed44bc8c-50b0-4d7e-b3f9-dff98bea9dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6903f922-54bf-49f0-a69e-3eadc0765632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef902aab-e8b0-4fdc-9753-d9b0709c75dc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a690c5d2-b93c-4be5-81e2-0c8bfe3f399c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32242095-f71c-4431-a9b4-954ca12186a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ed7182-5380-42f8-9a5f-162a9a64a1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e5b542-e965-475c-86fd-f44d08e6b96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc268d-2d79-4b3d-8ad8-e5e64c91ab4a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820c772d-df71-4d64-a10f-95f1a51f251c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352c3439-0382-4fa0-81dd-bdff1db5efd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a4afe4-9c01-40d3-8d72-d8041df87676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8285337-62ff-4f00-b2c6-f417fc3432e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80d1e37-14fc-4988-aca8-04e095cbea89",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15b6ece-95ac-45ba-877f-720de78ff3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e00826d-5e32-472a-8915-5ac746a44445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54944ef5-31d8-428a-8212-e499dd0dac79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f2dac7-8f1a-4ad0-8aca-fb2b560dc8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c16ec5-4224-40fa-a803-9ad42746c775",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4259ce7-fa84-4e9b-a928-4a7afbd26bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946e1c42-cf37-4b6a-a8e6-f8fb25e4a79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba59adf-8a1d-45de-a42a-819add84b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaa487a-3c73-4cdb-9b5e-33da0d81fd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988bdd2d-3a7e-4a01-8ba4-808885a20742",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a4294f-6b5c-4f60-af85-5a1ebd1d13ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7ca5cb-531c-40f3-a221-26a2c685a5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f334e54f-5ea4-4739-82a7-5ae416100f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3ee480-ed06-4cd3-9f02-5d2c4917ddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caec0e1-2912-4d08-92ec-ad7f3d2c1e94",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923a3b47-b5c5-42a8-bf0e-07a0561c6eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c355d2c0-e3d8-4f45-a4f3-0920695a9987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ab9115-72cc-4279-a24f-ebac4f5361f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ff093f-d83f-40f4-a625-ac2cae86a5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65c5cd1-85cf-437e-8870-8e773e40a11d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e42d62-90c9-490c-a78b-5c15f8df6caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd228da-a648-4604-9436-34d052656d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fafb0bc-bfae-4153-ae97-60e861c815b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286f5a7c-f12c-4574-ba67-0dc86753567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ccc4d-c4de-47ea-9181-7e6ec5875af4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9074b585-26e1-44a2-bfe2-91e632ef749a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3df8a8-898b-4234-a50e-7af6087ca787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a95338-8f35-4f32-b42f-8f36d689c2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2de1089-cd61-4151-9969-abebfe1424b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f12b0c-e674-442a-8257-3c0c5a1a74a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2aa0ce-7787-4e9c-b4e7-be044e8cad4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423d2090-e6af-47d7-868f-3eb5f977fb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00c055c-0679-4ed7-887d-53b71008e836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3ff00f-920c-4ec4-a79c-b3e9c8e2a95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88202537-a90f-4a01-b4c6-95081ec485d3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba70a23-6af6-4ba0-9ca7-c426c76bb9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b382a33-724b-4781-b449-f95a55653550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df576d0-0649-444f-8841-3ca5e8b7414e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f41392-8475-4bd3-8ae7-b1b4620c7c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b77ca70-5a90-4465-b1fe-6ae608078904",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10279aa9-bb74-4ab5-97ca-4f6f0beab2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fb6b74-3e43-426e-b33d-2072eda287d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d71d973-7d0e-4fe0-9aa8-6b4bc8c7a723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d8aaf5-24cd-46cc-966d-60edd69e96b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4989bb-1c6b-4841-a864-5504292a50db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d8fb26-bb00-428d-902f-f80812b8adbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273072bf-04ff-4ec8-b346-90902c5b1f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0c290d-8fb4-4bf8-9d90-ff5138a10f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fda1b79-5118-4dbb-bf85-14304671b7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea09916-896a-464e-bd25-e5ad425e0c9b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06f4083-ddb7-4baf-a68b-f65c14f9857c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86ec25f-8ca5-4057-ab6a-81cde172ec14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbd336-262a-4683-8da9-52bcc0b183b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2c04b-55e8-4735-859a-88ea38c46625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca8462-e982-4508-9ab6-6fd30b29ce40",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88320547-daa0-4597-b53a-1b98b753e225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e22b21-f7a7-4e24-91e7-321ba27272d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e412070-49f2-47f4-903d-db58b5d23f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a10fc84-383d-4a61-9b25-47be8f10bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90518878-6a1c-4106-9323-82cb0cb3f4a6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97abd4a-00b8-4071-b4f2-2f1675fde562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fea2a20-8e05-46d2-a264-1caf3c7ff153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68447a8d-9b6e-4bb7-a088-411bf8516472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad4ce10-796b-4913-9c4b-915f905f18f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d8f117-0b2d-4f86-ad4e-9a67d321792b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857e2cd7-146d-45bd-9804-0edccf0ded7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dfb2d1-aef1-4b7c-90e0-e44db231c08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3405bd3e-e2e7-4cb1-8ce9-58a500a31408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e75a843-e8e3-421b-9698-7af9794a4dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de04023-7aab-4a01-a84c-dd4ed82626cc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e93209d-5b01-41eb-afc8-d1068cabfaf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2afa7d-bb75-44d9-950e-25f4d2ee4817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151d275d-eba4-427e-9180-b7ecf663a026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d12318-f06c-4061-8deb-3d5b1398974b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd85efb-86a9-43c3-9e6f-84466ed09446",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307a7dab-7458-4997-abf6-b56fc6d9ea50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb629460-a2d3-4b0c-a2a3-38b62d64f5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3a8e8c-12c5-46fb-8f54-cc3edc055dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e491ea64-ede4-4ab4-b921-94cecacaf3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d04444-eaf5-44c0-b767-a0df9cddc78d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde9a840-628c-4498-aaee-96a7e436c171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add3891b-4da5-4af2-a59f-868c0da2f88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2cc3d-c27c-43a6-a76e-5eb582554323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db3e85d-476e-404b-9a2d-bfc9b68457c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bee8804-2191-49c6-9290-56321150cb91",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31945016-0084-4879-ac74-f7ab17ea5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9179c462-3875-48b2-95fa-c4f90e9618a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3482238-7ffc-46d1-9f7f-f754b79e4c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9017fb88-9c27-416b-ab0b-2f079c66f846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9261a8-4319-4db6-b760-71c5f4b0d4a9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06455e29-d171-4f65-8756-f12500592372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08faf44-219b-4df3-ab3c-fc03526f04df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92146273-4a28-414f-a49b-f7b42942c0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e98f8b4-6257-4702-96d8-24fbf53d42a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d24d9bb-bd48-4b5b-b163-c629dc7f0a56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf14ddb2-e2be-46c3-baff-5b19e15e709d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "decd8060-2754-4f21-9aa1-7dfb1530a81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c354532-54a2-4fa3-9dc2-15bbf174f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93cc0ac-330d-41af-9363-1604ea06f0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fd6b32-b102-4fce-ac61-072cc8ab8def",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf243932-99d6-41dc-b6c3-a2d2baf56271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee398691-511a-4805-8619-f11ed6a46e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c600127f-4fa2-4813-8335-92fba9810160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc82da4b-6f88-4aa2-943e-8d0dd99d058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25069cbc-fa17-4f29-acf7-0be9e586a109",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c03cb1e-d670-4814-a24d-923d6ea58d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf1349b-6206-4839-9fd7-2e298117bc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae424ef5-12db-4534-b22e-2955da99060c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21aed7dd-ee31-4e7b-9be4-4123a30efa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5025ddb8-ef29-4b68-b5be-46dbeb93d0cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed8b3b-d2f1-4e62-a3ad-6cdc97c62970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed358bf-5b28-4d9b-a5be-56d480bc2d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d39e3ef-3048-46d1-b631-620c053e1a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c390ed4-88b8-401a-ad67-1419edaf359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27637b66-401f-4958-b7f5-73aa99bdc8bc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ad10a8-7e8e-468a-b1e8-ad6efdc564ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eee37db-9198-481e-8774-3ddb7f93fc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce98d47b-796e-4fdd-997a-a19799042d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46049143-2526-40fa-af04-c2b078097b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b8b065-6545-43f2-973f-f39e79f9e4af",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3678245-5340-4ce3-ad41-e2af2bc89c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32b42b4-2209-4124-8e9c-3a5acea6af2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab60a9cb-48af-43a9-98d5-dc556f552f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936e8f94-6acd-4508-9862-478bba0a3f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8bdd9b-26bf-4ab4-b1e5-902d0bb5dab3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaed76b0-54fe-4ac5-aa6a-0965276af649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b059a87d-7304-475e-8091-709127793ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379ec3f0-3332-48dd-a96b-4bad322a8715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e81be6-8308-4b85-b744-4e66f0413df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631e0238-ce3b-44e5-ab4a-1d966d55e509",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7836ccea-6228-4494-9a56-13781ddfeeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ed731e-bfb4-48b2-826d-1de3ebb8b443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed6866c-7840-4f62-bcf2-50d749961f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcbbf14-87c2-4e1d-b50c-01643ad02455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bbc45c-a2b6-45c0-93f6-4c6ba5855ad2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f04e1e-287d-4797-9d50-97fb96f45657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51602f3c-ce39-45df-9a96-530e0b996a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3730562d-4265-4dc3-9664-25e1434d0b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd41cb47-69a7-4e69-a1f3-dc21aba6b803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75202bb8-8038-4959-92c3-66671914ff72",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b66e5a-de99-4699-92f7-2ccef85090b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28067829-8985-4211-814c-e99c3662b255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeaa276-9204-4703-9bc4-4e4cfde6763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be0573b-3ce7-4a64-a33d-7d918ad9d6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5374c89-6535-4af3-bf0c-beadd0cc2cab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150d6cc-3d6a-43e2-aa31-993b434d0cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5c1ced-cf03-4a92-9f94-9063cf0369fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc45df37-b1ff-477e-811b-f304a72e92b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf9939e-f565-4870-a0c2-97f0689f1d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43763bcf-fe44-4c28-8274-306f91beac13",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f42441-6a28-4cc7-83b9-20a6619a4547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f419eba0-1ed5-4d4a-9b8f-7026a77e2a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218a003a-009b-4874-8473-5214cba6f050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6805c82-d082-4dd2-86f2-18d7e8210a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76822bd-61d5-4063-a235-bb514e952e7c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e4fbdc-04d7-4474-843b-f516b4c52dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036e0b30-0b59-465d-ab49-968714a800f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a657c-cfc0-4869-90d4-b90c270d0267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf3365e-a5d7-44f8-9d10-5bf24b7b309f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee59220-68ed-4325-bb52-79aa9036032a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd158fbc-aa66-41b4-a994-b9a817bf5415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2d3b8b-35cc-4be8-9a5f-0481f74e0ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebb41da-c382-4cf1-90cd-084d5502c09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2e7a1b-71b2-4d48-b165-f9630256d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf96acf-bc6a-4c29-a525-4d93283d4447",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72049955-e821-4883-891e-3a716b2d30d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1716862-b765-43d6-bd1d-1514cd3cca49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41210d8-8786-4a99-b55b-ef20797fceeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b87aa7-6c9f-4070-bbda-5d2c9295ea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7d4c47-1609-4921-a95a-a7d21c16c83f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f035f223-85e8-4d55-987b-dca4aa6a6572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aee9e25-f1f4-499d-a7d9-a8319f0b669b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac18c3e-ea13-44b6-9008-14cc95b7d3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c463e6-5cc8-4bda-9157-71d25b7313e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb20a4-c903-413c-9871-1c39a45f737e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b009db8-d3db-45ab-acab-c39751c96faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93775fbc-c160-49b2-a481-c6a614c8a402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eee0dc-50de-41f7-bbc3-173c5603b1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382e14af-c4a6-4680-861f-2e381ca825c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9fa8fb-3499-4991-b8e2-209f448e6d6b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a6f227-e4d0-458d-925c-d1028b924b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95735bc-2b26-4e81-8b7c-776f8512a90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6087147-bd49-4963-a973-963ff57c6ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef70536-839b-4084-8fcb-5eebc8eecd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78d45e6-2f76-47f2-946d-914b3691e821",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6491c841-e644-481d-8bc1-f3c62cd66fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f3f4a9-2f35-4708-a0be-e7c3f8d9564e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd9d3d3-0f3a-4e18-8672-aa0803cdc431",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97694a1-8c3b-49a9-bbd1-ecb934c3b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f36bb8e-55e5-4560-abc3-6364dccf7d67",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d058f3e-0375-4bf3-8135-53747c6b94f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01da371b-14a4-451e-a213-11772e5d3fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c44cb0-ca0d-4783-b373-563641e1335a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30014569-c0f2-4473-8bfb-2e0fc678e00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780b77ea-9265-44b0-bd39-ee821beae311",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78818749-4811-484f-8c8a-1c9aaf78a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82363a8e-0297-4c97-86db-e30de79f8360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c03ad-aed3-4af2-89c3-88b10ced5c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32d62f7-a244-4853-8389-dcb5c7e69f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b1885d-2b7d-42a1-898d-8a24e885ea96",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b965e3-3819-495c-96dd-bd27c634221d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad36072f-244e-42e7-a89c-22893422a6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ba8e1b-8145-4610-846f-43530c3f5dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e3ffef-a615-4165-bf19-4f6517715739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8223589d-745f-4673-adfb-acb875daf6d9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40082ac-ac79-4246-9fc1-38ea8971569e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b471349-82c7-47f4-a2a3-4e86d0c93111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd5d4e4-ffe4-4a11-bb4a-7e20997993e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5f96a3-fbe9-4b0d-843b-540cecb396a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215bd915-072b-43d8-8d5d-64a3bff2624f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3fb52-0c16-4c32-a68f-153554e42625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfdde9d-a92e-4e68-87fb-aab716463b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4015837-8eae-4c96-b481-c8a6c25706c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d15ae2-585f-42d4-9844-0048bcbcf591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b4ec1b-8391-491b-baaa-e28d8a659cd6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d48731-ef00-4d4d-bbce-8584ca89bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918c0683-fb54-4165-b8b5-f8cc766f2121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c0dc67-23ed-496f-b055-feca7ea70038",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aa05b9-374b-41f9-99d6-e17f9efa202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c647cb-4628-42d1-ad52-025be619a49c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92781013-3f8d-402a-9e4a-5aedec11f56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a22e8bb-1761-4d43-b65e-37e834e3d5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f0f23b-75e9-4c2f-b55f-a23d90688b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68442bdf-cc7b-4627-94ff-50d9e3bd8f5a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a67f9da0-8385-43b3-bcf6-5242a5109893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cca3016-cef1-4404-8e40-c1fe92d180af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e23808-f657-40d4-a96c-1d4c1b85001f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4359e011-2932-4090-aba8-b547ca5f045d"
                    }
                  }
                ]
              },
              {
                "id": "66973441-9d2f-4e9e-879d-dd99e1685e56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35e91468-df13-4b75-8a63-61e012573395",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bc8bfd-dd4d-4c7f-be5a-0294c99b2891",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "399fbcd7-d915-4692-92ac-1a31e7b2b2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce09b37e-cde7-42da-91a7-8015f8833f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bff6e34a-a455-43ec-a43d-398d1af8da54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aec52562-f90a-4266-9d33-85ec9a5ea02d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "274ec95f-01ab-4da1-a786-b44014e331e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a05776-fdf9-4de6-9cb6-e26113d7eccd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e2e6b6-8d36-429e-a984-f558c7d37324"
                    }
                  }
                ]
              },
              {
                "id": "ddfc3880-0d0a-445f-9c8f-6d7315203519",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a33b1f78-c0ee-4450-9b36-9891acdd16f8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3658ab1-e966-415d-99ef-7ff21e9f82d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1cf32a2e-ba54-436a-a0a9-c7e573fd9287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9691025-4986-42d4-bb88-c53ad15a7736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fe1169-64df-4bae-93a8-2a6080e0b6d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46e59722-48be-4d36-a6e1-b7c27bb23d6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67f0c46b-6672-48e8-9fa5-63a6b6e8ae6a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a59d1743-64d7-4397-a6a7-7500f30210ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4039dd45-936d-4dd8-b15a-438a74a4640e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9b7d2dc-f319-4445-91d4-b2ecdf2ace4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de270335-a1ea-42e5-9a5d-f0f9c2437036"
                    }
                  }
                ]
              },
              {
                "id": "bcd776f6-c3d8-46b4-a64d-30e75ba37837",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe0b0f82-6544-470b-bd5c-829bcf79025f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a7c4961-5eaf-4036-963a-577a09e84939"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0072200-ad50-4023-b85c-683be0601fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2687bcaa-8aec-4d91-90f2-0f1cf0d0a773"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25d2966a-905f-4984-8e00-34286a76bdda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0eb6261b-144a-40b5-bf56-5195c518d188"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2f0889b-ec6e-41d8-a296-d4e414686474",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7b98aa3-7c51-41d5-bfc9-58683fa607d8"
            }
          }
        ]
      },
      {
        "id": "7f904bb4-0d76-45b2-93e3-b22e25387f24",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f96a7bf-0667-4177-b0fd-255f8cedffa5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bdb9d23-e108-44c4-b008-786a8acb690c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "244aed93-5646-4a90-a06f-c1caa5aa72fb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0fdcf5-fc29-4537-bb0d-3bb53b285443",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f95ca6c3-a264-4c75-948a-29239793570c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3391936c-f305-4c20-8a43-9b350d0b4273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ec1f0f-a7f7-4113-b169-ea017498fdab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f88aec5-e2fc-4b55-8bae-0f6618332b4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f2fbdf2-34e1-4c6b-93f5-6589efc6226d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10653ad1-df23-4ce6-a7a7-91fa229095f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ae0173b-1896-4c54-862f-b56e8a0e1bf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f474f88-55b7-454d-a27f-dbfb23f4f64e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c18463a6-0a83-4a39-aa0f-feb577d53686"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d423952-641f-423a-a56b-c63e623dcdc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7cdc05e-a55d-4ba7-9288-3398f2d8620f"
            }
          }
        ]
      },
      {
        "id": "73ec4374-e476-4c8c-9646-6a793d35a999",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "db43f097-a828-4b1f-b93d-f523ce8dbaf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "614a513c-58c4-4aa7-b8bf-c66f1c41d4e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d11eaad5-fc93-4af5-bf56-d810c1896907",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d809407-d791-4cbf-80d8-2168723282e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e541c8-2c9a-4a31-a1ac-f223048e6e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d386384-fb25-40d4-84d2-575d625bb1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8ce8387-4842-403c-baf1-93b7f933c5f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4aecf57-5ad3-40d8-afe4-8bd99c8796c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4695db2-50d6-41ac-8518-ca7a0283adab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7c4bea9-7dfc-47ca-9f98-f3ae9f61e66e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdb06eb4-b5a6-42da-931d-83b6a1ae38bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4759b932-3a42-475e-890e-0807e69b7c95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5465feab-b502-4bcd-99c3-95c547199237"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "646ef293-b33a-4b47-bbb4-4a50f654af33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b48f21f6-fa5d-4900-95e1-8880bcb69e28"
            }
          }
        ]
      },
      {
        "id": "5ba5b6be-b90a-496d-98d4-bc8d5425c58b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a70f1d3-1486-4fc9-b447-b5aeb6aa0701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44015fec-a652-4f36-8296-2e4265143980",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5db70db-174a-4e54-aee4-5b3a66aceb39",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6254d53f-8d16-4149-8f23-6553281afb97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "307272d1-66c9-42ed-8e59-d2752d099136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a8e58-2262-4d5f-9e1a-ab4b9faa0dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b5ee681-b4e3-488e-878e-c32479fd66aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09ee9f17-635a-45f0-8d08-6016f34f5ff1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1372d630-7df4-490c-8dbf-dcae2ee5f601"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89df40ea-21ce-4359-a06c-ffd1f11159b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81773317-9d09-43fa-bed6-a71429622857"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a71381-039a-46fb-a7a3-a6801b1494d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ace39f92-bdee-44ef-bd0b-069b8e0143b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "666dfb51-a6e9-42d0-aab1-bff1198ed8f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c522a90-a82a-4f88-b0b2-605fb49fa601"
            }
          }
        ]
      },
      {
        "id": "e03a4812-36f8-4cbc-a7f8-6ccacf373ff5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2046261e-8303-4277-8470-e129887c23c1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0d44bf3-1cf3-4966-9bf6-a71e6dd96d2d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "df317b47-1afd-4ee9-aa3b-39288fac5b98",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52ef8edb-c912-418e-a705-fa7e4da1f14e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7d2ad82-f96e-4db2-9dee-6bd1a2044c0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 49.23239436619716,
      "responseMin": 19,
      "responseMax": 3904,
      "responseSd": 230.34603991719615,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692318692636,
      "completed": 1692318720817
    },
    "executions": [
      {
        "id": "e2ffdf78-7b97-46c3-8b06-a19ab2c5edea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c09c5de4-3a29-4cb9-a1ce-38ea410ecb4c",
          "httpRequestId": "6cf397ef-37f2-4485-bbe2-4a8607486def"
        },
        "item": {
          "id": "e2ffdf78-7b97-46c3-8b06-a19ab2c5edea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "26d01fa8-4d59-4363-bf22-963a91195b61",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "87419052-4891-4059-b3dd-06af29901847",
        "cursor": {
          "ref": "030d1605-886c-4e75-8d58-8258e70c16df",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8540ccb9-6876-408b-8e2a-192aa5f10dc1"
        },
        "item": {
          "id": "87419052-4891-4059-b3dd-06af29901847",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9e97364a-923f-41e6-b6d5-d677844db97e",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "73eb8529-454f-4ad6-993e-af210a32e447",
        "cursor": {
          "ref": "96b79202-b90b-4c76-9197-f37686eb6f59",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b049a864-28b5-46cf-86de-570212300993"
        },
        "item": {
          "id": "73eb8529-454f-4ad6-993e-af210a32e447",
          "name": "did_json"
        },
        "response": {
          "id": "5f31fb00-f4d6-4c64-acf6-49467a0bf1ef",
          "status": "OK",
          "code": 200,
          "responseTime": 3904,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6408473-7c7a-4276-a3a0-935f2c6217be",
        "cursor": {
          "ref": "a719bea6-e44f-4732-a67b-736d60df9ede",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ebf8d54-ba05-45b7-8d3e-991bde2d078c"
        },
        "item": {
          "id": "c6408473-7c7a-4276-a3a0-935f2c6217be",
          "name": "did:invalid"
        },
        "response": {
          "id": "7949a56a-8f56-4024-8405-f8669d74df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6408473-7c7a-4276-a3a0-935f2c6217be",
        "cursor": {
          "ref": "a719bea6-e44f-4732-a67b-736d60df9ede",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ebf8d54-ba05-45b7-8d3e-991bde2d078c"
        },
        "item": {
          "id": "c6408473-7c7a-4276-a3a0-935f2c6217be",
          "name": "did:invalid"
        },
        "response": {
          "id": "7949a56a-8f56-4024-8405-f8669d74df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33aa473-0385-49f6-9bcb-8af823ca5dda",
        "cursor": {
          "ref": "d20c1a39-d38b-4699-8b24-cb64a68b6e45",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e1f69e3-99c1-49c9-b7da-933eb994ce75"
        },
        "item": {
          "id": "b33aa473-0385-49f6-9bcb-8af823ca5dda",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1b1b32f4-4f0d-4525-bec0-38ba8b1aacb3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc87194-d05d-4960-9bc6-f273fabb60d3",
        "cursor": {
          "ref": "432e3f9b-d1d5-48fb-bada-94d73d6be1a7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0ab20226-b464-4faf-a100-f3e37557be49"
        },
        "item": {
          "id": "bbc87194-d05d-4960-9bc6-f273fabb60d3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5366ceac-f2bf-4b04-bbe6-3c760cb3f747",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b1f2a5-2df5-4e6f-9cff-b73f54a830b1",
        "cursor": {
          "ref": "fa26c68d-161f-4ed3-b9d4-719fe395f4a5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "020630f5-7a58-43b5-a9c7-953190dd2d5d"
        },
        "item": {
          "id": "87b1f2a5-2df5-4e6f-9cff-b73f54a830b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1d068df9-4bfe-490e-a69b-3b39cef6de4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7574ee-fceb-4d89-8d11-76b056dcfe75",
        "cursor": {
          "ref": "4cd47e93-3245-433c-91b4-6daa87bef8f7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ca733b6f-0c26-4e8f-bfdd-3c309cbe6d64"
        },
        "item": {
          "id": "be7574ee-fceb-4d89-8d11-76b056dcfe75",
          "name": "identifiers"
        },
        "response": {
          "id": "019189e3-c7b2-4974-b337-c1818052a787",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b8e82a-c2de-470f-8070-d89857a3bfb3",
        "cursor": {
          "ref": "0cb9266e-02cf-4702-ab59-06c9b99551b6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "34979b84-818a-4225-9c94-790dff93d3ab"
        },
        "item": {
          "id": "45b8e82a-c2de-470f-8070-d89857a3bfb3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8468ff8a-4e9d-4545-bc4c-3dc518c410c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b14ab29-dee4-4b3d-b4ed-496569197b44",
        "cursor": {
          "ref": "0fd8c991-6ec0-4af9-8b56-d6806bea6535",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb6c399-897c-4fb2-9b64-04b3399889f3"
        },
        "item": {
          "id": "6b14ab29-dee4-4b3d-b4ed-496569197b44",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "53537d1a-2d51-48c4-992f-e43ae5727a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ebff1c-ce9d-4679-854b-9616261d28ba",
        "cursor": {
          "ref": "f5c3a477-889c-40d9-966e-0283a41b085f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "11736e86-f06a-4074-af97-31ffb4be8278"
        },
        "item": {
          "id": "05ebff1c-ce9d-4679-854b-9616261d28ba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de62c405-8e9b-4f9f-aa71-dc2f7abe3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed78e1-0281-411f-9539-0a08783d718f",
        "cursor": {
          "ref": "a536c145-7949-4c6f-a4d4-f6787b4da3b3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "47f25dda-e2e7-413e-8bd2-9831997a7745"
        },
        "item": {
          "id": "eeed78e1-0281-411f-9539-0a08783d718f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c423175c-491c-4026-9028-e57173202cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19e748-1d79-40ab-80ad-a79329561d59",
        "cursor": {
          "ref": "97780a6c-1978-4f7a-9183-32517a85c1ac",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "123e9ddd-6e23-4e73-9ad1-c2e50756d922"
        },
        "item": {
          "id": "bd19e748-1d79-40ab-80ad-a79329561d59",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87fc3893-0484-446d-9d52-7f20828e07db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77486986-67d7-4a2e-b940-b52b1440776a",
        "cursor": {
          "ref": "ddbccc54-957a-4db6-84ac-3cb9fdc2069b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "57beddf5-dbe3-4f19-8695-2bf0b1c04cdf"
        },
        "item": {
          "id": "77486986-67d7-4a2e-b940-b52b1440776a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "df41ada4-804f-44bd-a5e6-da107377043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4893d491-c8a5-43be-b230-1f2b4ee1a83c",
        "cursor": {
          "ref": "b3b76416-b691-441f-99c7-f89c03ebd445",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4b72ea01-f54d-4899-874c-efbe08b22c09"
        },
        "item": {
          "id": "4893d491-c8a5-43be-b230-1f2b4ee1a83c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e666fced-fb24-483a-a5ac-19aabb9756a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0852d435-ed9d-4e12-95a2-962515575ad0",
        "cursor": {
          "ref": "d150ff23-9815-493f-a2fd-32d649159e36",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8d262f2e-5de9-4c2b-9eef-2a66b6febdf0"
        },
        "item": {
          "id": "0852d435-ed9d-4e12-95a2-962515575ad0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3a194abd-b156-46fd-a549-5cbc7347c179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094cb4de-f83f-4717-90eb-8a66cf602b57",
        "cursor": {
          "ref": "7cb5db64-5160-47e5-b689-c61dc85dfb6c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7f2492c9-0182-4a46-b337-3a35204b5299"
        },
        "item": {
          "id": "094cb4de-f83f-4717-90eb-8a66cf602b57",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "41af5c6f-77a0-4445-b705-e8bbc7251b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46ff4b-ca0b-45ce-86d3-7193e7d431bb",
        "cursor": {
          "ref": "5413b0d6-cd7b-4a7a-b0ed-2b578aac1869",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93e6f56a-63ec-42b2-90a7-137d7a910908"
        },
        "item": {
          "id": "8f46ff4b-ca0b-45ce-86d3-7193e7d431bb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "64742cb4-540c-4da2-bdc5-19763aa74cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99c42b8-0eaf-4495-a8fe-bfbb7c1545e3",
        "cursor": {
          "ref": "c0d904a7-64ae-47fb-b7dc-37a1fa625f14",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f47657c9-6243-45f5-86c4-fec480c655e2"
        },
        "item": {
          "id": "e99c42b8-0eaf-4495-a8fe-bfbb7c1545e3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9b6ea05f-7523-4c44-ba76-044faa19c2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf7b4a9-7d8a-4e8a-816c-850865099554",
        "cursor": {
          "ref": "0f86e521-fc4b-43be-b120-753445418a74",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5a5e9ecc-a239-46d2-8533-f58cc0fe37dd"
        },
        "item": {
          "id": "8cf7b4a9-7d8a-4e8a-816c-850865099554",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5531017e-1895-41c8-9238-e238a4726ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79907e-7918-4eef-bdd9-ae1bfdbfa374",
        "cursor": {
          "ref": "cc7f0476-c65f-4648-b25a-e3a99aa0a19d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "38d2aa61-6bca-4ea9-a6d6-4a758768d1e9"
        },
        "item": {
          "id": "9d79907e-7918-4eef-bdd9-ae1bfdbfa374",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e4d44df0-023c-4be1-a22d-a127973b1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5e6db-f0ea-4ca3-8294-83af03276e56",
        "cursor": {
          "ref": "7fcf6abf-2f64-4bf4-835a-05c7abed0d97",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cb71f55e-ab17-4945-9961-e879375512d9"
        },
        "item": {
          "id": "5bd5e6db-f0ea-4ca3-8294-83af03276e56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c2a761eb-b435-4cc3-8404-7603ca7cfe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e1e04e-7485-4dd4-a1e2-212a6414342e",
        "cursor": {
          "ref": "f356b858-0819-42a1-bb2e-aac99e80a14c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d99c8c96-46e3-4388-8472-fd4415bdef93"
        },
        "item": {
          "id": "77e1e04e-7485-4dd4-a1e2-212a6414342e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "41c30ea2-e538-4ce3-9040-712e87706827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ad7a4f-1007-4c34-8cc3-2869c7fc3122",
        "cursor": {
          "ref": "af245441-16f3-481d-95fd-310136a6c672",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a4a27097-3c67-4340-8538-c2b655e9acd6"
        },
        "item": {
          "id": "62ad7a4f-1007-4c34-8cc3-2869c7fc3122",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5b5e2458-d0cd-40d1-b392-c620addcd620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4be2b6-d21c-44ac-83ad-9ee6bce1fc25",
        "cursor": {
          "ref": "4df0e12b-4c78-4cb3-81ad-11ded267e583",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cd5198d5-361e-435e-b4bf-4a4e875f079e"
        },
        "item": {
          "id": "3c4be2b6-d21c-44ac-83ad-9ee6bce1fc25",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eb6f3760-98dd-40bb-b48d-86f9046b6580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7bdcfa-85a8-4a03-bdac-9f4372e949bf",
        "cursor": {
          "ref": "087c5428-d0a1-4238-8c91-8af2e824e2c5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f17a09b3-c37a-4a72-b04c-e2de1dc187a3"
        },
        "item": {
          "id": "aa7bdcfa-85a8-4a03-bdac-9f4372e949bf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fcbfb80a-2e42-46d1-b026-f85aa92af341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f94bb9d-2008-476c-8672-c29bf689b7c3",
        "cursor": {
          "ref": "5b340d8d-9029-4748-9b6b-4e72e5081822",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69837df4-989d-4d38-8724-2602fd11a053"
        },
        "item": {
          "id": "1f94bb9d-2008-476c-8672-c29bf689b7c3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cae8796f-c867-4dda-ac02-e069620d7f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1498a5cc-7d76-43a5-9ba5-e20fc444188b",
        "cursor": {
          "ref": "2d5e18ce-2b54-4ad1-acae-420053c52870",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd1edee5-988c-46f7-b6a9-68a0c97b5a50"
        },
        "item": {
          "id": "1498a5cc-7d76-43a5-9ba5-e20fc444188b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f857e44f-f4b7-4139-a654-4bb715fc32cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e71511-2bbd-499f-bfbc-7a307100bd73",
        "cursor": {
          "ref": "4b30be49-85db-4e88-8d93-ca3c452ab8fb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ef1cdb95-78ca-4e42-b945-1cd2b000fbd5"
        },
        "item": {
          "id": "d4e71511-2bbd-499f-bfbc-7a307100bd73",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "387d0a83-982e-4975-a21f-3a8b3633b9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000d0c02-a86e-4261-890e-0107a087f827",
        "cursor": {
          "ref": "79b53ac7-5542-4c1c-a7dd-9a051663cd6d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2ed44aa8-9304-4172-832c-5f5321407d26"
        },
        "item": {
          "id": "000d0c02-a86e-4261-890e-0107a087f827",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9d8adc41-68c0-4df8-b98b-00c07016d5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875bd65-1a5f-4ae7-bd2c-920613cf85d9",
        "cursor": {
          "ref": "071ee99f-57ba-44eb-acb3-b171516185bc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "01433adc-0a16-49c2-8b5d-5e90b754c575"
        },
        "item": {
          "id": "f875bd65-1a5f-4ae7-bd2c-920613cf85d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de98484c-4570-473c-b6db-66d398b80dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb37bb05-17e8-4d8c-92a1-521f6f652e3f",
        "cursor": {
          "ref": "622e8656-621b-4474-8013-efff1611444c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ad3ca05-de51-43cf-841a-c9b64f2d72b5"
        },
        "item": {
          "id": "bb37bb05-17e8-4d8c-92a1-521f6f652e3f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7a530f99-56b2-4fc7-bbce-9872e32f2fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc52e6b-3cfe-477c-ab9b-4b76b95f05c4",
        "cursor": {
          "ref": "395494ca-a5c1-4afc-9f48-e40ef5bc2541",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c9a8c7e0-97e7-48c4-9081-125021c66f69"
        },
        "item": {
          "id": "bbc52e6b-3cfe-477c-ab9b-4b76b95f05c4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "60f75cc6-1a8f-4d9b-b7d1-90d5145168b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c955ebbe-279a-4ca8-9f30-88ed36a43acf",
        "cursor": {
          "ref": "4c096adb-14fe-48c8-9ea2-0520f3bd0511",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e60cfeda-616b-4257-bb5e-867490b58087"
        },
        "item": {
          "id": "c955ebbe-279a-4ca8-9f30-88ed36a43acf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0cf0005b-74fa-46b8-92b7-26881322b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83197d6a-1680-4e7d-aef2-a8b133a25dba",
        "cursor": {
          "ref": "2876ccdf-2702-4cbd-8c47-0ac6725d3d50",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2c4341b7-fca4-4f94-b598-dc9576d5f54b"
        },
        "item": {
          "id": "83197d6a-1680-4e7d-aef2-a8b133a25dba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4e64519f-a4e4-4f6e-ac73-6dc0360b9b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a3ebf9-0092-41c9-bfe2-9faf2343cd8e",
        "cursor": {
          "ref": "0f9bfca8-fafe-41c0-92a4-6cc0f5a7d8e2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "961468b2-4d59-4fbc-b177-51d496528fae"
        },
        "item": {
          "id": "a8a3ebf9-0092-41c9-bfe2-9faf2343cd8e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7d93cdf1-8a73-4e14-a263-a84d4e69992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188e7639-5b9f-4103-927f-189df4afa54e",
        "cursor": {
          "ref": "0011402a-7c4b-42ac-be66-3528e39f38f9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1905c89-5575-4d0c-8c21-5be90b7e3cc9"
        },
        "item": {
          "id": "188e7639-5b9f-4103-927f-189df4afa54e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e95b155d-1538-4f5b-b5b4-c2655e194b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8220459-f171-45cc-b27e-184cdc414d8e",
        "cursor": {
          "ref": "d58f196b-1898-4ee1-bcdb-87162f4c4d53",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "216b30a8-86b4-481a-a771-ee98e30cd8e3"
        },
        "item": {
          "id": "d8220459-f171-45cc-b27e-184cdc414d8e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "62faab8e-cd96-4ffc-9b6f-13206d53d3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc97bcd4-8ac6-4bf4-853d-fc408c038954",
        "cursor": {
          "ref": "31e53d25-c574-40b0-b018-b0e77e046472",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c5a48cb0-f357-44e4-a77a-92a3f5efb4ce"
        },
        "item": {
          "id": "cc97bcd4-8ac6-4bf4-853d-fc408c038954",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2be9a7c9-5dc1-47da-9737-ef46c55b85af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbebdd3-4fdd-4511-8b90-21efd20f04b5",
        "cursor": {
          "ref": "387c479a-10ce-4219-95ec-01cb469ffa1c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5044e699-2087-4cf9-a31a-8b23e0909c35"
        },
        "item": {
          "id": "4bbebdd3-4fdd-4511-8b90-21efd20f04b5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4592d908-1ce7-4639-b3be-47edb10a3f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0154e978-275b-471a-9914-e375c0d8e19c",
        "cursor": {
          "ref": "827f8618-99eb-4487-83cd-4daca8707d7b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2bf8ea9b-5bb9-46f8-afca-8c491eb392b6"
        },
        "item": {
          "id": "0154e978-275b-471a-9914-e375c0d8e19c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "99c2d056-10af-4fcf-8cc7-cf464a34cdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac07c4f-1d42-4286-adc3-aa4d46285f3b",
        "cursor": {
          "ref": "e368c234-d011-4d24-9ccb-a64a49feaef9",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "038bb010-716d-42d1-a280-3e8b3edc6999"
        },
        "item": {
          "id": "bac07c4f-1d42-4286-adc3-aa4d46285f3b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "241f54ae-3af4-4ca7-a6c6-ab9877c6ce8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c492fde7-ce5b-4ac1-9074-a71befbebcd2",
        "cursor": {
          "ref": "7721a1ce-dcb3-4416-a520-f3a9c085149c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e1bbafe4-efb8-4397-8aa3-a9e3b09e116a"
        },
        "item": {
          "id": "c492fde7-ce5b-4ac1-9074-a71befbebcd2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7de7fe39-1fc7-42ad-a0c6-5dd6c9c5c78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186f0dff-c1cd-4dcc-b9f4-1c5d4805f0da",
        "cursor": {
          "ref": "80205fa0-dcbc-46a3-b6ce-0b8649506846",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0600fadd-b3ae-4828-a2b7-4c1914f61984"
        },
        "item": {
          "id": "186f0dff-c1cd-4dcc-b9f4-1c5d4805f0da",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "48a6ecbc-b80b-48a5-b991-d525311a59d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adbbf0c-eac0-4f43-a830-8eedbf09107a",
        "cursor": {
          "ref": "02e1b1ad-5409-436f-ac97-7a72de0d31c8",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5444a213-23e4-4798-b73d-ce1b540cd8ed"
        },
        "item": {
          "id": "7adbbf0c-eac0-4f43-a830-8eedbf09107a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "07fe0192-de9a-42f4-9632-9f33ce3d4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b369f79-9c9a-49d1-8750-7cd109d4a166",
        "cursor": {
          "ref": "c57c2e03-dde5-4588-9d35-9330a35c21b5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a7b124b-5066-4454-a9f5-b991f449281c"
        },
        "item": {
          "id": "5b369f79-9c9a-49d1-8750-7cd109d4a166",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "235fb27f-c8e7-4634-8639-4c23e389736a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc330e-e358-4f05-92bb-020d4885f81b",
        "cursor": {
          "ref": "3eb20a9f-6899-48d0-ac22-27dbc4eb7cf3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fd06f95-5e3e-45cc-9a01-8af7a5af62c7"
        },
        "item": {
          "id": "64dc330e-e358-4f05-92bb-020d4885f81b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8cc1ca58-8f7d-4cc6-aa3b-ed06937e6a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee39960-0b55-4a10-ad9a-f793dc7cbb90",
        "cursor": {
          "ref": "c74ec655-eaf2-4828-9cdf-9dc0b830fd4d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8368c17f-e5b6-46ef-9f27-970e50e4b32c"
        },
        "item": {
          "id": "aee39960-0b55-4a10-ad9a-f793dc7cbb90",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9473968e-3353-4867-aee4-2d96009a8758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b55fdff-9b84-4d39-b552-0ee4f962537d",
        "cursor": {
          "ref": "3503c516-9bb4-48e3-ad78-e784ef7113d4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8fa4b135-6269-4de8-a939-2a6f66a3d4a1"
        },
        "item": {
          "id": "3b55fdff-9b84-4d39-b552-0ee4f962537d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e995d744-9283-43ef-b2b7-f8e67566c1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ebe8e6-1cde-42d7-ada9-49456f445f51",
        "cursor": {
          "ref": "98e0b010-d8d9-4552-b917-89eee49176f2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d3b8dbe-d38a-401b-a8f9-df44e076b232"
        },
        "item": {
          "id": "08ebe8e6-1cde-42d7-ada9-49456f445f51",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8f7f4b9-8c85-47aa-aced-fd40baf24935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b9ccc5-1687-4b11-ae43-8ad86758572b",
        "cursor": {
          "ref": "05d03437-deda-4a84-80df-9097dc30481f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cfa63d2c-38a0-4736-9eb7-b9284b9ef481"
        },
        "item": {
          "id": "43b9ccc5-1687-4b11-ae43-8ad86758572b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5020c453-f19c-4248-9f6b-8699cca6c31b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b27640f-c64d-437e-bc6a-b59cced73789",
        "cursor": {
          "ref": "93e7ca3d-7331-47fe-9891-1f1fcfe932c6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "49a79037-dea6-49a2-af8f-da8ad2e0ed8b"
        },
        "item": {
          "id": "9b27640f-c64d-437e-bc6a-b59cced73789",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6fd41599-fd9f-4f9b-b767-d3cd78c1cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c74c61-31ee-4efd-83c1-b3d4947c828f",
        "cursor": {
          "ref": "1e808d6c-29be-428e-ba94-f487bd02b7ef",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "90956129-f92e-4789-9a95-7920d44d140c"
        },
        "item": {
          "id": "78c74c61-31ee-4efd-83c1-b3d4947c828f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "880e6eb8-6cea-4255-a099-7e9d29d5b3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcea34c7-ab03-49e3-8876-8aaa282e7564",
        "cursor": {
          "ref": "93db897b-6edd-4906-8b84-e4022e8499c2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7a1a4c3-4c7a-422b-94ca-0dd874f738ff"
        },
        "item": {
          "id": "fcea34c7-ab03-49e3-8876-8aaa282e7564",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "135532af-551c-4dea-8c82-1c631770f68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312acf96-71ca-45a2-903d-e820f14c48ce",
        "cursor": {
          "ref": "c5d041e1-e4db-4e3a-a75c-6e39a3e09a63",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "338badce-495f-4245-905d-63a9756eec90"
        },
        "item": {
          "id": "312acf96-71ca-45a2-903d-e820f14c48ce",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "89488c4e-b26c-421a-af2d-c96338f60028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed116f52-adf7-4da9-bf52-b3ef25faf65f",
        "cursor": {
          "ref": "aeb7e3ba-5fed-427f-a0f9-81576f04524e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9875e5b3-f057-439d-9de4-0e14db85b436"
        },
        "item": {
          "id": "ed116f52-adf7-4da9-bf52-b3ef25faf65f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "755ae7be-ddcb-4019-b69a-2b277b2dda61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de7dda5-ba7b-4ac1-8f7e-fa66a00e646b",
        "cursor": {
          "ref": "a723f089-0a7e-4446-be88-a80632ab0ebf",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8feafd0f-2616-458a-b65d-fa946952570f"
        },
        "item": {
          "id": "8de7dda5-ba7b-4ac1-8f7e-fa66a00e646b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2fd82b1d-f1d0-4d74-bce3-0697350e491e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f4f883-049e-42e3-b7ae-8c21c32d08db",
        "cursor": {
          "ref": "8fbb7b54-bd0c-4bdc-b43a-be38bd596b76",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f15f78be-2765-4b4d-b78c-fa7274ec0197"
        },
        "item": {
          "id": "54f4f883-049e-42e3-b7ae-8c21c32d08db",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6e9d67d-7caa-4309-8ade-f7b494a0b774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92426ce2-1b81-46dd-ba06-18f45f7f313a",
        "cursor": {
          "ref": "4ae2b4c7-abca-4fa3-81f7-9ac74503b608",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5039682b-b127-48fd-bd9f-d1fd8625f45b"
        },
        "item": {
          "id": "92426ce2-1b81-46dd-ba06-18f45f7f313a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d2988eaf-42b9-4269-ad80-505cd3ab5f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f2320b-acef-49cd-bf14-3735981ea5d4",
        "cursor": {
          "ref": "2ab5a694-4e7f-4d04-bc86-2fb9d6edbfd0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ebac2a9c-196e-4f05-8fc2-43b7f6445b63"
        },
        "item": {
          "id": "35f2320b-acef-49cd-bf14-3735981ea5d4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a355d122-2061-4719-b00a-2ee0bcab6cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee93735b-4708-4300-90a2-a68ccfe9acd2",
        "cursor": {
          "ref": "13f8788b-9342-4585-a145-c0e0dd3382ef",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9844eaa-2764-485f-b87c-f5d5c53c2b9f"
        },
        "item": {
          "id": "ee93735b-4708-4300-90a2-a68ccfe9acd2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f4df036f-ea9b-4b2a-abeb-f4fb38b203da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bb3283-c94e-439d-aafa-1f43b614f137",
        "cursor": {
          "ref": "e617eb3e-f7f5-4e51-8585-d676d5ee28b7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60aa3bab-5c91-43f6-b0ec-e8ba6fdf9c10"
        },
        "item": {
          "id": "31bb3283-c94e-439d-aafa-1f43b614f137",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6f8390e0-2343-4432-a94e-5a44a4c68609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b272cf-0f5d-4892-bf0b-96958d467b9b",
        "cursor": {
          "ref": "3c17fcca-31d9-4136-9206-81b79ab81605",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "298efae5-1712-4953-bfb7-aa30f7839176"
        },
        "item": {
          "id": "52b272cf-0f5d-4892-bf0b-96958d467b9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "82bacf12-c99e-4ff2-9df1-44dc5be7bb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a32580e-2e8a-4df4-a8cc-21979e111ee3",
        "cursor": {
          "ref": "03d3e7ad-ddf7-41ed-9815-d960ba3b3698",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "46984dab-bcd3-47a4-b5fa-ccac38f90ebe"
        },
        "item": {
          "id": "8a32580e-2e8a-4df4-a8cc-21979e111ee3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "16cd1ce3-fca2-4c13-892b-f010ef73166a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747eb12a-5045-4b04-abed-4f861727a839",
        "cursor": {
          "ref": "407191ed-76ca-4398-aa34-f4e76e61ccfe",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4283d926-99e4-45e6-b4c2-3d73b08210c3"
        },
        "item": {
          "id": "747eb12a-5045-4b04-abed-4f861727a839",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9419f9a5-c9cc-4a9f-9487-d20de22adce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3d8855-9468-4469-bcbb-47e8ef5d644d",
        "cursor": {
          "ref": "94f38d58-2e9e-4aed-884e-1cdf0510b5a0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f3e732e-9b35-409b-8c18-dbc93d3c0f56"
        },
        "item": {
          "id": "bd3d8855-9468-4469-bcbb-47e8ef5d644d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb7cf041-3b02-4d92-9d36-e332ddc309f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fb329b-7457-4643-a757-9e562cdeeb04",
        "cursor": {
          "ref": "d8df44a2-6e76-4aba-bb93-62a71cf6b8ea",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8554e12e-e41d-4435-bec9-61e651ac7b5d"
        },
        "item": {
          "id": "45fb329b-7457-4643-a757-9e562cdeeb04",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67a138e1-b8e6-476b-95cf-521ccdeaf195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d438d5a8-c741-416c-aa4b-9e3607420984",
        "cursor": {
          "ref": "d45b7c70-2e99-42da-88a1-2bffa708e134",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1209baaf-1efa-4b65-afcb-c9e8e3cc2712"
        },
        "item": {
          "id": "d438d5a8-c741-416c-aa4b-9e3607420984",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0ca81a7f-3403-4126-9bda-c283f5dc388e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f472d7-54ee-4fdf-b1ef-65077b73af99",
        "cursor": {
          "ref": "6520c6fe-42c5-4743-be7e-4a9edc303898",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "15bac1a6-6a38-4b5e-a4c9-038063cb8516"
        },
        "item": {
          "id": "60f472d7-54ee-4fdf-b1ef-65077b73af99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d362d7e0-0d21-4bb7-8efd-9130af2c51e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a959230-714d-4a73-8a41-79a4f0b858ce",
        "cursor": {
          "ref": "b6ee4be8-6699-495d-8ac4-bce390d5f25d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3eaef646-7907-42be-b5c6-af68c941f31c"
        },
        "item": {
          "id": "8a959230-714d-4a73-8a41-79a4f0b858ce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d130e999-f60b-4348-a8bc-0bd244574515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452fe443-e3e8-4c55-9203-2c60ca782f99",
        "cursor": {
          "ref": "ba0115c1-7011-41a0-9d42-8be6e5fd8925",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7ef6c7e3-02df-40ad-91a7-6887953a7ac5"
        },
        "item": {
          "id": "452fe443-e3e8-4c55-9203-2c60ca782f99",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d80e8c03-cb4e-488b-961d-9ccbe1728787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db41928-8c07-476b-96a7-9f375910af15",
        "cursor": {
          "ref": "714b073f-cdab-4422-a0a0-8d3652b5f796",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "08e9ca1d-26c2-49b5-8b96-dc3faddc6705"
        },
        "item": {
          "id": "1db41928-8c07-476b-96a7-9f375910af15",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "46346bfa-b3f4-4200-8613-86f83afdc7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d03581-2ff9-449b-9d5a-73675f64e0a0",
        "cursor": {
          "ref": "f6a31ba8-69c7-4cbb-aea2-eecbe5830d8d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fe892002-0e90-41d1-aebf-64ce6130b98c"
        },
        "item": {
          "id": "16d03581-2ff9-449b-9d5a-73675f64e0a0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5472374e-35ae-44a4-b7ab-9c3fc5de5b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3288e9-1564-456f-b3ab-92a92e17637b",
        "cursor": {
          "ref": "c06a52d0-0c1d-4588-8151-e92fd0ab6895",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff09db4d-d0e8-41c1-9d6f-59dccea5d50c"
        },
        "item": {
          "id": "6f3288e9-1564-456f-b3ab-92a92e17637b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5f831da0-0282-4d5f-833a-bf84968ab042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9269f31-db7c-4bf8-8153-eefacce28f36",
        "cursor": {
          "ref": "c740f6d7-ad6c-4d3f-adbe-d1b8ebbfe9ff",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6e05e28-42a5-4418-95eb-ec1363692898"
        },
        "item": {
          "id": "e9269f31-db7c-4bf8-8153-eefacce28f36",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7c710a84-65ef-4e1f-af49-2d754cbfea5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae72132-1c4a-4479-acb1-2a90de17d422",
        "cursor": {
          "ref": "9d7a3f9d-7387-4f88-98ff-28b175a88a7e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f01f8bde-670b-48a7-987d-85f04efa0a9d"
        },
        "item": {
          "id": "1ae72132-1c4a-4479-acb1-2a90de17d422",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "532ea878-fece-4de2-aac5-33bacbca7589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58689d2-691c-43b7-a7df-620b710e3966",
        "cursor": {
          "ref": "44dac42f-4ef1-4a85-a47e-6793a7b83331",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "05424f3f-681c-4fb4-a925-b60f56c2f737"
        },
        "item": {
          "id": "f58689d2-691c-43b7-a7df-620b710e3966",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e371dffb-e675-48c1-a8d7-7e6d6730240f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b509d-be53-4e0c-8cf6-ffc0421e84fb",
        "cursor": {
          "ref": "390c75b5-1dff-49b2-a9fa-41ae2441d643",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "07755af8-6252-4a11-9818-9d6d5c971552"
        },
        "item": {
          "id": "393b509d-be53-4e0c-8cf6-ffc0421e84fb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "691e6525-9acf-47bd-b72e-0a8cef7ae4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb90acf7-5b73-4c96-b307-2be1b36b1d59",
        "cursor": {
          "ref": "e693a992-66fa-4534-a720-3fa6a45aeff3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eca1cd0a-9c2c-4818-a780-ab28843e1c4b"
        },
        "item": {
          "id": "fb90acf7-5b73-4c96-b307-2be1b36b1d59",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "197b96ef-52a6-4818-965a-b92d04d8b779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210b29a9-6f75-48b3-9c38-456397742240",
        "cursor": {
          "ref": "cf9d802f-3155-4717-88f4-522b029a5038",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f34fb391-b0a6-4cc1-a2ca-e09c9e545e9a"
        },
        "item": {
          "id": "210b29a9-6f75-48b3-9c38-456397742240",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "521a9c49-2286-42ca-adcf-4db3ec246dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16e5622-d2ed-4890-b389-97e764a035ba",
        "cursor": {
          "ref": "91db32eb-7e49-4367-8210-ac5a2b4f5872",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "10f11429-aba4-4571-bf15-3ec026e4af51"
        },
        "item": {
          "id": "c16e5622-d2ed-4890-b389-97e764a035ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01917a06-f942-45b1-a92d-a7eb64fb34f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9445447-c379-4b7f-961f-eab79e47a381",
        "cursor": {
          "ref": "b4150b79-4927-49ea-bf95-0b9e872de630",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "faf0493b-3571-4c9b-9bef-2b2de1e11149"
        },
        "item": {
          "id": "e9445447-c379-4b7f-961f-eab79e47a381",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d7228ce6-966e-4390-8475-17f77b7e5695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be08f417-2b73-40d3-8a1a-def8d42dc25f",
        "cursor": {
          "ref": "85da8084-65a9-4679-8d48-d5f04e552356",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "370968f9-97b3-4da7-a298-486a07db472b"
        },
        "item": {
          "id": "be08f417-2b73-40d3-8a1a-def8d42dc25f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a0edb0d9-63d6-4b50-a499-28e199c4ec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc02ae-c3fc-4dde-9c9f-09df95f92cea",
        "cursor": {
          "ref": "9695a200-f10c-46a6-ac16-8d7a4eaf90f7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e20ec830-a101-4bf9-ae24-0864e48ca14d"
        },
        "item": {
          "id": "5afc02ae-c3fc-4dde-9c9f-09df95f92cea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "318b5e33-dff1-474b-9bc2-b1af586465a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb96a0-f68f-4bb7-9333-7cf1d8bcf185",
        "cursor": {
          "ref": "d7966e73-6285-450b-9578-44a01639b3a1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40dc4942-7916-406e-98ca-98fa5c179e29"
        },
        "item": {
          "id": "15cb96a0-f68f-4bb7-9333-7cf1d8bcf185",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bd9786b2-2bea-46da-97f6-7f933f6358bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4bcc34-a2f1-404f-b5d9-67e768f266f4",
        "cursor": {
          "ref": "1599a87d-3360-45b2-8af6-558d8508e26a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "482f0222-38d5-47e8-93bc-437ad5590535"
        },
        "item": {
          "id": "df4bcc34-a2f1-404f-b5d9-67e768f266f4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "84d6ffe7-ab67-4fca-b03f-7d14eea1806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d144d733-d9bd-4691-9c28-27eac0becb91",
        "cursor": {
          "ref": "dceef638-7bbc-41ed-88e7-3f5414e6abd8",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc992b47-2385-46d0-a6ae-c878280c73ce"
        },
        "item": {
          "id": "d144d733-d9bd-4691-9c28-27eac0becb91",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "582e06ba-9301-4bd1-bb1d-171b2bc3c23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e221a520-c814-40cb-a156-63dbfcb56cf5",
        "cursor": {
          "ref": "493202d7-c605-4829-b45c-dad6da5497a1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "56891d0b-059c-403c-b9f9-766d67bc196c"
        },
        "item": {
          "id": "e221a520-c814-40cb-a156-63dbfcb56cf5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b2786386-0954-473f-aad7-04095f669aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b057e363-0c95-4a07-813a-0f9652c78309",
        "cursor": {
          "ref": "58988fc4-1fc3-422f-9ab3-8ac7e162abbd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d763604b-0597-41ce-b8c9-5d7279b86d9e"
        },
        "item": {
          "id": "b057e363-0c95-4a07-813a-0f9652c78309",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9eb858a-565e-4996-ac39-94336751a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1e3fb-d666-4648-a78e-388621c8113a",
        "cursor": {
          "ref": "4f5ffc68-0496-4ace-9c68-cc01a17e82c8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c0c6ffef-5e48-4147-a229-377e2b4a0769"
        },
        "item": {
          "id": "21d1e3fb-d666-4648-a78e-388621c8113a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c323bb39-9cdb-4343-a346-8caf556f835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0705ed2-e0d5-45f0-995b-d6d4ebf93c33",
        "cursor": {
          "ref": "854babe9-abb7-42de-baa0-85fc24c6465d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fd53e14a-5d7e-41b8-a537-5aaab4f396ec"
        },
        "item": {
          "id": "a0705ed2-e0d5-45f0-995b-d6d4ebf93c33",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5d8da40-0345-439f-8252-1f486cbbdb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f42872d-0fec-4baf-bbb0-23359e2de00c",
        "cursor": {
          "ref": "934328ec-d0c0-410b-8fca-0c3ea5833f10",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "29c5edf6-5597-4f7e-9f0b-283716535b29"
        },
        "item": {
          "id": "8f42872d-0fec-4baf-bbb0-23359e2de00c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "affaa158-e091-416e-a194-1f9e5cd37b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526da7dd-3c38-4539-bc2d-ba88edc442be",
        "cursor": {
          "ref": "ef7ae5f3-3dc0-4246-9d74-14955356d40e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "814ee6ea-3da5-47f5-a278-d87eb4119c69"
        },
        "item": {
          "id": "526da7dd-3c38-4539-bc2d-ba88edc442be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e15f96c7-6a04-40fd-9266-e6ea40653193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d684613b-d580-41d9-8584-ed0c809663d8",
        "cursor": {
          "ref": "52352f17-5fd5-4cbe-91a6-0d2809ea6fc1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3a681e53-e81c-4b5b-a03f-4ac0ca2a18e3"
        },
        "item": {
          "id": "d684613b-d580-41d9-8584-ed0c809663d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b21005a9-7380-4c19-869d-303882aa6545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6252eb42-7d14-421e-98f2-b3fa8edbbec3",
        "cursor": {
          "ref": "b71e5551-ba0b-4423-88ff-c2748cb4e3df",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f7374891-b91a-408b-be79-92cb1d9fa66b"
        },
        "item": {
          "id": "6252eb42-7d14-421e-98f2-b3fa8edbbec3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "079a7bca-0a35-4e78-9c7c-79261ce86e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21da37a-265f-4895-b1f8-6a7c951a97af",
        "cursor": {
          "ref": "8376701e-c7a7-4daa-9bea-7d4247e958e0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d464e0e2-b599-4323-8fcd-35a12215f920"
        },
        "item": {
          "id": "c21da37a-265f-4895-b1f8-6a7c951a97af",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8bb3e6e5-3cb9-4818-9003-6fb50a327700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a3521a-c9ba-49cc-8298-b9243cbfdb8d",
        "cursor": {
          "ref": "37e7facf-e9e1-490c-a880-c92dbb3f239b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3718d4a4-c718-4118-a520-970af325fcc2"
        },
        "item": {
          "id": "06a3521a-c9ba-49cc-8298-b9243cbfdb8d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d895657a-b8c9-4ebc-ad6e-90f60b6e4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f8a89f-37f3-4a69-802c-372cf62141ed",
        "cursor": {
          "ref": "8f970c92-c5b5-4b5f-8bd6-dc13ea23466f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "501cc1e7-9b77-4848-bb81-6b91095189e2"
        },
        "item": {
          "id": "60f8a89f-37f3-4a69-802c-372cf62141ed",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2c2d4df5-6cf5-418e-bc19-3a7a733fb968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff9c7c4-cfff-4dc3-81fc-9bd0eb020e99",
        "cursor": {
          "ref": "7cc9728e-f0ab-421a-a73e-187f3e203037",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fed3093d-2484-49bc-9ef0-732221847cae"
        },
        "item": {
          "id": "2ff9c7c4-cfff-4dc3-81fc-9bd0eb020e99",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b9066db1-06cf-4c0d-a1ae-24afb200a82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9420dd-e125-478a-841f-1cda40b3f385",
        "cursor": {
          "ref": "bffe65fb-1560-499c-8bcb-9518a07ad7b4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "35726592-08b1-4a17-9d33-f0f754464164"
        },
        "item": {
          "id": "5c9420dd-e125-478a-841f-1cda40b3f385",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b2c920d9-58de-4901-9de4-4c680025109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1f748f-7295-4298-bdf2-d2ef574396b3",
        "cursor": {
          "ref": "1c3239a0-3666-4a53-99b0-0cfa3bb7c4fa",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14918c81-a935-47be-a37c-4519ae91e0a2"
        },
        "item": {
          "id": "3f1f748f-7295-4298-bdf2-d2ef574396b3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a2729808-d1ba-45c6-82cb-e171977fb8d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cd46e4-4f81-4f89-b4af-81ce68a38ff5",
        "cursor": {
          "ref": "49b8c182-7f2f-4b6c-b641-ce06cfe0e7d8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "da3f188c-78de-4dd0-93df-bdfe3bd07563"
        },
        "item": {
          "id": "f7cd46e4-4f81-4f89-b4af-81ce68a38ff5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "44655b75-39db-4412-8da3-aaec53c6e5dd",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ce97b1-f399-4947-b584-bb3f83668fc4",
        "cursor": {
          "ref": "9de8f05b-5c6c-4240-9133-9c1927ef1e03",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aee6059d-d9ad-4cf3-86aa-03637872f4e5"
        },
        "item": {
          "id": "98ce97b1-f399-4947-b584-bb3f83668fc4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8fbb3add-9caf-4fad-bcd2-f81ba1dce231",
          "status": "Created",
          "code": 201,
          "responseTime": 267,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b918f476-3da4-4a50-b7e4-9b7132d651d8",
        "cursor": {
          "ref": "ba43a290-697c-4972-b512-7b65c14a6860",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0a07af03-9f21-490d-8525-11038e307adb"
        },
        "item": {
          "id": "b918f476-3da4-4a50-b7e4-9b7132d651d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "48ad3996-de0c-4fb8-affa-5f8ffb39108b",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2acbfa-3a9f-4d0c-955e-1ee87b35b046",
        "cursor": {
          "ref": "25e56eeb-290c-4cfc-8227-c663c97dca31",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "040fc222-04be-4817-8b54-ce3122bd1738"
        },
        "item": {
          "id": "4d2acbfa-3a9f-4d0c-955e-1ee87b35b046",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c3e8da5f-a927-4ecc-a133-f3f9c13f3829",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ec16b3-5e0e-45d7-a4cb-8f25fa2dced1",
        "cursor": {
          "ref": "73c5b49a-066c-470e-9c39-66ad67207b93",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b697a20-f257-4246-82d6-6a7b68bd1237"
        },
        "item": {
          "id": "35ec16b3-5e0e-45d7-a4cb-8f25fa2dced1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "24b7384f-34f0-4472-9f85-241695aae28e",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9896307-fab2-4399-8d30-63e22429140a",
        "cursor": {
          "ref": "44cebbc7-d537-4016-8ace-5ae1a16538bf",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ea50f0ac-af41-4fe7-b19a-dc7b18665bd6"
        },
        "item": {
          "id": "a9896307-fab2-4399-8d30-63e22429140a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d89dbeb6-5273-4bf6-9ab7-52554303ea9c",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1654274-f927-491b-a93c-167e91a64bff",
        "cursor": {
          "ref": "97b2491d-7167-482b-9bbe-b29cdb64b66c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5ec612c1-d2c0-4e57-933c-1dfeb8f90cb8"
        },
        "item": {
          "id": "b1654274-f927-491b-a93c-167e91a64bff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7eff305d-6cf3-4316-8200-e43041bd7e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a271a142-902c-4b72-b54b-03aed2182801",
        "cursor": {
          "ref": "06def87a-d0bb-4081-8f6d-3673756efdfd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e4728996-af5d-4cc2-a228-0f92d6297e6f"
        },
        "item": {
          "id": "a271a142-902c-4b72-b54b-03aed2182801",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0360a706-db12-40f4-adf1-16029fb688d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f8d66d-2e77-46b4-82a1-a3d13ed22b58",
        "cursor": {
          "ref": "2fffe83a-cb62-410d-9a33-d897534843f1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fcfd594c-dc14-4f43-a876-c993ad01f682"
        },
        "item": {
          "id": "56f8d66d-2e77-46b4-82a1-a3d13ed22b58",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a447d7c6-3865-4f30-bd48-b4b7e966c8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c584f7c-9bc3-4d2c-94c3-bbba865cbacc",
        "cursor": {
          "ref": "f3046b60-7714-4836-a32e-742471067220",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "017cb812-4bd8-4386-b7fe-7c427869e85d"
        },
        "item": {
          "id": "8c584f7c-9bc3-4d2c-94c3-bbba865cbacc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b8e1b07b-7cb8-4fce-8fb2-487a88159156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a6ac50-2261-4bfc-b184-aacfdd1c5a7d",
        "cursor": {
          "ref": "e3de708a-daa7-41eb-9936-e2085917b0e0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c166eb3-944a-4411-81c1-10f6c97bd129"
        },
        "item": {
          "id": "85a6ac50-2261-4bfc-b184-aacfdd1c5a7d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d98e7c14-c485-4e54-8274-e3f0ab6e1af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07236ae7-94cf-4fc2-a7f8-60bb5e961d63",
        "cursor": {
          "ref": "0779a030-7804-44fa-bd31-d8de24569806",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "38f3fd65-8dd4-43ef-80f8-90f6c4faddbc"
        },
        "item": {
          "id": "07236ae7-94cf-4fc2-a7f8-60bb5e961d63",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3fa8ad5a-0753-499c-8e50-f98a9a3cf92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df491c5-7438-469f-a8dc-9e5af4846089",
        "cursor": {
          "ref": "ead954de-1f6b-4cec-8574-598df9b46b9d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e27fa8d9-c4ee-4224-b935-2f0432552830"
        },
        "item": {
          "id": "4df491c5-7438-469f-a8dc-9e5af4846089",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24d98698-5c66-428a-bcf8-fcbd78e7428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1298f37-98e8-47bd-8702-29fabfd575d6",
        "cursor": {
          "ref": "c13ca555-6b6d-4560-add2-bf298319abcc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b78ff960-3cea-4290-a7dc-bdd0308442c7"
        },
        "item": {
          "id": "a1298f37-98e8-47bd-8702-29fabfd575d6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81c11052-fbc4-434f-a821-d3c78c002dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065a727a-d612-48cf-a2d2-92bf2239d861",
        "cursor": {
          "ref": "613aec70-aa40-4758-9c4d-2005bc92b1a4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "275451fd-9d98-4501-b46f-ed844b4ea10d"
        },
        "item": {
          "id": "065a727a-d612-48cf-a2d2-92bf2239d861",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2a6a1fb-ca14-4280-bf70-5135629a4a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0de7ed-f528-401c-bb5c-815a10f373a3",
        "cursor": {
          "ref": "ba0fb5e1-aafa-40c9-bfcf-5caa8e563952",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5d744b53-3c60-4797-94b1-3fe0d770783a"
        },
        "item": {
          "id": "aa0de7ed-f528-401c-bb5c-815a10f373a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "da1c45d3-1d64-4d71-a155-1b7ef3575403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f12735e-b0ee-43a0-955d-217e0be5b750",
        "cursor": {
          "ref": "20bbe2aa-610c-4328-a6a4-7d2fdae3adbe",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a91713f7-68d8-41f8-853d-87265a1c2f3b"
        },
        "item": {
          "id": "1f12735e-b0ee-43a0-955d-217e0be5b750",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7df4cefa-f02d-42b5-baff-92e9fb184573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba44e5a-5271-4c51-ae63-f672d8970044",
        "cursor": {
          "ref": "d739501a-4d15-4b44-bb95-6bf2c07c1fc4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3a86d161-88be-4d55-89df-f3d65942dcf5"
        },
        "item": {
          "id": "dba44e5a-5271-4c51-ae63-f672d8970044",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dab42ac8-6177-4563-8b93-f1e6a5b57c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d558ee6a-d623-4e63-af72-21220b7b3e3b",
        "cursor": {
          "ref": "e32cc84b-3571-4318-90c9-26e9950dfcf9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "edf4eaad-59e8-44c6-ba2a-80a2a2ee0e02"
        },
        "item": {
          "id": "d558ee6a-d623-4e63-af72-21220b7b3e3b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3402dc4-5029-4109-94b8-f2dbc0323f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74140182-fd64-48f4-94d6-f09f8cf6000a",
        "cursor": {
          "ref": "f8d2f44b-cd33-4d15-94de-66704ed46e4e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c589105d-f071-4e8b-aa1f-976eed77714d"
        },
        "item": {
          "id": "74140182-fd64-48f4-94d6-f09f8cf6000a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "524c0e8d-f8d4-4257-b293-62109ee9e686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802667c3-81bc-4a4e-8add-00bee038b82b",
        "cursor": {
          "ref": "4948be1e-92aa-4eec-be28-fbf1e0464e34",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "be715637-5e7b-492f-8b8c-70fdaab08f2c"
        },
        "item": {
          "id": "802667c3-81bc-4a4e-8add-00bee038b82b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4427253d-ce37-417d-ac51-71d1ae09f202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d1f111-a463-4245-bccf-1c6a96634b4c",
        "cursor": {
          "ref": "27d2a0cf-7c5d-449e-87c7-5a8c5a55b120",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ce174f3-055f-4ffc-b19c-4d0fb8045840"
        },
        "item": {
          "id": "c9d1f111-a463-4245-bccf-1c6a96634b4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "83f5d564-5f74-4443-a971-6d27ab2d9ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02ceea-5275-4897-bab8-36d9f61cd191",
        "cursor": {
          "ref": "533a4239-7c1a-4c4d-a837-ca253e2dfbb0",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d43c69e4-5f0f-4404-8cbd-9469e47edc21"
        },
        "item": {
          "id": "fb02ceea-5275-4897-bab8-36d9f61cd191",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16e4ee67-4283-44a6-a45e-d9c203365c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9427d2ab-0be5-485e-9267-a04f8c0ff30a",
        "cursor": {
          "ref": "4813cbba-8d81-4df2-bce6-d0e541adcdfe",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f2915cbd-75f6-45cf-b952-5405f64680a6"
        },
        "item": {
          "id": "9427d2ab-0be5-485e-9267-a04f8c0ff30a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed04694d-5941-43f3-a8ae-2e57f84d38bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27543f-0f84-48a4-9754-beb174c40ff9",
        "cursor": {
          "ref": "a78e48d9-34c9-48bc-ac4a-c2ce0a59b1e7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d380f5d8-8319-4879-9383-0e1d3d7a2f33"
        },
        "item": {
          "id": "1b27543f-0f84-48a4-9754-beb174c40ff9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0009720-c907-486f-b60c-f46dcda66b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff17531-1756-42f8-b5d8-ef3e1168688d",
        "cursor": {
          "ref": "335a1484-5b35-477e-a802-cf199b7c42b5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "006c8724-d267-4e3c-9f3f-fae9cf5cb432"
        },
        "item": {
          "id": "fff17531-1756-42f8-b5d8-ef3e1168688d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6ed0465-b164-47da-b3c4-1d19bed3cbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47ef80a-d323-414f-82e4-7a18836e80c3",
        "cursor": {
          "ref": "3d991a4f-7891-44b6-8c5f-2fea97342e24",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a1f5c26-c3fe-4629-8375-b3831c0bae5f"
        },
        "item": {
          "id": "b47ef80a-d323-414f-82e4-7a18836e80c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a90758fc-38a5-4d79-8267-a27d5e895a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b54a44-cad6-4d4a-9a2b-cc9a5e9ef3a9",
        "cursor": {
          "ref": "a141fe46-4815-49c2-8e32-07b36fada447",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fccc4f50-fe88-4ad2-b3ce-b2bf92048a01"
        },
        "item": {
          "id": "b4b54a44-cad6-4d4a-9a2b-cc9a5e9ef3a9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c5fb2f9-59a6-48f6-adc2-62fdeb57b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46831e61-bd6d-4e82-8708-b908e49dc04c",
        "cursor": {
          "ref": "a31d6614-2603-4f8b-b137-6445ea2a3441",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8b8e6491-b387-4850-8af8-b58ddd37bcdd"
        },
        "item": {
          "id": "46831e61-bd6d-4e82-8708-b908e49dc04c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "caec37db-0fa8-459d-bb24-36061060078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fdd817-7094-4986-9b06-eda7d379fb5f",
        "cursor": {
          "ref": "e3347aa2-c557-4f3d-be2a-68247d8fcc85",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6ffd7d9f-ad3a-419d-ae7d-5414de1130bb"
        },
        "item": {
          "id": "38fdd817-7094-4986-9b06-eda7d379fb5f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5195874b-7bdd-4b0f-bdb4-96cf6c3498ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a1e35-de59-4fdd-8ae0-cc58ab006ee4",
        "cursor": {
          "ref": "3e8ad905-2e82-4d73-b0b1-31b0de9d7bd6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d6ac4cb1-31e1-4610-90aa-a3666c71c330"
        },
        "item": {
          "id": "e44a1e35-de59-4fdd-8ae0-cc58ab006ee4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ce3d8d4-6705-4882-a875-277ad44d997f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1516ca-e917-4be8-893c-c4276ecd6e0b",
        "cursor": {
          "ref": "66297231-51d1-4148-baa3-9b106965e233",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99e9d9b4-936a-4110-8d52-f3afa473f14f"
        },
        "item": {
          "id": "4e1516ca-e917-4be8-893c-c4276ecd6e0b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "77efdf9a-b1f7-4be7-a80a-d9c2f0238c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076b53ce-2b68-420f-af50-9beb5c69108a",
        "cursor": {
          "ref": "df7b19b2-f1b8-4311-baf6-8bb56efb2b1a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2dcf0033-8935-4956-bf4c-ea63cd3bdc36"
        },
        "item": {
          "id": "076b53ce-2b68-420f-af50-9beb5c69108a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1dc508f4-4f4d-4c29-a0e8-0c3c3a1293db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2066eaa6-b935-45ac-b455-db2209c7a8c7",
        "cursor": {
          "ref": "7195465f-faab-4ad1-9c03-bc98e131c17e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8f63f6c4-510e-403f-b911-925c201913d9"
        },
        "item": {
          "id": "2066eaa6-b935-45ac-b455-db2209c7a8c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "edfcdc41-a212-4447-8da8-acc749c8f447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89521281-ec7d-4aae-8d17-98aa2e3fed3a",
        "cursor": {
          "ref": "f65ff95f-7056-41c5-baec-34dde9fe9f1a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c67fbcb1-f8e2-4202-8874-cd40560e368d"
        },
        "item": {
          "id": "89521281-ec7d-4aae-8d17-98aa2e3fed3a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5ad8a453-4a7a-4ad5-b6be-4d4306990070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b95024-ed53-45fe-8195-116e7bd65027",
        "cursor": {
          "ref": "0010f7ea-2df7-4d49-abdc-ecae70a0b0e6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d820ab18-76bb-4c73-9355-fd304f1ed0b3"
        },
        "item": {
          "id": "d9b95024-ed53-45fe-8195-116e7bd65027",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc4795f3-54de-49de-af86-11d80f462658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b80b7d-d794-4ef6-b08e-fe1c953099d1",
        "cursor": {
          "ref": "e5e4d65e-9148-420c-b2ac-9fefe4954f79",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "294d5e8d-8cba-4829-9723-885dca725d96"
        },
        "item": {
          "id": "97b80b7d-d794-4ef6-b08e-fe1c953099d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "61a047f6-71e1-4d9a-bf65-b1158d09e911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb2f7bb-cb2e-4a21-9499-050204287b69",
        "cursor": {
          "ref": "57074a2a-d607-4a1e-9787-a17612bdff3a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "048da709-cbb3-41a4-b1a7-0e5d46933875"
        },
        "item": {
          "id": "6fb2f7bb-cb2e-4a21-9499-050204287b69",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1c041e35-c1be-4283-828c-03b9eff89e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729cafdd-7ec2-4169-a5a0-65f77e737c45",
        "cursor": {
          "ref": "73a48522-13c2-4de1-84e5-6eecf58f364b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5673065b-abfe-4699-9df7-fce7b74820ab"
        },
        "item": {
          "id": "729cafdd-7ec2-4169-a5a0-65f77e737c45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eaf687e6-3fd1-46ab-a588-28dc3a65eaac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f24fdc-b7a6-4ab8-889d-d76ab6d478f7",
        "cursor": {
          "ref": "bf829161-d3dc-4d22-920f-fae49b80aa19",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1785477b-7e27-4e20-81f5-7777a857111e"
        },
        "item": {
          "id": "f1f24fdc-b7a6-4ab8-889d-d76ab6d478f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c625b75e-a286-4666-9194-87de9039787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c44aa1-b70d-45f7-9104-e6adca821b9a",
        "cursor": {
          "ref": "0023ba3c-9bdf-4ea4-8886-de52a55e7c84",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f1f31e31-351c-4f54-a949-2486c649f482"
        },
        "item": {
          "id": "d7c44aa1-b70d-45f7-9104-e6adca821b9a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "480bcb87-fc35-4c30-8d10-01bd8243d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa078134-306c-4847-9c79-c7afe1e32ef8",
        "cursor": {
          "ref": "2cdf52f9-585a-428a-90bb-d344b2e39cb7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60d4c395-cb77-454d-a4d2-2df80b5b6f7b"
        },
        "item": {
          "id": "aa078134-306c-4847-9c79-c7afe1e32ef8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e49ddcd7-43cf-476d-b6e8-192169f39226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d5bce6-4c49-4181-8078-a4708fb186d3",
        "cursor": {
          "ref": "9bcf900e-e47a-4960-8ba7-434d35416e27",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0818e456-ad21-46d4-8b9a-90076ecce88a"
        },
        "item": {
          "id": "71d5bce6-4c49-4181-8078-a4708fb186d3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf5203e6-7255-4e6f-888e-1f0f193f43c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b3d44-2181-454b-91b7-560615bc6efc",
        "cursor": {
          "ref": "a1aef3ab-3601-4862-9968-881685f54521",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eaf59be0-caab-48df-94b2-7cab324c9213"
        },
        "item": {
          "id": "391b3d44-2181-454b-91b7-560615bc6efc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd6eff3b-56a0-439f-89f8-dd29663b2a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f2c56-a57a-4097-85b1-bf13ebaa541d",
        "cursor": {
          "ref": "92b22168-3a3f-4ba1-8be3-de981eed7d95",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a7d42e55-30b0-4b65-a73d-6a7e25e066f6"
        },
        "item": {
          "id": "fb4f2c56-a57a-4097-85b1-bf13ebaa541d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bff914f7-a97a-4203-a136-d96f9e81a8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15052f92-ad1f-457a-95a7-458c4578e8d4",
        "cursor": {
          "ref": "7db68ea7-867d-4d1b-99b8-9c1992c5ef06",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4633b9c1-d591-4225-af23-6c0523e98c40"
        },
        "item": {
          "id": "15052f92-ad1f-457a-95a7-458c4578e8d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c77e1f13-4b8a-488d-b348-a057b81a4dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8efc48c-10d4-43f6-92f6-450d96a2ba44",
        "cursor": {
          "ref": "f1d7b0b3-e662-4128-a1d7-69caf8593de5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "905ddbd3-307f-461d-80af-1d5698d462f2"
        },
        "item": {
          "id": "d8efc48c-10d4-43f6-92f6-450d96a2ba44",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d18fb1b-2f3d-4160-925c-beba01c2e724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46345ef5-9929-4b70-9ec6-3a6d51e08a0c",
        "cursor": {
          "ref": "2874fce3-0d9f-4850-b6ce-28a35a0434b3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "57d0caab-1ed6-4d68-8935-9a4d10ac4d6a"
        },
        "item": {
          "id": "46345ef5-9929-4b70-9ec6-3a6d51e08a0c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a432ef8f-6b8a-4762-a77f-45f3c5d83e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67effa2e-039a-4872-948b-56849c36cf7a",
        "cursor": {
          "ref": "6db7d569-807a-433b-9031-d06a51e90dac",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "36d52f27-8b2a-4ee0-bc0b-6c75450b2f0e"
        },
        "item": {
          "id": "67effa2e-039a-4872-948b-56849c36cf7a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "381b3509-8e94-46ad-8442-585787110e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aecd0d-b4a7-4a6b-909a-0f1ffe35aa21",
        "cursor": {
          "ref": "66cf3b01-7cfa-4f3a-9ffc-019208b07e43",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62e0b1e3-a921-4e5d-ab8f-88312f01e838"
        },
        "item": {
          "id": "96aecd0d-b4a7-4a6b-909a-0f1ffe35aa21",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "24854233-3aca-4433-8035-57f41b0c70e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24043646-861a-4272-aaea-1cfc6276de40",
        "cursor": {
          "ref": "5c22e595-a59f-49a1-9114-3921de1a5cf0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db39152c-caad-4f81-8c65-adf08dca8eff"
        },
        "item": {
          "id": "24043646-861a-4272-aaea-1cfc6276de40",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "719b9047-797b-4852-9dde-aadc1634360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7651eda4-c9a3-4758-a8b2-0cee785bee90",
        "cursor": {
          "ref": "5dd67954-57c6-417a-9ec1-e9fbac0c3f05",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aa328953-97fd-46af-a489-4b5bc6bb1963"
        },
        "item": {
          "id": "7651eda4-c9a3-4758-a8b2-0cee785bee90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a01a7e0a-ecac-4187-8cb7-d8bc505f9054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e8df38-5175-4f1b-8ba5-87159c0192a1",
        "cursor": {
          "ref": "23e0f072-4a4f-4fcc-bd19-cf2c55cb24dd",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0c89cab2-89f4-4a79-9fee-259cdfdd2913"
        },
        "item": {
          "id": "04e8df38-5175-4f1b-8ba5-87159c0192a1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "25de6146-b079-4155-b1b7-7c36e6d6717e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8aea69-47b3-41b7-bfb3-f5c97d0c5b25",
        "cursor": {
          "ref": "3f18b9c1-3760-4868-88ef-a80fbaf08e89",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9b599c99-f250-45c1-88bd-0f8c17a58aed"
        },
        "item": {
          "id": "2b8aea69-47b3-41b7-bfb3-f5c97d0c5b25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecd9f803-6cf8-4235-8ca9-d898f48582bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c682b38-5fe1-4d8d-8060-73320888462f",
        "cursor": {
          "ref": "a83aeca8-b75b-417f-a325-d2ad1cdeeba8",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "75cb6a73-d17f-4399-9356-f040bcb266c3"
        },
        "item": {
          "id": "4c682b38-5fe1-4d8d-8060-73320888462f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8ef03770-5375-43e3-b4d6-1cf933fdc826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4373874b-20d4-49e4-a674-4eb64551545a",
        "cursor": {
          "ref": "e9c1bb3d-7926-4466-8ff6-085066770e62",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "76b00e53-1f5b-4f98-aa0c-97131c63ea85"
        },
        "item": {
          "id": "4373874b-20d4-49e4-a674-4eb64551545a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "400cdb28-20cf-441c-b116-966fc6ce9fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3a9555-f7ab-4756-aec7-26d2d02d4223",
        "cursor": {
          "ref": "fedef920-8f3d-4506-872e-696a0915ff48",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a2aa840-f50a-46ea-bcd1-85f8ee26f293"
        },
        "item": {
          "id": "8f3a9555-f7ab-4756-aec7-26d2d02d4223",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "341c4116-7e95-4813-b876-2e2f89eae279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0e3407-e061-485f-a5dd-1d5e6dbe523d",
        "cursor": {
          "ref": "240813fa-a7aa-4c59-8f62-f9af9cf96721",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e9e7d8d-0826-44d7-8ff7-c1c926b17a04"
        },
        "item": {
          "id": "7e0e3407-e061-485f-a5dd-1d5e6dbe523d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ed57ea74-5ba6-4888-97b5-943aeb355936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099e1b65-8fff-4d51-9238-e31e8627a337",
        "cursor": {
          "ref": "57b33e51-a14d-48d7-8509-e578fd7205a1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a6a4a3a5-70fb-4c6c-b160-a1cc20c068c5"
        },
        "item": {
          "id": "099e1b65-8fff-4d51-9238-e31e8627a337",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5f99db6-84ea-411c-8256-a4baf5e41102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc0759-d61c-4843-ab9e-f8610d75fd73",
        "cursor": {
          "ref": "bb0a9d88-6dab-4324-8c2e-be08963174bf",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "238e29c8-c348-4c4d-9152-19de91451696"
        },
        "item": {
          "id": "4edc0759-d61c-4843-ab9e-f8610d75fd73",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04cb7e80-12de-488f-b741-0a4916dfae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d70381-453a-4aac-b2e8-b8ff336cf84b",
        "cursor": {
          "ref": "fbe2b966-f02d-49c3-aa3b-10e4378bdcc1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "45aec10a-b33a-4efb-976f-ef7c857ba2ef"
        },
        "item": {
          "id": "36d70381-453a-4aac-b2e8-b8ff336cf84b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16c99744-6bf6-4276-9de2-e8956330839d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff35412-e38e-4b2e-bfa5-de3443d2f242",
        "cursor": {
          "ref": "528bbc36-8615-4902-a390-cf2c97b0b0c5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e674c352-34a3-49f6-9f74-6513868a91a9"
        },
        "item": {
          "id": "5ff35412-e38e-4b2e-bfa5-de3443d2f242",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22ca5833-3c2c-4eb6-bc94-cdc054ca4cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250eb514-143e-4b94-b22c-1ab65ba480e0",
        "cursor": {
          "ref": "afd1ad5d-02ce-43be-8208-f24a57b10f32",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b327d72-179c-467e-a96a-6a3cda320da9"
        },
        "item": {
          "id": "250eb514-143e-4b94-b22c-1ab65ba480e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b122a51c-8794-494e-8164-f87753170718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef190f6-3c9a-4701-b9af-8862c02a2a5c",
        "cursor": {
          "ref": "6fb2b003-9dec-46cd-b125-e6b5d8ef2525",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "208da10c-a010-4ead-b7f7-93cb386fb44a"
        },
        "item": {
          "id": "fef190f6-3c9a-4701-b9af-8862c02a2a5c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c1d024b9-4afc-4435-98c4-72cbe6b14cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ad1316-8412-459b-8914-3b64546b70ba",
        "cursor": {
          "ref": "7beaea95-7373-4308-85eb-7ebc909d6472",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b3947d6d-7eac-4709-9f5a-81e986a03f79"
        },
        "item": {
          "id": "f6ad1316-8412-459b-8914-3b64546b70ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e22e5ae2-3608-4059-8e41-9e9e9fd3b450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fa825d-5a6d-4224-85e8-dd054f9a9f7a",
        "cursor": {
          "ref": "1a8fbc83-20d3-4fc8-969a-a307ed9f22ba",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0bb12573-a650-4e93-8e91-bd1cb3b9e100"
        },
        "item": {
          "id": "88fa825d-5a6d-4224-85e8-dd054f9a9f7a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a804586c-85d0-4c3d-b5f5-bbdd95141d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af999c46-a1d1-49d2-8ef8-7c752add5e3f",
        "cursor": {
          "ref": "cd849e51-7155-49ad-aa43-e3335bf7662c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "09a773b0-9a33-4eb7-987f-cb456a879a44"
        },
        "item": {
          "id": "af999c46-a1d1-49d2-8ef8-7c752add5e3f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e05101a9-3b09-4f48-9866-144ad97a453d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af40a31e-61ad-4fa9-a958-a16f8a35fa1d",
        "cursor": {
          "ref": "1c50887d-6731-46e7-8123-7c10be4a9186",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bf478801-9c64-42f6-a5e4-714bc515ae38"
        },
        "item": {
          "id": "af40a31e-61ad-4fa9-a958-a16f8a35fa1d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cd1eebc0-1271-46fd-b249-4fb90996f401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89c04b9-009b-40a1-a025-2a23024b728d",
        "cursor": {
          "ref": "3802e54a-aa98-459b-bda9-a767fd093a47",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0ac2a324-7610-4ff2-ad9a-83ead9049a40"
        },
        "item": {
          "id": "a89c04b9-009b-40a1-a025-2a23024b728d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c8d6d20-5710-4a7b-b53c-4b88de3e74c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a30fffb-edf7-4d36-a02e-298383433cb0",
        "cursor": {
          "ref": "6149710f-6b23-485b-97be-41b20d3c3e0b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0e4de6a5-9bc3-403c-8c69-935e9d638368"
        },
        "item": {
          "id": "4a30fffb-edf7-4d36-a02e-298383433cb0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b263601e-9234-4ea0-b670-a16cf3aa8b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b5fffc-8874-4c13-911c-8a72daad1fae",
        "cursor": {
          "ref": "50fb3232-d388-426e-ab1a-584ad2fe6741",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a76fdad4-4c49-4619-809b-eaf41f083231"
        },
        "item": {
          "id": "01b5fffc-8874-4c13-911c-8a72daad1fae",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ffcdba65-01d6-43ed-bffa-08824fd258b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2c1600-616b-4523-9814-08e99a12927b",
        "cursor": {
          "ref": "ca4ac964-6d4a-4745-95d2-8ef7dc7898db",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ab45db03-0d70-44ba-8bc3-9b6e1a7811cd"
        },
        "item": {
          "id": "cf2c1600-616b-4523-9814-08e99a12927b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ca596bd8-8c6d-404e-9797-f6917366cb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b66c7a-2356-4a7e-a73a-f7bee23312fa",
        "cursor": {
          "ref": "9ba447b5-7d4c-44af-9839-54b61ce8a7b8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1d13dcba-c4cf-4bf4-838b-06298c84a137"
        },
        "item": {
          "id": "f1b66c7a-2356-4a7e-a73a-f7bee23312fa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "826921ac-68d3-4854-b583-9c1f0ab4dcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c9e110-5810-4260-ba12-fe9acb16e073",
        "cursor": {
          "ref": "48816178-a7cf-4a00-bf66-e1ffcda80dd0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96a14b88-a820-406a-b99e-915dfaae73ac"
        },
        "item": {
          "id": "96c9e110-5810-4260-ba12-fe9acb16e073",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b0079f86-9842-4d8c-80c5-dad440d17d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2555461-d712-46ad-a780-697eb656a7db",
        "cursor": {
          "ref": "5547098a-2c86-4313-b389-306991bc8295",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e10bbf37-ff5c-4c39-ab2a-131b27b324d4"
        },
        "item": {
          "id": "c2555461-d712-46ad-a780-697eb656a7db",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5d8bdb26-d207-4bc6-a256-a9b400475e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed32ef86-9f64-4732-8c64-3c60ec02bdcf",
        "cursor": {
          "ref": "9d880e42-18eb-4b6e-b1ac-e1555ba4bb31",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "67f27bf8-4889-4107-816c-9eb94a6677b5"
        },
        "item": {
          "id": "ed32ef86-9f64-4732-8c64-3c60ec02bdcf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "29bc106e-bbbc-45f5-90c5-a20e0ee0fbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ac91d-2d6b-4a89-956a-34d2f6de6219",
        "cursor": {
          "ref": "fa9d5f02-f9b0-4766-989e-51e36a11ede0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b24e7799-1218-40f2-97fb-ec2d76b67998"
        },
        "item": {
          "id": "483ac91d-2d6b-4a89-956a-34d2f6de6219",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad2137bd-1781-48ea-a682-65c830638125",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5392fe2f-cf1b-4aee-80f6-372122c3cd0d",
        "cursor": {
          "ref": "a6fc3f88-41a6-44d1-972b-f8b98e6b9b6b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1e791427-81df-478a-90e5-9fda61de531b"
        },
        "item": {
          "id": "5392fe2f-cf1b-4aee-80f6-372122c3cd0d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b7ed630-d59f-4c72-a2fd-a5af5592ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957d4cdc-a2bf-4cfd-8caa-59729ac95132",
        "cursor": {
          "ref": "2246f78f-57ac-4d8d-a888-85c5f795cea3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78413a90-cad2-4f02-b222-a70e5952b3f9"
        },
        "item": {
          "id": "957d4cdc-a2bf-4cfd-8caa-59729ac95132",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bab7c4a2-1c5d-4742-a17e-dc6b515936cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdd7b49-fca3-4788-a071-0b5141560034",
        "cursor": {
          "ref": "ed3146e3-80e5-4b86-9110-a2235657c02b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65d5dfd6-5811-4c11-bde9-a33ee0b8c9bd"
        },
        "item": {
          "id": "dcdd7b49-fca3-4788-a071-0b5141560034",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc04ac16-a91d-4fcc-88b4-ccba387b20e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a5b80-4da2-48b7-8e5e-9c165a6468ea",
        "cursor": {
          "ref": "23eaeb8c-f991-4a26-b642-645b9bbf7184",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a5ed75a-55f3-46d1-a94e-6fb0cc135aac"
        },
        "item": {
          "id": "bb3a5b80-4da2-48b7-8e5e-9c165a6468ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3871e8ca-ed9e-4816-9574-510c991423a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0252be1-5d75-4257-8f2d-aafd7e5046f8",
        "cursor": {
          "ref": "08b7ff0b-389d-44d2-97fa-84491c303b0d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "72978779-320a-49d5-8053-9f2ac39fd844"
        },
        "item": {
          "id": "a0252be1-5d75-4257-8f2d-aafd7e5046f8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e0f28ce-7e9a-48d4-af43-664b9e4a1401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b0896e-e013-4a20-9a14-7c6973b334e2",
        "cursor": {
          "ref": "fbaddf0c-4ce2-4242-bad1-18e4494f7d51",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "980cf58f-89ab-455c-bdeb-a9401f25c9fa"
        },
        "item": {
          "id": "e0b0896e-e013-4a20-9a14-7c6973b334e2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b4984531-0a39-4a15-b4ed-b785e66f302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a901e59-d0da-407f-83d4-e44cbd6d02f4",
        "cursor": {
          "ref": "c762e208-5a3f-417d-bbd7-54fd43e29959",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fcbd10c8-eab8-4a87-ad67-6b0ff74fe08b"
        },
        "item": {
          "id": "8a901e59-d0da-407f-83d4-e44cbd6d02f4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c0f56d0a-d636-4a63-90e5-443d13098a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32010184-8720-42e9-8956-60bdecc609a2",
        "cursor": {
          "ref": "e704ad5a-cbde-4cfa-90c4-a18808e9238b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2bd221c7-5501-417c-8378-ee49e7fc0bf4"
        },
        "item": {
          "id": "32010184-8720-42e9-8956-60bdecc609a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "971c80d5-9993-4090-8891-613324154187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f54561-0e00-4046-a8e0-21b41c6ecae1",
        "cursor": {
          "ref": "bdbe90ca-41d9-4135-830e-1163f1f2cb68",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3498c4c-4dc2-43d2-8b68-86918fdc9940"
        },
        "item": {
          "id": "22f54561-0e00-4046-a8e0-21b41c6ecae1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "989c7bce-9456-4178-ba51-33f0862aa563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73dc71b-b7a1-423b-a0fb-76e9226ffa82",
        "cursor": {
          "ref": "c71d8079-f978-4fb9-8e55-7f4441a6e2f4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18c6d28c-f67a-4e05-ae09-9f2821c4ca16"
        },
        "item": {
          "id": "a73dc71b-b7a1-423b-a0fb-76e9226ffa82",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "27a327da-da2a-469e-8719-dcdc560bc941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e5c55-0218-400e-95ec-0c89e8b61444",
        "cursor": {
          "ref": "1c66ad4c-6a60-48d8-8f41-e5ed05689f71",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "224b7f1e-5cee-4ee7-8a01-d761ed815ff0"
        },
        "item": {
          "id": "362e5c55-0218-400e-95ec-0c89e8b61444",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0b162a3-f661-40f5-b52e-3085260fd99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242a7bac-85aa-4ce1-8383-5ec4a43c8e42",
        "cursor": {
          "ref": "159d1c9c-e414-4af9-9fe2-09df253d4b98",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "34933c4a-2e48-48c6-9651-d1275ea685b8"
        },
        "item": {
          "id": "242a7bac-85aa-4ce1-8383-5ec4a43c8e42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3ee27d7-0f3a-48b4-966e-284266fc70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2244f8d-29bf-4991-ba09-4b898e601073",
        "cursor": {
          "ref": "774e93c2-e182-474f-9520-1783c5270d5f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f1cb3b9-6c17-4b40-b103-3f351f18316d"
        },
        "item": {
          "id": "c2244f8d-29bf-4991-ba09-4b898e601073",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "294f67c9-d17e-443b-84be-db8598d99099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23299a2a-e48e-4f0e-b8a1-47887fb16cc3",
        "cursor": {
          "ref": "18524100-8fce-4cf2-ac97-7ea1f66bf6db",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "67a4120e-91d9-4a9f-b91b-d39efbd04827"
        },
        "item": {
          "id": "23299a2a-e48e-4f0e-b8a1-47887fb16cc3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3c39d052-9e3c-4d62-b7e4-5ba8dc01b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91988092-b398-4166-a416-c5fe8346b6c8",
        "cursor": {
          "ref": "3bf2a621-83d8-473d-bf1b-2aa61929d8e1",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "22b1d05c-65e0-417f-a800-f470a07b85cf"
        },
        "item": {
          "id": "91988092-b398-4166-a416-c5fe8346b6c8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7a060bb3-3e17-4bef-850c-2f814f2e7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bbe9d8-93bb-434b-9505-92ca0591f348",
        "cursor": {
          "ref": "f1ed7c5c-ff63-4733-b379-f65a2796a3a6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "331c4260-9d39-400e-86c3-6354c012f9ac"
        },
        "item": {
          "id": "d4bbe9d8-93bb-434b-9505-92ca0591f348",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6c593228-c43f-4fc6-b72b-f3778f44483d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453dffca-ab2b-44c4-841f-01bcec2660a7",
        "cursor": {
          "ref": "a6139d3c-1fcc-4a2f-bada-7c09c9d8ae61",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f66b4609-ed1b-4381-ad4e-cbe5e5a03f4c"
        },
        "item": {
          "id": "453dffca-ab2b-44c4-841f-01bcec2660a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "46872df5-0c48-4853-8c8e-a55ea0207896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c245d0-b85d-4e89-8898-d44763816aa0",
        "cursor": {
          "ref": "a0341079-6c07-4bfd-9c9c-b65c2ee1a5b5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "38c4ae58-971c-47b8-b873-b4a89da7b4c8"
        },
        "item": {
          "id": "07c245d0-b85d-4e89-8898-d44763816aa0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2a4146ef-fc55-4431-9ad8-c422f2f2a206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b1acf7-63cf-40b7-bc3c-4ecc2090cc5f",
        "cursor": {
          "ref": "a3238f5e-af7e-405b-9a54-25fbe556b595",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89ca4f30-4e50-4130-a81d-d1d4780f1a1f"
        },
        "item": {
          "id": "06b1acf7-63cf-40b7-bc3c-4ecc2090cc5f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1cf940a-5712-4c11-95a4-977faa970ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656a1360-d574-4625-a6ca-a918ddac79aa",
        "cursor": {
          "ref": "85883e30-d5ce-4f8b-a830-4829174c97f5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e1afe779-0161-4352-a7eb-46ac327a510a"
        },
        "item": {
          "id": "656a1360-d574-4625-a6ca-a918ddac79aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "26b8c9f5-7671-4fad-ad39-6754d4cec0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442cc7b6-37cf-410b-b1ff-4aceb1c87014",
        "cursor": {
          "ref": "37ab8a8c-7b2c-4faf-a2df-808956cef3eb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b52e2906-88cc-43f5-8223-55f04e88df92"
        },
        "item": {
          "id": "442cc7b6-37cf-410b-b1ff-4aceb1c87014",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "085d3def-e778-4646-9a58-aad97d5abf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4e1f54-176c-413f-b561-8e07e6997910",
        "cursor": {
          "ref": "ed4d4b6b-2a6e-4a75-9c73-0c581a0c8cd3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a4e0829b-f6cf-4b13-ae07-749c7a57465e"
        },
        "item": {
          "id": "af4e1f54-176c-413f-b561-8e07e6997910",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b6018e3-fb4a-49a1-80fd-098dbec7fffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf3f3e-89e7-43b8-8ac3-0e2fe492e5ab",
        "cursor": {
          "ref": "864e7901-5c24-499c-8b49-5291e0ba69d0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b953ebe4-9ed2-41d6-b52c-8afef1dd39b2"
        },
        "item": {
          "id": "5edf3f3e-89e7-43b8-8ac3-0e2fe492e5ab",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5cf7e8b9-7065-4d9a-8332-8c29f775acfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1fd821-972e-4a75-bcee-f7f55c78838a",
        "cursor": {
          "ref": "52961b9f-70a1-4984-bcbe-20e15e397f5f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8df50bbb-1d7a-40c7-b692-beb7c9c81b36"
        },
        "item": {
          "id": "1e1fd821-972e-4a75-bcee-f7f55c78838a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a0644a29-fdde-4758-bba4-f6a6fb4de7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21293f29-c9db-4160-867b-cff3bcb5eed2",
        "cursor": {
          "ref": "9eafe168-2064-4a8f-8a25-f85a59372583",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dead1d6d-1cd1-4cd3-9387-a484bccdc854"
        },
        "item": {
          "id": "21293f29-c9db-4160-867b-cff3bcb5eed2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1563329c-c938-4cb0-93b7-e358693cdbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c546b9-c323-41bd-a793-b8d07c541ea3",
        "cursor": {
          "ref": "99a2b821-c017-4a6c-9a90-d23a04a99a6e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ca82a9b-4cf1-4e50-b8b8-4fc45a6a0efe"
        },
        "item": {
          "id": "80c546b9-c323-41bd-a793-b8d07c541ea3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "605784ca-b139-4061-a351-0b309c8c2930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c138c613-8dab-45ca-9a37-c8df1a711835",
        "cursor": {
          "ref": "649b41df-0e3e-4329-a9f1-9bbfdb5bf96f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5f9aeeb8-06c3-4539-8536-f1160dc6d3b3"
        },
        "item": {
          "id": "c138c613-8dab-45ca-9a37-c8df1a711835",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d94e377a-c5c1-4910-b717-82ddd9e8d0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6059a025-47a5-41fd-b537-b38f90a85e2a",
        "cursor": {
          "ref": "2ea798ed-2854-4f2c-8a8f-639ecc2a3b45",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "48fddd71-9492-49f1-aac4-754c32749496"
        },
        "item": {
          "id": "6059a025-47a5-41fd-b537-b38f90a85e2a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb15464e-5f24-4de6-901a-10848c240487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a6b44-983d-482f-8972-503248b692af",
        "cursor": {
          "ref": "2ee01e2c-a68a-4b98-9bfa-671fd875f65a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cadd2d16-2ae0-4306-8fb5-544070c58d29"
        },
        "item": {
          "id": "281a6b44-983d-482f-8972-503248b692af",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3592684e-a16e-43d7-b080-950b40f32be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214ac688-1ef3-4460-8b14-965080a94049",
        "cursor": {
          "ref": "16318cce-1ae0-45ab-a340-b7ec3fbec2b1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6f70121b-0da9-44c4-b0eb-647c934b977b"
        },
        "item": {
          "id": "214ac688-1ef3-4460-8b14-965080a94049",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cab8b7c8-3dbb-4ceb-b124-04079d60d1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c47ea49-2630-4c39-8b37-e742728eda3d",
        "cursor": {
          "ref": "16b4f59d-4ff4-421f-9961-14029f2974f7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d5d713c1-9554-4979-9132-bcfaeeed155f"
        },
        "item": {
          "id": "9c47ea49-2630-4c39-8b37-e742728eda3d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aa55c317-b3a7-4e5a-b929-21ce8caf0ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e23a32-5c4a-4f52-ad93-b16d9f17018d",
        "cursor": {
          "ref": "5b03d1c8-373d-491e-87ec-b88396b6a475",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a78794e-3649-4846-b24f-43d689f94b66"
        },
        "item": {
          "id": "55e23a32-5c4a-4f52-ad93-b16d9f17018d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c2e48690-f1c7-4018-b66c-4f07ac3af2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379490ae-b3bb-4f28-b141-fda7afa6ac50",
        "cursor": {
          "ref": "e5d4179a-53a9-418a-b61d-f2207598a7d9",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66dd3857-115a-4e1e-b0d8-040d05d5c11a"
        },
        "item": {
          "id": "379490ae-b3bb-4f28-b141-fda7afa6ac50",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c66c1974-5222-4b5e-b97a-b463b6adf89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55156937-fde1-495d-889e-e87b1a114928",
        "cursor": {
          "ref": "990c0eb3-94a2-4b40-bf9e-b449bd0172d1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e7a32f50-1b11-40ec-a885-2623ae7298c1"
        },
        "item": {
          "id": "55156937-fde1-495d-889e-e87b1a114928",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8eb3c003-66e8-4e93-a256-dcad3ef7a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e0c5cc-ca79-4c9c-a3da-cb9ae2af0634",
        "cursor": {
          "ref": "d535d55c-ce06-44ca-89e9-e5509128f081",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3da611e6-f980-4dba-b87c-54db62962b8c"
        },
        "item": {
          "id": "72e0c5cc-ca79-4c9c-a3da-cb9ae2af0634",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "06d8a93a-34e3-46c5-a9a3-2f434c93c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa9563b-5a8c-499c-8631-33b4dfadc582",
        "cursor": {
          "ref": "74926451-6a8d-4159-9c8c-1a3a43256a7d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "387cf9f4-f6e4-4085-b4dc-62d3213de6ef"
        },
        "item": {
          "id": "6fa9563b-5a8c-499c-8631-33b4dfadc582",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0846b070-8ebf-4652-962f-740048946ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77f0226-6550-42a2-8304-746b4e4e3446",
        "cursor": {
          "ref": "5c7d8b15-1a59-4a1c-a6d3-53a39078638b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a83ced6d-e74d-48a6-b44b-c8bd97e30d39"
        },
        "item": {
          "id": "e77f0226-6550-42a2-8304-746b4e4e3446",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f7edb748-a284-4e68-978d-47fbb21b50cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a44cb7-0c95-47bd-b2d9-09eace6bc3c1",
        "cursor": {
          "ref": "ff0a18bd-0d9b-47e4-852f-27eba8ba6821",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9329f3a4-421e-41eb-af9c-f2d7ed2f841c"
        },
        "item": {
          "id": "e4a44cb7-0c95-47bd-b2d9-09eace6bc3c1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4baf444e-f6cb-42f4-a7af-955bec65bade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7269ec4-916d-42d4-88be-11dc002a2efd",
        "cursor": {
          "ref": "06e1cc2d-4c6c-4864-9760-7edf22e2ef1f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "717f88ba-7180-4563-a1e2-c81ea95e65a0"
        },
        "item": {
          "id": "f7269ec4-916d-42d4-88be-11dc002a2efd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "87f1fc6e-4f6d-477a-b6e6-1613192bb9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb59b9ac-0ab7-4a34-beb2-dc038de0bdd1",
        "cursor": {
          "ref": "0512599a-4929-42d0-bda6-1156f40a226d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d83469ec-ee04-47a0-89d9-3e2e75fe26b2"
        },
        "item": {
          "id": "eb59b9ac-0ab7-4a34-beb2-dc038de0bdd1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "260af2e0-f2e5-49e6-8014-9a88fce1f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35b9dc-ff6f-4676-847a-9434377cab3f",
        "cursor": {
          "ref": "e56b2c74-b838-44fc-b839-10d671ec6fd6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "89852443-2dfa-4203-8c1d-1c8924d09005"
        },
        "item": {
          "id": "ae35b9dc-ff6f-4676-847a-9434377cab3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "df1f5615-c070-46b8-b557-a6eb7bfea792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37519b-f65a-4fd4-acba-0f87b2950a6c",
        "cursor": {
          "ref": "64681721-a1da-4c45-8f3c-f34b8fe25500",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cca0aea0-232d-4486-bf24-563dc9830f12"
        },
        "item": {
          "id": "9d37519b-f65a-4fd4-acba-0f87b2950a6c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "692264ef-77c1-4023-bdf2-9101a991a21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350a3a95-4886-41fd-b083-41fb80bf698a",
        "cursor": {
          "ref": "16d846e4-82fd-4e79-9ef4-6dbd4b1469dc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4e9fe062-3b9f-42b3-b2d5-3f3e796feba6"
        },
        "item": {
          "id": "350a3a95-4886-41fd-b083-41fb80bf698a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bee034a4-ebe9-402d-a54c-a44c18e2b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692694cd-b1f8-4f1d-83e6-307c70421d6e",
        "cursor": {
          "ref": "772ac6ab-8672-41e1-869a-4f770df4be00",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "17c1612a-0349-49df-8ccb-65cd8bef24b6"
        },
        "item": {
          "id": "692694cd-b1f8-4f1d-83e6-307c70421d6e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9cb2e2d1-bf28-454b-a5b2-77c01b45daad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd283b86-19c9-48a8-b3da-c824fbc72586",
        "cursor": {
          "ref": "a7c453f5-33dc-4c5d-b3aa-d7a60ada2c66",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "63da0456-1dfa-42d7-adea-19f22e259952"
        },
        "item": {
          "id": "fd283b86-19c9-48a8-b3da-c824fbc72586",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a3a01c66-5ae6-485c-b16e-b0f3cacd78ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7972a61-9b63-4ac6-87c0-4d92c4c2524d",
        "cursor": {
          "ref": "42636e76-11c7-44a7-a158-0e7d29a03bc1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "68f5187b-1f71-43bf-be84-bd14eb2bae61"
        },
        "item": {
          "id": "d7972a61-9b63-4ac6-87c0-4d92c4c2524d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a9bb4c7-8167-42cf-a578-0011cc9d00ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d749f19e-93aa-4f30-af9f-98c22e819855",
        "cursor": {
          "ref": "a5f09ada-36d1-498b-9a02-e3f92c8e405a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "395f0031-e4e1-45d1-bca1-f3e1c972a7c9"
        },
        "item": {
          "id": "d749f19e-93aa-4f30-af9f-98c22e819855",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b6120c6d-3864-4cca-8f9a-8ee0ad1f3be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29153275-4f65-46ae-b237-92421f09a2ab",
        "cursor": {
          "ref": "2c738fca-e6ee-47eb-8dc2-0faabcf8dab2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c8fc07a-1437-4ba0-bfe4-4240ce681d4f"
        },
        "item": {
          "id": "29153275-4f65-46ae-b237-92421f09a2ab",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e8401c39-df02-434c-a0e0-3eb8c8c19fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d66af-2c6a-4606-8347-df472ca4e12d",
        "cursor": {
          "ref": "c2956e5f-328f-4c7b-ab12-d423fad188f9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5fe7489a-7f52-4866-891d-0715114b96ef"
        },
        "item": {
          "id": "2a0d66af-2c6a-4606-8347-df472ca4e12d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05bb63f4-622a-4fdd-8b2b-1062806a663f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bfd9b4-d498-4ba9-afea-13e20e0d2c30",
        "cursor": {
          "ref": "3430040c-2b80-4c9a-93aa-ffefc60b45c1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7a0f92aa-b4ea-4950-83b6-2b774f0b0e1a"
        },
        "item": {
          "id": "24bfd9b4-d498-4ba9-afea-13e20e0d2c30",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da9e1b51-1d92-489b-bc59-7ebaa1df5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef902aab-e8b0-4fdc-9753-d9b0709c75dc",
        "cursor": {
          "ref": "7423e3ed-e88a-40a6-a414-f01f6ec1a136",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1bae4427-e579-4dfb-b638-50b8d48c10de"
        },
        "item": {
          "id": "ef902aab-e8b0-4fdc-9753-d9b0709c75dc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "abaf8238-ba2a-494f-a6fb-ef431036013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc268d-2d79-4b3d-8ad8-e5e64c91ab4a",
        "cursor": {
          "ref": "45eb81a9-5d23-4cdc-b6c0-b1918aabe028",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea985c9e-f718-419b-9583-06fb5b2299a3"
        },
        "item": {
          "id": "cfbc268d-2d79-4b3d-8ad8-e5e64c91ab4a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "69abe05d-96f7-46c2-9c7a-fa5a4d2377ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d1e37-14fc-4988-aca8-04e095cbea89",
        "cursor": {
          "ref": "ef8148df-e7e5-4400-afe9-eaed72a048ba",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7559953b-37aa-4984-b2c2-778fdcbddd2c"
        },
        "item": {
          "id": "a80d1e37-14fc-4988-aca8-04e095cbea89",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de72a5bf-57c7-4bba-9398-f777e1de7cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c16ec5-4224-40fa-a803-9ad42746c775",
        "cursor": {
          "ref": "11394b74-3d10-4871-80ae-4962a2a688ca",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e7b6e2f7-21f7-4c13-a743-baefd027ab8f"
        },
        "item": {
          "id": "e6c16ec5-4224-40fa-a803-9ad42746c775",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "becee4e5-3d9f-4215-af50-2b11ffede389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988bdd2d-3a7e-4a01-8ba4-808885a20742",
        "cursor": {
          "ref": "a69d849b-8994-4379-9b13-8165a260af83",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b085219-fa4d-47de-a4a1-ccc509323c85"
        },
        "item": {
          "id": "988bdd2d-3a7e-4a01-8ba4-808885a20742",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "16518d63-7f68-41c9-969f-26c2960edc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caec0e1-2912-4d08-92ec-ad7f3d2c1e94",
        "cursor": {
          "ref": "86ed1795-3a8e-41ac-96be-8ba208b6a55e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "293f3d6b-66b7-44aa-92a1-615b3ae8163d"
        },
        "item": {
          "id": "0caec0e1-2912-4d08-92ec-ad7f3d2c1e94",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9320b7dc-3bc2-4b6a-b9f2-e858d19556cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65c5cd1-85cf-437e-8870-8e773e40a11d",
        "cursor": {
          "ref": "ee9b5d09-8490-4f00-bb22-740dae70f054",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "630dc662-73c2-4f28-b39e-fe011f410806"
        },
        "item": {
          "id": "c65c5cd1-85cf-437e-8870-8e773e40a11d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fb58df63-3ce9-4597-a967-962bd2785958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ccc4d-c4de-47ea-9181-7e6ec5875af4",
        "cursor": {
          "ref": "f8522c35-d26a-4c6f-ae7d-9b44f97a57a6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d0cf8821-01aa-49e2-aef3-99c352d816aa"
        },
        "item": {
          "id": "851ccc4d-c4de-47ea-9181-7e6ec5875af4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab77f155-1084-41ff-afa7-19d8cb3341eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f12b0c-e674-442a-8257-3c0c5a1a74a8",
        "cursor": {
          "ref": "2d86787b-7996-4375-a744-1d857a1c2fb1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9d78ed8a-6ce3-4de1-aba7-f1843bcb7e0c"
        },
        "item": {
          "id": "06f12b0c-e674-442a-8257-3c0c5a1a74a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "21f30d7d-d244-46e7-ba37-51bfd5e9b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88202537-a90f-4a01-b4c6-95081ec485d3",
        "cursor": {
          "ref": "7bfc3441-03b9-4870-962d-511990dec41b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aaca3ee9-36cb-41e6-a24d-069653796bfd"
        },
        "item": {
          "id": "88202537-a90f-4a01-b4c6-95081ec485d3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eb917580-599b-4c5f-8511-df680031a772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b77ca70-5a90-4465-b1fe-6ae608078904",
        "cursor": {
          "ref": "d239f487-e935-466d-be45-67e3bf2fe995",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2f6c9a25-5334-4bb8-90aa-ce080f4dfefc"
        },
        "item": {
          "id": "0b77ca70-5a90-4465-b1fe-6ae608078904",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "931d5027-2aa2-44be-addb-0096c6e98c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4989bb-1c6b-4841-a864-5504292a50db",
        "cursor": {
          "ref": "502b4553-62f8-4844-abc5-50336d6db1ce",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bb3a5a4f-8b57-4a9b-aab7-88c5c0a8de03"
        },
        "item": {
          "id": "6f4989bb-1c6b-4841-a864-5504292a50db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3bb937b3-f487-434c-b587-282c7739a5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea09916-896a-464e-bd25-e5ad425e0c9b",
        "cursor": {
          "ref": "6b12356f-30f3-4770-878e-42fb16a3fba3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f250443-850d-46e9-9a70-e4a208b2192a"
        },
        "item": {
          "id": "4ea09916-896a-464e-bd25-e5ad425e0c9b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17d81588-c338-45db-9d23-67b08b338f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca8462-e982-4508-9ab6-6fd30b29ce40",
        "cursor": {
          "ref": "f16d1398-0b14-4956-bbb4-d15d8de37199",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f38e5ab4-9537-4884-9bc9-f34a43c5724a"
        },
        "item": {
          "id": "d9ca8462-e982-4508-9ab6-6fd30b29ce40",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c146b3f1-4f34-4f77-8c4b-c921bd88ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90518878-6a1c-4106-9323-82cb0cb3f4a6",
        "cursor": {
          "ref": "898dc8d2-ce4e-45d2-9630-24df4fe77214",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "254b0e4a-5cc8-4107-9d22-53a356d99cb2"
        },
        "item": {
          "id": "90518878-6a1c-4106-9323-82cb0cb3f4a6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "524b56f9-7bc4-49a3-9819-357b6e935bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d8f117-0b2d-4f86-ad4e-9a67d321792b",
        "cursor": {
          "ref": "1f9e9ff9-30e0-4126-9ac0-e40f9918ad67",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "899b609e-1d04-4c90-a880-43413ccd09a5"
        },
        "item": {
          "id": "58d8f117-0b2d-4f86-ad4e-9a67d321792b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e65dd4ed-2f8d-4aba-8498-ad53eb7e7de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de04023-7aab-4a01-a84c-dd4ed82626cc",
        "cursor": {
          "ref": "8431de0f-4dfa-4c1d-b651-e87cfa37e5f1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c145cc73-6a9d-4a31-a0fb-61d4942eac32"
        },
        "item": {
          "id": "0de04023-7aab-4a01-a84c-dd4ed82626cc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6671c9ad-203e-4873-8ac7-1ee0926039e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd85efb-86a9-43c3-9e6f-84466ed09446",
        "cursor": {
          "ref": "0e4f2b52-5955-49df-b80b-c39be8d9bbbd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "53e5ba2b-01c4-4393-a6f8-6a95e47646f2"
        },
        "item": {
          "id": "acd85efb-86a9-43c3-9e6f-84466ed09446",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eee37d26-595a-4c81-a119-4469c3aeeec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d04444-eaf5-44c0-b767-a0df9cddc78d",
        "cursor": {
          "ref": "28ce7bd8-6765-4d0f-a80c-f7354d9c06dd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3fc66ffd-a0ae-4a04-9884-e00a18f48011"
        },
        "item": {
          "id": "01d04444-eaf5-44c0-b767-a0df9cddc78d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7df6b17e-2005-4d53-a720-0653edd72377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bee8804-2191-49c6-9290-56321150cb91",
        "cursor": {
          "ref": "235e9851-5b3a-4405-ab48-4649fb5ece36",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aebaa213-81e1-4f0e-824a-f9aac315f206"
        },
        "item": {
          "id": "4bee8804-2191-49c6-9290-56321150cb91",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8729faf8-6ad5-439e-945e-9a23162c9cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9261a8-4319-4db6-b760-71c5f4b0d4a9",
        "cursor": {
          "ref": "a3181518-bfd5-4a35-b76e-5b8843ddec93",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2feca2de-60c3-42a4-940c-4eaf095a6392"
        },
        "item": {
          "id": "1f9261a8-4319-4db6-b760-71c5f4b0d4a9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c342c66d-cda7-4437-93c9-a11adb30f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d24d9bb-bd48-4b5b-b163-c629dc7f0a56",
        "cursor": {
          "ref": "0c823d80-9d98-4e20-9d38-933a35f77ca6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "129bc214-50d9-42d7-ad79-b26b6bdb2f2e"
        },
        "item": {
          "id": "1d24d9bb-bd48-4b5b-b163-c629dc7f0a56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "54875449-83ae-46aa-be56-547f9eea581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fd6b32-b102-4fce-ac61-072cc8ab8def",
        "cursor": {
          "ref": "8e3eb198-660d-48bf-b60a-ae2176c979a4",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3ac3ae1-1976-42d2-9f48-3e834f0b850a"
        },
        "item": {
          "id": "a7fd6b32-b102-4fce-ac61-072cc8ab8def",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "62a81235-e593-4601-9883-32381d3b86ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25069cbc-fa17-4f29-acf7-0be9e586a109",
        "cursor": {
          "ref": "92d332a3-f899-4514-8767-81e19bba8a0f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a8a57d8f-903f-4cad-a4d4-ff6308ba65f9"
        },
        "item": {
          "id": "25069cbc-fa17-4f29-acf7-0be9e586a109",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a49da6b4-7b13-4fed-af5e-4e6f18b64f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025ddb8-ef29-4b68-b5be-46dbeb93d0cc",
        "cursor": {
          "ref": "7c171473-1b90-49fa-94c8-2b23937b0521",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c0346a70-7a51-4df3-8bd6-5918f25def04"
        },
        "item": {
          "id": "5025ddb8-ef29-4b68-b5be-46dbeb93d0cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b5e3acd8-03a9-4716-8e35-7c8720749461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27637b66-401f-4958-b7f5-73aa99bdc8bc",
        "cursor": {
          "ref": "2adc60ae-45c3-40e3-90c9-188216e5ca8f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d61c1d9e-e36f-40a0-82bd-19e75c8258fa"
        },
        "item": {
          "id": "27637b66-401f-4958-b7f5-73aa99bdc8bc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f46cc17a-8513-49c1-b952-ab270ff73083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b8b065-6545-43f2-973f-f39e79f9e4af",
        "cursor": {
          "ref": "8931304f-d152-44e9-aaa3-ea9be552fbf9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fe780fc7-659e-4573-ad27-c899c50908d6"
        },
        "item": {
          "id": "f1b8b065-6545-43f2-973f-f39e79f9e4af",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "db931ea0-a75d-404a-a841-0ceb9a0a30f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8bdd9b-26bf-4ab4-b1e5-902d0bb5dab3",
        "cursor": {
          "ref": "d1ee0bbd-4a50-422d-89b9-eb91cf52fab4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "82f7eb31-99e8-4017-a95a-cead12b00181"
        },
        "item": {
          "id": "ce8bdd9b-26bf-4ab4-b1e5-902d0bb5dab3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5b700e1c-d930-4a1e-a1a8-2c9c8a513e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631e0238-ce3b-44e5-ab4a-1d966d55e509",
        "cursor": {
          "ref": "93f54395-1de3-47e7-a533-304ae4d597cb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cec161ef-81e4-4767-ad5b-1abaf1455d1a"
        },
        "item": {
          "id": "631e0238-ce3b-44e5-ab4a-1d966d55e509",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0b6b800a-3b70-4feb-aee6-1ab59788e0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bbc45c-a2b6-45c0-93f6-4c6ba5855ad2",
        "cursor": {
          "ref": "03b77efd-9cf8-46fc-9d82-2dd8700e398a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a5d6bcaa-041d-4edc-b3ef-b5a27a37d033"
        },
        "item": {
          "id": "02bbc45c-a2b6-45c0-93f6-4c6ba5855ad2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4db34734-b344-4790-a364-62040a441e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75202bb8-8038-4959-92c3-66671914ff72",
        "cursor": {
          "ref": "14484c6b-584b-4c8e-9cd2-cb36e1b5b4e5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "85660a86-bc93-47e6-958e-994a98e21026"
        },
        "item": {
          "id": "75202bb8-8038-4959-92c3-66671914ff72",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9d77bbc6-232d-4609-8d78-6218a22d8aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5374c89-6535-4af3-bf0c-beadd0cc2cab",
        "cursor": {
          "ref": "833a6047-4ae2-4711-8b8e-e638aa3642c5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ae038dea-11a2-4d19-896f-29e46e4772ee"
        },
        "item": {
          "id": "f5374c89-6535-4af3-bf0c-beadd0cc2cab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d43cf4ae-19cd-4838-b185-676633ae8783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43763bcf-fe44-4c28-8274-306f91beac13",
        "cursor": {
          "ref": "f6bb2721-076c-43bb-b833-5ea3e2cb3e01",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "443d3247-c4e4-4e72-bb88-78a4fa4db9bd"
        },
        "item": {
          "id": "43763bcf-fe44-4c28-8274-306f91beac13",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb47149c-6852-41cb-a462-f736cd093487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76822bd-61d5-4063-a235-bb514e952e7c",
        "cursor": {
          "ref": "18f9752a-26fe-4d90-a84b-67fed0386ed9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b206fdcf-3d8b-4977-a8c5-cb0e1e524363"
        },
        "item": {
          "id": "d76822bd-61d5-4063-a235-bb514e952e7c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f2b2f5cc-20b8-4084-8238-2e1c9afd22d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee59220-68ed-4325-bb52-79aa9036032a",
        "cursor": {
          "ref": "1212c730-4529-4a49-8410-f225df8f9bd0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7bec275a-a75b-402c-8199-e8628060d9df"
        },
        "item": {
          "id": "eee59220-68ed-4325-bb52-79aa9036032a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "78be0aec-606b-414c-a732-d60ad88d46ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf96acf-bc6a-4c29-a525-4d93283d4447",
        "cursor": {
          "ref": "745d309c-2804-4589-a7c0-e1100cc02dd2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7350ecd2-76a6-4e26-84b9-aaacafc6df03"
        },
        "item": {
          "id": "abf96acf-bc6a-4c29-a525-4d93283d4447",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7b722374-b9e5-45df-a5c0-c18645640d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7d4c47-1609-4921-a95a-a7d21c16c83f",
        "cursor": {
          "ref": "8d7c23e3-daf1-4f57-a0f3-6fcd93a5e621",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "aebb9751-e93e-484c-86c5-9c403d7e93aa"
        },
        "item": {
          "id": "fe7d4c47-1609-4921-a95a-a7d21c16c83f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "102cde9e-cfd3-4546-a817-cffb25be6a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb20a4-c903-413c-9871-1c39a45f737e",
        "cursor": {
          "ref": "83adf97e-38cd-4a19-90e0-45466c26d190",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b4b308dc-6829-40b1-841c-33d77e342f1f"
        },
        "item": {
          "id": "1edb20a4-c903-413c-9871-1c39a45f737e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bcd7ba0e-7d53-465d-8a4b-9263accd1fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9fa8fb-3499-4991-b8e2-209f448e6d6b",
        "cursor": {
          "ref": "4e113bce-eb40-4d83-a28c-b8bbbeddfa40",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "81c6496b-a779-4be6-88c0-c73e293a54fa"
        },
        "item": {
          "id": "5e9fa8fb-3499-4991-b8e2-209f448e6d6b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "27af373d-6af1-42f7-b0bb-4e749fc118b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78d45e6-2f76-47f2-946d-914b3691e821",
        "cursor": {
          "ref": "be8d18a7-afc0-4a82-9a17-3db19cc1ff7d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8fabd3eb-12cc-4dc4-a6ea-280101256460"
        },
        "item": {
          "id": "e78d45e6-2f76-47f2-946d-914b3691e821",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "25a7cde3-e249-4fe8-993f-8df14cc58f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f36bb8e-55e5-4560-abc3-6364dccf7d67",
        "cursor": {
          "ref": "7f3d69e3-8fe7-435e-8549-aaf84797c41c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9c354c0c-3e72-4d41-b051-d680f0a3dc9d"
        },
        "item": {
          "id": "4f36bb8e-55e5-4560-abc3-6364dccf7d67",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c42e4755-b2e4-4281-8b80-60dfaffc6462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780b77ea-9265-44b0-bd39-ee821beae311",
        "cursor": {
          "ref": "3a333607-7846-4031-82a7-71f6506095a1",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b07ec70f-9c4f-479d-99c1-b44a3335c4df"
        },
        "item": {
          "id": "780b77ea-9265-44b0-bd39-ee821beae311",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "727fcc40-5d92-4e9d-a625-601d7a723e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b1885d-2b7d-42a1-898d-8a24e885ea96",
        "cursor": {
          "ref": "14a96ab3-73cb-4b6c-b611-a9789e9e1b9b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7a6ceca3-19a8-4f65-ac77-f3bb7f1ee45a"
        },
        "item": {
          "id": "95b1885d-2b7d-42a1-898d-8a24e885ea96",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9c924379-1827-460f-b43f-313e3a44d356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8223589d-745f-4673-adfb-acb875daf6d9",
        "cursor": {
          "ref": "f05ec989-e82d-48ce-8567-206ab749752e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "61f3d0df-dacf-4d98-9b07-3f89cacafa00"
        },
        "item": {
          "id": "8223589d-745f-4673-adfb-acb875daf6d9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b373b857-c239-4f90-a5f1-fd1a30dc6c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215bd915-072b-43d8-8d5d-64a3bff2624f",
        "cursor": {
          "ref": "c830f3a7-1bfe-43c6-890c-72acede8fc62",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ce10573c-db5f-4c80-aae5-df1aeafe0423"
        },
        "item": {
          "id": "215bd915-072b-43d8-8d5d-64a3bff2624f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "418ef15a-b0cf-4e0b-abaf-16fdc88bd6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b4ec1b-8391-491b-baaa-e28d8a659cd6",
        "cursor": {
          "ref": "aad71bc2-9543-4d58-8207-173aadcdfc29",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e780c5eb-388e-464a-9101-87cf2a4ca1fc"
        },
        "item": {
          "id": "42b4ec1b-8391-491b-baaa-e28d8a659cd6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bc0cce8c-c92c-454d-b2ff-b38ef8555262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c647cb-4628-42d1-ad52-025be619a49c",
        "cursor": {
          "ref": "aa4f8d1c-db02-45a1-bd27-604596a4d7a3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b618d06b-d613-470e-9e06-6df48d9f3413"
        },
        "item": {
          "id": "e6c647cb-4628-42d1-ad52-025be619a49c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f1e51c7c-42ab-4c49-9e28-22b579d10f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e91468-df13-4b75-8a63-61e012573395",
        "cursor": {
          "ref": "f014f8a2-1c6c-4910-9a50-2beebdb425a8",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "145e7434-4841-45eb-952b-48edfae67b63"
        },
        "item": {
          "id": "35e91468-df13-4b75-8a63-61e012573395",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d0e20f8-43da-4d5c-95a0-7985d53a7f00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33b1f78-c0ee-4450-9b36-9891acdd16f8",
        "cursor": {
          "ref": "03deb679-4c30-4d68-a09e-7b7968ee80b9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "69b93013-1bf0-4f54-9b17-5deffc5a5090"
        },
        "item": {
          "id": "a33b1f78-c0ee-4450-9b36-9891acdd16f8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c5c6fd1c-b5fd-47fa-818f-33bfacaca1cc",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f0c46b-6672-48e8-9fa5-63a6b6e8ae6a",
        "cursor": {
          "ref": "6fb9da0c-e7bd-4862-86e9-b8fcec4daff5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "10761974-3070-44d2-92dc-b7a15fb0f12c"
        },
        "item": {
          "id": "67f0c46b-6672-48e8-9fa5-63a6b6e8ae6a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0286c3ff-7bb8-4013-98ea-2a1cd12d785b",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd776f6-c3d8-46b4-a64d-30e75ba37837",
        "cursor": {
          "ref": "de034a4f-c015-4606-94f3-5b0c7ca5e1f7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b23863ed-93ef-4a7e-925f-68ef5cc98fa5"
        },
        "item": {
          "id": "bcd776f6-c3d8-46b4-a64d-30e75ba37837",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bb387e49-699e-41e1-ae6c-0893bff976fc",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "244aed93-5646-4a90-a06f-c1caa5aa72fb",
        "cursor": {
          "ref": "7ef4950b-24fd-4987-9ad7-25a445f86ff7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "16cc06eb-a62d-446e-a20a-a10c8d746c94"
        },
        "item": {
          "id": "244aed93-5646-4a90-a06f-c1caa5aa72fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6fd3f467-63eb-44ea-88b5-ffb0e825969b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244aed93-5646-4a90-a06f-c1caa5aa72fb",
        "cursor": {
          "ref": "7ef4950b-24fd-4987-9ad7-25a445f86ff7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "16cc06eb-a62d-446e-a20a-a10c8d746c94"
        },
        "item": {
          "id": "244aed93-5646-4a90-a06f-c1caa5aa72fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6fd3f467-63eb-44ea-88b5-ffb0e825969b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11eaad5-fc93-4af5-bf56-d810c1896907",
        "cursor": {
          "ref": "7f1370c3-a6ce-4a39-b400-d60f3f1abc7e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3e5fd55d-a921-4339-af19-dd039e2a76fa"
        },
        "item": {
          "id": "d11eaad5-fc93-4af5-bf56-d810c1896907",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ce91a3a2-6411-4297-928d-98b3b686aa4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5db70db-174a-4e54-aee4-5b3a66aceb39",
        "cursor": {
          "ref": "4329b7b5-3676-4e43-bb50-e18357f2280d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bfc483f8-d183-46fa-8383-04e09ce3b63f"
        },
        "item": {
          "id": "d5db70db-174a-4e54-aee4-5b3a66aceb39",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f1f4c55-f546-4a9c-b84b-57f791e511c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}