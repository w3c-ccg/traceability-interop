{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26f9b3b0-7bf1-4b57-afb6-d0756888e861",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e816d9f9-65d3-4dc6-bc97-07924d13713a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a830800e-e2b0-44b8-9149-34dccbeff014",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5e372bb-c22b-405a-9c99-4d483d888a20"
                }
              }
            ]
          },
          {
            "id": "fe3fed70-5334-4220-806f-56d210200d1f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a0c21db-182c-4aa9-bbce-6956c7c56ae2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b78b151f-8d7e-49c2-ad2a-284cee015c1e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de605386-255e-4216-bf06-a34955ee24b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e67b1c5c-03f9-4845-a79f-afb4070e705a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75ee8e53-f0a2-432b-932e-d42dc1d7a84d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96dd3f69-749b-4cda-8019-99f45c2cdc87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2961b525-1f76-45c7-82f5-008aac87344d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "773f40e8-452a-42b8-b54b-1720e2927a39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5d37a0b-e798-4d0f-bf6d-5a01180e21eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "105342f5-3189-42f5-9a24-875eccd1873a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9da915e7-5a83-4cd8-a8ed-eafe6120111d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "020e7aec-5c16-45a8-b1db-6c0147bb8a3e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c1db97bf-57e4-420c-a094-cfa1697fb3ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1134cd56-12cb-48ce-afa2-c16448eebed8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7579a79e-a806-4f10-9cb4-c3f55b367b10"
            }
          }
        ]
      },
      {
        "id": "89726851-441c-4a37-86f8-998ef20544f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0f8fecad-825f-460b-96ca-72f3270ba50a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5d46197-2860-431c-bed1-fa65810a895c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d1aaf33-2e82-4dda-8dee-3560a0b74635",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d9201e-ed3d-467c-842e-1e4aa8e63743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78bb8f6a-460d-4e04-8194-e055b5f23c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f55685-fe66-4452-a494-0e27a46d270e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6975c88f-8f78-4aa7-b259-f3c771caf826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0c43a18-d753-488d-b0b7-e9cb383a576e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe9a1ec-c980-4c96-90ca-512d52ded15e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bdb0a0-7296-4d23-8a04-557a8f3f549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9fa433d-8669-4e9d-89de-c5cf70bfd7c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89e50259-eda5-432c-9213-4a974d195da3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53b31d8e-9bd7-43fa-b83a-1f9e5f2bd17b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d80d25d-bf29-41b7-9d4e-d2e8e84c4872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "040eb94e-a118-4202-bc72-d5cbd6b6fb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3227c5b-39bd-43e3-875d-1ab090f3b0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ede212-17ca-45d0-a48a-e51d0b7ee18c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca1d2c2c-c8f5-4587-8394-73ed0bda2709",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fce250ea-331a-4980-843a-2463ba5ab996",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "940d25c5-2fb0-467a-86be-e140743dc4cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd11d854-f47b-4150-ba4c-e1938d455206"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4841d25c-57bb-4c49-8277-6219ac742cae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6bd7c56a-dddd-4d23-a1e4-1732fa6c1176"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e1168e7-05ee-4cb3-9c53-dfbeea10743e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5cd6ac2-ae1e-4cb6-998e-532d4f7249eb"
            }
          }
        ]
      },
      {
        "id": "653b32f7-44ef-4d97-8af9-efec630b4c4f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a5dea83e-a2c5-4de2-b2ad-44a1b861f728",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8effb92f-19f7-41ca-9ea3-e4c93934b906",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2dcc2b96-636c-4917-b883-5a745cd03823",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26744206-b68b-48f8-867c-ec564030f5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ae1ef2-1b8d-4115-882e-846f1fcad564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac4fc00-999d-46db-a347-235ce235726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9884667d-736d-46b7-a275-07a73293772e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5741f46-9c75-4728-aa0d-4b8f9cd4136c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de64f993-f9a7-4d39-868a-b3793e37adbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36976ef6-ba5f-40cc-81cd-4671e1c93f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e90002-f479-47a0-9e3f-46b89103d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ead902a-fc15-4436-b896-359f1b7098bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fb9ddc-64d1-4ffc-8b19-b0f065e7bb36",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750dffbf-eb10-4c0e-a783-502360b13962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de0a17d-d8ee-40e9-96eb-8b5e6fdeec17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe3b91c-a0a5-4406-b7be-e4bd18a0960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19410edd-1a17-456b-987e-acc91e0fb85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fe078b-519f-4064-9530-5d0ffffe822f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0c5637-f7cf-4746-9795-38ec135a5127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7420ed8e-75c7-4dc8-9e0d-8686e66ab593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dbe14e-2047-4e91-b8bf-8b8eca05a17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c49b59f2-9f5b-4c09-9783-b8ea76600873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be26734-7495-4413-a2f0-feaae61e1c7b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9009972-54dc-4855-abb7-9f09ee5ad894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5020520c-7536-4d80-bac4-0ab4c010dfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d0597-77e1-4d1c-9336-b6df497f0f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29fb824d-ee29-474a-b306-cf5ca2b390a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980f8228-f9eb-4088-a187-5dbdfc6122f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cced7c9-3750-4971-a4f2-08a2c8277428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d511b01d-4e2b-4d75-bedf-73fa9ffa5fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf55141-08b0-40a8-afb4-77b7c5e6734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31554b09-3aa0-4310-8aea-283fa916c8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc53e4-b2f0-43d3-a23e-eb6a1e4c5ab6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ce52f-3ae4-4c4c-98d4-4e339cb2cca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee448d5-e7ad-4ebd-a7ff-edb955a797f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49ce98b-4368-4b70-886e-29a63a2efaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b27a3e3-e1fd-4b2c-ab6a-5b97308d7551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3ee1f4-fad7-471f-803b-f199c5f6615b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85336e1-3cfc-4b5f-b0b3-10ae5808e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cce9f84-f6aa-47fd-b58f-0b275c7016e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17628a4f-9ce8-4507-95f1-2a25884aab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32888f7d-09a4-474f-af11-191f1ef88fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f030de1c-cfb1-4239-821a-213fb7710571",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ced8518-20eb-4d00-a7e7-1445e6dbd950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b618bb-cd96-4abf-b65e-7b0d95ae6714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77cf707-0f11-45f8-baff-f7bac81298c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04548f52-cc3f-41d5-80c3-2b2da6f397fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7075d6-9c38-44ef-a3db-72f9ea3ba78a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28612124-f58d-4a9f-87da-3a9d3ca03b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9623305-379c-42d3-b5c9-88a697b133ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49daa5b-c0f0-4b18-9255-851fb9c5b782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d0bb63-6780-4e7e-b131-fe14c138ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cad172-9aa8-4da1-aee0-6396d106850d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefd1056-6a27-452f-8327-e3da3ebffdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f07a6bf-5150-43cd-9e6f-ada07fdf0074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af2c05-f436-4e75-8f08-93ee2964d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "191c55d8-6d67-4ff1-b5f9-e3c041882897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7563bb67-ccad-4d77-a0cc-ec2644eabed4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b70f1f0-c233-4a07-81e6-6f7bab0aa695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9bdf86-6585-474a-b649-39184756eec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde1c4a6-778a-45ff-a4bd-97639d60f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7930d765-b834-4e74-b370-46f9ec473ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179804a9-d5c1-444b-b692-2b5b0e1e358b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ce3aaf-1e48-4ead-b168-a3e3851ba67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162fd09b-18bb-452b-9377-610389734374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1218539-75ef-4d87-bf32-345c98771e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9825433-450c-4568-8fb0-6e9266cadccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c316e4-e451-404e-b3f2-f60ecb664f06",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f500c6a7-4502-40bc-83ca-3cc5340c27b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258daa0d-43d5-4f6d-b748-0ac8d419bbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9097e-7684-4ed5-a101-9ab57ccd25f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67cd22d2-0089-49da-836b-1f56820619e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f373e1d4-7242-4851-8478-1481db3e7f98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c506a9f-279c-4500-8418-cc036870ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa41349-1816-4fea-b400-4391284b4cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8617037-aa4e-48fd-bd29-e3d257053cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa1caad-fc00-4866-b965-66e156ad13ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8a8e30-9650-4f80-8941-698187d61e7b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c61b4a5-e5bd-4c2e-9061-5965f2f5f266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec3b732-1249-4d11-94f8-60d91ed63454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642a6e7-efd0-4411-8f4a-c412adb4ce65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeac9e43-7d91-485c-ae0b-4e7e5349c0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836bb375-e5b6-4c3e-bc78-32fe4b127729",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804507e8-7c79-491c-9a93-44a3678f0fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b66796-950b-4524-a092-b61a70ef3dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1afcff0-0edf-468a-b8fd-c6ec260f5a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e93bf1-7fc3-4dbe-b44e-51220badde93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d94690-f42a-4c30-b34c-087dd2012fea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda35d58-a475-4b38-a0a2-85cf5fd632b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadadfbe-85ad-471e-bd65-7c1107513db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccaf2e1-54b7-4264-9e89-02775c434581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5486d9c7-491d-43ee-8ccb-017255782c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51303fe-2160-4791-909f-e3b0c802d1cc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a09ecfb-ca6d-4466-93c6-d90ab329b713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cd48a5-f6d7-4590-9755-5ae3cf5d77e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9b55e0-798c-4df7-b3a4-0c6abd4dd612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3014af03-aab5-4a7c-86d9-3ec52c8fd11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d4145c-6b73-4507-9d2a-303b003dd12d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed59c8f-de85-4c2c-8b42-418672f28b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e44323-326b-42ce-b542-9a965ab035de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f202748-592c-46d7-a9b7-6e78f3bb90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2df26f3-46ab-4eeb-9353-f26ede0db769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f8cb4-f7e3-40d7-90f0-b199e136e5a4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c01c1a3-00dd-4699-8792-90873a8b024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc62a13f-f50a-4f92-93b3-e7c50bf09aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cb2a6b-03d6-409a-a339-a0b4b27e2490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1133d1b-f198-4872-b584-3469e9700eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5556943-020a-4180-a350-baf0d5c827b2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed0d931-9c6b-4d17-80e1-6c1c0e2c0f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab4749b-c601-41d3-a2ea-ed28dbf5feba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b7402-98ba-4109-8085-b40c7ed60492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de60fb74-75d3-4d40-8a1d-aea30ca17c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f4dc7d-25ac-495e-9219-d374e95cadd5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1327aa-cff0-44f1-a3b0-c7703ac124e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd3cc1-ecb4-49d7-bbc4-1e4f4a33a2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310bec5a-0129-4978-b4de-b3d862efbf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25a9ef6a-6cdd-4ee3-88a7-69d8035c3788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6247917-ebdd-42ca-a8fc-58c149dc71f2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0466b4-da5b-4ada-a301-55fff4788b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d456fb-d3f9-48d9-a1fe-fd7ae0066541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052014ef-69a3-4689-93bf-db6eed4f5e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b5f79b-6c19-4210-a6b9-c490d274c7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0323f2-39b3-4503-abf7-d0b021c80f09",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f67a486-e1dd-45e5-86bc-fc8aca68b434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a864df-2968-4e5d-b96e-644cfbfab56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdc2b09-b1d6-479e-85c1-9ba214fd119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f6bf1e-372d-48dc-8dfb-33414f44337b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b63e5ab-80af-4fc5-924d-9fb6d0555d4d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070672b4-983e-42cb-af8e-6d8679943e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529261ec-1e6d-4f52-9827-fe154719ec8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df2268-a479-46b9-b886-0f117aae6f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a2a465-fbb8-4ac4-a9cc-6c5187182070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974f262d-2139-43f6-8ffd-a11663f0582f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76556b8-0e3e-44af-86de-5f7e0a124b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0625598-1f97-436b-bdd2-41dab3cc7b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a043cc-c9aa-4269-a9b5-754cea6fa9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59f973e-70ae-4ded-b70f-1fef57bd7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5adaa93-0661-482d-9c65-912e71d24ce2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198b407f-0dee-48ed-b269-0367b78c2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766cc43d-0235-447b-b085-4b30b06ae2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e92b3b-82cf-44a7-b03e-71996c3300d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b5406f-6e52-4035-bdcd-e67542d4f2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09899e85-e956-4c6a-8eb4-e5c8793aa782",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac5da05-37d3-4f48-8b6c-4e94d266d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf75b511-4bc1-4d70-b36b-bd77677a7763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79819c5a-c840-4be0-8bc5-6267f2a9662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d114dc-62bb-467e-8372-c27f779792f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a774762-3e4d-4904-a023-1d328b5fb365",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d170ea8b-dab4-460e-ae93-31f1ead0f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c8ab34-e36e-4450-915f-7f23fee67ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee6c603-be64-4921-bc15-3c5dd3af8d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "36af3a5a-8e07-4611-b732-ab76b5562d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f213ee36-0bec-4809-86c9-8376f6694909",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c656f128-ede5-486f-92c0-68d1d259f26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b11e498-d1ee-4091-80c2-5902fcf8dde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baafeb6c-e178-4737-96bb-cc7e9f50efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "302d163f-a488-4932-8338-291c6ba36133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f86089-e0a6-4967-b5b8-b3b5d01ad111",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076fb4d2-70e4-413e-85f7-a1d93967ef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a69db40-39d5-48c8-92cd-4d4174265131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520cd645-fc60-47ef-bf55-0ad267fe8442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5b69d0-141d-4f10-9c65-cb66fbf006c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6688f3c6-3da2-4f72-8508-5da3bf6a0531",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36742f6f-8b25-45f9-bb6a-cfcba6abf588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673ed282-723b-467a-8cae-a5c1e20a54d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6250ed-cb78-467e-adb6-d8c32f65b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1f4b8c-f4a4-4d4d-b192-2a5d46a67140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724acadd-5623-4738-8c64-6fad6785b489",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde7a135-40f5-49b7-b5e0-be804fbba15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ef4c21-dca7-4ad5-9914-ff8303128a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfa91f4-ef6c-49db-828b-d24c8295789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "555eceac-f93a-419b-b8a9-1ce9a7f7c2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69bfc66-98da-4109-abb0-d7e8d7950e39",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd213a7f-839e-4cb1-a043-547e9f86932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e1bed6-ac12-4b68-99be-a30008dd7e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb46d4f-de2a-42a3-92d9-bd3fde168bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43851e79-27b3-412d-838d-7b8c0cfbd4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c771cc-86bf-42ac-9d85-58fc7b67bf4b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1a430-ef3b-4a94-b1ce-5c02851a7aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a413c061-b236-45a9-9181-adda29782248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43d265b-3278-4479-af8a-59eabc03fddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdd2603-224f-472e-a13a-9a49d50d2348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e5d61-527c-422f-9688-a5cf23e59db5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab38a71f-189d-4110-ae19-aa763dfd84b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cfcd90-75f8-4ee6-96ae-3779fdb513eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d5dc1-a67f-44ef-99e2-4ca004de33c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "351970a9-deae-4266-9e59-dde5f4b0961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68661f5-a4c4-4912-b0ac-34cd84fceec9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937725e7-9575-4833-90c4-935df16e1171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40775edb-954f-4782-aa09-10d908d0533c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03187162-a92c-487a-bcf7-fb1b24fee491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b345dee-bfcf-41cb-bb63-32369df959df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d49a25-4d37-4b84-8fb3-ee231061cda4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3ac69-1812-429e-81a9-00d758482e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37edf57f-bd1b-480a-9a37-04331376f2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49c6a0-0823-486b-a1cf-06e7529ab0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f61a7c6-9c6c-4b97-889d-24029b958b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ebf49-4e18-4a49-9b47-8d0135eaa676",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0546e405-b42c-4009-825e-e7788e11e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee3c321-cea8-4d63-bfd9-86fff696bbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef80b0b-b6a4-4907-8490-aa62a3cca5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ea504-5985-4e7c-a6d8-39b16ef08151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5639e441-07dc-4001-a0ac-43650cf8e1ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a38759f-4559-4290-858c-e94fabd10475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b1d59d-5b6e-4845-ab38-1f146314eb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e426755-4718-49c6-ac8e-0aa18839122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f491ecec-8357-4ec0-b518-6e97737f283d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a403cb41-2649-4508-a4bf-ea2981f4e3f6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a518c7-db8e-488d-a73f-53bf26f2f4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7176ec-369a-4324-ac7c-d7a68039d5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1112822b-866e-471b-aa9f-2dd6eb53cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1a439cca-34dd-4f2a-8aff-a8f56465b8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4497462-cbfb-49d4-ba27-3a4aeee12f71",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869750c-dda0-46d5-a515-7708a4fe633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2d0c09-76ec-4c5f-b058-9d4143a04d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18208b63-3541-41db-9bd1-b058afa73ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "757173d2-b3f7-4eb8-9cc8-f62b42cde536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ce7b6d-b706-4fc0-a8c7-5972f2dfa802",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c809bd-6208-43a6-949c-0aea81dbb114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06651e43-5b67-4285-ae2d-92ac11d2a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd04c1c-697c-48c9-9386-7e0a8fb7bf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "868d64a6-d4cf-4fda-a218-4b10266cad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7043eae7-2c1f-4267-b32f-274f56e1a2f7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ae44c-fade-4fb5-bb60-a0aebf569631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10432b4-641f-491b-84bc-4e639502393a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427b6ceb-965c-4d77-89b5-caf39a75e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd2fcb0-365a-446c-bd59-b3a934f580f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d274192-3376-48fe-a97e-7c8da8f822d9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e6c02f-5634-4d49-a35b-93ec159ff521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fbadc4-d7c8-434e-be10-e546edc89daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab49c9-ddc9-452d-ad12-11ffefe2fbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee84923-2ee6-4ac2-afad-8c8a49d0759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c0818-5267-47ed-96cb-a9990a7d207c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877d31b-a3db-41a3-b7e6-28670ac3863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4fc718-8507-4d5c-a909-d75fa979499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bc7661-317a-4319-bf0f-c2d9aac05539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73797264-2b51-4d79-97e3-2361ebcfa5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeecd45-d98d-467c-b7c5-f70d478d86ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070e9318-d71b-4577-a8a8-7e7418bd0340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f494db-c7ed-4210-961d-944bef37ccd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aca047-81dd-427f-8733-4b4e76e8f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8da686-40ed-4fad-b1a6-f663fc291150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae04575-3683-4fc6-8bf3-f0761ab1a94c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254606f-2252-44ff-ac59-63dd34f14c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9465052-ec63-4435-ba9a-b37312289cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605088c3-2a68-4e46-822b-a8d35df0b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5313bb83-931b-45d6-9af3-72cfc982c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97560b03-4bcd-4590-a01e-c65e71d0680d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be2df79-10c1-4449-8b9e-ec41132fad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4e86e0-ffc0-4089-b478-09f8157b6efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9b9180-8334-44bf-971e-988a034e851a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9617397-9103-4482-959e-479ec8389b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fde2af7-531c-4669-b1ec-d5ac7083e520",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac9e345-0676-4149-8227-c4640b778e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b1512f-4ba6-4e47-92ae-3d0ed9e9e6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e5c193-a3f9-4450-9368-eb5ce92efcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6a0e60-0446-45fb-899a-cc481f952c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e9b43a-e886-4783-b217-c9a932077862",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4029b8c-cebc-448f-ac19-9b6a78aad5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da92da3-6fca-4925-9d86-e4435cb5697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b49226-7830-47fa-9755-215136747407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03a3fa4-4699-4620-8bec-375c7c4c5f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8486cc-4ffd-4c3d-a171-9801b0db8705",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40805800-de49-4ff0-b4e8-8a6d3edb708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3fdb47-c573-4f2d-ba89-a22ec1102e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeaef2f-f2c3-4c25-9bc0-7f8ca4c05240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ede57d-ddba-4213-83e9-29f8fc915b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f09429-7abe-4d21-aa95-4d5fde3286d5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb64060-38a7-48e4-b355-e4e471da747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55726592-c8c2-4bfa-9bbc-24a7d287e1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0c0d76-997e-4779-bd40-d417bb0cc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed274c4-118b-40d6-94c8-0a1c34330ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36408e3b-5a72-45f2-b2ad-d4d4d49a4f34",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22534425-5d5c-46c3-8f6d-eec35e9e13db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8e170c-806d-476d-8db3-b9d5dfc5f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ac50a9-b110-4cb9-a598-6d3877bde290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce547f88-8404-4dc3-a4a5-aaec617f62d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd5df92-ddc5-43e5-9bb6-25c3c309fe58",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34439375-54af-434f-9b6e-b1803ab7ff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa15cf8-5860-4ebd-8fbd-2a7e00583b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b41a88-56ad-43b3-9060-9302d986d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "51934ece-7ac6-42af-b489-f5432f126cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c5245-6fc1-4a81-ac77-1e74ae11eda5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3db027-2c1d-4e0b-a1aa-7e6acf6daa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5885fa55-285f-4a2c-b8fd-aa6cea1359ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db11665b-3c2a-47bc-a109-1eca0227770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa24cd0-400a-4de0-bc48-4d8f16e75268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1ec97-2fd2-4aec-a05f-0fc593fc1ff7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448f2cfd-27c3-45c2-9536-79d52151a469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6bca16-9a7c-4782-8986-fae7401bed15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ea9d9-d40e-40d5-8225-41cdc0961990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "45329a6c-8117-45f2-8433-ad98215bf752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962d735e-1cec-4636-a4f0-10a2ac66c766",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd6a84-059c-478f-8e85-85322bbc09cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906a731a-4611-45b8-9814-2e7cad5abca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ab559c-229d-4e50-b55b-14deedc00cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc9060a-4edd-4217-a4f4-bdb8403e6be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda8daef-1352-4dd6-91a1-512f6e35334e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2ceeed-2506-41bf-b50e-18c1069a2132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d572c29-abd2-4c0a-be16-63926d8f1fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d551ad3-4dc5-486a-b640-11381c351af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57823b44-5622-466c-b440-472ca1b144fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a322d-3088-43c7-939e-6825e65ea6cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb76d2b-755f-4546-af84-a03eadcee6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f050b4-f622-41e8-baf2-da766fbb0e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6027ff-c3a2-41ec-8f86-e14890235bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a171af34-9611-424c-9dde-787f00b795ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5958a4df-3fde-4c48-9de5-72227c9925c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc19b4-355e-42cf-9312-d97b6b8b6dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdb2fb8-1bec-48d1-8a26-c61cc7b5be50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f723eb-3b7d-4487-9c4f-36d6258fb45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3244b324-021d-434c-a71a-4c1d2a52b59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2032ba8b-9290-4296-8174-0ec480b3ee5b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47960e3-5c06-4fd8-bdaa-5c3bb2182755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4759cfb-ea80-4e4c-be84-5bb783b24e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e89baf-70e8-4a3a-b53d-3a09f78220d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b51ffce-c828-49d4-b99e-66d2bf168032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457e56bf-4e28-42a2-bb0d-2320a136f4c9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb22bf8c-de5d-44df-a574-21a79b0c0220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbd0fc8-0045-4c70-afa2-dc6774404f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8c07a8-f5e7-4d3f-b6ae-5dedbca32de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cdd6e3-7962-4032-af2e-0ce4aa211cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2421dd1-9435-4fc3-97ed-cdb91ad74314",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c31ee7-8a5e-4d99-8e7b-8b50ad6b47ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bc802b-3496-4b64-b2e6-d004191c12f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28706515-11ec-4fc0-833a-17e457b00a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f95ab7-5080-4559-8951-801dfe0e1884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53090f78-9033-4b2a-b795-117d4004222e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fee55cd-31f0-42e3-9ac3-e6ff598e90dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b010c5d-3eba-4797-80b1-aa2954921c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e1149-5a13-4b9d-b5ad-bbee69a3a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f86e789-7c55-4fe1-96b0-f4fe634286d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5af80b-6efd-431d-9828-ee015a1fddd4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4d62d-8d86-42ce-aba7-eca61bada638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28db1c66-c0b9-49c6-8d1d-dc211dc3c6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abbfcfc-98a5-4df4-8fb9-f5746e6beaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b15941d3-5952-4aae-8df3-62c0b2b5c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d79f9e-360e-4556-94b1-204aaec33ffc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c5eaa-70ab-4724-bbb7-9794fce33228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee95a20-a6fb-474e-bba3-650fc4956e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32799851-3aaf-44d5-875c-eb373080ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e239c2-05b6-4384-a0a3-0ef7d412bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585b56ef-70d4-4e32-bf6f-f771e96e3831",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19779998-55ee-49a4-8664-eca810d7a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa99ed98-90b1-4f8e-8a76-dd2f305e1301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c8ba2-765a-43d7-92c0-f8b93f395fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b56f7b1-820b-48e6-b62f-fd32989b8cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a504c3c-4d3e-4861-b4a0-9652ef7ea59e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0f245d-5880-4899-a598-a8775f133edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1316678-f679-46a1-94c9-525365aacb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28b74d9-167d-43e0-8425-b6c4f633056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0958fc-280b-40c0-9cab-3d74004ccbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dfed00-4310-47a7-9d03-61531ec1b3f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa8d3bc-0c10-4824-b6fe-7cced3644184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bb77b3-dfe8-420e-bb15-8dad99c9de66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4047708c-b668-4d2d-a94f-443fe3608612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0d1a3b-4fec-4562-b7b0-f05f180b2e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3bc6ea-8ed5-48e2-8646-ff535feeab39",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8044176-1de5-42b1-8cfc-c03b85c3ea21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521c8785-ea79-40e9-8d75-44109cb509e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466b430e-33b2-482a-8335-e2517f78d532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4091375d-8072-4053-be6f-fbce3d982817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af892ca-d2a9-4e4d-8b3f-3e0f958f2ae0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b48d77-0102-47e2-87ca-6d3dc1efb423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cec139-c3d9-4ea5-a54d-9da8a92cc2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ec8e46-1731-4319-ab5f-d0062420e705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcc87e9-deaa-454b-9bed-5e015cf99587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad17ca2c-d118-4c2b-938d-a299e0b9b281",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96ab84-0a91-4a92-aee0-4cb063c2833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba27ed4-2a3a-4d5c-bd3c-71992ebb0156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f636eb-481c-4081-8af6-f626c04685cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4b679b-a1a6-4f18-991c-08ce859f4b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a2e754-b751-4be1-a59b-8d90d5523f1d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e2857-58a0-496a-8493-44c8a12c3aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a5b1ae-96b0-4505-9b09-fafb22d5af7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4187536-b6af-4727-8669-b97833e0ec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a3911c-0c39-4084-8e01-2333db5b7224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e452a7c-9fe0-42f7-a3c3-26c04e361b4d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763a1891-225f-41ba-bff1-178b48215859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510215f1-15e1-429a-b39d-29b4b4372a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e51c12c-3074-4338-800d-4f0fa50db12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5d48a7-db8f-4353-ba86-364e7868e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ac2484-4ed5-4bb0-bcb4-ca2103d519fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487b1914-dd5f-4e70-8db6-5bbe119219da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0febd4-3535-484c-801d-6a81d9330e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0e4f1b-726b-479c-ad15-62e259e1f2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58171d77-9dba-4273-8fe9-8f5b5d554ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b27b6b7-fcee-4730-b967-1839d741caa6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd8b5f-5fea-4be6-ac98-bb368560801f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26cbe1c-b5a6-4877-ab7d-c81b01b674a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b39ce5e-d72b-48e9-b899-6a96f625cd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf0d50a-897c-46e1-95f7-d4fea9ea9880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c284b552-3eb8-4320-83d2-148d7e9f8a1d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a903c78d-9f4f-4baa-aecc-6cccc8bafcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c5db1e-e0e1-47bf-bcf9-21032d646c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5739be-a6aa-498b-a4d5-739d4a9e8a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b2487f-133e-4911-9900-4ece26ddedad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745d4c87-7a35-4aac-9491-6ea691647c05",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2607a2-0b69-40f5-aec4-2fb49d8eaa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fb30e8-fb66-488a-9bf0-691d09fae05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d846079d-73b8-443a-8e64-b5571f0c1c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a26b2096-b030-477a-9a94-04e0cced27ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf426b5-202b-4a2c-9482-d4ff17631f45",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8730740-b233-4e1f-bbcc-9705600bfa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129a75e4-2e1b-48b8-bd4c-a20a32f04097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161f4cd0-7694-495a-aa63-41cd49060486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f3cafd-38e2-4bc4-9fe7-5554befd1c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83537a6-6abd-4d3d-ac94-783e9d767324",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c479fec-4b27-4d73-8c92-23f6eec58342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05acc1e4-bdde-4f61-ae0b-eb8fd5779379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a791702-0d0d-44b1-a6ea-e232f5ef381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f650c3-f05b-4e11-adb4-b56bba5777ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7438407a-11a2-496f-8413-d215d3c6a791",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25142d8-b6a3-404d-b143-342bdf8a0f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae8d8c0-29c6-407e-a4f1-a0b927c2543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73de3b9a-d119-4414-bcc9-8141137d85e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ecbdf5-c3e0-41a0-85c9-82d0d9af3dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52911c39-31a7-4ba0-94fb-a81faa2df101",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2398cb7a-3375-4608-9dc0-74c2e7c54f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bded6b-505a-46c6-aa19-542aa44642b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130b5df-36ce-470b-8b6d-d0fd49fe6cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21480af7-46e6-4913-8afe-efad9a7439ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa75d1-af22-423c-8398-de85a99bab99",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad7cf2f-7f12-4f8e-a18f-4fa9a5ca1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afd3b93-7076-400f-85f4-e4c9ef191f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b683613c-7b15-4458-8e0b-31742f205133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d8074b-bb21-415d-b807-fb8193b82748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad4a93b-4e76-4c63-80fd-7648e3877f04",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac8fb9-237b-4b57-b87a-fa5395c44a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7631c1ae-f744-4ee2-9c21-1da5ac093016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f17c2-62fe-4338-91eb-9a93d2fe6f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e32698-a7bf-4085-ab8b-423c9961a446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b72f1a-74c2-4574-8fcf-9c48595691f4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25813995-ad43-4f8d-8a9c-f5456c5f8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad281fb8-957c-48c2-aa0d-a7f2b1b2b607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fe8736-5058-48a2-9a51-71be174566c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9751e174-9e89-43b3-a6c3-b085841c1729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97de444-6f10-4eb0-9649-f7d523d5bf31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023c1fb4-d3a5-47f9-a4d6-f3563d77dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b343667e-ea90-4942-99ef-0fd4f07ab7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d65faab-3e9c-4895-8200-4b6a7f5ee3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d953dad-2350-4f69-9ac5-57b12988b1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5443093c-2ff3-4931-9fa2-eb0416f6520c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec470f50-dde3-4305-a71e-430212474a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2466767a-9bd4-4d78-8fa3-35dab96769d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730b7c0d-6ca0-4063-a1b9-e163103e757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "813b10b2-b49e-4e97-a093-c1accec5eb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793fc0ed-491d-4010-85a3-3c3c580db312",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b72dd06-e528-47a4-808c-72ff3fbaa95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03906eb3-4586-4cb3-9b50-a4145845f137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3389c5f6-7e64-4b5f-928a-df404ff28578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e33b3f2f-15b3-454f-a538-3607834effe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c019b5f-2e42-4c95-8b69-a7fa0d66bfe0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98805a82-4582-45d2-af37-885d98183a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf139f0-cbbe-441b-91a8-bfaab2513641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be83c97d-2970-4ab6-a9b1-492f23cee50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8458c1b-f025-4328-95b3-54de35750674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eb8f41-1591-41bc-8a4d-614e177189da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf25d68-4b41-4648-9eda-b9d7ce7bd10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8355cfc0-6b63-4705-aefe-1f1c576df78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b448da3-3dd3-4e09-9694-416b40d69598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ff4dc-7001-4a8d-b2a8-c1fee4cb264c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "962e2a1d-dabc-4613-b9ea-7af600828b67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f5f848c-f12b-4a7f-9604-2fddc7467588",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47406fd5-582d-496c-8809-be2a80f642b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcab1b92-1cff-498d-9145-d0e9617ff5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c24f0e-e314-4442-8740-4e43d4f44ac0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226bfc34-3d9f-4f14-81dd-ff4c64b4fe74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "709a1343-7dd6-40dd-ae24-1e28b774cc86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37a12e5a-8dcf-4488-a787-e80dce7c3a5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd686113-3ec3-4395-b9d3-110aa0a3b90e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7224af7-671d-457c-b516-64220d5021a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "256838a3-036e-4203-9a21-761bd6ba5887",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6256fe9-61b6-4bc2-bd9f-0237ab75deb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "627bd0ad-e927-4d4c-b132-e5922cf199c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f3b8731-7853-4496-97ad-0fd589e78a76"
                }
              }
            ]
          },
          {
            "id": "baab9bfa-e364-45a3-8532-b6c4ea847207",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b38e6ca-29f1-4e2b-adef-6a8b4e51caf7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f7fc7ad3-c4d7-472d-b672-1aeb17ba99b7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ff339-eccf-43cb-866f-2bc93cb27252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f200608-7942-4f28-a09f-e5504d9a1de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be23ce32-2b2e-477b-80c0-bfacf2920219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab55514-46b8-4783-b17a-223f36c07ddb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64b5f256-439f-4f12-9f4f-0c036f4563c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec0ea826-d6fe-440a-b2b0-7c30f7ee5822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "577c3425-a98e-42a7-9ff3-0b3450809049"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5cf8e2f-c08c-4568-beb3-0f05badeb5a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62e0afd1-d8c9-4455-aa75-4b186c268469"
                    }
                  }
                ]
              },
              {
                "id": "9f3f063b-0200-43ab-930d-4751546b4d46",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc73fa5d-b40c-440f-aa29-b9d50215dcd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26d46129-8c43-4d7e-873d-cac86a04c0d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047f7ea7-0afb-47b4-84e5-0577a849735e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54ca4637-ce45-43b1-8533-c476698cf7cf"
                    }
                  }
                ]
              },
              {
                "id": "b1466ab9-305c-402b-a8ad-368a33cfe449",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db4108d-1fd9-48f0-afe1-c44cb6e5a51a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28ffa47a-2c75-446d-9085-4ad962ae5ee7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c7c8357-4d72-4d49-a5a9-d177e2823ab0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ea20c16-09b7-43ec-9dcb-f68913d66504"
                    }
                  }
                ]
              },
              {
                "id": "1b63024e-f766-4bb8-9782-9415a5299441",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4deca643-b22d-4d9a-a64a-0f7a6e62419a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56cd65de-0908-4015-ab1b-84d47b2e32f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c88f6da-e68b-481d-9764-8776287c4316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9b01c745-bd94-408d-b30a-b1214e4662a0"
                    }
                  }
                ]
              },
              {
                "id": "bdf5c2e7-d065-41e4-9d4c-6d7423966cb5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a8f09b-bd90-40b5-b083-98df351a2dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a856a05-71c4-41af-8e12-cc19a3749a2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b016b6f7-250c-45ae-b5e1-88eba6863691",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "530d732c-19ca-49a5-931d-d4956555f002"
                    }
                  }
                ]
              },
              {
                "id": "a571ea81-74e1-4651-a2d3-414eddf40612",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "268376da-a3de-41fa-9bef-47e63104b0dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff16133d-07f0-43e5-b2fc-68b7cf7ecff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "135daf46-e1e1-47ec-ab4f-32f220c17c5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad61e3f0-2037-4825-b66f-a9d4df3d6b10"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecb88fc0-8440-4ead-a87d-fe18f3d09974",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10e51182-7025-4156-88a3-b0fdfb0f7d86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7a364a5-1e18-4954-a169-142ee45209d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d94c2ef8-0146-405b-ba09-bb03434fc4b1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94a266bc-8676-4ddd-bc53-6f6773258450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "595efc72-19c6-4c4a-b297-60d117f81324"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ecf6f60-c293-410a-8dc0-5198cd291246",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f89e0315-51c0-4b4e-9ab1-8c71440f241b"
            }
          }
        ]
      },
      {
        "id": "efd2488b-be65-495d-b9d7-426e9b2294b9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "877ec8b5-3990-4287-9f8e-eb9e8d1f36ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8c6b669-4812-4374-b183-24c8c952af48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90cf0dab-525a-4892-8ea7-c13df1cb6663",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ccbca7-61f9-4de9-bfea-5604b7b61034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53643c94-06ad-4b4f-9afc-0c1a46975891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01f1db6-e81c-461c-b82a-21cc4ad7a331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b720c9ee-07db-47fd-bd15-c39d3a53e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b1fb59-b312-484d-b7a3-bfdb8ac09210",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db879ed3-c240-4e06-8ada-aacee91bfdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40af5de3-b039-4a37-a41c-fd10ff053cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6578e301-0954-44bb-a5ca-558bb1793b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9942bb5c-9f2b-4e86-a4fd-97e2cc10d2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d100e-2ac8-4058-8f9d-31769f7d0bea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03890cbc-b8e1-40a8-b02c-f0741e6622fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b57c5e6-7707-4e96-bc26-ed4162a8fb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d738847-80e0-49c2-a46e-be7ab46689ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab17f7a-0ef4-441b-a9c7-547bd0307a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6068c2-83db-42c8-a330-197b348d0611",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996656ce-3419-46de-9d2f-0156a105216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b665f9-331f-4069-a4e7-5d8067b55234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fef9b83-3e9f-4bb5-bb9e-07ee42925a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38471b8c-3f1b-4ea7-a15b-98c24eeadeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5962b1f9-dc41-4e80-8cdc-b7e5923731fd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a58cf82-0b0c-496c-bace-00e8ea810939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36db0a3e-bb47-457f-b22e-ed9ac3f0e785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab599a9-5538-469e-b4d7-cf880998f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8dc283-8bdb-48ff-8e34-833765df6208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf1392b-a849-42eb-bec3-672698808a09",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7f3804-901d-4d22-9303-d1e368de21d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6fc3cb-8c27-421e-bdea-060930b99724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17bcf3-4853-483d-a57d-e2803831a187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad30388-d93a-41e4-a853-a186623f5cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74649a05-75ce-46fc-9dcc-58ab587544dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1177372-cc25-41f2-9047-0c2fcb7ff37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6278cea-0ffc-423a-b6b8-33714e1d8ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f94b157-1224-4dc0-93e1-e182463cf988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ce68be-7852-4d38-9957-2f472d2793f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d043115c-6b49-4d41-b1f3-3ba5d656cbba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf9fb18-7026-421e-8f16-ed3e71d33fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d161f31-45a0-4f18-a691-42d66f979578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c9b66b-58ec-4aba-b376-9d1d8f4e85ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd8fadf-ff9d-4a26-9ce3-3a79eca22ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099687e-2a19-41d3-85e8-14443d48684c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64925da-ebec-439c-8851-fea37b13f774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e285c9e9-47ca-4490-9bb4-f717e11aff2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4142b6-5ace-404e-8e31-a5804a49bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9aa01eb-79ff-44a9-8359-ab3179e8945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1393e986-81f1-4381-81de-f44e08fd0eaa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f1e82b-67bb-4c80-9e2a-8f4b2b435de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1db14d6-289c-4a40-9d8c-5e907da7bcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27abbd8a-9778-41a3-ba16-0f7b49bab69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0e87e5-c8c3-4da2-96a4-671c0b1dc666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155578e2-16f3-4bd1-8b0c-1ee1cdf69024",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1886e1-cdea-46ec-af68-7e0603f12dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2c531d-0f46-4427-97d0-0ca78a4dbd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fae6ca-9c84-4e94-87ef-4cc520c920b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ffde8a4e-a7c1-478d-99b0-fc82ff64d99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd9b9b2-7d14-4eb7-9792-28159cb7b2b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c997dc85-8190-4428-8c31-a91202dba18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc74b4f-81c0-4636-80ae-c3ef6e4b3acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2691da-9e36-42b0-a7b2-20d6144a9592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb1f0f8-7d8c-49e4-ae04-56e7008c9a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0091038d-f48f-4a76-b9e4-9708d114b986",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79f77a4-97ec-436a-9111-88a36f7c749c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f8a5d7-e109-4206-a21d-26295a4d9b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5938f92-db1a-4beb-9438-7313edbad767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdda0237-8df0-426b-b154-582a005d01f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04935a69-55e6-414e-9aab-48ba58bdd140",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f171df4-1839-43e6-ab46-01c012713c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef538800-3fac-4cb3-8c59-76cd84067613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef39ce8-7c5e-4a49-ab3d-a13005e3f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "412122b3-571d-4b37-b147-83fc1fdaffb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc0397c-53d7-4fa1-a163-9999fe5a2dcb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b5c2de-0673-44b4-a97b-cedae7eb1d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e6bb75-aee4-4f78-b38e-a3215a093408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e960135-eda6-40dd-83a7-b81137b9792c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7acc1930-e94a-4a6f-b514-8b0a5a34f278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a841df5-febe-453d-bdd2-690c957b14ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d1a1f0-0247-4743-8803-64f1cba0205d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedea0f4-d441-4a5b-9502-4078204f0d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e199059-ba44-4be6-b888-51730a99833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "add23a3c-0b84-4fd6-9fc7-d436c09b46d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e994a027-308c-4eeb-9ecd-6fdb4f5328e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9028022-30ef-4bfc-861d-ff3c73f12db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760ffdda-ad7d-41cf-80a7-e22be48500b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947936f3-9a75-439d-b7cb-72e8dbd457c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2c671a-91d9-4332-a176-05ac90a7ebf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5116be9-84eb-4797-b488-96c0cf1f4725",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4496352-46d1-4d18-90f4-42a168af04d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a551c4-a6ce-4594-b636-1b4674b13e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5e58d3-984b-4dac-96a5-324edee62817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3041af-84a6-4544-82f5-76aca1149322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d201aacf-1214-4c1f-acf4-36bbbfc17cd9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d0739b-4dd9-4d40-8ce7-2c447672df27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfb8bab-87fa-4d6b-a1a9-c2f76a955440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a7da10-702a-46ce-8a84-ef903b01d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97989ca3-7f17-468a-af06-6aadda6eb56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67924f52-9e80-4014-a1cc-1082597cbd65",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76999274-bba6-401e-8cb5-737c23c2421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f6ee95-fcb3-4219-ad9e-bab97d7e2ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75db8ade-4674-40c8-947a-e4aa8c57de2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "913d5d86-ef9e-4bd7-ab7d-4502e97bd0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23bac18-c3ef-4ca7-8487-da20492b6e1c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335f905d-5d21-4948-92db-704b86b5230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc1bec7-4b9d-4e50-b8df-9b8f9432d220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238037c1-ed7f-4ecb-8959-b6f80a4eef5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54562df1-4aca-4206-a65d-993a52ee77ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e46a2f-3b2f-42bf-9ade-71919012c052",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f54e424-2056-451e-94be-48a6cdb536bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2641d159-bc14-4f17-8e61-5c4b8334236e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e845827-e5b9-49f2-84b8-c614cc68c7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08eee27d-1259-4e07-bbc1-6eca7e9be546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c5a85-89c0-4b82-8dac-18618d01a5ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f4b18b-59fd-4802-aa25-5c8de3623083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5423700e-c17b-4fb3-9c91-23812abcd235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa66f47e-0198-402c-9a1c-ddfa353aa6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de762646-da36-4736-992d-7f6189dec1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4064ee21-aeaf-4930-9461-4b145be8502c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1a2e7d-3cdd-4f0e-b848-ce517cacda37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793babe5-6f2d-4490-88b3-16b915942904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c093f9-b480-4635-acc6-765e2707b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd06f81-a637-4c4c-9040-b2f5d242e153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd3519c-27ec-4be0-af82-779b10d9b695",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc4521d-3612-47ec-ad85-6b858717a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f20874-74e8-44bf-8ad7-5a6cd8415a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d7299-fe35-48f7-9dd8-e252ccec5714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7406d8-24d9-46e8-9843-a519c4045b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd890b0-f238-4750-95c6-5c364c92e463",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482a985b-a98e-417b-b4e1-a4f4fb36e84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b71cba-1967-4c5c-ac86-f82b4cb18e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dee13c-ab63-4da5-bf3f-34d00a3c2277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "020e9ae9-1058-4356-9c2e-22cde0a480ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f424c313-25ba-4dc4-b5e6-020720b4487f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9e6479-039e-4194-8da9-75871ede45d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6de020-0c84-4270-bb53-a9c51da973c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982d9977-7682-46fc-be37-a9e716262546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5999c3-796c-4ea9-9130-4fad5bc4e2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae758cc-01ed-4063-ad85-02e5920073f0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdec11f6-583d-4b4b-a5ec-dec8c1c88dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a34cb9-3649-4321-a71f-f3bccfd2f32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6201e025-de53-4d99-bb83-5475936c06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7320cf4-ee97-41fa-833e-9df5ff17d648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d19e753-408f-44ba-a65e-e422bc7537ff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4856af-c1f7-47e0-80a7-73b60e8e6e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43642438-9f59-4295-a7fc-704da03dff0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9055f53-ebbc-4f6e-8599-4ba6a7dbe49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b164c07-3423-48cb-adc0-d92411e3c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e86e53a-dd4b-4787-85c8-c623d1a330ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9105f0b8-0885-47d2-bfe5-10ea7344ee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbfb3c5-e482-40f0-982b-6792fa9cda19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ce3871-a25d-478e-bf57-a73d9c0264fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbda97f-8d99-4361-832c-760a25e84ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf68704b-212e-4460-913a-cd8d1cbac738",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f530d69-985e-4a73-956c-816e650d7fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8055dc-9130-4ad0-bb46-1d5c760506d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea045515-305c-4daa-8eec-d2bd006c1053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5b5ad6-e5cd-4ea7-a153-98cb3495acd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c80e92-1882-4d6c-9a4c-8ec304828c96",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39739f5d-3eda-496a-b1c0-fcafe7c9b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b79316-9408-464f-9e25-46c49aae3eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8821a655-3178-4a60-aeed-425a41221982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca543b58-f4c0-4ee2-b93e-327f3b5e5aae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f61cfce-c414-4037-86e5-0516aaa1f86f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "707958b0-e580-4097-a971-5cdd3cac9e9c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30a777a-c076-4451-b5c7-6cf4ef6bfa1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8ae228-96d7-4089-b823-7717b94e067e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2570b7fa-2cfb-4c1e-b170-bc3eba746f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "592e8cb2-920a-42f9-8fd6-ed656c33c8a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "243b71ea-0073-4367-ad0c-e473b9a80454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a421325-4631-47e5-829a-38a261a86d56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "503cb851-18e7-4576-b071-89e2079980b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed1f4911-bf60-4c59-8038-24c1397f7983"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca5531aa-11e7-407a-8802-e95d9cd97423",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd7ffb14-4209-4d73-b6a9-c35d33ab64d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82a3a43c-01fb-42f4-87de-3175448fb03c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e8a7012-90f7-441d-95b6-1eefaaace68c"
            }
          }
        ]
      },
      {
        "id": "4dff73da-5ce2-4695-9c15-2655b4f7ea03",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "12e5b534-2fe8-492b-91cb-525f717054ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf0ef93-6d0f-41ae-b290-9fb022a7c377",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9fd5fe2-bc73-455f-bec0-5cfc8d32d355",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be6029-d315-4917-898e-1e991607c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce4eb8e-7cad-4195-8adb-9899c6c595c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9475b6e0-4c38-4476-9b64-1b8d5fe3b74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "286ee9df-45e4-4b6e-8115-caec620a08b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cae2c5c-e102-4a74-bea7-da4b4f8d44a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a4430-b31f-426b-bc3b-32d7a3443447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158e864b-3adc-4c76-8ae1-b0e3819b7609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102242b8-2899-44b6-aa13-c8e170e075f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc9a27c-89f6-4599-8dd0-b19838681626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e60def-b558-4fb6-bd4d-c0468467c8da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcedd52-70fe-48b1-91e0-00a55460cdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71feed0d-feb7-4245-b24c-b2b66fc653cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99dffb9-4920-4e23-8455-0103e6cfda1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78edfb0e-b660-48d3-b785-96bcc2136eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9bd5af-0cf9-4743-9795-4605aab40cf5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f11dde-1fbf-4689-9f99-6b4fa549a8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a244ba-1350-4541-b7f7-532690fc2f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f895e5-835d-448c-ab05-59f95b5a5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a66a3a32-6b0b-42d0-8fad-9af9e291118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d822c1-cb6c-4e5c-be9d-5ade44e2262e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab215aae-f288-4d52-b1b6-d4288f07403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513a094e-40b6-4915-ae11-178852f6ff55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1001a50c-dda0-4912-9166-56f022597ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1cff28-d25e-4411-81d0-6de0aea4ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad6fb35-5a29-472e-b100-a4c28b3437c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff05d99-b106-4a3b-9d34-9c08ed089900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657696bc-4d68-4846-8271-5dace0837bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8631390-f682-4879-b159-23b016aa201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3d8a29-55ad-4801-b633-93aee20ab4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaf0feb-46e7-47ac-8294-2639681f7834",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fe410b-344e-4387-852a-c4b5ffb9ad20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f33cf4-abd5-4379-9013-334b4ec9b40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9412cee-e5a5-4a31-9fa2-1d4f742983b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80dd6a91-dd90-4c81-b50c-ae020c664d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6707d4-58aa-4731-aeaa-e03c3f4bd0d0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd64bcf-0ecb-4b15-a319-940c8536e017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd90823-3857-44bc-bb11-adc7d33e0aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445be45f-f94b-43e3-a4ea-46a5f85b0fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedfef7e-00da-4e18-9869-1b44389b16e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b7afb1-6a3f-4c75-b06c-adb8a30c31f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6f146-77c0-42e6-abb5-8bcdcba43b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306c5d74-6776-4723-963e-f9d8ffd55c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b14331-823b-4213-b01c-d0d365b71348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a79f797-7954-4edb-8eb8-a810111ee03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07870c1-2c11-4516-9810-7de7363befdf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69114064-a836-4299-b555-c453f3b43853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6b47cb-1b93-4807-b0f2-4d840c9eeabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707d7b6c-f330-4399-8839-db71687d2427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8bbd5f-b8fc-4e12-9af3-7702c7711cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68069cf7-93b4-47b3-bb8e-d1e38e1edef6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf5fa8e-e21a-4718-af18-d31fb535161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84aba41-b045-47fb-b113-413ab2195a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2178dbd0-521b-4aa1-87f9-5209fd844ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e272e6e-7ce1-4348-8179-0059cddda9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7966c0a-fd06-47cc-939e-b6802ce614fe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25042f-ac83-4946-b394-f3b9d516a14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d37c702-b6ca-4a43-937a-e6766b374a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fdb43e-6861-41d4-8144-c5d963796a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5260f4a-16e4-442f-a806-5c35e18cad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5229488b-5a9c-4a10-8687-4dc704c815cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3985ec51-6219-4b31-bf15-4e352ab4b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4428b15f-0418-4de7-8ec7-6b41010952ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab72008-4335-47ed-810a-5ce79125e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "457539bb-fcf5-4be2-8457-a3814e80ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d533a773-ae84-41de-81c0-7cfb19ec7b2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9976d6ca-7557-4192-ba3f-5aee0127e3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168e1aa0-6fe4-413d-8d60-53513b14542c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e79a9-722e-4b0d-8782-066029efca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b61bea-7987-43d6-90ee-52e598d5da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460f3346-189c-4ede-b50b-17cd547a6ffa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32a4f1a-952d-47df-8e28-779e5b943d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfd8660-f092-4ae8-8e5e-ad6dc12211a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9ed120-2a41-4df9-b85c-444f5ff7132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9818428c-caf8-42e1-a374-120f10f77e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d6d305-f18b-467d-89a7-d581034e3034",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876b6598-f33c-4305-b837-91438033e9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a710e6ad-3aaf-45ac-a677-6b675d14c7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e89035d-8864-4166-bf07-2998a4727da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7efb4271-1a6c-4875-9692-c7842e942574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0234ca0-1f8a-4f65-9d74-cb96e32d46f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58f8608-acf0-4641-8cde-edbe95e97d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536c7bf0-c8fd-48d6-a99e-7a0fdbf94938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a349a60-7d01-46e5-9e8f-3e2cc442ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "459b0652-4b4b-47ad-a2be-7f3f6342e1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfa2b95-dffa-4a49-bb98-fdfde1bf86dc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dc5db4-8da6-48f9-b9a5-8fd9abff508e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c321cf-f4fe-40d0-9881-fc9a8fa5b8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd35e50-2c8d-44de-b72d-96320ff73f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc1008c-65a6-42e3-b97b-d6a411882a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76207cdd-8b6f-4a52-832a-af38f39840a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bb3dbb-474f-4d55-8e81-5c653f183cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22a324f-7cd8-442e-a85d-eee5c7a0ebf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685e626f-52da-4416-a45b-d6d7a13a3cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5d6f30-5faa-482a-bf16-9d98d3cac610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dadd37-5ab9-4387-a1cd-c01072e06353",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbe69cf-1f61-43df-8177-9df202c4116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a98512-66f0-4288-8d60-369f2bbff6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b39b625-75c0-4ffd-a6eb-1109376f6407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50fee2f2-6dd0-4f94-b624-7d75fca6b07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa311d0-a483-4514-90c1-8def23576887",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89d0c40-8c6b-44b5-9d5a-1330fc0f2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a10000-be91-48a1-b169-0ad965ff0506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ad373-6724-4cab-b8df-996f904af742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabfa42d-e3d5-40d8-8d6b-557a9120ce3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfa20b4-da77-4efe-a284-3edf2906d85b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ad0b8-1a22-454c-934e-0ec226ec52a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f800223-d31c-49eb-a44a-912f40a296c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4418bb-7174-4190-ab9b-45b60ea3608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933d27ee-4e93-43b9-bb74-6879ac72acec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4497fbd5-ee0a-49c5-9303-b6fd8e48f5df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ca428f-bc9a-4e1c-b2bf-a1278db533d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d3e843-a51e-4419-a4bc-74fc9435eb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5c5de2-1207-44b4-8f1b-6087febc3b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761d81b1-0769-48c7-b2aa-e623078cf1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a0b154-e65c-46af-a6f9-a6fdbf915443",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0295118f-2692-4077-9ce4-8a74fe689b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ab1f6-34df-48a9-9e93-67c50279ee13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed78053-72aa-4a6f-a045-caa4bd5f76f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb48c16-98ae-480e-b237-08cd3182ccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ffc78a-588b-436c-9908-eb60b6940c97",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7418c6-4c26-496d-b681-894c66c88344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7957d43e-7a9a-4a57-b050-12579f80f292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72145885-32aa-4620-bd39-f947f3bb0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1324421e-6fbd-4ec8-ac2c-3c4ae1d9ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88836fc5-6527-4e2c-8d01-c83be4f0d02d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7414ea6c-a9ef-4db3-91d5-83e2bfd8ed86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115b7fd6-dcfc-46dd-b1b2-4f1df335ca61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef678b-bb5e-4c49-9db0-e30dc0bbdf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcca141-e96f-47a9-a35c-2961f633cb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db68a242-c86b-4ce4-abbf-0f1add5f8904",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41187eb8-c11b-4cda-a8e5-96b61ff17baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9784d77e-53d8-490b-a129-ddaa4213320b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0024d4de-4a3e-46ed-a29d-48aeaab50954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff530855-c623-4aec-ab1e-da5a6c76eab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d016bdaf-5ba7-4094-b9c6-21d6680c6b6e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3328ac-a273-4aea-8e74-b70db0b06fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f54dc93-a90d-4585-a295-e728fbeafa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cddd20-6689-4421-89e7-9b44f5814ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4d93ad-b372-4c09-a1d8-bda01f441930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed08557-4d0d-4502-9921-d97ea94148b4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba52ccd1-9915-4e57-a3f3-111bd1868081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85685847-6314-422e-bd3b-7087128467d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93782eae-5cec-4f0e-9d87-0d44e3a73ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6138b131-31c7-41a8-9218-56b6555dc163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480aaf82-e910-44d9-b3cb-f3e24fa82152",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3c8e59-87c4-4d07-8a4e-78b698ff0b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0fcbbd-2dd5-480d-9ef8-6d604f318a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb25c9c-3707-49f7-b14e-3711e3e44aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b346776-1fa5-4a03-a96c-35931a085daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae6fd63-2216-40a4-8154-c64b946b9a4d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5404eb1c-1d83-41af-8397-b324143312be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b154851-f12e-4b90-8471-9f86bf22093b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d85c9e7-7d6e-4461-a9ce-8c5527cea2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e8c6f1-34e3-481e-9eb0-edb14934000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0248f079-69a6-4857-8f73-8210ff678c6b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ac0fbe-2f0c-4113-b300-8d1b0b49c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5043c8f-0132-4651-834c-cd5e1fffe320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555466a8-cbc7-4fd8-8ac8-cade0b9e4914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bfee8b-42f9-4a24-b9ef-f58a0af79d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da955dd7-9236-48cf-8ee6-6b13c621d344",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4663c6a-125e-4e00-a2c1-277b326d83cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a8f424-7b07-48b4-aba0-d845288e0809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e884f-1910-4a76-bd82-77fa84970cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d07986-306f-4c21-9afa-8e2a8e1659ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46deb0ae-3d17-4c26-9f92-478065851426",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5c62e4-9a3f-46db-8c78-91a8d05f63eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d764f6-21af-4ee5-ac16-6575feca00b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e4d096-3108-45ad-8fbf-7b4a41a404e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d59b726-5c4d-4b31-9ce1-b3a0585d6e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189e7533-16f8-4d04-8e61-8cdf8a6d9ed9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9def6864-86c5-4f5b-abf0-72b2ef43538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e2883d-6617-41e5-a321-d18fb9a538ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d31d1a-fc2e-41ba-9a50-2209c2e630e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c758cd60-9588-435b-8a0a-602831d298b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6df62f7-b192-46c1-88be-1bdd91a37a4d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cb82e4-ed60-40cb-95d6-a0e9871bf919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc20755-8178-4bee-9459-062c6ce4fb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d20161-4a54-4100-87dd-0a422baac0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bc1e89-7700-4ac1-82a2-b524900ec778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f127fd-0c22-411b-9e14-3a0386195c1c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59e4ec-ccf5-42f4-a3d4-37bf02995012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe606eba-6575-4ed4-9b49-23f9bef2185b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6b8969-0e3a-47ab-bf77-f59abda434ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd9cba7-e8c8-42ed-9f29-24714378cba2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9ff3e72-a577-4664-aaac-c4df9f63d70a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "155b85e8-c088-4ef0-86ef-f21d31d67e3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0388cec-33b0-4f3a-b6e7-d220a614185d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e75b365-57cb-484d-9b07-728b9e817e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d01722-0d1b-4059-a679-3a8a4156be09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e63520fb-33b3-4d58-b45f-b191efe20e05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4d87225-9715-45da-91dd-8528549ab9e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3c7299-c885-47f6-956f-123fa82cc434"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43054890-5985-4593-a584-88b1ddce425e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ca8a720-1521-4838-832b-33f4f0bb196a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d21404db-97ce-48d3-b6ff-23b9ada55633",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f690194a-a716-46b1-ad9a-6f581deb10d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "024138dd-2eda-4c0d-bb8b-3c76de7f8ff0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "884d1d8d-1564-4bc6-841c-14b80f1fa17a"
            }
          }
        ]
      },
      {
        "id": "0fce0633-054e-43aa-bbe0-cf4eaf9896a8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6905e1e6-b586-4b87-85cc-90cb58754ab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d83eef8b-4652-43a9-a92f-7cf5092c0dc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "937615c2-9712-4397-9780-390fda29549b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64a075e-2fd8-4afd-aa4a-e4cf34c47e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f261c308-a66b-463a-9c92-58b82c7c9779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790fe284-8feb-4abb-b03d-198d51c8706d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89836f31-9c36-4060-ad6a-508705a48fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8762ff82-6859-4420-86b5-80fe6cb6c145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb5153e-2f8a-4ac7-95c1-528082771821",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe55440-3791-484d-9d7f-c84945a250f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd93d27-07ab-4397-98cb-9cf41a62209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887a8bf7-9142-4b94-a6ab-8ef8724075cf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4338399e-41c7-48b6-aa45-824965fab92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e415791-c2cd-40c5-bea0-885e15040209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0e3a37-ab72-49ec-9adf-8e2b8aa69808",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac70bb2-3587-403b-b924-96732ba85d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a400158b-a532-4d09-88fb-9d6e1c533a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7876d-9ac7-420b-a4aa-5b2b75ffa8b3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad1b2d-803a-4c42-938a-7dabb9962159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5168296c-d695-44fd-a6d2-e5cd83a2dae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b3f450-b1b5-4b33-b2e8-bde385c78bbd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f186c6-1743-4329-bbf7-624b43bccc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111fe8d4-a6a9-432c-82ba-52bc06329965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa378f-1586-4ffe-8f04-6d9c1ed848b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4eb51a-6ca1-4fe4-8bd3-ce5716beb8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ad578e-b7cf-4b45-853a-e72fe847b5b3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f832169-31e9-49e8-8dfb-903357396739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737c51bc-2f1a-4642-bfa3-e7b0e2b59500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb8c70-7ac9-4abe-9baf-30c989d7d0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c54cba-a276-4e81-a4d3-18220a5c972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99edd811-2c45-4827-876f-0615d27c2595",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb401e4-61cd-45a5-b298-05bba3488e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8de336-6b51-4f2f-bfad-3689d20207df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d31580-b7d2-45bd-b436-46ffcfeadc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ea189e-b9b6-4738-8a6a-f9a8bd70e89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543fc69d-de30-4678-9ba7-3c06c75c66c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feac9b1-0b4c-4b69-890a-7579066d2167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a73a35d-8efb-4abe-868c-79f342b2832c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e229a5-6828-4996-ac95-73d4f368cd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54989b08-7472-47ba-8deb-2d93afec2dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdcb28f-2acb-4e07-8f7e-8b0c4e2cba14",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b2457-aaaf-434d-80f4-e7005c926fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2735d30e-0a14-47dc-88cb-37c0df3cbf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5baeea1-767e-465a-be88-d728efc19486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caa67b8-ca02-415f-aa2a-d1a32e546c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fb866-003b-47d7-8de2-d466f49e8423",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc1f48b-1b70-4850-a3e1-1eec2df100e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cace49-5cfa-4444-9781-152bcb44e66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720450ec-9028-4205-ab2f-dd621d52a5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c858993-14c9-48b7-a240-93a10480d3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd89e1-90e1-4a67-b7ca-9254982a3e71",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad6792-28bd-49fb-8cd9-deb9aabab34d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e87f1a8-8d3a-4097-b893-37f9679b3452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61b71a4-d963-49c1-8b5b-73de5ddabdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca09250-58cf-4875-9eb3-5467d1df5ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdc675f-1d86-4a52-8876-1336b638d743",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc946ebc-e282-446c-b8c6-3b8e27a7b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a11c323-a3c1-4a08-b07a-31d9c1940353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fa873c-b61e-4dab-a4e7-a1bbd589d77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4dc024-f7ef-490f-9718-a09796918a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65b65d-cbbd-4081-b226-c0522e4de3af",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab906187-1ecb-4ab7-a187-060cc41f51c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39d8e52-5738-43e9-831e-3138b1f2307a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d79f3a-7ebb-4f23-b3c0-46aad1addb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06de6f79-4faf-4c40-8a88-bfb9351c14d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bec0fe-f9a0-47ed-810e-74a7225d06c3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010edc4c-e7ec-4f3c-b799-df10e0a01075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c71647a-8e8b-4830-8ffa-b47a3621e0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a231837-869b-4f47-8413-3bdea9b49c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6f4aaa-7c24-473e-ae77-60ecd77e8033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f4dc44-e350-4bd3-9656-f4c9544d2154",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5fbda-060d-4e75-b939-c5071748183d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94cc12d-e4b5-464c-8925-68fa81a997c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511d686-8a2a-4c3d-a38f-12146db15ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5cd09d-9037-48e5-be71-016087ae82b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107307d5-58bc-4671-8976-b34ef7a4685a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f691bb97-e95c-4bdb-8320-d3d06a60bb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310ff7e6-da58-467e-94d9-1a0e437b5804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa735bb3-985c-42b1-a685-36aa09adaa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a65615-1f78-46fd-afa3-63c64d0bf8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b7fa5-f62f-41f9-94d6-93591742c180",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1357bdbe-eb58-440e-ba6c-4b281b33af74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be886140-b1e3-4248-9e05-12aa7a45da46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9647795e-5c5f-4c34-83a4-4aac7f649373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c9611a-3425-474e-be21-97c141ebe522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd46e39-b63c-4507-bf9a-74b5e380d002",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67337f8-9b60-4b72-9c17-b9937cf2a3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b31816-6018-4080-84ed-3a2f4c923867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9558e82-f012-4cb1-be8e-154fcae29ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6623cbd7-4ebb-4f95-82b5-499bff5a4f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef9888d-c12c-4b6c-aeef-1a659f69d3f7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a72506d-d9b2-4665-9889-8b53ece129cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aece311-9a40-4dd5-8f26-329bd70c0de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2468a3-3d35-452b-97e9-abc8e17cadc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cc879f-eb3e-4c5b-b978-572c02b2661e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d1485-f48f-4088-9122-de61481b8615",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68c7fab-0f27-4f0c-a949-eab1da2e9c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bc7e70-7c08-4685-9662-43b996273db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b348e73-1e2e-4352-bcfa-34d8afc61270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657e54d3-468b-4455-a37f-a681abb2fb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936bd0bf-72e4-4f5a-81aa-0d6ebb2d0bfb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3029cfe-f6e0-475c-9bf0-96357f8351f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d42575-ceae-40c9-9c6f-6b6e51af74c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed6423-e261-40b9-8da2-e70a4356d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74e095f-cefd-4b70-8179-4570717305e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9ff0f6-bd16-4cb1-82a7-f5abc2c9eb30",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b0a7a-533a-4648-b502-6d377cd0cbf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0932f621-c42d-477f-a4a7-1361df303b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23b1c82-77d3-4744-84bc-52b6e1640a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ce4f0b-df22-482f-aab8-f21cc7ccdb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4fca3-a8ef-4f67-b460-0c56e942c96e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1049f936-228f-4883-99d8-db75240f80e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20be7b76-931b-40d1-b4f3-ee807eff1665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ef501-004d-46df-9a91-2615ac069625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c40b5b-64dd-4dc5-b90f-8b8d21be41cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e101a89d-83ef-4026-a9ff-a1b4b873fb67",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86461c71-24a3-4519-8b07-dc8ffc8ad37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1770c33c-efc8-4d8c-8184-0f6cfac5fc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa3bfd1-4161-4d08-8dc7-df634d5203b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed39456-fb67-4e09-860d-a7a8f655f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d329c95c-c631-474d-a98f-63055c0a6820",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab9a2e-d1f2-4f03-8b7c-ec4a6c642f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f642f69e-dace-442e-88ad-fb4b24359284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f84ce-1d7a-4569-a75d-e2ae8e6f87bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2794e30f-91a8-462b-9533-f01410afda4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824f8402-ed39-47cf-b653-f5cb79107fa0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e592b9b-dea5-4004-8ca1-e8c487bb4569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345d84fb-aac2-4bd2-96d6-aa4ef6350829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f2bb2-1e51-4f13-a1e9-43e48434d1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4a685c-c005-4b7b-8a7f-1f1fc3a582f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5109326e-5fed-471a-8b08-02eab5dee2f7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f9004d-a1dc-4ae3-bf67-ffe87cdb61f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3bea12-aad5-41c1-8f23-3c954ee7c066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757cdd7a-623f-4850-9cd3-665916fb29cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbae3f7e-c7fd-4a2f-a4c0-6d88284409bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24494cca-b068-4e36-9171-ee5aebc2e663",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25426949-165e-4b53-b79f-1cb69c7b11e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95c1d5d-7c3e-4d58-b661-379daebc08f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4734ce8c-17c7-475c-92df-ba8595ba496b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908c95bc-0299-458c-b514-31f4069c3a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d054b8-ec25-4f10-a10c-0d6955cb3ff4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe7d3cd-fc45-49d3-aee1-4b308c59fdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f868a79-b57d-42bf-b0d4-d194e84cb0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd85d9b-26ba-49bf-8243-cfec5bdff16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a23b427-aceb-421e-a0f4-1a059e62ba45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f9227-0ea8-4560-95db-f688424193b9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2533f978-831c-4c73-9e59-4cc9f02f9764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdff1d1-d7fc-4457-85ad-f4fe655b31c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b276eb43-8766-4e22-bdc8-33105838dfdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b29b8f-e396-486b-b441-3ca4159b8ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd25b64-32d7-4b4e-9de2-e0007d369d85",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a195a5-f80d-4883-9541-c83409bc1778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e05d5e-7c72-4f10-8e3c-0dd8efefb2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9f794d-069a-45e4-9fce-39d31fec0d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38177671-df89-4581-b975-f9b4402b597d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f475a3-a268-4885-b072-a55e8928d797",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3378b959-1a11-4854-b474-19cb04b2dd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a3c30b-3911-4b67-95aa-2ca74db2ef85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd3864b-4d4f-4b17-b775-25d0a417a208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ee0f3d-5d97-42f4-a278-48a4335db244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6716213d-add4-449c-a40e-9a788ac0a563",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a511cce8-5766-4823-b0e3-636bae1a4080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafd75de-695e-4174-9d56-6fad42079f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19ab33-f62c-4d94-bda4-493a2c684554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c3cff6-6aa2-45c3-bdf0-25c7692e9590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42892c9f-8953-47c8-b8ef-311a6d422a5c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2264bf8-72a1-448b-bc80-2a0280aa2fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4f2401-a98b-4867-b735-f34ee6710c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7023b52-fd24-4493-824e-679392e00737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6009fc4b-dc5d-4667-b55b-b25e5b9bcc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497b5644-c707-42b1-93c6-1ebeaffd86a2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc20f6d-46d5-43e3-a6ed-75add1032285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bc13db-595f-4548-b8f9-acff98b7a9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d15a247-e8e4-4e30-8289-37c18423682f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776928d5-f8b2-4c62-82ee-08dce7421a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72a22b-3467-4fc6-bf44-3cb31941e335",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0f8bee-e17f-4bff-b313-b1c2a6578151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8574f20a-040f-41da-a7d8-c9588cfdb4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d367674b-06fc-4087-a5fb-d11e55b8b15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac27422-438c-4d4f-bfa5-5ddc1a030656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72cce0f-92a0-4a56-9b75-6850e03d5d35",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e2071b-9145-4942-8472-0b8517987af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5f4a2e-6fdc-4b06-a1dc-bd0141ac6e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa033e1-e515-4675-9fb0-70f6d1084ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e405e842-c412-458c-ac7f-07f27dc19401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c9fec9-bbfb-4b98-905f-9ced2ed5d2cf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb4f863-077e-4ada-bc60-0fe8091f5a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5699c4-28be-43d7-8965-dfe2961ff32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d3d853-01cb-4ffd-b9d6-0982b435258c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f26ce4-cf59-429e-b096-d3de93b3c3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a729fff6-88cf-47d6-916b-ad6b049e3022",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0425c786-e980-4021-a474-dac0fbd22229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ffcd41-545b-4fae-b7c6-cd2a00e30510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59859b70-f3bc-48eb-a06a-a7835a1d3201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa7b38b-8428-4251-b901-6228a9245357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac61bdc-0cd0-4e4e-86e0-f6d014113197",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f6829-ba84-4e81-8f98-86c59c8fb72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478339b6-8928-4224-b774-901b28da4d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e565d-eb60-49bc-996c-67df2b1fce29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3955cb6f-d707-4e9d-bd4e-16fb29ab1ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d4e872-5397-4d57-82d4-187d17789fcf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a680adf9-2a98-472d-9419-69f7fce2d525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cdc89f-66fd-43de-9e54-4a47e7e19332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff41f01-50df-4ead-9392-5083804132ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571e2fb0-22af-4be2-bf14-18e9a56ef4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fedff42-219e-4aa8-9de4-c24f4adef913",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8974da38-f07a-44de-bdab-32fccf4312e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1547da0-929e-4fe6-a8ac-6652d0e2083d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16edd8d0-5b67-4ecd-b3a4-d00461ae09b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8797b1c6-1b3c-482c-89bc-171dc805e3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c2859e-772e-4907-9fc0-c56f5b375717",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bb8322-9819-479c-a134-b7b012c812e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78618da-26f4-4622-996e-d3c81d65ba32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a149f38-2b66-4e49-92d9-2274a73c0634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd053b8-4b90-48c3-aca2-dfb75a81f0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406273d8-9519-4f47-974a-7a791141fc1b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6296ef0-9949-4b2a-ad36-7c2fe2bcf4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59718b7-4b4a-455f-813e-1b5ff46a4950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c7c5eb-73d5-4a5f-90d5-2b4a77793f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f94187-5255-4d5f-a32c-b6852bcf5cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb91d1-26e4-4b91-8dea-625afcb3494b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d426da-5348-4d59-9e6d-4e568523aae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bf0193-c34b-4090-b499-c26bf4540025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1149a15-ab60-46ad-8a0c-a0447aa4e2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced409c8-d458-41a0-a6de-a396306293c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ecde3d-5788-45ca-a985-a44892ee1f7f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dd1924-dd32-438c-8213-394efe8f169a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab5c9f7-d4a9-49b0-9b2f-beec09242072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4bc55b-109d-4455-bbd2-6dccdf402156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b17a67-158a-4a4a-821b-fb9b171441f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0baeab1-ece0-407a-a423-1492e2cbdd5b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bdd270-cb12-4a4d-ac90-2639e839666f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181b9947-e76d-4d38-9518-79cde5c3dffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6c6272-3ceb-43e7-9857-1d232922982c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87b3fb6-852e-49c3-acf8-94bc7d6be45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8162a5f9-810c-4f23-aca6-0cf8c00f0771",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b35435-3d8c-4fc9-a193-c9cc361dcba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d90a2df-c4ec-4fa4-8aa7-5062f0f44d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15ffcc4-a601-4b3f-81d2-3f91167cd101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7446fde7-b8eb-4624-b53b-2f85aa41987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd50863-8c38-4407-b3f0-ad9882a59e3a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ad65d-935e-4866-999c-c57f07cc51ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e6e53b-9212-4a90-8306-a3d76aac4185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43678700-f489-4086-b7df-f04d74f4e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87526c53-9556-48a2-bb6a-bc75d950e56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103d8386-dd41-44b0-8be5-18392a1fd900",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cfcfd3-e9f9-44ab-8ec6-9839a63f5071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6bf809-3d6b-4b71-8ef1-00bee687d38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f837715-7578-426a-a9d8-1a7b2a5e128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff59094-cfc5-413a-a03a-47930246c7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fdc271-1ad4-4983-9182-4193bb908118",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181989da-193c-4725-9760-75e2ea9de023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4c1687-9d50-4e05-be78-3fa5f8c6a240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07caefe-e382-454b-9c3c-07b69274ecbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fc0aa6-292b-49da-8c9d-fe1deeab763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75703f1-ac87-4ad3-97d3-12239432041a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c5cb65-8c49-497b-9117-dcd411016c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a19de99-2c8a-4816-9d7a-f1c54a2e1524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f1ee8-5ca6-4018-9599-8049ecb8f22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c78a93-ad7f-40d0-9bd6-b4ad9e67ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97a1e7d-e8c5-4a33-bbb8-62141d771032",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2758434-fa51-4eed-b6d5-6b1177805e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ad59a-2827-4db5-98d0-3c9b42926bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0b75fb-cbe7-44cd-aab0-799b301fa5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae2bfab-9481-4289-b988-f49480ebe268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64072e14-f217-4516-9d46-eca85c28abe1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baf53db-cfb8-4362-aca3-14a056059c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2229a448-282f-4e90-8d90-0eec14e56535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b15455-2cb6-4bfe-bb32-0dc0db210782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60c1782-6b96-428d-b051-a79ffff77eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce5f08-9041-4c95-bd05-9d1b9b719fb8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5c4ffa-6e85-40a7-a646-400b2329d685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdb5b52-4752-4d0a-a22e-fa179497a7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffb7957-996f-46a7-98f7-a13c400846b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836780a2-714f-47cb-ad95-ac6b7b52c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4421fd-6ad0-4977-ad71-ec3bedbd0c19",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afa2c40-6f08-4b3d-9f20-bf15c4a8bf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb068056-0ac9-4cab-9a86-664d54427b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85db0db3-8825-43eb-8169-0ee315a641de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85653a14-9b22-4f6b-b57d-65d7612f37f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b9593e-15cd-4223-b9df-97a000e944ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78f8d0b-ee00-41b4-82ea-6f06e03bef67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c74385f-0b2f-4473-b135-e94790aec1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12cbf68-c511-4f71-a4aa-c1d45856a8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60366e3-1629-478e-a363-82e93bb8352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d50d40-a12f-4f93-b0b9-94a2f1a52088",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c530c055-19f8-4888-ad3b-9bbd8ecef4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91672eee-cf7f-4e4d-8a0d-7398ed4a7831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4293cbd8-39ff-4e09-9450-2ecc735acb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cafd07-12a0-4ee1-9371-841b061390e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9354c79e-61d6-4c6a-affa-1d106ba889b8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d5ae35-22cb-4b70-a148-f5990cf6e048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb21e6f4-8523-41af-bed1-3d7f977cd89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d14c7e-33e2-4ac4-ac86-80895317c861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37f9879-8d91-40b8-a84b-96ab4c034cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4efaaba-28c5-4b67-bf38-183b9b65175f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee65daf1-e7cf-40c3-bd3f-dfd45fc35fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298ac4c9-f28a-490c-b281-04d89ad04aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a854aa49-cee3-4ba8-8828-6302987964ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c5532d-bdc8-415b-b830-5590cf01f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f978c6f6-64d0-4e9e-bc72-0b84f074b78e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679ba75e-a269-4a3a-86e3-b3efde7f87e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0127552-9a63-40c3-a30e-2b3e018f74f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a832ee-2ae2-4bb0-8ca4-1a466253e788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63134985-97f1-43ab-92a0-4ebaf304e50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f6e706-18e2-4b14-bc46-6d14ba2911b2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cb9c3d-2269-4c0b-8d6e-fd89ebad52bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a640dd-dabc-4435-a964-8da33098fd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f480a6-8092-4dc2-9dc5-9d5da6023f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b46803-828a-42f7-9b1c-04c8688ff7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23693ee7-0504-45c3-afbb-3109c39c0e76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de85e6ef-a312-4324-aa8d-b123695f8f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf89007-521c-4e20-a8ab-ea08731a2b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70adaea-93b7-4f20-8322-2699d152a4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3184a871-b34c-4689-b466-8da3d206e1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bd32aa-c3ba-4902-8e78-314d7e972754",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f302d-d642-4411-a957-e6004e8d87e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411ee3aa-0a90-4dc8-aae5-cdd1b457f11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db88c71-729e-41f3-b1ef-b7f0ab7e0d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef7a781-0a91-41f4-9959-e35711e86266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229c2c41-4b84-48d6-b3be-ac677c974907",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cfb795-75c3-4692-a076-1ccc4108ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d87b627-e054-412f-b804-59ff78b8bedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be3fe6-1408-4227-aba7-9b393d58fe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706f48fc-2cff-4c63-b161-43822aa63600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f773a62-0e1b-4726-99f5-77c4b38d8f08",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6aa368-a318-474b-a876-95ca5364968a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac8b787-08d0-443d-8deb-0369f9415085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9abaa04-9bc1-4a95-be1c-0c6933d82ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a015b018-1d13-4cf0-b8f5-6b495cc032fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24f38c3-723e-469d-aa51-c90658719fe9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945fccb4-81e4-483e-8781-bd11c7e30f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ed5dcc-e5b9-4617-8d46-846c97baaa85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1670c756-23a7-42c1-accf-fbf69daa1ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3c446e-d6df-4bb7-bfbf-9abec3e0637f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee41309a-b964-45a6-8ad2-d45e5b1da728",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df66f9e-4187-4e40-93b0-06a9f30676b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c92884b-3831-46ea-ab0c-e228eb4438af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4c08a8-a295-47e6-8835-e72028446158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadb5a50-b524-43c3-9a2e-e83ab29833fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be99e096-ab5b-4212-8cae-62037642c12b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e58f55-1c75-48be-a906-00dbcf0025dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b06490-348f-471c-a2c6-3af9c3d0f32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78005969-6543-46e2-9b80-67ea0d178d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d1d08f-9b9c-41f0-bdc3-14d2c478b755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4824c8-e70c-493f-8178-bafd590cdc7a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfef43ff-8653-472b-82c0-df15313135ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eda185f-28da-4942-aee1-e41a54a0f6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853763b3-f546-452b-beef-dc4c34194c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc860a32-5ea7-40eb-8b55-620bc586fcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a304760-60d7-4cd3-9e16-60875f19935c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29d2c84-f197-4374-8b7b-5fbbeda9f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a03f6a4-1bfb-4c66-a370-4ab720d3aaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef613f6-1bca-4ba5-b74b-2eb9a323c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce469d2-d24b-4423-bbca-90c95b5653e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75459047-61dc-4cf6-befe-0c6dd33dcb55",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8daca7-5ee4-47e9-8ea8-5b38dc5d07f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed51c49-bddd-4e58-ba04-4887230bed1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1204c1-8a8d-4252-b2aa-7ecea65a9767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c362df-0d5b-4495-b6f6-6fca5671956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92619690-b6d0-4971-afa5-99de9401c214",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc61b2bd-8530-448f-b682-fc0e60f4c943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3335542-ed62-4a6e-9b9e-994b4d79c042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d13cc-0ef4-4054-9d45-460e8b1e41b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e72243-f606-445d-8b66-c0c845aff7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6042e009-b29b-4cc3-a106-8830944ab576",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393fd50c-e589-4f1a-ad6b-46eb131beff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb1b823-81a8-48fa-bbaf-6bc646d03935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5445a1-8f0c-49a3-98a4-438dbe6450d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eee55b8-c9f8-4f5d-9034-441a7f202fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516bf94e-f33e-4814-b552-c919a07e2817",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3517de6-5b06-494f-abf9-1b083fe8d964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b941ef9-5a4e-404b-a42b-124233a799c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cc2471-220f-44dc-ad46-5e4583380b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88afad2-b2d2-48c8-92db-e5f4b100f785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e9ee9-5b05-44ad-8d05-33eda24afb4c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea782c86-4ba7-498c-88ed-da6b099c2055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566d2a0a-adcd-40e5-af4c-2ea001a1f9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c4b27a-b20f-4509-b86f-3f3a6c1e0e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89395bb1-12dd-44a2-a063-8146dd0e0010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c734ca-2c9f-490d-ad96-7257d560b298",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29da844-2f1f-470d-b3a0-582244de9e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f2852d-8c96-4621-b736-1c6746692c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89c785-3fdf-4c37-9005-9ad646336273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7864f2-593a-428a-820d-13cf0e34fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715c2465-d624-4f36-acfa-9edee828ee84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdbfe56-7171-4698-9a3a-a1a02cca06ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf19b3e-4a36-4dcf-9849-44f432a97ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d52f33a-bf63-4b91-9a62-bfa9ff6c354e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba91247-64eb-48f5-9740-b9d258fa9dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1f4ac2-5a54-47bb-9ae1-01d816449655",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa50562-d973-4103-a915-550844e91c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e1cb3a-f633-4155-97be-35a41bef9ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b8cefd-35cf-4085-8d64-c1f12bea61fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c48b55-73cb-4a7e-953e-a95aeda6367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83e895e-ec27-4bb8-a024-eb2114945b3a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac421f0-9a4a-416d-a533-20b49346477a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be381a6-6af6-4503-90a3-34d1983270ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286b2b2-8988-4252-8430-fc276a248178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189c1df6-d34e-4d67-a02b-08117bea1219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e8d46d-0871-46e7-9eea-9350efcb4f6f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a4a767-4bc5-4d04-8098-93b5623e6c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa76320-c756-4915-90ce-803f4bff6697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0238e301-fef1-4f7f-b195-168e1cf6ff0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c648b69-f99c-4796-b9d5-7da8aa6d9f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423297b6-c0c7-4aea-9d3e-874b0fd918ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece756a0-c2aa-4585-8836-22539add5103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a56bccc5-84b6-4c6c-a0f5-9395cb9c0b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4766c9a7-faf2-49fa-9d19-6b637aae5152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d878cb-8d41-4f2d-ac21-e5847eac69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bb20c7-e884-43fa-bb56-716a8f9c793a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58731c-d6ba-49bc-b6cc-b1ec94e03aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f4435a3-a8ff-4f56-a4ea-b9a1df3134f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1949b2d-5216-4e7c-ba83-ae49e86f2721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d335f3e5-edcf-4254-a392-966f800b8a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23d20bc-1cec-49a0-a26e-70d75b6336bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67e011-6251-4cf5-9d63-8be8f3f9bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d2d138-a0ce-4b00-99d4-7c7346b0c5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4b22ae-4615-4427-aebc-b461b762de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7749b7f2-aa0c-43bc-917c-b76080521a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35de4321-0f5d-48ec-8e10-11961747f08a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affeee3d-76d0-4d70-bc8f-d2d56e5046db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d1707e-7a1e-4958-8f09-b023920c2fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea87966-ca70-4931-b710-8a9ecb840f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4ed116-2071-4898-8214-2c007287d51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a216486-22e0-4e7e-b5f6-850d5b42ee18",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f20db28-7cae-41d6-afe3-9e7d2b4471c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cead646-1157-4c9c-93f0-a52667903ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20748bb5-16eb-4d39-98e2-7d6c65e0aa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f3b79f-afac-4b9c-a6f6-7284a81b527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc047c9-c0a0-44b8-adb4-b1581143eac7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef63a2a-8dd5-4731-888e-3de99a808900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573e5e9a-425f-48d4-82d9-2dc7e172c541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843cdd32-716d-4a06-b273-f2b77b56e645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925d18b2-0d05-4cf4-9655-a096d2babf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1d8dd2-9487-42f3-86ee-e93f8ac54164",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af75f38-17a8-4522-8ae0-262b60965776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7de472-1dd4-498c-98ca-ac213fa20a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d305237-7a38-4687-b4c2-e686170eecd3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c18555-2cb7-49db-b498-93deaca8e4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a2489e-0b40-4690-b0d6-c47eb84b753e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626b2e74-8539-459b-9f57-d36ede65ebc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202c0540-9f04-44fe-b339-eea5068d276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf399f24-cadc-4b7c-a0b8-1fa0c29324f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f32560d-16f9-4c8c-a5be-91e5b2b2479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325c58d1-0453-448c-a0e3-61e04e162e33",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b52301-ed42-455f-9839-56874869d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38456718-793d-4c5c-8f72-cd92168bef46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c980aa7-ecb1-4906-9401-7b42083b8d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678f5cbc-c8d2-48cd-b3ef-a674cc866feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb9cf72-13cb-454d-994d-49b9ba20e241",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e49568-23bd-487d-a664-7a3fb14b61f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21be7c5-dee7-4316-ae7f-af685895d005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128a2fa-cb28-4964-a325-53c0e8b456e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1238de3-c12c-4ed6-acac-630fa2a6bd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34789338-a045-4e0f-a12d-fba240926c27",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bcf2c9-4dd6-491f-9715-b1d2a332da6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc16c5e8-6f93-4664-adcb-7c2deab18493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd2544-c7ee-42ee-bdbc-ab223435e8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8a0882-6ec1-4ae7-ad1c-13b6ccbde06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5958b-df07-4573-b834-fe1645f7463c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c143ebd3-d98b-41f1-9bfa-77717be6d3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa03c9f-0449-42b4-a5b9-756f5c5e0dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d095f12-6e7e-4b04-983a-d40df9137396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeffe80-47b2-4d70-a5a5-8cc9972522fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016e862c-b486-40fd-ab08-ea3b6ee34367",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982dfaa-ea5b-46b7-b49d-2bb63ca2e85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf5dbe2-e3ed-4f3a-ba83-af4f47e869b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e11311-7353-4261-866a-e290dfefe9d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c36dd14-ca14-43b8-a990-81336f4b9ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c84bcf-dc6a-469d-9d42-1ba3274dec76",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4377c79-befb-4418-bdd6-5dbb68059043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6f8381-5bab-436d-8ea5-d9757d6cec00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dfa474-40e6-43b0-aad7-ad99da4aa121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad8e54-fff4-4c2d-b891-c543bc0990b0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfcdf144-6c79-4b07-a722-bfd33afae2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56f914b0-3855-4f1e-b590-f301e23be096"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54b1312d-efd7-4626-a734-e815578e6f3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3129a43b-51d4-4036-849a-6dd8ce7ddf2a"
                    }
                  }
                ]
              },
              {
                "id": "a8b1c2fc-b350-4bfe-af7b-d8cb2cbe5246",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e26671a-01fe-4e2a-84a6-f4af7357924c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e07b692-f007-4c4e-bb84-8e32c34c126d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "002266d3-9f4b-4fae-940b-1f049d8f10c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6ff2be-c6a6-4b9f-a540-06cc95e6fae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f371fc40-4b8b-4fbb-81c5-007de1af7ce3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17516206-a76e-4a79-a3ae-22729d653e63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9973610e-1ba6-4e4c-a910-1bac71b2541a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a81e41ed-ef59-4297-953e-e7be920addfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef0f9f9-524f-4144-8061-536a5067237b"
                    }
                  }
                ]
              },
              {
                "id": "7b79a53a-a963-4a2e-bff2-1477b6c7c88e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a28825d7-853e-4a75-b8d9-b28cda36416d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeee5b13-9d31-4018-b985-03bc7a39150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b7268a0-f40f-4b3a-8a00-8dbb2fc9fcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6009397d-50a6-4f45-b811-5a868d2622bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9d2c40-0d0f-4740-9ad5-61ad998fbd6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d68ebd34-f796-4708-8f56-a44bb6ba96e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d17aa87-e0d6-4c6a-8854-de966bfae01a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00bb42a1-cde7-455b-bbbd-70d6f86647b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "496e047b-724c-4f29-945b-054b6889ded1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b061299c-5771-4849-9046-ea9a31e93868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfbe70e6-8b74-4fd9-bf18-ac04c4c98987"
                    }
                  }
                ]
              },
              {
                "id": "5d98be02-1cb3-45e9-93ab-4cb3e52910b1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe067317-bcca-4604-9bcd-dabfc363555c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93cd1765-a947-49bb-965f-7d509b015865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "988e6572-b310-4959-b252-5fcbfb71f658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52fa020f-184c-4fea-831b-d67333137290"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "335db9cf-b337-4eac-9650-70fe15f5ed3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "29a327ff-83fe-4f7f-8f48-0e9233eda948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90a82d4e-f5ee-4db5-a570-b8e638982c65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebaddb8b-218e-4838-88b3-0e7f15cd7852"
            }
          }
        ]
      },
      {
        "id": "c058aaad-fd95-46d6-bfec-a083b8fe5262",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d45bdd66-a2ee-4b28-a9c1-dd7e0bde690c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74049601-b326-4777-9d2d-8ea0eb3f2b88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9208f00f-fddb-455b-9618-14d5692b17bd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73760e1c-c0b5-454e-8965-842f0369a489",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6d65893e-aeaf-4c54-9e82-1f7b0744e456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27da76ca-2347-43b1-bd89-ed501efff864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d738c8b6-1a81-46cf-91cd-3275040df713"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f860aeba-453b-4c9b-85ab-c03a53e97a3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc4d267d-c39c-4a48-a877-641361d6c9db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec376dc-6e19-4bb1-bd92-a3c3c11bee58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13237d1b-29ec-487a-b165-a707eb25ca6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d362adc7-409c-45eb-88e3-0d70803ed51a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e26a2471-da85-4818-a479-c83faa3b274f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4a6eaa-ef35-4cc3-84f4-df3c115ae74a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aee86513-f168-4635-83a3-4aebf89eb91e"
            }
          }
        ]
      },
      {
        "id": "3ee6ee08-711e-41b2-bc77-cf1bb6909fbd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4eae29d7-a5d4-43c4-9b87-3cafe5499ccd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecf2c5e5-42c4-4b1f-845c-298ecef9bfd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eea76cd6-9da5-4017-aa7d-fbbee5b09582",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652b41bd-bf4b-4b8f-aeeb-f79429c0bffe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afc331eb-7d8b-461b-be40-c39084a4699b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3057a6ce-1251-429f-bd59-e053d906b213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28047c59-25e2-4d46-b800-2ff4cb5a054f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6175da03-dcc3-4833-8a64-47576523d6b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ad7dc4-7f1e-4d72-9a9a-dfe3ed281cf0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4cedcc-76a4-42c6-a4bf-1d24d33969fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e83943-cae1-4f29-861e-4f73677c8c2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c37ee4c1-e7cc-455b-8679-d6fcec8f65d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea639240-4d94-4825-88f7-d23db84ae515"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05b8c63f-b419-4936-8987-312ff434d582",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa2f4fa-a9da-4d66-8aab-749d21dd5973"
            }
          }
        ]
      },
      {
        "id": "32c08c38-2a08-4429-a3a5-4191400e93a2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0e0a2870-67f1-4a15-b507-3f47c2e62546",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2a19451-0ccd-41a2-b652-053179924887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcfe5662-0b00-4e7f-8da9-52b5576fd8af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bccd08-0baf-4593-9a9e-558d5f15b06a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe694a9-4b23-4d74-af20-b9fb017737b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d196442d-8e34-4401-a782-83bade602bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d2c94f9-2685-408a-b018-478f6898cd49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd5b15a3-b300-4e41-b2d9-c66566373cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b1f78b-8ae5-417d-8c32-84a97491f6b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8f32b40-9b4e-4bc7-a27c-11b5abc8906f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aaa4c8a-6a00-443f-a1e6-1b3787526370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "643921cf-0f4b-45a8-9eab-8390306e25c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b77f5bc-143f-4882-8c05-ad802a7d05ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ab52727-6f33-48ac-8d52-3274d62495f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dbfb17a-6c7c-45df-82eb-de1310337f26"
            }
          }
        ]
      },
      {
        "id": "34e579cf-b97d-4669-a105-96f90f356f92",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa1b2cfc-7074-40c9-b55b-149957abd82b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "569b7e5c-6038-4124-878f-a81f794a2502",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e5866ebb-a86b-4829-9f19-3d25b0fde9ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43b6e0cb-5fdc-4b04-9a60-906cef23cb89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd86e315-d703-49ad-99b7-5ea730bea012",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 153.64912280701753,
      "responseMin": 4,
      "responseMax": 14397,
      "responseSd": 887.0427172060841,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705624614971,
      "completed": 1705624667695
    },
    "executions": [
      {
        "id": "e816d9f9-65d3-4dc6-bc97-07924d13713a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b8cfb825-1631-4c3e-92c7-e7eed5ad400e",
          "httpRequestId": "5ab67423-c98f-4865-8794-67003cbe4997"
        },
        "item": {
          "id": "e816d9f9-65d3-4dc6-bc97-07924d13713a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "98416d8b-1cf7-4f5b-bcca-7d8d7a05ddb2",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "fe3fed70-5334-4220-806f-56d210200d1f",
        "cursor": {
          "ref": "d1442c5f-d53b-4ffb-a45a-962622131ba6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4499c859-2763-4ea3-a0f1-f6498afbc3ba"
        },
        "item": {
          "id": "fe3fed70-5334-4220-806f-56d210200d1f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dde86927-84d5-41cc-8b81-296362fa53fa",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 0
        }
      },
      {
        "id": "75ee8e53-f0a2-432b-932e-d42dc1d7a84d",
        "cursor": {
          "ref": "8316681c-12f2-4dce-a208-e634f52b7df3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b0128697-fc23-48e0-891a-0da6714097c4"
        },
        "item": {
          "id": "75ee8e53-f0a2-432b-932e-d42dc1d7a84d",
          "name": "did_json"
        },
        "response": {
          "id": "b8703286-571d-49c9-8363-9d0bac8b8153",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1aaf33-2e82-4dda-8dee-3560a0b74635",
        "cursor": {
          "ref": "7d320c77-bc84-4a87-9dee-5ced11f2f3b0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b557e05c-c80b-46f7-b466-38d9ec04df95"
        },
        "item": {
          "id": "0d1aaf33-2e82-4dda-8dee-3560a0b74635",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a837e9c-1c31-4fdc-a351-2c09e3ca577f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 517,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1aaf33-2e82-4dda-8dee-3560a0b74635",
        "cursor": {
          "ref": "7d320c77-bc84-4a87-9dee-5ced11f2f3b0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b557e05c-c80b-46f7-b466-38d9ec04df95"
        },
        "item": {
          "id": "0d1aaf33-2e82-4dda-8dee-3560a0b74635",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a837e9c-1c31-4fdc-a351-2c09e3ca577f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 517,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f55685-fe66-4452-a494-0e27a46d270e",
        "cursor": {
          "ref": "2dff0aba-1fe0-4001-a240-606eb2220544",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "687d7681-a58f-4d0d-83bf-adab852e98d1"
        },
        "item": {
          "id": "20f55685-fe66-4452-a494-0e27a46d270e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0713b66d-e660-45b8-ac07-7f23d897a7f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe9a1ec-c980-4c96-90ca-512d52ded15e",
        "cursor": {
          "ref": "34218905-d80d-4c75-a77c-2016c9e91683",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6ffbada3-3e82-4a74-850f-07694424cc8c"
        },
        "item": {
          "id": "bbe9a1ec-c980-4c96-90ca-512d52ded15e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "57715853-bac7-4a61-8c4e-64c4c57a3107",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b31d8e-9bd7-43fa-b83a-1f9e5f2bd17b",
        "cursor": {
          "ref": "4b023703-7ebc-499b-a624-c449516bada5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c1b5be24-74a0-492b-bdbd-5a56612ce7c5"
        },
        "item": {
          "id": "53b31d8e-9bd7-43fa-b83a-1f9e5f2bd17b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "514f00af-99b7-4f32-b520-1be55b4595e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce250ea-331a-4980-843a-2463ba5ab996",
        "cursor": {
          "ref": "8899fccf-e494-461e-b418-22b0a6f20eb4",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b7731b1-bdd9-43dd-8c1c-2c879d99d108"
        },
        "item": {
          "id": "fce250ea-331a-4980-843a-2463ba5ab996",
          "name": "identifiers"
        },
        "response": {
          "id": "3ef839ff-57f0-42cf-930c-e868e2add858",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcc2b96-636c-4917-b883-5a745cd03823",
        "cursor": {
          "ref": "57d27cd1-e3c1-4862-85f4-2499b8513b2a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6313744b-3c19-4f66-a1a8-17bc38e838a0"
        },
        "item": {
          "id": "2dcc2b96-636c-4917-b883-5a745cd03823",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "664d6b97-392b-4ac3-9e45-f915f933f872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5741f46-9c75-4728-aa0d-4b8f9cd4136c",
        "cursor": {
          "ref": "ba9db99f-d190-4745-986a-e894348dfd6c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "839a49f8-72e8-4882-862a-5f39a419e6cb"
        },
        "item": {
          "id": "a5741f46-9c75-4728-aa0d-4b8f9cd4136c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3ea399eb-a47a-44f3-b6eb-4bcf0fed37ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fb9ddc-64d1-4ffc-8b19-b0f065e7bb36",
        "cursor": {
          "ref": "a5b0ca32-c5e7-4a26-948a-579a81f44d8c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60c12244-609b-4016-bee9-5c3e0941ab4d"
        },
        "item": {
          "id": "78fb9ddc-64d1-4ffc-8b19-b0f065e7bb36",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "336d0cd2-d5ed-4698-95ec-e9450280dd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fe078b-519f-4064-9530-5d0ffffe822f",
        "cursor": {
          "ref": "8b52051c-556e-4bec-bbeb-ebeac630a846",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eb8c6e62-2196-4eac-9d1f-48c80380f058"
        },
        "item": {
          "id": "19fe078b-519f-4064-9530-5d0ffffe822f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "baecb6a5-813b-4857-815b-401cd26234dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be26734-7495-4413-a2f0-feaae61e1c7b",
        "cursor": {
          "ref": "091948e1-1667-45ac-8ba4-3b92994ad1f0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d7db5ea-6062-433b-8538-96627a3c030f"
        },
        "item": {
          "id": "5be26734-7495-4413-a2f0-feaae61e1c7b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc9554fd-1dd4-4598-a742-3c487b2dc1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980f8228-f9eb-4088-a187-5dbdfc6122f8",
        "cursor": {
          "ref": "12c1ac43-3f8b-4dab-b86c-e8677d28915e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e6879709-bf92-4ef2-8863-3a8dac909f3d"
        },
        "item": {
          "id": "980f8228-f9eb-4088-a187-5dbdfc6122f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3b390186-13a0-45d0-a6a7-60be85b2ac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc53e4-b2f0-43d3-a23e-eb6a1e4c5ab6",
        "cursor": {
          "ref": "6eb4a05b-9a1e-491c-bc0e-b8ac962b7d75",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6348ca49-bdba-4d7d-a200-103433bcfb86"
        },
        "item": {
          "id": "3bfc53e4-b2f0-43d3-a23e-eb6a1e4c5ab6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a0635223-c34f-4d41-a03b-ccbede12214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3ee1f4-fad7-471f-803b-f199c5f6615b",
        "cursor": {
          "ref": "152fa32a-c807-4949-8359-8ad91abb0868",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cba371f3-d0a4-4674-8a28-229490ae1145"
        },
        "item": {
          "id": "8a3ee1f4-fad7-471f-803b-f199c5f6615b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b0affc63-cc88-498f-84ed-a8426a4125c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f030de1c-cfb1-4239-821a-213fb7710571",
        "cursor": {
          "ref": "1b36ebe3-3e95-4bed-b9dc-859b9f9bd88a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b2d2559-9450-41f6-a16f-9a06acc876f5"
        },
        "item": {
          "id": "f030de1c-cfb1-4239-821a-213fb7710571",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "be57ee74-6ef2-4e13-bcb2-57707fd269ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7075d6-9c38-44ef-a3db-72f9ea3ba78a",
        "cursor": {
          "ref": "c7934349-1df1-4825-85fd-fc3db820bcb9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bd45f064-09a5-46b5-a041-5961351628c6"
        },
        "item": {
          "id": "fe7075d6-9c38-44ef-a3db-72f9ea3ba78a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a588adf3-08e2-4732-a782-5a72a3a7b21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cad172-9aa8-4da1-aee0-6396d106850d",
        "cursor": {
          "ref": "33b640b3-6db6-466d-bcd0-ef0027584e5a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3cc4889d-0dc3-489b-b5ab-e57490d172a1"
        },
        "item": {
          "id": "90cad172-9aa8-4da1-aee0-6396d106850d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b98838ae-8838-4eb1-b805-1b100bcb6e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7563bb67-ccad-4d77-a0cc-ec2644eabed4",
        "cursor": {
          "ref": "4a3a750e-657a-4460-ace4-2f6baa1a435d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c47dde15-73c4-46f7-956c-a35c8d72f661"
        },
        "item": {
          "id": "7563bb67-ccad-4d77-a0cc-ec2644eabed4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f74ff200-66f1-449d-a5e7-24c7154fe128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179804a9-d5c1-444b-b692-2b5b0e1e358b",
        "cursor": {
          "ref": "1aba9e48-a9f0-4d1b-bb50-0f573b48b951",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4ed21ff-0b1e-4290-ac66-3e269693d235"
        },
        "item": {
          "id": "179804a9-d5c1-444b-b692-2b5b0e1e358b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e5a02717-abe4-48d3-9276-73399f3102b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c316e4-e451-404e-b3f2-f60ecb664f06",
        "cursor": {
          "ref": "7b69a700-9cfb-409c-aa49-b2d783e465ac",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2450a959-8ded-4707-821b-8b888216d144"
        },
        "item": {
          "id": "53c316e4-e451-404e-b3f2-f60ecb664f06",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8437ec15-1956-45ba-8fbe-703d8b149ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f373e1d4-7242-4851-8478-1481db3e7f98",
        "cursor": {
          "ref": "0fdfe225-32cd-4ff6-82ef-2948e29caa59",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dcbc6130-7f52-4840-849a-4ede08625487"
        },
        "item": {
          "id": "f373e1d4-7242-4851-8478-1481db3e7f98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a7b65289-764e-45bd-93c2-053bf4148a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8a8e30-9650-4f80-8941-698187d61e7b",
        "cursor": {
          "ref": "18714ce5-a9ed-413f-8c40-8cf1076df782",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "acbf84dd-3a3b-42e9-ae73-823ff69f76fb"
        },
        "item": {
          "id": "fe8a8e30-9650-4f80-8941-698187d61e7b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "13eb82e6-91cd-4447-b58e-50de395b05a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836bb375-e5b6-4c3e-bc78-32fe4b127729",
        "cursor": {
          "ref": "ac19da3f-b5a5-44bf-9b6d-600f493248ea",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8309023d-2666-4a4a-af6d-7e6bf58cf530"
        },
        "item": {
          "id": "836bb375-e5b6-4c3e-bc78-32fe4b127729",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8a857279-bcc7-4cac-a039-4e48a7fc199a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d94690-f42a-4c30-b34c-087dd2012fea",
        "cursor": {
          "ref": "dff91173-f032-4bf4-84ce-a9ac09fbc81b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cb80abad-1754-4a2e-a94e-52837bc8880f"
        },
        "item": {
          "id": "62d94690-f42a-4c30-b34c-087dd2012fea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c58b9ed-530b-4b0a-98d8-2f4ca1991966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51303fe-2160-4791-909f-e3b0c802d1cc",
        "cursor": {
          "ref": "df8ef3c7-6921-4646-a7bd-760a96b80c4d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f9c3ee6-35f4-4909-bd95-cdd82ea90601"
        },
        "item": {
          "id": "f51303fe-2160-4791-909f-e3b0c802d1cc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "961b63d6-abc4-4784-a050-a65079204a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d4145c-6b73-4507-9d2a-303b003dd12d",
        "cursor": {
          "ref": "3f6a301c-77ac-4258-9042-7848c50e9a1e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4e7b839-855a-4091-99a3-e7db5cb56571"
        },
        "item": {
          "id": "05d4145c-6b73-4507-9d2a-303b003dd12d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a21e96c6-76ec-4feb-a8a9-d59a0bdba61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f8cb4-f7e3-40d7-90f0-b199e136e5a4",
        "cursor": {
          "ref": "e213fd4b-b03f-437c-9610-a477162604bb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9ac4d1c0-12eb-4125-9e40-52ab05f66f7a"
        },
        "item": {
          "id": "382f8cb4-f7e3-40d7-90f0-b199e136e5a4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a389cceb-da4b-4037-a515-8a7b13669d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5556943-020a-4180-a350-baf0d5c827b2",
        "cursor": {
          "ref": "96fa7c32-e98f-4feb-b968-6482de353d82",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dd20be8d-d152-425c-a29c-b2a35d3f08a6"
        },
        "item": {
          "id": "b5556943-020a-4180-a350-baf0d5c827b2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "de8be605-a71e-43b9-a516-a9454387c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f4dc7d-25ac-495e-9219-d374e95cadd5",
        "cursor": {
          "ref": "d74c5aad-42d3-4644-9a00-8ee44e0d9f64",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "19380cf1-c68a-4b50-9744-7a344ff881d4"
        },
        "item": {
          "id": "12f4dc7d-25ac-495e-9219-d374e95cadd5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e00a2917-b3ba-43ca-b883-14080b79120f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6247917-ebdd-42ca-a8fc-58c149dc71f2",
        "cursor": {
          "ref": "2164b55e-6100-4c38-a330-8eb01d17de8f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "95ffb796-8f6a-4231-bc36-d38b41f10c88"
        },
        "item": {
          "id": "a6247917-ebdd-42ca-a8fc-58c149dc71f2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a74b63fe-f581-4a0d-9765-754ae6488ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0323f2-39b3-4503-abf7-d0b021c80f09",
        "cursor": {
          "ref": "fb312cf4-1836-4cfd-bfd2-d9928b9f5747",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98d9d463-ec28-42ed-9c7b-d56231bbefcc"
        },
        "item": {
          "id": "ea0323f2-39b3-4503-abf7-d0b021c80f09",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "265cbb90-8990-4cf3-97c7-416d86a35b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63e5ab-80af-4fc5-924d-9fb6d0555d4d",
        "cursor": {
          "ref": "72c933f0-d834-46d4-ba0a-b5c427beb862",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a78b7b0e-0151-4ff9-bb6d-be26c251637b"
        },
        "item": {
          "id": "6b63e5ab-80af-4fc5-924d-9fb6d0555d4d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a67a26c6-515a-471d-8f69-9bb928959798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974f262d-2139-43f6-8ffd-a11663f0582f",
        "cursor": {
          "ref": "34d9aad6-74d0-4d45-aa1b-f136d9122939",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "61a42f94-cbdd-457a-a2b9-d202f0c61919"
        },
        "item": {
          "id": "974f262d-2139-43f6-8ffd-a11663f0582f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "93d4bc18-50d9-4920-a066-6322182e69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5adaa93-0661-482d-9c65-912e71d24ce2",
        "cursor": {
          "ref": "a5a2163c-719b-4450-a3e9-7e63004e364b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49d6641f-bcf6-4f57-87bd-4940cbc903c2"
        },
        "item": {
          "id": "e5adaa93-0661-482d-9c65-912e71d24ce2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00eaa97b-6949-464a-b6e8-aed2263bd19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09899e85-e956-4c6a-8eb4-e5c8793aa782",
        "cursor": {
          "ref": "dd0abbf5-5842-4ef9-a83a-eb8a62d3e539",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1015c34b-8420-4033-a560-5399853188ba"
        },
        "item": {
          "id": "09899e85-e956-4c6a-8eb4-e5c8793aa782",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dbee3a77-ea8d-4feb-9c48-465f562a938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a774762-3e4d-4904-a023-1d328b5fb365",
        "cursor": {
          "ref": "8c2e5212-f8e5-47fb-9b36-11d32e70baf7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6042a6f7-d439-4516-9d72-b1bfe26aad14"
        },
        "item": {
          "id": "6a774762-3e4d-4904-a023-1d328b5fb365",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecd40088-e896-4b8a-bb0d-50100e2b88f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f213ee36-0bec-4809-86c9-8376f6694909",
        "cursor": {
          "ref": "68ed8e11-79e4-45d6-a7ae-63f7f72ab825",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "88547c0d-0152-4dd1-b8ce-182b0eb3cc92"
        },
        "item": {
          "id": "f213ee36-0bec-4809-86c9-8376f6694909",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2ad90282-f798-4790-8553-1befdc1736c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f86089-e0a6-4967-b5b8-b3b5d01ad111",
        "cursor": {
          "ref": "2cbc455f-c979-431e-93db-495704dee9c2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "31b92aba-41a4-4938-a92b-d883d496112b"
        },
        "item": {
          "id": "f3f86089-e0a6-4967-b5b8-b3b5d01ad111",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35285f43-645e-4973-ab9f-a12384b218f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6688f3c6-3da2-4f72-8508-5da3bf6a0531",
        "cursor": {
          "ref": "bfd2266f-8c30-4fb7-aa22-6bde0f828561",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aeab8bd7-0dd0-478a-ad4e-3824c4e420af"
        },
        "item": {
          "id": "6688f3c6-3da2-4f72-8508-5da3bf6a0531",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c7bb3def-7475-4928-8254-7d10aa8779cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724acadd-5623-4738-8c64-6fad6785b489",
        "cursor": {
          "ref": "405491a5-fb1d-4f29-b177-402b04bcaf81",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "acaf0838-6843-4adf-a129-6dc4aff1d0a3"
        },
        "item": {
          "id": "724acadd-5623-4738-8c64-6fad6785b489",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a04bde66-6b8b-487f-993b-192401aa8282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69bfc66-98da-4109-abb0-d7e8d7950e39",
        "cursor": {
          "ref": "5e7804fd-592c-4869-881a-552011126d9f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "36024033-1231-40df-a504-1d9668290bbb"
        },
        "item": {
          "id": "c69bfc66-98da-4109-abb0-d7e8d7950e39",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fd886a9c-8895-40a3-b206-b494ef710f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c771cc-86bf-42ac-9d85-58fc7b67bf4b",
        "cursor": {
          "ref": "ac03af92-8d88-4063-a550-d4997c73efae",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2af133eb-8bf6-44ef-b1bc-cec5e7e34d2b"
        },
        "item": {
          "id": "d1c771cc-86bf-42ac-9d85-58fc7b67bf4b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d8790ca1-78ff-4a02-b2d6-c8976e19eaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e5d61-527c-422f-9688-a5cf23e59db5",
        "cursor": {
          "ref": "84dd4688-6ec0-42de-8581-162e05d1afc9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "523e57d2-7f20-490a-b0c3-09aa817d99a3"
        },
        "item": {
          "id": "d10e5d61-527c-422f-9688-a5cf23e59db5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "87a9636e-0341-42b3-9772-b153d2e07fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68661f5-a4c4-4912-b0ac-34cd84fceec9",
        "cursor": {
          "ref": "edc730f1-4a7b-441d-8b88-24e3f1c26c38",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a9415ea6-da1e-455c-bbc9-a9ab5de02714"
        },
        "item": {
          "id": "f68661f5-a4c4-4912-b0ac-34cd84fceec9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7f8f8b5f-0c4c-487a-ab95-30b9a14a980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d49a25-4d37-4b84-8fb3-ee231061cda4",
        "cursor": {
          "ref": "cb93bd1d-9f19-489b-90ef-a696b80e2cec",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "06552e3d-05ca-417b-b291-907d52443f65"
        },
        "item": {
          "id": "f0d49a25-4d37-4b84-8fb3-ee231061cda4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "81c1285f-ef2b-4be2-903b-3e395e77a45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ebf49-4e18-4a49-9b47-8d0135eaa676",
        "cursor": {
          "ref": "4481f708-627f-4dee-a331-591cb703ada9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "749d5baf-e1dd-4920-975a-5a9812e25a17"
        },
        "item": {
          "id": "e04ebf49-4e18-4a49-9b47-8d0135eaa676",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7fa2864a-56da-4010-8dcc-ed27625dfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5639e441-07dc-4001-a0ac-43650cf8e1ba",
        "cursor": {
          "ref": "f580d690-7c3e-4813-a462-5f961891587f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2fd55d7b-e268-4b0d-aa2a-ff35c3ef1061"
        },
        "item": {
          "id": "5639e441-07dc-4001-a0ac-43650cf8e1ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "faac2f38-d938-44d8-8ea0-3ad70194519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a403cb41-2649-4508-a4bf-ea2981f4e3f6",
        "cursor": {
          "ref": "c149b2c2-72a9-4d7f-a963-849f6a42cbd7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d47f286a-a7cb-45ac-bd9c-096c9388c6db"
        },
        "item": {
          "id": "a403cb41-2649-4508-a4bf-ea2981f4e3f6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bf45892f-5fcb-40fe-81ed-b63fb93b663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4497462-cbfb-49d4-ba27-3a4aeee12f71",
        "cursor": {
          "ref": "1ea8727c-212c-4752-a889-25c4607b3439",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "746de59c-2f5b-445e-8410-37bdb3e3280f"
        },
        "item": {
          "id": "e4497462-cbfb-49d4-ba27-3a4aeee12f71",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "891fc56f-8f3e-4737-96cf-ad9852176afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ce7b6d-b706-4fc0-a8c7-5972f2dfa802",
        "cursor": {
          "ref": "d4106b69-92a1-4375-817f-e097d62a71b7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0b15b05-a632-4e47-a59e-09cc36a74fef"
        },
        "item": {
          "id": "08ce7b6d-b706-4fc0-a8c7-5972f2dfa802",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "316ee5a0-7af3-41e6-ab52-8f1c19cbfad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7043eae7-2c1f-4267-b32f-274f56e1a2f7",
        "cursor": {
          "ref": "eaac6c42-95a7-45f3-aa15-44e964baebc8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0312daf6-57be-424d-a480-f0d4e04ebf54"
        },
        "item": {
          "id": "7043eae7-2c1f-4267-b32f-274f56e1a2f7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b7c427b5-c26e-4ebe-b653-1c4a2fd17235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d274192-3376-48fe-a97e-7c8da8f822d9",
        "cursor": {
          "ref": "239f77a6-4b8a-4a36-acef-edabe792ce6e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6ab856da-5b9f-45b0-82e9-a310e897d148"
        },
        "item": {
          "id": "3d274192-3376-48fe-a97e-7c8da8f822d9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d01ac1e2-6869-4f43-b6f4-3d96157a1b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c0818-5267-47ed-96cb-a9990a7d207c",
        "cursor": {
          "ref": "0aed350f-54b3-4d03-b55b-13d80ba262fd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a6f18fc-0eae-452f-abb3-6746424b1e15"
        },
        "item": {
          "id": "4e0c0818-5267-47ed-96cb-a9990a7d207c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01c56d69-724e-4664-bc3b-e360b5b9d3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeecd45-d98d-467c-b7c5-f70d478d86ae",
        "cursor": {
          "ref": "91935ee4-1403-4318-b9d9-fb5b8c1dcd34",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "efacac12-e7b6-460c-a4fc-cf771984235c"
        },
        "item": {
          "id": "5eeecd45-d98d-467c-b7c5-f70d478d86ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "43928d59-2952-4447-8d79-45df8eed597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae04575-3683-4fc6-8bf3-f0761ab1a94c",
        "cursor": {
          "ref": "fdd5d769-e034-4630-9a16-f8d3f87536f7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fb91bf71-e6d9-46b4-95f9-2badb8a714a1"
        },
        "item": {
          "id": "bae04575-3683-4fc6-8bf3-f0761ab1a94c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "adbf8a60-1603-43f0-805c-d660f3f317b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97560b03-4bcd-4590-a01e-c65e71d0680d",
        "cursor": {
          "ref": "57a05511-2aaf-42d1-b56d-e7c94d875b37",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e4e349ff-658b-4c3d-9e39-c3719ad64f59"
        },
        "item": {
          "id": "97560b03-4bcd-4590-a01e-c65e71d0680d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2395efea-9c9c-4645-ad83-d72158a7f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde2af7-531c-4669-b1ec-d5ac7083e520",
        "cursor": {
          "ref": "c4d3b0f4-7e62-4cd0-9191-7a83d35902a3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "55d48b81-6376-4ee0-98d6-c497281323fe"
        },
        "item": {
          "id": "5fde2af7-531c-4669-b1ec-d5ac7083e520",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "425f7861-0f73-4424-835e-ec4f27cabde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e9b43a-e886-4783-b217-c9a932077862",
        "cursor": {
          "ref": "c080d865-a820-46ee-8dba-e13fe1aeba4b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "226431a3-b8f0-4173-b0de-48e4d54c9c53"
        },
        "item": {
          "id": "90e9b43a-e886-4783-b217-c9a932077862",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "42b28ed3-7f98-4e6b-9158-e49832d364af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8486cc-4ffd-4c3d-a171-9801b0db8705",
        "cursor": {
          "ref": "39a2bb4d-6aeb-437f-a334-076ee6555d0b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "966dc526-4081-414d-b311-1b08d0bb8c45"
        },
        "item": {
          "id": "0b8486cc-4ffd-4c3d-a171-9801b0db8705",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "85625bb5-050d-4a9c-8389-a804cfd3b542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f09429-7abe-4d21-aa95-4d5fde3286d5",
        "cursor": {
          "ref": "3a732b4a-1529-4f2e-abe3-576523a1b2b0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0bd5e5fd-f2f9-40ab-8865-40a29b6bd2d4"
        },
        "item": {
          "id": "c4f09429-7abe-4d21-aa95-4d5fde3286d5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c5c712f-9013-4201-9ef0-9c90ceeb671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36408e3b-5a72-45f2-b2ad-d4d4d49a4f34",
        "cursor": {
          "ref": "0c94c77d-895f-42fc-b660-7f0d3870a1dd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d52c1bd-ebde-4839-a4ec-2b9d9ffe3698"
        },
        "item": {
          "id": "36408e3b-5a72-45f2-b2ad-d4d4d49a4f34",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "65718a50-b083-4063-86cd-f2d4b439875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd5df92-ddc5-43e5-9bb6-25c3c309fe58",
        "cursor": {
          "ref": "4b412692-cc99-4c7f-acc1-b063c559b606",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "93a0947e-789d-4215-8ff0-1577806f6578"
        },
        "item": {
          "id": "5cd5df92-ddc5-43e5-9bb6-25c3c309fe58",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ec09338c-a738-468a-9823-a3e168ace8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c5245-6fc1-4a81-ac77-1e74ae11eda5",
        "cursor": {
          "ref": "04cb91ef-1b6c-4797-bda1-40317007f295",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7720c7b7-e07e-40b8-ba4a-93df4cae00c3"
        },
        "item": {
          "id": "262c5245-6fc1-4a81-ac77-1e74ae11eda5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7d4a3065-042a-4487-9282-358acb53aed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1ec97-2fd2-4aec-a05f-0fc593fc1ff7",
        "cursor": {
          "ref": "d7c02bd1-d0d6-48ca-96a6-d6bb345e00fe",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6cd51e8f-3f2a-406d-9d7a-d6845da7e8ed"
        },
        "item": {
          "id": "16e1ec97-2fd2-4aec-a05f-0fc593fc1ff7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "834f1758-f2b0-40ec-a480-9b01d6cb4e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d735e-1cec-4636-a4f0-10a2ac66c766",
        "cursor": {
          "ref": "c9c21408-906a-4bd9-b994-ee87c30f9226",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f666dd5-d7a4-47c4-b601-4a73c6c5396b"
        },
        "item": {
          "id": "962d735e-1cec-4636-a4f0-10a2ac66c766",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce73f624-ccda-4eb9-a58a-097e749c1d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda8daef-1352-4dd6-91a1-512f6e35334e",
        "cursor": {
          "ref": "f33ef74b-ad3a-4d4c-9032-317f69482b37",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "abc625ba-2729-4e9b-918d-492bc23ab758"
        },
        "item": {
          "id": "dda8daef-1352-4dd6-91a1-512f6e35334e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "64ca147f-5fb3-46e8-b32a-aaf561ac3910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a322d-3088-43c7-939e-6825e65ea6cd",
        "cursor": {
          "ref": "1af5769b-c200-4a37-9630-3e747d1a293d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3579429f-e6d1-4bf5-bb56-103285af56af"
        },
        "item": {
          "id": "3d8a322d-3088-43c7-939e-6825e65ea6cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "18d54786-e837-4216-811d-935e2cc8954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5958a4df-3fde-4c48-9de5-72227c9925c7",
        "cursor": {
          "ref": "51fb56e8-ac62-44dd-9d19-7196e39bbdee",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88a5ef38-99d1-496e-8bfa-0be24822b850"
        },
        "item": {
          "id": "5958a4df-3fde-4c48-9de5-72227c9925c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f3d0fe2-a4f2-4b23-a0c8-07cfac4e097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2032ba8b-9290-4296-8174-0ec480b3ee5b",
        "cursor": {
          "ref": "a0403e1a-74fc-4f2e-9550-1d32cca2a7fa",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac2bfe8b-77e5-421b-9e12-22866b6697da"
        },
        "item": {
          "id": "2032ba8b-9290-4296-8174-0ec480b3ee5b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ab624623-3f00-45a1-8b94-888d8e8f7bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e56bf-4e28-42a2-bb0d-2320a136f4c9",
        "cursor": {
          "ref": "5c5f6ccc-10df-4367-882e-47fef0182342",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c222a562-0151-4a19-bcda-6e756c473a19"
        },
        "item": {
          "id": "457e56bf-4e28-42a2-bb0d-2320a136f4c9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33d491dc-fbfd-4661-8e1c-7deaa0f8ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2421dd1-9435-4fc3-97ed-cdb91ad74314",
        "cursor": {
          "ref": "2c261561-e0bc-4162-bcb2-6608c66043ef",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9323f751-75c8-4804-b163-e6afeea2f9c5"
        },
        "item": {
          "id": "c2421dd1-9435-4fc3-97ed-cdb91ad74314",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c58a196c-c6da-41a5-ae2d-3138a59ac456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53090f78-9033-4b2a-b795-117d4004222e",
        "cursor": {
          "ref": "5757d740-29af-4462-8b51-197981626473",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bc2fb12b-142c-470a-8207-b37fa0e3f765"
        },
        "item": {
          "id": "53090f78-9033-4b2a-b795-117d4004222e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "872ea2c7-40b4-48ae-9ed0-d41a31679a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5af80b-6efd-431d-9828-ee015a1fddd4",
        "cursor": {
          "ref": "27b133e3-50ff-462b-b66c-720866acc3e1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "662346d0-91db-43e8-85f9-f235b8b0f67b"
        },
        "item": {
          "id": "cf5af80b-6efd-431d-9828-ee015a1fddd4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4f66fe76-01fb-42fb-a99c-a395519a129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d79f9e-360e-4556-94b1-204aaec33ffc",
        "cursor": {
          "ref": "290c0eb2-9264-48a8-8fce-a57e10519712",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e2b35bd3-912a-4f69-824c-9685aabc04e8"
        },
        "item": {
          "id": "a4d79f9e-360e-4556-94b1-204aaec33ffc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9a3abd1b-cdb5-48d1-8450-10c46658688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585b56ef-70d4-4e32-bf6f-f771e96e3831",
        "cursor": {
          "ref": "35e33e36-e91e-410e-bf01-8d51d45ad356",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "46280720-5589-48dd-81e9-217001921506"
        },
        "item": {
          "id": "585b56ef-70d4-4e32-bf6f-f771e96e3831",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "793d28ef-fbc3-420a-8608-5376053d5c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a504c3c-4d3e-4861-b4a0-9652ef7ea59e",
        "cursor": {
          "ref": "f48dab21-8ef1-4e30-9247-c5dcf8b9ca34",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "20fc27ef-b5f2-40ee-b5db-22ad236bcddd"
        },
        "item": {
          "id": "8a504c3c-4d3e-4861-b4a0-9652ef7ea59e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "79f0464e-50b4-4a5f-8e5d-c62631b15a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dfed00-4310-47a7-9d03-61531ec1b3f7",
        "cursor": {
          "ref": "072fe73d-7002-424a-8ec0-91d80d00e1b7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c4bf5fb-5589-4699-923e-8aea67b5f711"
        },
        "item": {
          "id": "84dfed00-4310-47a7-9d03-61531ec1b3f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3aed4843-2f2b-477d-ad36-6f2e2499163e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3bc6ea-8ed5-48e2-8646-ff535feeab39",
        "cursor": {
          "ref": "f48bd856-5a1a-49b7-b555-68aee895ad01",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac9572b9-ba8b-4d28-a68c-39825a4fe73f"
        },
        "item": {
          "id": "5e3bc6ea-8ed5-48e2-8646-ff535feeab39",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b81e4c75-f735-4dd8-a12f-7364b954b9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af892ca-d2a9-4e4d-8b3f-3e0f958f2ae0",
        "cursor": {
          "ref": "8a278b5c-59ad-4eaa-8249-4b12d8f01c8d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bad6ad2e-cec1-4f59-b2df-edd2bc8c5b96"
        },
        "item": {
          "id": "2af892ca-d2a9-4e4d-8b3f-3e0f958f2ae0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "93a2962e-2786-4684-a181-8036ec680444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad17ca2c-d118-4c2b-938d-a299e0b9b281",
        "cursor": {
          "ref": "5b2688a8-5fae-4ce2-a3e8-74a088df2d8d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c019ea07-fe6c-4ae9-966e-88f16390eb1f"
        },
        "item": {
          "id": "ad17ca2c-d118-4c2b-938d-a299e0b9b281",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "229b41be-2b10-4320-8c19-99c6130978ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a2e754-b751-4be1-a59b-8d90d5523f1d",
        "cursor": {
          "ref": "28ad98a9-3f78-4c72-972b-459de1b3f03f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f775bcad-5cca-49c1-b81d-171f39cacc77"
        },
        "item": {
          "id": "f5a2e754-b751-4be1-a59b-8d90d5523f1d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1982a88-5dbb-406f-8231-e303350303d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e452a7c-9fe0-42f7-a3c3-26c04e361b4d",
        "cursor": {
          "ref": "d62a4a22-3e4a-49c5-9df4-218136045a9f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09680f0c-1410-4b26-a556-b815b75dc9cc"
        },
        "item": {
          "id": "4e452a7c-9fe0-42f7-a3c3-26c04e361b4d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4027d97b-2564-40dd-9aa5-f69ffcca7a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ac2484-4ed5-4bb0-bcb4-ca2103d519fc",
        "cursor": {
          "ref": "dc4f9371-6e26-45ff-be44-8087993556c7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bbd0374b-7604-4ecc-ac8b-0437f0bdd58e"
        },
        "item": {
          "id": "49ac2484-4ed5-4bb0-bcb4-ca2103d519fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3603a3d6-43af-4c06-95db-57ffef1680d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b27b6b7-fcee-4730-b967-1839d741caa6",
        "cursor": {
          "ref": "574ec6c5-beb9-434b-b496-a00c2ce81f3e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c5b70ee1-0514-498e-b1ab-75a1e5a64d49"
        },
        "item": {
          "id": "7b27b6b7-fcee-4730-b967-1839d741caa6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f44b34eb-a839-4421-89c8-57f7b34a6fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c284b552-3eb8-4320-83d2-148d7e9f8a1d",
        "cursor": {
          "ref": "35f0f4f2-08ac-4464-b7f2-1b1db50360a2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4597bea8-59b2-4626-b951-1aae1bddc92e"
        },
        "item": {
          "id": "c284b552-3eb8-4320-83d2-148d7e9f8a1d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "68743c15-0e09-464d-b96a-16e7d82dd4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745d4c87-7a35-4aac-9491-6ea691647c05",
        "cursor": {
          "ref": "5c712356-60c5-40a9-a76f-dbe2ce84c506",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f0ce2db0-35f5-41b4-86f4-19c492fcaf8a"
        },
        "item": {
          "id": "745d4c87-7a35-4aac-9491-6ea691647c05",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fa20f2e-0ea4-44b2-96d6-1c60d6c90f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf426b5-202b-4a2c-9482-d4ff17631f45",
        "cursor": {
          "ref": "acdb4c04-2db0-4910-8019-28424b45e7f8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6a788a6a-071e-4971-b4c3-015b5abae741"
        },
        "item": {
          "id": "cdf426b5-202b-4a2c-9482-d4ff17631f45",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e97414f9-9071-4d9d-ad83-53b4f1caceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83537a6-6abd-4d3d-ac94-783e9d767324",
        "cursor": {
          "ref": "19c5d4a4-5bde-44f9-8b8c-b287c921e764",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16e21da8-4d9d-470f-83d8-faeb0d264ece"
        },
        "item": {
          "id": "f83537a6-6abd-4d3d-ac94-783e9d767324",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "507eb3d3-f572-47da-868e-bfc2b607adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7438407a-11a2-496f-8413-d215d3c6a791",
        "cursor": {
          "ref": "13a5c328-d129-4cff-8a1b-51b7061c0410",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "51d4c09c-8aef-443d-ac5f-128dc1d80b2d"
        },
        "item": {
          "id": "7438407a-11a2-496f-8413-d215d3c6a791",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e2fb9651-12c1-4fc1-b28a-5a590c0b919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52911c39-31a7-4ba0-94fb-a81faa2df101",
        "cursor": {
          "ref": "e546c218-6553-437e-85a6-25b836a1bb6a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "858d6ab7-608f-4c27-a347-e44088940cc6"
        },
        "item": {
          "id": "52911c39-31a7-4ba0-94fb-a81faa2df101",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d29802c0-a462-444c-84d9-6bd403c81dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa75d1-af22-423c-8398-de85a99bab99",
        "cursor": {
          "ref": "7f35286c-d928-41ec-bc66-3e268a938c98",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6c58210a-edfb-43d2-a916-f0644d0eb0ff"
        },
        "item": {
          "id": "f2aa75d1-af22-423c-8398-de85a99bab99",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "256f16ff-5aa4-469c-afb4-b426d69c65eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad4a93b-4e76-4c63-80fd-7648e3877f04",
        "cursor": {
          "ref": "297fd740-1d69-4c1e-af0e-24e6f9b327cd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2fa42fcd-1b76-43ac-800e-0747f0b4917d"
        },
        "item": {
          "id": "2ad4a93b-4e76-4c63-80fd-7648e3877f04",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "be63cedc-6bb2-4a44-904b-b6e0bc545f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b72f1a-74c2-4574-8fcf-9c48595691f4",
        "cursor": {
          "ref": "eccc4627-981d-415f-ac38-4a3655e4f5d1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c8686426-fa39-42ca-863e-9965cb96587b"
        },
        "item": {
          "id": "c6b72f1a-74c2-4574-8fcf-9c48595691f4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b709e467-72b8-4a6b-ba8e-691bc4f166aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97de444-6f10-4eb0-9649-f7d523d5bf31",
        "cursor": {
          "ref": "0dd3c1ab-d204-4bb6-9876-47c6d943769c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "56cc4369-1dde-471d-97d1-f7c0b7e2f95d"
        },
        "item": {
          "id": "b97de444-6f10-4eb0-9649-f7d523d5bf31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "346ecbbc-5b0e-4700-939b-d1fd3a10a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5443093c-2ff3-4931-9fa2-eb0416f6520c",
        "cursor": {
          "ref": "72402204-7d3e-46f5-a369-cffaeccae750",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ffdf13a-6a89-4635-aaba-f489b51a6592"
        },
        "item": {
          "id": "5443093c-2ff3-4931-9fa2-eb0416f6520c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07f1636a-7ad5-489a-b682-d2a7aa02d156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793fc0ed-491d-4010-85a3-3c3c580db312",
        "cursor": {
          "ref": "e904b43c-534b-4410-96fb-f0088e32fa6b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52917cea-f37a-4e32-be06-cbf79125062c"
        },
        "item": {
          "id": "793fc0ed-491d-4010-85a3-3c3c580db312",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0d15907c-9aa7-4400-a8e7-0fce4f2787ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c019b5f-2e42-4c95-8b69-a7fa0d66bfe0",
        "cursor": {
          "ref": "aab96e98-462e-4c60-8f5f-ca8ed49e9e54",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8755daf0-21e6-4498-a0f5-ead480f5c8e3"
        },
        "item": {
          "id": "2c019b5f-2e42-4c95-8b69-a7fa0d66bfe0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bb3f9d5b-9d56-4795-b3b5-aa897abcc23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb8f41-1591-41bc-8a4d-614e177189da",
        "cursor": {
          "ref": "a35924ce-d63c-4f03-b00d-57dc0c79d14d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "79877da2-7911-4dba-bc73-c2fed1c9e123"
        },
        "item": {
          "id": "25eb8f41-1591-41bc-8a4d-614e177189da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "decc2ce9-e0bd-4a1b-9f17-2d8cb1d27dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5f848c-f12b-4a7f-9604-2fddc7467588",
        "cursor": {
          "ref": "38ddf1d3-73b7-4e26-84d1-8c7d51893619",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e33d8ed9-0f51-4bc6-a6c3-c6f31b55647e"
        },
        "item": {
          "id": "4f5f848c-f12b-4a7f-9604-2fddc7467588",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ace632ad-9475-4e91-8bc2-a90913022245",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 126,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fc7ad3-c4d7-472d-b672-1aeb17ba99b7",
        "cursor": {
          "ref": "80a154dd-2f90-4a00-b184-6f0297df17ba",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2df88be9-e256-4979-aaab-fad86995228d"
        },
        "item": {
          "id": "f7fc7ad3-c4d7-472d-b672-1aeb17ba99b7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "60bb82e7-e572-4fe1-83c7-54f30c81eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "64b5f256-439f-4f12-9f4f-0c036f4563c8",
        "cursor": {
          "ref": "95231217-31ba-4ee8-a12c-5521453d34dd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f5a1b7f5-b841-4437-9452-119d53263cf5"
        },
        "item": {
          "id": "64b5f256-439f-4f12-9f4f-0c036f4563c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec9f9486-86e1-4e46-a19e-cd110fbe4264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9f3f063b-0200-43ab-930d-4751546b4d46",
        "cursor": {
          "ref": "58b05d6e-512b-448f-9e08-117f7d84caa6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e30b5290-aea2-4667-ab68-47de7d14c47f"
        },
        "item": {
          "id": "9f3f063b-0200-43ab-930d-4751546b4d46",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b9d5c4f0-de07-4039-82fd-dc0694f1b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b1466ab9-305c-402b-a8ad-368a33cfe449",
        "cursor": {
          "ref": "ef40bd84-e4bc-4fff-8dad-ab6b656004a3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9581eddb-6aa6-41e7-a4d1-337c623cbe49"
        },
        "item": {
          "id": "b1466ab9-305c-402b-a8ad-368a33cfe449",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1a40c70-2f86-4cf9-8c12-83a19b782cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1b63024e-f766-4bb8-9782-9415a5299441",
        "cursor": {
          "ref": "621df5c9-f434-4370-a5a8-9d2199aeeae5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "449e77b4-1b19-40dd-a211-23d7ef7f1e7e"
        },
        "item": {
          "id": "1b63024e-f766-4bb8-9782-9415a5299441",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5f7f6742-4817-4ef2-9ec3-2d4595d1930b",
          "status": "Created",
          "code": 201,
          "responseTime": 14397,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf5c2e7-d065-41e4-9d4c-6d7423966cb5",
        "cursor": {
          "ref": "db69ffbe-a893-476e-9222-e181d56c69ab",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "369acf1c-5b90-4c68-a7dc-7e06ca326082"
        },
        "item": {
          "id": "bdf5c2e7-d065-41e4-9d4c-6d7423966cb5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "11862aff-75a0-4a4f-88aa-55b7aa26d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a571ea81-74e1-4651-a2d3-414eddf40612",
        "cursor": {
          "ref": "f9ab4b83-b2ba-4ca5-a10a-dc69352b403f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "702af45b-47a3-4313-a54d-d07be8dcc7e5"
        },
        "item": {
          "id": "a571ea81-74e1-4651-a2d3-414eddf40612",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "50b929c4-9756-45b2-b022-4471eeae7102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "90cf0dab-525a-4892-8ea7-c13df1cb6663",
        "cursor": {
          "ref": "d1760e19-b47f-4b90-90f3-0fbc2b9f1dbc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b3a746b2-a518-4844-bce3-9d415821bfe1"
        },
        "item": {
          "id": "90cf0dab-525a-4892-8ea7-c13df1cb6663",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "112484d8-e1b7-4d31-b1ad-2f48def08591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b1fb59-b312-484d-b7a3-bfdb8ac09210",
        "cursor": {
          "ref": "f051580f-54b1-494a-ae29-8ac792307a7e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b256628-dc29-4731-911b-4cb87a61be0c"
        },
        "item": {
          "id": "a3b1fb59-b312-484d-b7a3-bfdb8ac09210",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ab196d1-7bbf-4f77-9584-2f388d699664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d100e-2ac8-4058-8f9d-31769f7d0bea",
        "cursor": {
          "ref": "83772696-5d57-4aab-ac96-cea8d89ce76f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "248af2bf-e9e7-417c-b1f9-26e823b05d3f"
        },
        "item": {
          "id": "4a7d100e-2ac8-4058-8f9d-31769f7d0bea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96ea35ad-8cf4-4d91-8aea-2fdd9856a07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6068c2-83db-42c8-a330-197b348d0611",
        "cursor": {
          "ref": "acc8a1a5-e263-4d25-9be4-03845204c484",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc32d5da-851b-4e0b-94b6-d7197ce7fd5e"
        },
        "item": {
          "id": "db6068c2-83db-42c8-a330-197b348d0611",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d068e8d-2e7c-4e7b-b294-1f316eb6f0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5962b1f9-dc41-4e80-8cdc-b7e5923731fd",
        "cursor": {
          "ref": "57f8844c-f943-43d2-9ff5-73ece01babcc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "434cef5a-ba89-4ec6-a217-9efba30e9994"
        },
        "item": {
          "id": "5962b1f9-dc41-4e80-8cdc-b7e5923731fd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e57bf54-6e27-452e-a8d7-bcc56f3a928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf1392b-a849-42eb-bec3-672698808a09",
        "cursor": {
          "ref": "e16095f3-ec79-4a8a-958d-63add2b021bb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1f69dfb6-d2fd-4b18-8428-ea362d636b4e"
        },
        "item": {
          "id": "edf1392b-a849-42eb-bec3-672698808a09",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ecb7faf-5590-4ac9-9670-0619e5ea0625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74649a05-75ce-46fc-9dcc-58ab587544dc",
        "cursor": {
          "ref": "4fcc002f-e0fb-4066-863a-7bec6299a342",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1aaf1ba1-c14b-4e25-8bb7-dcde5ae5b148"
        },
        "item": {
          "id": "74649a05-75ce-46fc-9dcc-58ab587544dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e31b681-1f58-44ee-8d72-1296e8e724d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d043115c-6b49-4d41-b1f3-3ba5d656cbba",
        "cursor": {
          "ref": "8de23dba-4014-4228-bf0b-2ca66e26b104",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dcf14c1e-2f37-458f-ac10-9521433503d2"
        },
        "item": {
          "id": "d043115c-6b49-4d41-b1f3-3ba5d656cbba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b2efa9bf-8739-491e-bf81-86f36ea3f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099687e-2a19-41d3-85e8-14443d48684c",
        "cursor": {
          "ref": "741a7ed1-e993-4219-a0c5-78d590e5a400",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "124ba592-9d9b-4a6f-a4ac-145e5778b654"
        },
        "item": {
          "id": "0099687e-2a19-41d3-85e8-14443d48684c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e2d0e0cb-7299-4001-b866-e734d69c412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1393e986-81f1-4381-81de-f44e08fd0eaa",
        "cursor": {
          "ref": "9d2a8ab9-c5bb-4740-aaf3-b80cdc8a4149",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9034d3cc-50b3-4f90-8541-2daae65246ed"
        },
        "item": {
          "id": "1393e986-81f1-4381-81de-f44e08fd0eaa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a353264-67e2-4b70-94c7-4b71ef2d53aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155578e2-16f3-4bd1-8b0c-1ee1cdf69024",
        "cursor": {
          "ref": "86b37eee-70c7-4732-92dd-5b8c9bad67d3",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c5427be1-3675-467d-8fef-12171742aa9e"
        },
        "item": {
          "id": "155578e2-16f3-4bd1-8b0c-1ee1cdf69024",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a9ff720-9193-4e65-be2c-6feb1085dfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd9b9b2-7d14-4eb7-9792-28159cb7b2b6",
        "cursor": {
          "ref": "50a43068-6b75-40c9-99e4-268ace93aaf5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6e008b7-8ecb-41bc-8eaa-27385b001934"
        },
        "item": {
          "id": "8fd9b9b2-7d14-4eb7-9792-28159cb7b2b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5daa5652-f452-4327-b115-6cef5df58741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0091038d-f48f-4a76-b9e4-9708d114b986",
        "cursor": {
          "ref": "7d3df427-a03f-4855-a7e2-8cd979516426",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8984a0d-adc8-4eb8-b745-d7f3e20ae17a"
        },
        "item": {
          "id": "0091038d-f48f-4a76-b9e4-9708d114b986",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "059e8e75-6c4e-4b7e-9753-8d6db9c86a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04935a69-55e6-414e-9aab-48ba58bdd140",
        "cursor": {
          "ref": "9c2a57e8-24de-4c73-9e57-68ff547ae4b7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b6a6c394-573f-4bed-a30b-7c6fb31add15"
        },
        "item": {
          "id": "04935a69-55e6-414e-9aab-48ba58bdd140",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fde6de36-4d26-4db6-9852-ace6466c228c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc0397c-53d7-4fa1-a163-9999fe5a2dcb",
        "cursor": {
          "ref": "dbb12b2c-5804-416d-941d-3ff81a721c43",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a414b667-eeab-4bc9-a134-bb818de799b5"
        },
        "item": {
          "id": "cfc0397c-53d7-4fa1-a163-9999fe5a2dcb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e19cefa0-415c-49d6-af32-84362bcffe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a841df5-febe-453d-bdd2-690c957b14ec",
        "cursor": {
          "ref": "2fd3f56a-433e-403a-a7ad-e90eb395acbd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a0996cda-e520-4a59-9dc6-e668678f5fc4"
        },
        "item": {
          "id": "5a841df5-febe-453d-bdd2-690c957b14ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15834903-c81c-440a-a59f-16661a1a6eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e994a027-308c-4eeb-9ecd-6fdb4f5328e5",
        "cursor": {
          "ref": "b4363fc5-a608-478b-9d63-46c01453fcdc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "824fa102-d57a-4da2-9b92-c027cb5aee59"
        },
        "item": {
          "id": "e994a027-308c-4eeb-9ecd-6fdb4f5328e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52884c3e-fd62-4d0e-92c2-38fa7022e508",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d5116be9-84eb-4797-b488-96c0cf1f4725",
        "cursor": {
          "ref": "ae14fdb8-e4b1-4192-ac14-80c6edb41540",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fed0f28c-2688-49db-b394-1e17c96b6591"
        },
        "item": {
          "id": "d5116be9-84eb-4797-b488-96c0cf1f4725",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "37fc82cd-4508-4772-96fb-3424e434214d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d201aacf-1214-4c1f-acf4-36bbbfc17cd9",
        "cursor": {
          "ref": "2e175d55-2c39-462b-b297-da5ad0da23eb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "91f5f618-095a-4a56-88de-d87d8405d44f"
        },
        "item": {
          "id": "d201aacf-1214-4c1f-acf4-36bbbfc17cd9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb682ee6-0d75-46d9-8b0b-d14e280319cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67924f52-9e80-4014-a1cc-1082597cbd65",
        "cursor": {
          "ref": "de5dd847-59ee-40e4-9e52-5b1abc89ea78",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "236b660c-b2a4-42bf-93b4-339b75329924"
        },
        "item": {
          "id": "67924f52-9e80-4014-a1cc-1082597cbd65",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "49360114-4b06-497d-aaed-809cd88656e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23bac18-c3ef-4ca7-8487-da20492b6e1c",
        "cursor": {
          "ref": "3800acae-b762-45a3-83cd-bdcc76b916a0",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "55ad8b9e-f694-4057-b913-bb251a864f38"
        },
        "item": {
          "id": "f23bac18-c3ef-4ca7-8487-da20492b6e1c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f557fbd2-f4ff-4cea-ba44-1ce1fc709962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e46a2f-3b2f-42bf-9ade-71919012c052",
        "cursor": {
          "ref": "9bdec799-1aec-44ef-8f67-c55591c2b434",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "000f7d84-04e2-4ef0-b97c-1ac9e2d35f4c"
        },
        "item": {
          "id": "07e46a2f-3b2f-42bf-9ade-71919012c052",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "88259167-dc75-402f-9e78-f0b8d3cc7493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14c5a85-89c0-4b82-8dac-18618d01a5ad",
        "cursor": {
          "ref": "ab24a09b-5c42-4e60-aff2-5b0e0e9b2554",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "af64daa4-5680-4478-abcd-246ba993b2d0"
        },
        "item": {
          "id": "b14c5a85-89c0-4b82-8dac-18618d01a5ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0234bc88-8b76-4e4f-8230-1b3c104989fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4064ee21-aeaf-4930-9461-4b145be8502c",
        "cursor": {
          "ref": "fd709da8-a7dd-48a6-ab4d-04cc5f210ec0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e4cb30e2-0073-4d41-b6a8-df0baeb98caa"
        },
        "item": {
          "id": "4064ee21-aeaf-4930-9461-4b145be8502c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5210a5e-c3f8-4b6b-a117-17af29f3f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd3519c-27ec-4be0-af82-779b10d9b695",
        "cursor": {
          "ref": "bbc4a87b-6cf0-4f14-aa2c-66f2daa56af4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "231d442f-4302-41b6-925f-795b6b0f62ed"
        },
        "item": {
          "id": "1fd3519c-27ec-4be0-af82-779b10d9b695",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "06e9f119-5a83-410b-ab2f-6f226e5519fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7dd890b0-f238-4750-95c6-5c364c92e463",
        "cursor": {
          "ref": "6411efd8-e64d-4e69-b4fb-c05e272e8b82",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4416c495-3d6c-4140-b10c-f7ec3e16b2f1"
        },
        "item": {
          "id": "7dd890b0-f238-4750-95c6-5c364c92e463",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a8729bd5-8e1b-46e3-9f8c-a35c5508cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f424c313-25ba-4dc4-b5e6-020720b4487f",
        "cursor": {
          "ref": "f172181c-eec5-4c7c-b291-1a40856ef6d2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2aa30e34-340a-4764-aa9f-8dd20ab32331"
        },
        "item": {
          "id": "f424c313-25ba-4dc4-b5e6-020720b4487f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "775e549d-49d9-491b-8c30-b25def02f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae758cc-01ed-4063-ad85-02e5920073f0",
        "cursor": {
          "ref": "1b1dbbf1-5ec9-4e2b-8000-fc91d4c9ba1d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e70312c4-c52e-4ee7-a4b9-2d2dd1ffb0f7"
        },
        "item": {
          "id": "0ae758cc-01ed-4063-ad85-02e5920073f0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "975fa904-b859-46fd-a7d5-474857734898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d19e753-408f-44ba-a65e-e422bc7537ff",
        "cursor": {
          "ref": "1e5f7faa-a405-49fd-b028-6ec5edccc507",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bc98e5d5-2747-4301-b3ed-3e48cc3c432f"
        },
        "item": {
          "id": "1d19e753-408f-44ba-a65e-e422bc7537ff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "81fb1c1d-a2a8-4f23-a7be-9fcc261bf0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e86e53a-dd4b-4787-85c8-c623d1a330ff",
        "cursor": {
          "ref": "460ffbc9-199f-492a-9b0e-3514c5ac162e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "031355f0-cbee-4e0d-a5d1-651be8a702e5"
        },
        "item": {
          "id": "4e86e53a-dd4b-4787-85c8-c623d1a330ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69ae9e3d-03c5-4ab5-8775-e5826197b163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68704b-212e-4460-913a-cd8d1cbac738",
        "cursor": {
          "ref": "564b2d34-c75d-4e6c-b15e-856e8c232e0f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7c02d310-e02a-40b1-b4a9-a6d90034a147"
        },
        "item": {
          "id": "cf68704b-212e-4460-913a-cd8d1cbac738",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "340e8692-e81b-489c-b12e-3632b3e9a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c80e92-1882-4d6c-9a4c-8ec304828c96",
        "cursor": {
          "ref": "6a5b481e-704f-4ee5-83b9-06ffcb4612a4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b3ad2f0-d350-4eff-8ee5-59dc101cb383"
        },
        "item": {
          "id": "77c80e92-1882-4d6c-9a4c-8ec304828c96",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f316994a-96bd-461f-88c4-8f9085db0c76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 234,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "707958b0-e580-4097-a971-5cdd3cac9e9c",
        "cursor": {
          "ref": "3602fdeb-917e-48ca-ad16-fa6c0fd4469f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f30a8715-3faf-4255-beeb-26a2b15c8417"
        },
        "item": {
          "id": "707958b0-e580-4097-a971-5cdd3cac9e9c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5e01ff89-1d43-4a45-9dd7-f4cd46005382",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fd5fe2-bc73-455f-bec0-5cfc8d32d355",
        "cursor": {
          "ref": "8fa54574-f10e-4925-a5c2-5a2847604015",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2a65ab0d-4ff1-4193-9fcf-ee850ba8c263"
        },
        "item": {
          "id": "b9fd5fe2-bc73-455f-bec0-5cfc8d32d355",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "519f038a-c61f-49c2-bf36-74cd4ecab76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cae2c5c-e102-4a74-bea7-da4b4f8d44a7",
        "cursor": {
          "ref": "9d95bf11-ee7c-4be2-87f5-b4831e351127",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "097e0151-4a24-4b08-b043-8451cd1a0a59"
        },
        "item": {
          "id": "8cae2c5c-e102-4a74-bea7-da4b4f8d44a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a80fe806-4100-4ff1-9788-d3bd57858df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e60def-b558-4fb6-bd4d-c0468467c8da",
        "cursor": {
          "ref": "37bfd008-c950-49a2-95e9-1a4ba271d42d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa7bb0a0-d44e-4b9c-8343-5e22b86ff87a"
        },
        "item": {
          "id": "d5e60def-b558-4fb6-bd4d-c0468467c8da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56dadb0a-d10f-4dba-bc3c-4227fb63584c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9bd5af-0cf9-4743-9795-4605aab40cf5",
        "cursor": {
          "ref": "516bb1ee-aff1-46e5-b5fa-00aaa7252cb2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbd55476-9bbc-4353-97d4-54f8af1ecf34"
        },
        "item": {
          "id": "6a9bd5af-0cf9-4743-9795-4605aab40cf5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dfb698b6-fd08-4bb7-bb85-9a105a2fbc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d822c1-cb6c-4e5c-be9d-5ade44e2262e",
        "cursor": {
          "ref": "ad390e5c-029e-4a27-9771-b50a47c2c1de",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "68b1e267-504e-41fd-86f8-e8e9a30c123e"
        },
        "item": {
          "id": "d9d822c1-cb6c-4e5c-be9d-5ade44e2262e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f53ec47b-01c9-463f-a9c5-e5156cc88b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad6fb35-5a29-472e-b100-a4c28b3437c4",
        "cursor": {
          "ref": "c2da3507-aca3-4b09-abe7-59f4f304b1ae",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c9b32823-eff8-4d16-91ed-834dd4c8580e"
        },
        "item": {
          "id": "4ad6fb35-5a29-472e-b100-a4c28b3437c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b71cf14d-0315-47c0-aa8a-ad9c9324e063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaf0feb-46e7-47ac-8294-2639681f7834",
        "cursor": {
          "ref": "7edca63b-1cd7-492f-88dd-3f05e53d1c78",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de2a3964-04a3-410c-b251-889961df30b5"
        },
        "item": {
          "id": "bbaf0feb-46e7-47ac-8294-2639681f7834",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6157105b-fe11-4ba0-9bd8-24b2f6268f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6707d4-58aa-4731-aeaa-e03c3f4bd0d0",
        "cursor": {
          "ref": "9f1555fc-9a55-4ee5-8a83-2937db0bba71",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c761522a-c69f-405d-8648-fcaa57e23223"
        },
        "item": {
          "id": "9e6707d4-58aa-4731-aeaa-e03c3f4bd0d0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0407aaf3-0ca3-41ad-8415-dd90d9bec9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b7afb1-6a3f-4c75-b06c-adb8a30c31f6",
        "cursor": {
          "ref": "07fb1833-5458-4ff1-abb8-ef1f21decf8c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7d48be1-72ed-4358-9a5b-23103a001b8d"
        },
        "item": {
          "id": "36b7afb1-6a3f-4c75-b06c-adb8a30c31f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fab70718-4fdd-48c3-a62f-a4f649e39514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07870c1-2c11-4516-9810-7de7363befdf",
        "cursor": {
          "ref": "0fb56870-02c9-4291-8546-8ea8a151883f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b13cebe0-7bf2-49a2-b953-c154e87c1ab3"
        },
        "item": {
          "id": "c07870c1-2c11-4516-9810-7de7363befdf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cdc0bb2e-2419-4614-8387-539e519f21c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68069cf7-93b4-47b3-bb8e-d1e38e1edef6",
        "cursor": {
          "ref": "721322e1-fc19-45d0-8f99-2c4c75d77014",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a8c988d9-26ca-4576-aa5f-e9c16eb5e769"
        },
        "item": {
          "id": "68069cf7-93b4-47b3-bb8e-d1e38e1edef6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b46531a-db95-4e11-a591-de7fe603d279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7966c0a-fd06-47cc-939e-b6802ce614fe",
        "cursor": {
          "ref": "66006eaa-8d07-4be7-ad50-6fa17b7d3ba2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba6f4107-cccf-4f2d-a8aa-cd35f2e9df36"
        },
        "item": {
          "id": "f7966c0a-fd06-47cc-939e-b6802ce614fe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad80535c-3199-43c5-87b2-dbf1461d1619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5229488b-5a9c-4a10-8687-4dc704c815cb",
        "cursor": {
          "ref": "d3167542-b859-4a35-9b7b-0564945848f6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cadf400a-12fd-4fea-9231-5e27802f5255"
        },
        "item": {
          "id": "5229488b-5a9c-4a10-8687-4dc704c815cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb15af9d-e42e-4076-ab3e-709679edb91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d533a773-ae84-41de-81c0-7cfb19ec7b2d",
        "cursor": {
          "ref": "23e2c571-2e8f-4b67-9fa8-e39d034cbed9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0c1f1e1f-2674-4b86-b0a7-f7130522c89a"
        },
        "item": {
          "id": "d533a773-ae84-41de-81c0-7cfb19ec7b2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d667f5ca-247c-4ca5-ba06-3280f68f7df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460f3346-189c-4ede-b50b-17cd547a6ffa",
        "cursor": {
          "ref": "f88bdc47-787c-41b1-b527-91b3485e72f4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c7f6778a-5751-4451-b434-0ee5aa3cfa47"
        },
        "item": {
          "id": "460f3346-189c-4ede-b50b-17cd547a6ffa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "92ec8985-6ae1-4f0f-9fac-aa0d99b1ea87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d6d305-f18b-467d-89a7-d581034e3034",
        "cursor": {
          "ref": "5572c995-e1c2-4e41-a964-d7a41f192d66",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "69472871-b5ff-4428-94f3-bcffc427a83b"
        },
        "item": {
          "id": "e0d6d305-f18b-467d-89a7-d581034e3034",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c3dc9713-87c1-429d-940f-15a9328a2b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0234ca0-1f8a-4f65-9d74-cb96e32d46f1",
        "cursor": {
          "ref": "1b72f8d8-f8cd-4f48-bcbc-04d42fca2883",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e63e7701-c6e7-4ffc-b089-0f7ea925d248"
        },
        "item": {
          "id": "b0234ca0-1f8a-4f65-9d74-cb96e32d46f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a125d123-1f22-499e-874d-f92395e9d0e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "5dfa2b95-dffa-4a49-bb98-fdfde1bf86dc",
        "cursor": {
          "ref": "e57ceddd-833a-4b9d-9d38-813e176b1947",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ff4c40a9-eab9-456d-8a0f-87750a270db8"
        },
        "item": {
          "id": "5dfa2b95-dffa-4a49-bb98-fdfde1bf86dc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "88fc0613-c31c-4061-93be-b8b97e68dbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76207cdd-8b6f-4a52-832a-af38f39840a3",
        "cursor": {
          "ref": "a844dd82-d2e7-4a11-9601-c6cf1e05e146",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ee80f951-38ea-450b-8405-33feccf29bf6"
        },
        "item": {
          "id": "76207cdd-8b6f-4a52-832a-af38f39840a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "124c6d7b-6428-48fd-b0f1-ca752601efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dadd37-5ab9-4387-a1cd-c01072e06353",
        "cursor": {
          "ref": "23be9cf4-b9f8-4d70-b9a0-e090d8b3013a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5dec0c4a-96c6-4288-976d-34f4d6dc13da"
        },
        "item": {
          "id": "87dadd37-5ab9-4387-a1cd-c01072e06353",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ed41eb0-c21a-4293-aab3-7a2879d6e7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa311d0-a483-4514-90c1-8def23576887",
        "cursor": {
          "ref": "badcc66f-f09c-4aa6-94b3-b8dfddcfa766",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b8e2f874-7a16-4f86-bef1-193c576484f5"
        },
        "item": {
          "id": "8fa311d0-a483-4514-90c1-8def23576887",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5cf820f-ad8e-471f-bb21-38cad091139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfa20b4-da77-4efe-a284-3edf2906d85b",
        "cursor": {
          "ref": "9f7e21c8-462f-47c5-b9c2-690b494f116e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "73ffc3b0-4d3c-4556-bc3a-3adf6e7997af"
        },
        "item": {
          "id": "1cfa20b4-da77-4efe-a284-3edf2906d85b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed7d51b7-9c97-4b95-aa7b-6a1f1645d63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4497fbd5-ee0a-49c5-9303-b6fd8e48f5df",
        "cursor": {
          "ref": "b440920e-4c40-46e4-8818-dd15292b14c7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3308ef7f-afdf-4ebd-9deb-741a5a54715c"
        },
        "item": {
          "id": "4497fbd5-ee0a-49c5-9303-b6fd8e48f5df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bec01c4a-2b2f-42de-962e-60ce01e0f528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a0b154-e65c-46af-a6f9-a6fdbf915443",
        "cursor": {
          "ref": "0cb15b9d-5f89-43ad-8b05-1aeb196276b2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5646374e-08c5-4f04-a5c2-b349fd5d1615"
        },
        "item": {
          "id": "87a0b154-e65c-46af-a6f9-a6fdbf915443",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "351ed2ea-89a7-43e2-bfd9-c46c2ce5d6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ffc78a-588b-436c-9908-eb60b6940c97",
        "cursor": {
          "ref": "490ec7a2-6486-4073-9231-2c419dce83bd",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9a437744-f26e-4a04-87d7-f41a0b333b41"
        },
        "item": {
          "id": "e0ffc78a-588b-436c-9908-eb60b6940c97",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44f15d28-2453-4bf7-b191-d6666f601c13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "88836fc5-6527-4e2c-8d01-c83be4f0d02d",
        "cursor": {
          "ref": "066feb18-4b60-42d4-b3bf-955b96b85d2b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cb70f110-a5bd-402e-8ead-3fbf462b4efc"
        },
        "item": {
          "id": "88836fc5-6527-4e2c-8d01-c83be4f0d02d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e6afefc2-fb7b-49ad-996b-bcef887e1e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db68a242-c86b-4ce4-abbf-0f1add5f8904",
        "cursor": {
          "ref": "25449566-4b23-4f5b-a627-2c5837e268ed",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f72e574-6b7f-48a4-85c8-6eb281d5c7ea"
        },
        "item": {
          "id": "db68a242-c86b-4ce4-abbf-0f1add5f8904",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e77651d9-397a-48fd-bcfc-6021e7e73cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d016bdaf-5ba7-4094-b9c6-21d6680c6b6e",
        "cursor": {
          "ref": "d271946a-f92c-4d3e-839c-7a15bb836a73",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9d65057c-c595-4bac-9ec3-8a53fd865a9f"
        },
        "item": {
          "id": "d016bdaf-5ba7-4094-b9c6-21d6680c6b6e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebdd83bf-9a5d-4429-9f4b-8105d116d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed08557-4d0d-4502-9921-d97ea94148b4",
        "cursor": {
          "ref": "f516f12f-0759-4f8e-b491-ee667d3bd5ec",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ed4bdafe-c916-4b69-853d-55e3a736dae3"
        },
        "item": {
          "id": "8ed08557-4d0d-4502-9921-d97ea94148b4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "31cb02b0-5372-4394-9820-9416f043140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480aaf82-e910-44d9-b3cb-f3e24fa82152",
        "cursor": {
          "ref": "4991f5dc-7593-4edd-8a61-f6055c05738f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0eb1ccfc-23ce-44f2-9e4d-d968f821d9c7"
        },
        "item": {
          "id": "480aaf82-e910-44d9-b3cb-f3e24fa82152",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb3f0687-4fd5-4cbc-a67b-c2a2f9c8870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae6fd63-2216-40a4-8154-c64b946b9a4d",
        "cursor": {
          "ref": "91241ef5-63ea-496e-b89e-5d05e94a7829",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "03503a0f-fa8e-4df7-8323-4c144101eaa8"
        },
        "item": {
          "id": "9ae6fd63-2216-40a4-8154-c64b946b9a4d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83d81ed8-5d43-4210-8584-faa946c566b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0248f079-69a6-4857-8f73-8210ff678c6b",
        "cursor": {
          "ref": "5ac71b7d-b4b5-40c4-a2a6-a7e8cfb6f859",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "22fba4c1-c8a7-4c3b-bc02-288a2aabc079"
        },
        "item": {
          "id": "0248f079-69a6-4857-8f73-8210ff678c6b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2450572e-c5b0-4448-985d-d523fd9b790e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 128,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "da955dd7-9236-48cf-8ee6-6b13c621d344",
        "cursor": {
          "ref": "a1b31dc8-044c-4da2-8dfb-fa3323b1930f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7f0069af-9c69-41ce-a1df-a0f36a1c10ed"
        },
        "item": {
          "id": "da955dd7-9236-48cf-8ee6-6b13c621d344",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d2a15c06-e9eb-47d3-aaba-54824a143146",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "46deb0ae-3d17-4c26-9f92-478065851426",
        "cursor": {
          "ref": "bd9da72c-a4ea-433d-bb2a-10089c99c877",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "97afa489-2b80-4f6c-9682-67b2ee8fa3be"
        },
        "item": {
          "id": "46deb0ae-3d17-4c26-9f92-478065851426",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "524a7942-c976-43d3-a18f-4d683a7842b7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "189e7533-16f8-4d04-8e61-8cdf8a6d9ed9",
        "cursor": {
          "ref": "adc5dc89-e5c7-4651-a556-0eeca443c2ad",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ecbdb5a7-1cff-4cac-ae88-176abfa59d12"
        },
        "item": {
          "id": "189e7533-16f8-4d04-8e61-8cdf8a6d9ed9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "023acdad-7ff9-412e-bb28-f37fd2f8eeac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "c6df62f7-b192-46c1-88be-1bdd91a37a4d",
        "cursor": {
          "ref": "7ed26dcf-0bc0-477a-9c57-fb5fe559a484",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "53b1f4dd-8559-4773-b6d5-0c15a6c6ae14"
        },
        "item": {
          "id": "c6df62f7-b192-46c1-88be-1bdd91a37a4d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d01d7784-48ed-4c1b-82be-45cff552c327",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "64f127fd-0c22-411b-9e14-3a0386195c1c",
        "cursor": {
          "ref": "a51a2503-7fd2-4aeb-b65f-ce91b370fd80",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "304dc248-435d-46a3-a48f-e2d116717c3e"
        },
        "item": {
          "id": "64f127fd-0c22-411b-9e14-3a0386195c1c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "15b6b16e-f7ae-434b-b193-490b0d45ddeb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "155b85e8-c088-4ef0-86ef-f21d31d67e3e",
        "cursor": {
          "ref": "d49e14c1-d011-40f5-b12d-cdfe5fedf6a5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "397a8663-510f-4d86-819a-30235d78dd6e"
        },
        "item": {
          "id": "155b85e8-c088-4ef0-86ef-f21d31d67e3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9b53116-a18e-4563-bf90-5a43900cc6ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937615c2-9712-4397-9780-390fda29549b",
        "cursor": {
          "ref": "59fa94f6-0128-42cd-86a6-683e9246d5ec",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7f35390c-96cb-4ad9-bafc-01d63493c69b"
        },
        "item": {
          "id": "937615c2-9712-4397-9780-390fda29549b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7e1fbf6-ba1c-408c-b47d-3e587c61c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790fe284-8feb-4abb-b03d-198d51c8706d",
        "cursor": {
          "ref": "17b364ed-97a3-46ef-a92b-f1d177f44dd7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ffb089e0-91e9-4eb8-a507-32509afa221a"
        },
        "item": {
          "id": "790fe284-8feb-4abb-b03d-198d51c8706d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99714812-0f7e-4bc3-9267-85c99f0199ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb5153e-2f8a-4ac7-95c1-528082771821",
        "cursor": {
          "ref": "ed1c8ca5-8567-4fea-9855-5a8a4c76d668",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "75754c9a-09f2-4f41-8629-6d71a36b3f24"
        },
        "item": {
          "id": "7cb5153e-2f8a-4ac7-95c1-528082771821",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f980f06-7cfe-454d-bf95-1f2cb8e6bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887a8bf7-9142-4b94-a6ab-8ef8724075cf",
        "cursor": {
          "ref": "f891c635-732d-46ad-9425-1b2cf5e62fde",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e15dfd21-80d2-4af8-9664-30cb9825f77e"
        },
        "item": {
          "id": "887a8bf7-9142-4b94-a6ab-8ef8724075cf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9fda2c8f-e52b-4b7f-9371-a5cdbe05ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0e3a37-ab72-49ec-9adf-8e2b8aa69808",
        "cursor": {
          "ref": "5eda2893-945d-45c2-a02c-02a66cb92ef6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b47034b-789e-454d-8656-3661dcd86c7d"
        },
        "item": {
          "id": "ec0e3a37-ab72-49ec-9adf-8e2b8aa69808",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5419aa67-d50b-4570-b04a-9f7f4e7b095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7876d-9ac7-420b-a4aa-5b2b75ffa8b3",
        "cursor": {
          "ref": "ed2a7033-daad-4aa7-8ed4-17c54d237649",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "02a88d22-5c24-486c-8a1e-3e2368cc52fd"
        },
        "item": {
          "id": "afd7876d-9ac7-420b-a4aa-5b2b75ffa8b3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4ee99d84-c636-460c-9f33-bccf31cf953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b3f450-b1b5-4b33-b2e8-bde385c78bbd",
        "cursor": {
          "ref": "9743fec1-ce5c-4241-bc91-419ea2af221f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f238a174-f00f-4220-88fe-6c8dfbc61213"
        },
        "item": {
          "id": "42b3f450-b1b5-4b33-b2e8-bde385c78bbd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e2263684-35b9-401d-add3-eae86a77740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ad578e-b7cf-4b45-853a-e72fe847b5b3",
        "cursor": {
          "ref": "86c5fd40-8b5c-412e-8983-a02c8fa3fd5c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56752608-2e58-430c-a61f-7dc25fea8d03"
        },
        "item": {
          "id": "22ad578e-b7cf-4b45-853a-e72fe847b5b3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9da0b256-605b-4335-9590-c84b8e74c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99edd811-2c45-4827-876f-0615d27c2595",
        "cursor": {
          "ref": "2ace91f3-ebd4-4ab2-a19f-706e49b35ac5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7384c4f3-2049-4ff3-8294-c68c2c3c5486"
        },
        "item": {
          "id": "99edd811-2c45-4827-876f-0615d27c2595",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4ba47f29-fd77-4fea-84df-3cf3afd38247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543fc69d-de30-4678-9ba7-3c06c75c66c4",
        "cursor": {
          "ref": "e8e5f1ff-4cb3-4e3f-9631-440539cbbe23",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4ae52309-da83-4171-b7ab-b6078d4ebef2"
        },
        "item": {
          "id": "543fc69d-de30-4678-9ba7-3c06c75c66c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cc794330-22f6-4a01-9137-852094753fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdcb28f-2acb-4e07-8f7e-8b0c4e2cba14",
        "cursor": {
          "ref": "7ad2acb9-fbc0-4d67-8d96-0323219c33dc",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c55d0f1-d87a-4086-be29-f19a87711665"
        },
        "item": {
          "id": "0cdcb28f-2acb-4e07-8f7e-8b0c4e2cba14",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6ead2e62-93dc-4448-a18d-474c8aecdeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fb866-003b-47d7-8de2-d466f49e8423",
        "cursor": {
          "ref": "7e27f6c5-49d7-4d42-b433-2f610fbecf86",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "82c4a2d1-5243-468a-a5d1-9cdfa2d51248"
        },
        "item": {
          "id": "8a4fb866-003b-47d7-8de2-d466f49e8423",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c89a7915-2fd0-4970-a016-50388c432e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd89e1-90e1-4a67-b7ca-9254982a3e71",
        "cursor": {
          "ref": "8c9ea31c-b6fd-498c-8eaf-3719dc0e7308",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "47d60e49-dc7c-4572-a69f-e2b98219823c"
        },
        "item": {
          "id": "2efd89e1-90e1-4a67-b7ca-9254982a3e71",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "68e55f50-369b-4d2a-b8e1-e6e18f6d12e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdc675f-1d86-4a52-8876-1336b638d743",
        "cursor": {
          "ref": "a414e392-6302-4780-8b5e-9074fb10f767",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9192b306-e15a-4dca-93a1-597df67b4ddd"
        },
        "item": {
          "id": "9fdc675f-1d86-4a52-8876-1336b638d743",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6c24fc26-517d-4d04-856c-99b1967cc54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65b65d-cbbd-4081-b226-c0522e4de3af",
        "cursor": {
          "ref": "3cd70448-5d68-4056-a30d-93eb9294155d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bf54abe9-2b50-4d26-8531-594d89bbd5a4"
        },
        "item": {
          "id": "8f65b65d-cbbd-4081-b226-c0522e4de3af",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e32a6c7c-73b2-43a1-9d96-afbd40922389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bec0fe-f9a0-47ed-810e-74a7225d06c3",
        "cursor": {
          "ref": "91117cc9-943a-422f-a23e-1287260bfab9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f80e4ffa-f346-44bd-b2b4-f349d06b6305"
        },
        "item": {
          "id": "f5bec0fe-f9a0-47ed-810e-74a7225d06c3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a94c3455-86d7-4be6-813b-cea5f2724c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f4dc44-e350-4bd3-9656-f4c9544d2154",
        "cursor": {
          "ref": "333b8e7b-a808-4116-ad6f-4529584f1b50",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5097087e-8e1f-4f12-9e86-77eb428e73df"
        },
        "item": {
          "id": "63f4dc44-e350-4bd3-9656-f4c9544d2154",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fcb2817e-5520-4317-a31b-1b2ac96837a6",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "107307d5-58bc-4671-8976-b34ef7a4685a",
        "cursor": {
          "ref": "a0e9fc8a-0746-4d34-af8d-e817685add12",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65cf543d-e5b2-4f9d-851c-bf2c7aa089f7"
        },
        "item": {
          "id": "107307d5-58bc-4671-8976-b34ef7a4685a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7f69da61-268e-4fb5-9ed3-63e89f5fdc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b7fa5-f62f-41f9-94d6-93591742c180",
        "cursor": {
          "ref": "2189d4a4-a247-4548-b48b-52d10f8ae20f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "842ff7b3-6cc4-496c-b8d6-d27b84368517"
        },
        "item": {
          "id": "dd8b7fa5-f62f-41f9-94d6-93591742c180",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "944884d7-e71d-4c7e-b75d-3926e44fd857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd46e39-b63c-4507-bf9a-74b5e380d002",
        "cursor": {
          "ref": "503fd55d-2ba4-4d14-831d-892013172ed0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad84a0f5-c14d-4e08-909c-a21599b23d36"
        },
        "item": {
          "id": "bfd46e39-b63c-4507-bf9a-74b5e380d002",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1099278a-d349-4bca-88d0-0229056dded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef9888d-c12c-4b6c-aeef-1a659f69d3f7",
        "cursor": {
          "ref": "dfa914db-844e-4ad5-83be-bdb935d173e0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6b7d578e-dd77-45f6-90d8-951e832f1bcd"
        },
        "item": {
          "id": "0ef9888d-c12c-4b6c-aeef-1a659f69d3f7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99e255e4-fff7-47cc-a3ff-09c6ded3818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d1485-f48f-4088-9122-de61481b8615",
        "cursor": {
          "ref": "631a8c87-22ac-4ce3-9d27-d1c072baad65",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "136302bb-d5cf-4e5d-9890-291295603e7b"
        },
        "item": {
          "id": "509d1485-f48f-4088-9122-de61481b8615",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5f42c41b-db87-4742-a589-6bee6295e0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936bd0bf-72e4-4f5a-81aa-0d6ebb2d0bfb",
        "cursor": {
          "ref": "761bf759-9223-4f32-8a95-110f698a3ce9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "49d47997-5d74-4c7d-91e1-310a7ce7e769"
        },
        "item": {
          "id": "936bd0bf-72e4-4f5a-81aa-0d6ebb2d0bfb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b908f974-f8cc-4197-b683-6a0878801360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9ff0f6-bd16-4cb1-82a7-f5abc2c9eb30",
        "cursor": {
          "ref": "96328825-8233-41f2-a474-c2ef20a1f827",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b05e1bbb-9572-4d01-9b2a-7d47c0f441f9"
        },
        "item": {
          "id": "ff9ff0f6-bd16-4cb1-82a7-f5abc2c9eb30",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f64a7d52-035a-459e-8127-0543ab509596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4fca3-a8ef-4f67-b460-0c56e942c96e",
        "cursor": {
          "ref": "e3b079ac-4367-44e1-9baa-c4aa68b17522",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "020af229-67ce-40f0-bb9d-31587bf8cebc"
        },
        "item": {
          "id": "a2e4fca3-a8ef-4f67-b460-0c56e942c96e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a29ec97d-641c-4353-8a4d-a71ae1c9031d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e101a89d-83ef-4026-a9ff-a1b4b873fb67",
        "cursor": {
          "ref": "bb4aedb6-b263-4763-81ce-adae2681f1c0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "82a86cb0-80b8-4456-92ee-5e172637f47b"
        },
        "item": {
          "id": "e101a89d-83ef-4026-a9ff-a1b4b873fb67",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "059f2001-b2cf-46a9-b090-8a27173426f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d329c95c-c631-474d-a98f-63055c0a6820",
        "cursor": {
          "ref": "2e3f1fbf-5672-4d37-adc3-c8b0608ab303",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5664f201-9fca-419f-b6a2-231f1a7379ce"
        },
        "item": {
          "id": "d329c95c-c631-474d-a98f-63055c0a6820",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "10c23352-492a-409d-8cbf-6029559090bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824f8402-ed39-47cf-b653-f5cb79107fa0",
        "cursor": {
          "ref": "5b52aa8b-88c8-48b6-a70e-234918bd8f5d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc084665-206c-4df3-9ea5-c31ddb3e3059"
        },
        "item": {
          "id": "824f8402-ed39-47cf-b653-f5cb79107fa0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1719ce18-ccb7-4919-baf0-f21a01af6903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5109326e-5fed-471a-8b08-02eab5dee2f7",
        "cursor": {
          "ref": "1145d46a-e113-4f05-938e-cfb5fd77170b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d204e1b1-067c-4f3f-bb95-d00609c6cd4a"
        },
        "item": {
          "id": "5109326e-5fed-471a-8b08-02eab5dee2f7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "95052ca3-c748-43ea-a083-f2351b151011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24494cca-b068-4e36-9171-ee5aebc2e663",
        "cursor": {
          "ref": "13583def-3248-411c-b1bf-37dbe2df9baa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ca5dcd2c-bdf3-4e4c-9d4c-cae118b2d2cd"
        },
        "item": {
          "id": "24494cca-b068-4e36-9171-ee5aebc2e663",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "190cd31f-34f0-4e59-8d2b-bd4c47503b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d054b8-ec25-4f10-a10c-0d6955cb3ff4",
        "cursor": {
          "ref": "8626b249-fee0-4b25-8ead-6bd0ff0920e3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7ba0a13b-3492-4ed6-a8cd-512805762f97"
        },
        "item": {
          "id": "97d054b8-ec25-4f10-a10c-0d6955cb3ff4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eac49199-d2bb-4c58-9e20-9ee5bb91c9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f9227-0ea8-4560-95db-f688424193b9",
        "cursor": {
          "ref": "59bf30fd-ee09-4846-9ee9-cec40fd97166",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bee4acba-fbab-446c-8e69-ee6a94b699db"
        },
        "item": {
          "id": "a64f9227-0ea8-4560-95db-f688424193b9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7e9e760c-0af6-424f-a87f-cf04e829f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd25b64-32d7-4b4e-9de2-e0007d369d85",
        "cursor": {
          "ref": "8d785ac0-0319-436c-b8fe-2a0f8e51f606",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c53a5cc1-5f02-4667-a57b-bc507292eedd"
        },
        "item": {
          "id": "ddd25b64-32d7-4b4e-9de2-e0007d369d85",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dcdf1945-34ec-4186-ab70-6a2f37cb67ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f475a3-a268-4885-b072-a55e8928d797",
        "cursor": {
          "ref": "56849329-8f21-4b1f-adf6-1e58cec65de8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "98e3bb02-85ca-437f-93c5-5968641b9cd1"
        },
        "item": {
          "id": "a7f475a3-a268-4885-b072-a55e8928d797",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c57707b4-50e0-4586-9b12-a943fb556dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6716213d-add4-449c-a40e-9a788ac0a563",
        "cursor": {
          "ref": "558b5513-9ca8-4b20-af4d-d276ff593854",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ac948e79-202f-4a1f-ac6a-6db697fbc4cd"
        },
        "item": {
          "id": "6716213d-add4-449c-a40e-9a788ac0a563",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e7efc0a8-6af0-4fc4-a88a-623900ae9827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42892c9f-8953-47c8-b8ef-311a6d422a5c",
        "cursor": {
          "ref": "56e14ac8-735c-4e2a-9236-e9361f10f199",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a0f12861-4099-4f2e-9c7a-8e1be7eb2504"
        },
        "item": {
          "id": "42892c9f-8953-47c8-b8ef-311a6d422a5c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6ded7a0e-f0fd-4699-97cf-013f962c718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497b5644-c707-42b1-93c6-1ebeaffd86a2",
        "cursor": {
          "ref": "b499e224-debf-434f-ba44-ed9417dfb4ed",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "31902283-2e52-424d-9dd6-f722a4809214"
        },
        "item": {
          "id": "497b5644-c707-42b1-93c6-1ebeaffd86a2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "65f83d5a-12d0-449c-9bf9-d8cf2c3b983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72a22b-3467-4fc6-bf44-3cb31941e335",
        "cursor": {
          "ref": "5659ccef-9a7e-4cba-b5f2-e8c51b16ccee",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "97f2a26d-581c-4dd3-9592-2b43e5a96d55"
        },
        "item": {
          "id": "be72a22b-3467-4fc6-bf44-3cb31941e335",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bfe0d73c-c09b-490f-a423-96b98ee61149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72cce0f-92a0-4a56-9b75-6850e03d5d35",
        "cursor": {
          "ref": "44f92d0d-fbd0-4f3d-846b-8b37e93b1455",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "724aaf28-49a1-4b20-b149-a996f7304843"
        },
        "item": {
          "id": "a72cce0f-92a0-4a56-9b75-6850e03d5d35",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "76284685-c049-4995-aeca-fb5844ad407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c9fec9-bbfb-4b98-905f-9ced2ed5d2cf",
        "cursor": {
          "ref": "2f15e8c0-9760-462f-bc88-b4112b8edea8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e3561d4-43b1-4614-b829-ac939bc60917"
        },
        "item": {
          "id": "10c9fec9-bbfb-4b98-905f-9ced2ed5d2cf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08da190d-f2a7-4c18-b990-eb79e8c70e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a729fff6-88cf-47d6-916b-ad6b049e3022",
        "cursor": {
          "ref": "06ad9df1-4d96-4116-8e80-97436ca90f2e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8b33d01e-ca7d-4c6e-acec-3fdf48bd3459"
        },
        "item": {
          "id": "a729fff6-88cf-47d6-916b-ad6b049e3022",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1bca3f49-2506-4e65-b43c-9379b62a78f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac61bdc-0cd0-4e4e-86e0-f6d014113197",
        "cursor": {
          "ref": "0141571b-36a1-4800-b3b6-25b4b99b668f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d835f50f-5323-41da-9b8f-0386960b01a7"
        },
        "item": {
          "id": "dac61bdc-0cd0-4e4e-86e0-f6d014113197",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0c958052-c44d-43b4-916b-072529885d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d4e872-5397-4d57-82d4-187d17789fcf",
        "cursor": {
          "ref": "0b340b9b-0ccd-4a1f-b1b5-780025c652df",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9e72c832-6acc-46f8-ac1b-690b7c695d72"
        },
        "item": {
          "id": "f0d4e872-5397-4d57-82d4-187d17789fcf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6b2092ad-ab3e-4b57-8b6e-345a4a7c13f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fedff42-219e-4aa8-9de4-c24f4adef913",
        "cursor": {
          "ref": "ca13888d-0f27-4628-b17c-b206575a2c69",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e2bfafcf-45c6-42de-b2c3-6a51330f9fa5"
        },
        "item": {
          "id": "2fedff42-219e-4aa8-9de4-c24f4adef913",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64bb4554-2e0b-4028-95e4-4c2595a39fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c2859e-772e-4907-9fc0-c56f5b375717",
        "cursor": {
          "ref": "d2f70607-0cb9-4df0-8c2e-d70ec997fa21",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e02ba42-de12-47da-860a-cdffb286d784"
        },
        "item": {
          "id": "e7c2859e-772e-4907-9fc0-c56f5b375717",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5f297b80-bd8c-427a-b147-2f888cf77190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406273d8-9519-4f47-974a-7a791141fc1b",
        "cursor": {
          "ref": "c9e28c86-ffc2-4179-b796-b02fe3860527",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e396147f-0b49-4cd0-8adc-fc3e57ea77dd"
        },
        "item": {
          "id": "406273d8-9519-4f47-974a-7a791141fc1b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e06ae711-393d-45c3-a50b-d6eb95dffb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb91d1-26e4-4b91-8dea-625afcb3494b",
        "cursor": {
          "ref": "c8908188-4b54-45c2-922d-bbccb9896b7a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9ebc64de-aee1-4977-8f8b-dd33b5c2fedf"
        },
        "item": {
          "id": "d4cb91d1-26e4-4b91-8dea-625afcb3494b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45328502-f5a4-4f73-8c74-6b96db9e66fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ecde3d-5788-45ca-a985-a44892ee1f7f",
        "cursor": {
          "ref": "6daf23a5-1982-48bc-b820-ec978b649724",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef73e127-8062-438c-8ef8-155728a32859"
        },
        "item": {
          "id": "a5ecde3d-5788-45ca-a985-a44892ee1f7f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1c5222b-816b-47d5-88ee-ef58e2609e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0baeab1-ece0-407a-a423-1492e2cbdd5b",
        "cursor": {
          "ref": "c7f78072-bdf2-41a2-9a19-ef785936f363",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c75a39f-3834-4afb-ab70-8f512efa31f2"
        },
        "item": {
          "id": "f0baeab1-ece0-407a-a423-1492e2cbdd5b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e491c83c-9cc7-4bd7-b4c1-45320b7a4cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8162a5f9-810c-4f23-aca6-0cf8c00f0771",
        "cursor": {
          "ref": "ceaad1d0-7fb2-4fb1-9c09-3c6257d8f7a8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3289c6a-3891-4b9e-8e05-b3de9750f07f"
        },
        "item": {
          "id": "8162a5f9-810c-4f23-aca6-0cf8c00f0771",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2c61e39d-2d13-4ab8-9681-c4fb564e8c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd50863-8c38-4407-b3f0-ad9882a59e3a",
        "cursor": {
          "ref": "a561fb9e-a549-4ad2-b091-8856bc7738d8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e85f4b32-9048-4197-ab53-463d846f46d9"
        },
        "item": {
          "id": "8dd50863-8c38-4407-b3f0-ad9882a59e3a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "442a11d1-e681-489f-8c84-ffaa23ecd511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103d8386-dd41-44b0-8be5-18392a1fd900",
        "cursor": {
          "ref": "096647e7-aff1-4a00-9253-da56be951fb4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fc350a13-d4c4-4710-8261-1106e0546468"
        },
        "item": {
          "id": "103d8386-dd41-44b0-8be5-18392a1fd900",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b29f7c81-035f-404e-b16e-2b67c80d0e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fdc271-1ad4-4983-9182-4193bb908118",
        "cursor": {
          "ref": "67058cb7-8bd1-49ac-9492-69d078203e30",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "baa14d20-2afe-4d3f-8759-0d840dfea96c"
        },
        "item": {
          "id": "65fdc271-1ad4-4983-9182-4193bb908118",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc2e9efd-cde2-4836-9f0c-b17efbe4244b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75703f1-ac87-4ad3-97d3-12239432041a",
        "cursor": {
          "ref": "e5d70d02-f3ce-44ca-978a-cef04fc52401",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "41b454a1-48bc-49ef-8c82-a73fda869ba3"
        },
        "item": {
          "id": "a75703f1-ac87-4ad3-97d3-12239432041a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9997fb08-7634-41e4-a055-368b37881885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97a1e7d-e8c5-4a33-bbb8-62141d771032",
        "cursor": {
          "ref": "c6f4cbd7-c790-4aef-8d6e-7624897cebfa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a3c64ec2-1cf9-4911-a801-a6e2f62e9a39"
        },
        "item": {
          "id": "b97a1e7d-e8c5-4a33-bbb8-62141d771032",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73ea6372-5875-4c47-accb-1e06dbdca55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64072e14-f217-4516-9d46-eca85c28abe1",
        "cursor": {
          "ref": "e1175ff1-e753-4e3c-8e63-1ae24bdb781f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "505b023c-fb08-4aad-a31e-7c15c35f6645"
        },
        "item": {
          "id": "64072e14-f217-4516-9d46-eca85c28abe1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "792c2399-f01b-45c9-8d1e-2693ed14d1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce5f08-9041-4c95-bd05-9d1b9b719fb8",
        "cursor": {
          "ref": "184be1da-056e-4c04-be0c-b4a625f8260f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a3628604-6f8a-49b9-bace-80ba2dc05584"
        },
        "item": {
          "id": "b2ce5f08-9041-4c95-bd05-9d1b9b719fb8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8abe3cdc-5d5f-4360-99a6-16e02abe589d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4421fd-6ad0-4977-ad71-ec3bedbd0c19",
        "cursor": {
          "ref": "c23fc7cc-f289-440c-93d1-77f6ed77a9df",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa3bd883-3517-4170-803d-7b58cad87ceb"
        },
        "item": {
          "id": "dd4421fd-6ad0-4977-ad71-ec3bedbd0c19",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c076c31b-c29d-4201-9d07-1cb11d07136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b9593e-15cd-4223-b9df-97a000e944ae",
        "cursor": {
          "ref": "a0d800fa-1aa2-4340-9e8d-545bed66683e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "61fe0267-31bc-4aff-b67e-587cdec945bf"
        },
        "item": {
          "id": "d3b9593e-15cd-4223-b9df-97a000e944ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bff4b057-2307-4b21-a6e2-5a2d96294bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d50d40-a12f-4f93-b0b9-94a2f1a52088",
        "cursor": {
          "ref": "ee597d86-0514-41b7-aa21-e49a44187c04",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dcb94c1f-fe22-4655-b7a8-d1e0bacf659e"
        },
        "item": {
          "id": "38d50d40-a12f-4f93-b0b9-94a2f1a52088",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "78c496f8-7a75-4101-a47d-9cecd0646cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9354c79e-61d6-4c6a-affa-1d106ba889b8",
        "cursor": {
          "ref": "ba6a79f7-24ae-40bc-9bff-d6bca3cf0a7f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "97fbdfbe-14b4-4339-856e-6947100d3415"
        },
        "item": {
          "id": "9354c79e-61d6-4c6a-affa-1d106ba889b8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1bbae7df-76be-4bfa-bb8f-efbf94f3ad02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4efaaba-28c5-4b67-bf38-183b9b65175f",
        "cursor": {
          "ref": "8397288b-cdb4-46ca-9009-7a157e225926",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "44ce0c31-875a-4c82-b8b6-d832dc579df5"
        },
        "item": {
          "id": "f4efaaba-28c5-4b67-bf38-183b9b65175f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "14a1e1d1-26f7-4b12-8750-0fcab1398392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f978c6f6-64d0-4e9e-bc72-0b84f074b78e",
        "cursor": {
          "ref": "714e4b88-e81f-4064-a8c1-2d2423927808",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87925bf9-be75-410e-936f-2c468ce07f49"
        },
        "item": {
          "id": "f978c6f6-64d0-4e9e-bc72-0b84f074b78e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4d77e5ba-bcf5-4160-8d46-6fa127f02480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f6e706-18e2-4b14-bc46-6d14ba2911b2",
        "cursor": {
          "ref": "cd510c30-4efb-4883-be44-7dab6e8350e0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "235dd3ad-c931-4fc4-9272-46c580918c33"
        },
        "item": {
          "id": "28f6e706-18e2-4b14-bc46-6d14ba2911b2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "563c2fee-54bd-4906-9d33-04f50cf81108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23693ee7-0504-45c3-afbb-3109c39c0e76",
        "cursor": {
          "ref": "2c61dcb9-c085-48ea-bb1d-3bfdce5783ce",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "055a96da-bb11-4113-8aa8-cf4c15f8dfe8"
        },
        "item": {
          "id": "23693ee7-0504-45c3-afbb-3109c39c0e76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89ee22e6-e059-4b66-bca4-4a49e9252730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bd32aa-c3ba-4902-8e78-314d7e972754",
        "cursor": {
          "ref": "fb1e4156-3cd1-4d1d-838b-473831a79dbd",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e85a910d-bef4-422b-9651-39f3f4389a18"
        },
        "item": {
          "id": "b7bd32aa-c3ba-4902-8e78-314d7e972754",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dd373f6b-f24c-4151-9e2b-8583ab3f65a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229c2c41-4b84-48d6-b3be-ac677c974907",
        "cursor": {
          "ref": "53ba6fb7-3c06-4354-8284-ab378ceb41f8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7eda7145-8eae-4aa0-ace6-6d7ac9520bf7"
        },
        "item": {
          "id": "229c2c41-4b84-48d6-b3be-ac677c974907",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "889effff-910d-442f-b768-5af460d6be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f773a62-0e1b-4726-99f5-77c4b38d8f08",
        "cursor": {
          "ref": "4649c5b1-9b9f-466a-9e02-b080e97d29f6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "60e2d073-9074-4b47-aae6-b651059509a6"
        },
        "item": {
          "id": "3f773a62-0e1b-4726-99f5-77c4b38d8f08",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "168465be-324a-4d55-8635-44c082697eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24f38c3-723e-469d-aa51-c90658719fe9",
        "cursor": {
          "ref": "31b580b4-5e82-4145-b514-8fec865a1c7a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1f019869-c6a6-4029-a734-0347877723ee"
        },
        "item": {
          "id": "e24f38c3-723e-469d-aa51-c90658719fe9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ebe6b689-4032-49a6-91bc-c88fa1032f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee41309a-b964-45a6-8ad2-d45e5b1da728",
        "cursor": {
          "ref": "13f41c88-e5bd-4b43-b58c-15e08368a1d9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8a8b6928-347f-4c61-ab37-93a6898b9007"
        },
        "item": {
          "id": "ee41309a-b964-45a6-8ad2-d45e5b1da728",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6cb05208-765a-46bd-9d5b-e3fcbf63e8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be99e096-ab5b-4212-8cae-62037642c12b",
        "cursor": {
          "ref": "8ece05b5-c3f9-4ca6-9516-98ceaf063b7a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "951b9f7f-a2c0-4dab-ae6c-7a927a4dfb03"
        },
        "item": {
          "id": "be99e096-ab5b-4212-8cae-62037642c12b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "73666795-cb1e-4b5a-b72d-2fa531669ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4824c8-e70c-493f-8178-bafd590cdc7a",
        "cursor": {
          "ref": "ccce5a46-4b71-4ff0-b779-83d2ef2e7276",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6d8ccced-b08a-4afc-845b-6613bad08ad5"
        },
        "item": {
          "id": "6b4824c8-e70c-493f-8178-bafd590cdc7a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8325ad65-5e87-4ef7-83b1-283aae27d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a304760-60d7-4cd3-9e16-60875f19935c",
        "cursor": {
          "ref": "e07e9a47-0072-4644-bfc8-2e8565e4262c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "06449d1c-4034-4fc0-83a3-7e1c2c08d3c8"
        },
        "item": {
          "id": "1a304760-60d7-4cd3-9e16-60875f19935c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bf96d7ab-fde0-4533-8bd8-471ccad542ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75459047-61dc-4cf6-befe-0c6dd33dcb55",
        "cursor": {
          "ref": "c40cb450-2c44-43b1-b2df-14f6f259250c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4ef286c2-4586-4094-9bdf-c081556683c2"
        },
        "item": {
          "id": "75459047-61dc-4cf6-befe-0c6dd33dcb55",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e9d48326-86ba-47f7-9e89-77402a8e6a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92619690-b6d0-4971-afa5-99de9401c214",
        "cursor": {
          "ref": "b3df2b7b-fe83-4060-adfb-d3580259399d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "feb0bec0-104f-41dd-a4d9-936357781e9b"
        },
        "item": {
          "id": "92619690-b6d0-4971-afa5-99de9401c214",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "19f7593c-8d58-4243-bbd2-42e4ea39913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6042e009-b29b-4cc3-a106-8830944ab576",
        "cursor": {
          "ref": "badcd072-bacf-44bd-9fee-692abdc68232",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c38177b7-6597-479c-9968-28f5a87cac7c"
        },
        "item": {
          "id": "6042e009-b29b-4cc3-a106-8830944ab576",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12a905a5-bab4-42d4-8fad-0bafc9558dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516bf94e-f33e-4814-b552-c919a07e2817",
        "cursor": {
          "ref": "f4d2acbd-ef61-497c-8c8e-cd0b3bf77dd1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "28a88c86-bce1-4960-b2da-6c28a6bfbf65"
        },
        "item": {
          "id": "516bf94e-f33e-4814-b552-c919a07e2817",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b4ae1769-c670-4cd3-bbb0-22ac53c267c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e9ee9-5b05-44ad-8d05-33eda24afb4c",
        "cursor": {
          "ref": "8b2c6435-9358-425b-9ae5-31696c03f021",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "53319dd5-33f2-4adf-a1bf-1e3c231ba564"
        },
        "item": {
          "id": "dc4e9ee9-5b05-44ad-8d05-33eda24afb4c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1173b24a-7fa3-48ab-b7d0-5a5df218b80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c734ca-2c9f-490d-ad96-7257d560b298",
        "cursor": {
          "ref": "f9160461-ad02-4015-9c1b-6632fdc181df",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0f6fbb57-1757-456d-ad21-b670eb9aba6e"
        },
        "item": {
          "id": "13c734ca-2c9f-490d-ad96-7257d560b298",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a0a03736-dfa8-4598-be96-5944bdd561e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715c2465-d624-4f36-acfa-9edee828ee84",
        "cursor": {
          "ref": "ab8bcb65-3b07-4949-ab61-bd0a8b993a16",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "23c043fe-f29c-43da-8104-e4f6d2f3b8b2"
        },
        "item": {
          "id": "715c2465-d624-4f36-acfa-9edee828ee84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ad97e221-d0f1-43ad-9a63-9c04f27fc3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f4ac2-5a54-47bb-9ae1-01d816449655",
        "cursor": {
          "ref": "024cab49-0946-4132-9059-c05024682293",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "13007166-efc3-4377-98c6-9d9f1e0b5cac"
        },
        "item": {
          "id": "aa1f4ac2-5a54-47bb-9ae1-01d816449655",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b5664cf1-08b5-4549-a12f-fe6a759189cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83e895e-ec27-4bb8-a024-eb2114945b3a",
        "cursor": {
          "ref": "6dc3e5c3-9071-4146-9a84-d9e811bc8889",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7d146f17-ecd4-4dfd-b06c-60cda4c32d46"
        },
        "item": {
          "id": "b83e895e-ec27-4bb8-a024-eb2114945b3a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a5a06ed8-65c5-490b-a7a7-1cc8cd9f9f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8d46d-0871-46e7-9eea-9350efcb4f6f",
        "cursor": {
          "ref": "516ebf16-6279-4dd7-9106-834b2cf43f7a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9694c83b-d2cc-4e47-91a9-f1f972a8dd8b"
        },
        "item": {
          "id": "38e8d46d-0871-46e7-9eea-9350efcb4f6f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6ff3e915-04f6-4f58-9ef2-612755bbb6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423297b6-c0c7-4aea-9d3e-874b0fd918ac",
        "cursor": {
          "ref": "f4fc8317-91cb-4e48-9739-1817cc1b8abf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ba908225-4266-424f-b627-768ae0569ded"
        },
        "item": {
          "id": "423297b6-c0c7-4aea-9d3e-874b0fd918ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3b6d537-b0ee-440f-9613-dbe86c42778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bb20c7-e884-43fa-bb56-716a8f9c793a",
        "cursor": {
          "ref": "fd579e26-8d37-4618-bb0d-1aff457bf3b7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bc2f22f8-97d2-42fa-920e-0c44ad659d96"
        },
        "item": {
          "id": "24bb20c7-e884-43fa-bb56-716a8f9c793a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cd77ecbf-0fa3-4c26-973c-157f6ad9a86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23d20bc-1cec-49a0-a26e-70d75b6336bf",
        "cursor": {
          "ref": "6540d47c-d5b8-4014-b64c-48c0d244dff1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7212e08f-ea1d-4349-bb46-94ba9dd1b1d5"
        },
        "item": {
          "id": "e23d20bc-1cec-49a0-a26e-70d75b6336bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ffa129d2-7ee1-4b1c-a115-b59b2000c484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de4321-0f5d-48ec-8e10-11961747f08a",
        "cursor": {
          "ref": "2f54b62d-dc68-4f3a-b853-8b9c7c6a6c42",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "87b65003-fad0-4298-9f78-b6d54ad384df"
        },
        "item": {
          "id": "35de4321-0f5d-48ec-8e10-11961747f08a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d8d0a3ad-4195-4dc1-b2ed-2a4f7245982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a216486-22e0-4e7e-b5f6-850d5b42ee18",
        "cursor": {
          "ref": "e36ba3ad-74e9-4196-acc9-06f763cb951f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "370fe919-c88e-4dc8-a87d-4f81cff9be4c"
        },
        "item": {
          "id": "6a216486-22e0-4e7e-b5f6-850d5b42ee18",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "971da614-e99c-4da0-a6f4-67f0aaa280e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc047c9-c0a0-44b8-adb4-b1581143eac7",
        "cursor": {
          "ref": "7430a190-6271-457e-b83e-4aa0935065d6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f086f9b1-9c2c-444f-a309-2d786e37a4d2"
        },
        "item": {
          "id": "bbc047c9-c0a0-44b8-adb4-b1581143eac7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "25591b8a-65a9-472a-8b25-bc093ff22234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d8dd2-9487-42f3-86ee-e93f8ac54164",
        "cursor": {
          "ref": "4d3aacc9-4995-48fd-b966-58c0a91fa084",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "216eae4a-4d22-49c9-b6bb-2f2d179196db"
        },
        "item": {
          "id": "ad1d8dd2-9487-42f3-86ee-e93f8ac54164",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eee686a9-bcd4-45bf-8e34-68b211455bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a2489e-0b40-4690-b0d6-c47eb84b753e",
        "cursor": {
          "ref": "9dd10605-53d0-4b34-b5c1-9133797403a7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c7363f86-dac3-4707-93d9-f3022632ab53"
        },
        "item": {
          "id": "e3a2489e-0b40-4690-b0d6-c47eb84b753e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae7592ff-9c33-408f-a2de-65108c841b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325c58d1-0453-448c-a0e3-61e04e162e33",
        "cursor": {
          "ref": "d2b0669c-ad0c-40b7-9d39-d9abcb025d95",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "912ea17f-6d3f-4317-913a-18706f3bb981"
        },
        "item": {
          "id": "325c58d1-0453-448c-a0e3-61e04e162e33",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fbebb8bf-3bb7-4252-af09-0c6a6a1fc2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb9cf72-13cb-454d-994d-49b9ba20e241",
        "cursor": {
          "ref": "5e449ee5-4698-4b75-ae50-60d922f939d3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "45284694-0c73-4783-a374-424dcb29b9a8"
        },
        "item": {
          "id": "8cb9cf72-13cb-454d-994d-49b9ba20e241",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "79a7f6d4-3d69-4c39-a949-430776da27ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34789338-a045-4e0f-a12d-fba240926c27",
        "cursor": {
          "ref": "140557c4-b8ec-42f8-9533-55452049df02",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bad78bd1-575d-4257-b016-20a77248481e"
        },
        "item": {
          "id": "34789338-a045-4e0f-a12d-fba240926c27",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d38fa7e-ec6e-4490-ae44-26ca4113e818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5958b-df07-4573-b834-fe1645f7463c",
        "cursor": {
          "ref": "1592c4da-c906-407e-bfe8-f37bb75cd4eb",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5e3b4e97-2e4c-447f-8231-066b54711f84"
        },
        "item": {
          "id": "f8d5958b-df07-4573-b834-fe1645f7463c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1dfadf99-534b-4359-a36a-f67e54d7b928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016e862c-b486-40fd-ab08-ea3b6ee34367",
        "cursor": {
          "ref": "48eeed80-4fea-4e3f-9536-ba49fc89ac84",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "abd3ec16-2bfd-4c16-8203-e53ac6b50df8"
        },
        "item": {
          "id": "016e862c-b486-40fd-ab08-ea3b6ee34367",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90831e55-d4b2-47c3-83dd-0f62999a4c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c84bcf-dc6a-469d-9d42-1ba3274dec76",
        "cursor": {
          "ref": "a3cc052e-16df-4783-9b5a-aaa007edef8d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ec6c776d-a745-4142-af2c-3a747dc8b13f"
        },
        "item": {
          "id": "a1c84bcf-dc6a-469d-9d42-1ba3274dec76",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bb8701ea-ae45-4545-948c-c28b760c0395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e26671a-01fe-4e2a-84a6-f4af7357924c",
        "cursor": {
          "ref": "877aff0a-c3f5-4265-aa26-eda7e7915c10",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c1d6e9db-57d6-4fc5-98a4-854a2b3ffcb7"
        },
        "item": {
          "id": "6e26671a-01fe-4e2a-84a6-f4af7357924c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0815ef33-2257-4cc0-a778-a042d99b2b6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28825d7-853e-4a75-b8d9-b28cda36416d",
        "cursor": {
          "ref": "ae24427e-7756-4666-bc18-9b15d92d47e9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f9fff884-3888-4bf2-a366-65ce3a1ffffc"
        },
        "item": {
          "id": "a28825d7-853e-4a75-b8d9-b28cda36416d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5b847bf8-0a76-45f3-aa3f-4301724678ff",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d17aa87-e0d6-4c6a-8854-de966bfae01a",
        "cursor": {
          "ref": "27a07cb8-13f5-44f3-81b1-cf85cd3b6556",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9344358e-d7d5-403c-b8c4-e4ade7346e58"
        },
        "item": {
          "id": "2d17aa87-e0d6-4c6a-8854-de966bfae01a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d338d811-8ad9-462b-9350-e25acfa70bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 3322,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d98be02-1cb3-45e9-93ab-4cb3e52910b1",
        "cursor": {
          "ref": "efa716d1-b9d4-4f29-9af0-46abd217c2fb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "32c3c233-6d47-468e-b830-9d86ebfc7c98"
        },
        "item": {
          "id": "5d98be02-1cb3-45e9-93ab-4cb3e52910b1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9370a897-ceaa-4bc5-9bee-38dd7987a1ad",
          "status": "OK",
          "code": 200,
          "responseTime": 2687,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9208f00f-fddb-455b-9618-14d5692b17bd",
        "cursor": {
          "ref": "e8e0462b-7b8e-4272-a0ce-0f21c66bfb1e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2381b5ab-4b3d-4373-be72-04bbebd8aaba"
        },
        "item": {
          "id": "9208f00f-fddb-455b-9618-14d5692b17bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "004644d2-4d02-427f-be1f-ee98c8bcbdaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9208f00f-fddb-455b-9618-14d5692b17bd",
        "cursor": {
          "ref": "e8e0462b-7b8e-4272-a0ce-0f21c66bfb1e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2381b5ab-4b3d-4373-be72-04bbebd8aaba"
        },
        "item": {
          "id": "9208f00f-fddb-455b-9618-14d5692b17bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "004644d2-4d02-427f-be1f-ee98c8bcbdaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea76cd6-9da5-4017-aa7d-fbbee5b09582",
        "cursor": {
          "ref": "b9a1441d-71b7-47de-8fba-745cfdeac9b7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6079e5e3-053b-409e-9932-471c6a19eea9"
        },
        "item": {
          "id": "eea76cd6-9da5-4017-aa7d-fbbee5b09582",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad613635-17d6-47d9-91c0-44604b350690",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfe5662-0b00-4e7f-8da9-52b5576fd8af",
        "cursor": {
          "ref": "76e6cb94-6fb4-48a8-938c-de77e034065f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fbebfd12-a91d-4486-8c03-b95869d2b1da"
        },
        "item": {
          "id": "fcfe5662-0b00-4e7f-8da9-52b5576fd8af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd4a0e67-1844-444a-8b17-f755e9bdb9a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}