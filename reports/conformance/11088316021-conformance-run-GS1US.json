{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7d62d118-0e58-4eec-ac49-7d10ce17590c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3447bfba-bc61-49f5-a132-85ff1666ce31",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62a657e2-2be3-44cd-aa38-97f3ed890172",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a83a7b2f-1b3e-4fe1-bde0-ea4fef6f7e86"
                }
              }
            ]
          },
          {
            "id": "244aa37d-635c-4bb9-98b4-285df39d9417",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64bff1bb-6577-4e86-ba18-d14976b1a094",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "09442ff6-a0eb-467e-9f5c-9aa6e650dd77"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0573d3fd-949b-4f4f-8588-ceb91de68ac4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a28aa3b4-c3ce-4e11-be03-88ce75fc50b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a00c170-d5d1-44cf-8517-0957eca6cce0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f57bfffa-2198-4225-a647-4232ec02778c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5851dd1-f475-4baf-8d46-b7e5bc2c159e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ee93c92-a7e9-4359-8cc4-e5f29a2a44e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27291dad-6cbb-457e-a8c0-2248fac5e169"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a08ca429-be34-4b85-9f3f-4fed0d392f6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af5c5961-707e-427b-a37f-a200734de5a9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10a6c44d-ef1b-43ba-a945-7b865a4d7adc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13cd3147-b205-4081-9c80-18680c762a56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa21bca0-8226-4c3f-8743-75499e97344d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca1ec5be-351e-45df-8c7e-d8ef7c032452"
            }
          }
        ]
      },
      {
        "id": "8f0ceec9-0939-41c6-b034-1c8a8fc98366",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b39ed9c3-6b3c-4566-b6a6-7bb447ffe8f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "488ff398-5f25-47d8-8408-1087e894027d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2173bde7-7256-4f8b-b435-8b7e3b6c32df",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d642b35b-da1d-4cae-a1bb-376162dada99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ec0bfe2-995c-451d-83e3-785c18726e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8511166-7661-4113-b5a5-f7472123a562",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1082f-b775-4be8-b0bb-fb5e2af76451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7345dc1-b31c-4e02-9f20-d9157bc02408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb19240-6d95-4bd6-b86c-1a27523c2158",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaba5ac-5987-4623-916b-d10e89312f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "577d8430-b72f-4bc2-8001-c2691a6e85fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a95cfdfc-9f5b-4a24-9783-6a9618f20b0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e104329-4e82-4be8-bbc6-80a42eb44edc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5a6abb-08e9-44a1-b4b0-52e579b6afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5554a33-362c-4bc4-ae82-d479d56b7d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ade4d57-016a-4cb4-9df6-1aee849fc807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef26f688-c169-4416-a1f1-b2cefe218f48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d648504-fa78-43e8-8381-11e264dde599",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57547c32-5491-47b5-8e8c-3ed70a733126",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62a08789-23ff-4157-8fcf-f9dda58d36ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "09bcd95d-45b1-4822-80fc-5151e974df8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a28d05-2f7e-4807-9d17-6fa7dfc5d84e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ebb9acd8-8fd9-4dfe-83b9-9d804d6b1147"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4242676-83d7-445f-b757-13a7e1c79c2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4ee824c-5a21-478c-980a-c0dd687de5c0"
            }
          }
        ]
      },
      {
        "id": "63b7bf16-0c3d-4e10-bf8f-2bb36430bf06",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0007ecde-eb28-4e94-bd91-065428f69a4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9522bb14-0fa7-4cf9-8561-9cdce973e65c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "29f2110f-d2c9-4583-a0aa-d382f21fd278",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fe5526-3c5e-491a-90ba-5d4ae6394ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06a54a9-c926-45fc-9482-34649b60dbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c589bf-e7cd-4188-96d5-8a65dfcc299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52aacb9e-6726-4526-b0f9-172d9ac0785c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab43bc1-e227-4b29-9403-5bdc68b6ac02",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec37f9b4-73cd-403c-86be-bae4ef583f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffedd5c-8f85-4927-adc0-255749b2c778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9243a563-269a-4b4f-b9b7-d1ee418132a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c31203-a04e-417c-8247-1c281ac739e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4f3331-d294-466f-9f04-1dec1fd49ce1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5d8d93-7f45-49be-9a73-7771ad81dc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c0c724-45e5-4796-adbb-d374dc5e67d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2208422-bd1e-45e0-b633-8090e0506efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eafcd06d-a1d1-4460-b222-35ffa5a2d608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc9b061-e299-4678-8710-d37da182357a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712dffb3-42ae-4e3e-a21c-ea4071f659ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474f602e-2355-47e8-8b3e-4ba739c41ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b98b9a6-1feb-45f2-a264-05551e5fb7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc882e8b-1d83-4d4c-999e-2168d7b786ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed3323-ab1a-4738-a874-cab02cf32dcf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a693c01-cd19-4ca7-bb0c-f1f305b3c657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2f7e9b-994d-4cea-ba47-f9fae2df9dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efdb50c-a2e5-4229-9f80-61f49a519fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc30312b-d25f-4dca-a392-ae3961dbd11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808e780c-5564-4d9a-822f-92747fbc8673",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438a58e-2f03-4c38-aad3-d2f24816767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95ccd50-368e-4cfa-aea7-b3600c9009b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1091f9-3031-4b40-ac52-dc3215266158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66eac49b-249b-4c17-b331-0ab7e4d28b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6237a7-43c3-4d3f-8faa-87d7134ec4b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2054a606-ca4a-402a-8721-6f7b2271ada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901a94af-4428-47c7-bad9-9be2e98405de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8f07f4-c2c1-4873-a62b-fe834c6c523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf3131c1-c09c-4471-b4b5-b6df62a10149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4a13a9-435c-4b42-b17f-511cdcec1592",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4d9825-230c-40bc-bffd-40aec442bafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffc8f35-2fa8-4246-b8c5-ebefbdf0bd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf862578-1d7f-4307-a92a-f9c5cb4613b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e1df635-2a2f-4629-9df8-823cb257c50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dd70b4-5b4f-477a-93c6-3b32c40612c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417543af-0cbe-4894-891c-f2456201cd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ffc441-a28e-49e5-8bab-d817ab48e495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35443c-f8e1-4c79-bc14-3fa7070df2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa0faaa-9d85-4214-8ac4-047449e0b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c2a123-e3b2-47b2-9487-8d2ae998c493",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ad3b7-f282-4105-8bf4-e36e45854bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d4b622-bd7f-471d-ade4-623642f4c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85173fd-888e-4e5e-b818-2b74dbc2232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e04aa1c-8d60-4d6d-bb28-9e6b4fdca681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b712bfe6-4f21-415f-a5f1-e02b7d91bd33",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4538011b-8ad2-4393-9b2e-bcb128dbfdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25c523c-91e5-4b84-aab3-620e3895dcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276bd420-66e6-4e76-9aa2-0c565842e3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d3f7986-bf85-40d9-8a3c-a1b5864f1cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe3e7c5-53f0-4317-98d8-900f0315ab74",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc8cdbb-bf23-4092-b331-9a7509da094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9efa09-6656-41e0-a4b4-8bc62bb99062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b369e8b-3e82-4902-b2cf-e59b7fee292e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60792a9f-daeb-44e6-8aad-71de01e873f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cdae83-1f73-495d-b33f-afceecc5b900",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b46dae-cf0a-43e2-939b-7a0ec658dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a6b59a-fe9c-4ed7-a25a-eaf19b1d2435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d39020-7366-4b3f-bed0-8cec5989463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec61a8b-cceb-41e9-9c2f-bf7d82448ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35db04a-ec1b-4c8b-b22f-d7db6deb53dd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d860dec-e423-4908-bc33-1bba37b22e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f2e93-e8f9-417f-840b-7ce4fd755221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b71a52-e4a0-4082-9b2f-25c8fccbd170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d96f57b5-03af-4e81-8bcf-b0668b59b7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9f51da-702b-403b-a4b0-d673c2c840fc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c85b29d-671e-47c3-abad-734949b5e592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b203fd49-a301-45e8-ae93-93184acbb910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc83ce-22d2-4e00-b78b-33e93f6a5637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557b399b-8401-47c4-9db7-e019691019b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca7b9a-4875-4a62-ae62-91065e78cfec",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e452b7-7d39-4bd6-996e-b4cd1671060d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b348cc7-e98d-4b22-9503-b02b50e5e0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd25181-32ff-4007-97d4-99d35c8bfe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434008d7-c58d-44bb-8c43-b457fb05cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcadd59-57fd-4067-a53a-b5dabdeabd32",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6004b77-1a74-4568-8aac-0fb73b510d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db283074-7f55-4466-bbea-f2e7f1b52c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa3188-d051-415c-bdd0-a0aad3c9d48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e8cea8-d2e5-4c0c-b829-8a1f7f079a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdaca4b-7e97-4381-a735-baba96bfc6c7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566ea3d3-8add-41ab-8c44-414a5c3dcf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bbb5ee-4ed9-4534-8a08-f7d51e2c22b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b6d86-53a5-45b4-9c49-b892fba43fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e943ed-dc05-4ad7-bc70-5df6f0980a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d8e07e-a7bf-48cc-8200-339a1b12f916",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5d3d6-a50e-4056-9647-d3731f4d9e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00065f85-b975-4b60-b938-a43617b4de2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb7c82-13ef-4480-96f2-37034c13c40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3d3770-6ba7-4bf7-bdf5-93158d8440fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576f8951-4bfe-4ab2-9bce-7f3d8160df9a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac2afac-ec49-44bf-bf35-19ac41bb5c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37186d9-4ead-43ab-8ebb-aa20f60a2d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f28062d-a0db-47bf-a1ae-9f13fd81680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef532482-7588-421c-a37d-b98940500965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd276a4f-82a4-4108-a576-1ec3b41a2040",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baacb02a-76a3-49a9-92b1-53064907b89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddb3526-fdd3-4d16-b337-1b406f0ece45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ccc14-73da-466e-b1b3-30d95d1ef068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3edfd277-8269-4791-8f0d-bb45d3edb422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022293b0-4d7a-406e-8afe-26874f0535ff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a59e178-9579-47bc-80b0-f98e945db3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2594fc8-93b8-457b-aed7-eae21db7a7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aac260-5ad2-474d-a15b-d9fb6286c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4b8d8e-22cd-406f-b70e-f4914bd32bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37784c40-2a39-4c68-8eda-59fc4ec1b973",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b262f44-7820-49dd-a19a-614c8e569984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b33a965-0975-40f6-a344-834c27bac0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e34c4b-5d66-4cc4-8565-2d47d7343f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67a0d068-ab0e-4646-b8ad-f91ec3d45363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1c0d76-3c41-4852-86a3-633f7d51b9c2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4fe27a-f46c-4c87-bdbc-1f08a5b3dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6967d587-b56f-4669-9737-7c5a246a0ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1dd03-42c7-4dbe-afa9-4c891818c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39d81a5-b7ab-4ce5-857a-096952b73b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d55f1e-1a12-4cf4-9cd8-a97646f43ee0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561d127-d2ff-42bf-a338-12f291f94967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568ce98c-c6e0-4fee-a370-1b81cf4eea14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f35c91-a852-45bc-9ede-84d53ea50bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6d26ef-a371-4f25-af98-a695d4995689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f611d4-b16c-4e7e-b5b0-a73faef17ccf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65de2b3e-f2af-46f0-a365-4c84a2875b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8052fa05-c5c3-4b03-8108-25eb1274e08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b282ab6b-e8bd-480f-8d79-e5b6f121b0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce24dc45-1a62-4db6-9342-585933208f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde15da0-5a17-4c7d-817a-97faf6c9a43a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc52726-eda4-40ed-9530-265124556ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a85c6c-15da-4d3b-9e1e-ccdfa76b8ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dc9c30-7391-4daa-840c-43eb24aeb943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1172fa3a-3870-48e4-93f5-7b3b698c83ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e82ec4-4ecc-411b-9328-e533d3e1b19d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984bdfe-37f0-483e-b0f5-201c0cdc8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e87d772-02f9-477c-8bea-3e8d315dc387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ddc8e8-13e4-4a76-8fde-0cbdb09b6092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72b26c1-2fc9-41db-a81c-bb486b97a9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5d0aa6-0609-4f9d-9081-197263e98ad4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eee6bb2-47ee-4127-acef-8e1e3987e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2405433b-58fe-4fa7-9a61-336192fd4261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716c8b11-9af5-46ff-933b-cd86b84efd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "644aede2-f05b-45cd-96ee-59015d19b314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594198e9-a6fe-45cb-b868-62f166fe2dbd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38afc3b-dd11-49d7-b26f-67ce06526bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c33fd13-67da-4b40-a4a5-46ba30117dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607930bb-4440-4dbb-8767-ac33a99040c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbeb693-f161-4bc4-bfd6-50281e9f1e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6496698-c01c-4e09-b8c1-e3930551a7d9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f85e50f-b733-4879-ace7-99375de4b9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eca55c-c01b-41f3-ab1e-ac3261b752ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9746538-6ab5-4c82-8f73-6fd063ed235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c971a07e-9886-4bf7-af8e-eec2383d330a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ab275f-0265-449e-819f-f89ec15b13cd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d124ea-1703-418b-979f-a9a7c0d06082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e5da75-fbd1-4b0c-8f20-b9c3cb60d4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4395adeb-2d3e-476c-ac88-a84c9c2282b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b461cbc-b2c9-4812-86c9-b3dc0e24126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8ea6b2-eb97-4ebd-beb0-ea5ec29c57da",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306c693-844d-4566-b0b6-0bc5d78b52f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e9147f-cc8e-4887-b75c-949745de2df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d08ef22-e62b-45c1-baf9-fa5af2f9da4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2340a217-43df-47ee-b480-17c9614a5fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d424e58-179d-485a-b479-c828fe8d16b9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4d8c0-79fc-430f-a794-27e23212027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893a210c-970d-4b99-8f43-498f490e6fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a599e-c3c9-420f-b27a-f5259d88b5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91893d2-260a-4a62-9ead-17b5e2ba894a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab2c399-4abd-47c6-8ae9-75aec3ad54cb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7991b-3d7a-4384-b9ff-51ff74758312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c230ea-8b2f-4afc-9504-1834ee3b7d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca6689-c008-431b-9c42-4d2e84632a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a3346394-7b45-4271-90e9-7c9fcdba8204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8569e7a0-5f45-4713-b9fe-642d7ecfffe4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd9cfa5-3c36-47a1-8dda-7aac97f067cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a2a08f8-2b52-4147-ab55-c67ad1334a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d1cb3-600e-4ad5-be1c-43b554969df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96c180c8-ed4d-4c5f-9b45-f8c6f8edbe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f4ff19-9289-4089-bf81-50927d4fc04b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d8c2aa-6cf4-4a15-90b3-e13f304b63b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2063b16-96d2-4ed2-af9c-c84d9ce55368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6742c124-1111-41e8-a3a7-20386dd3601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc998d2-5dbb-4cc0-897d-0a45877d14b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b0115f-9407-4001-8afc-141293521a07",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b041704d-e48a-4ded-936a-52e1f56dacca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f40c7f7-cff6-442f-976c-4cd96c6bc3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694edb11-eac0-4c80-9904-6fb16ebb9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f2b3de-f85c-4b5a-ae0b-cf5048141da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f88a4c8-cd68-4acc-a939-518a8dd6b57c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431496e2-da15-4120-ab73-3f01bf472448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da99ad30-ec6c-481c-95c1-31fa92cde676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ed4c91-ea17-4a04-abb0-03ec529ac215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c82f69a-f339-43e1-8cdd-19581c68de79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2f0a3f-25ce-4391-b0fe-d99faa068043",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade1ae71-e22c-43e1-918e-503149dea0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce0be89-b66a-4b87-93c8-2be429ed5569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab68b5-12dd-4362-91e8-f1dd374c808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fde01f1-d1fe-4130-b4fe-c9d882695b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b721c7d0-2541-40a3-aea5-506983932592",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b9446a-80cf-4b19-8be4-ae2335feff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a23d56-c79e-44b9-8f62-063387197a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b94784c-e62c-4434-80cb-7715754705c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b62d1986-872b-4ac1-a641-c55534b3898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d098b4c2-9274-48f1-a125-69d017b4566d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73903bba-c634-4477-8467-63ee1d6d884f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8b0e92-6127-4454-bea7-8be254d65a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee0731-0f32-452f-8b03-d6b82f66c014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7848a1-ee96-4df3-aa7e-5fafdeb18929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2663e733-f7be-436f-acc8-3b09ae14f5bc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fe1dd1-acd0-4734-b4a8-0b49ad4064d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43d2ecc-bdff-4b15-80fc-d5dd8b925f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c5d8f7-a55c-40a8-82df-3da1206043ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8dadd8-a189-413e-8a63-39f31bdfd010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f37639-bcd2-462f-8904-b1906cb9c2e9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5524ba2d-9188-492e-9afd-93d8f0271a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cc4f0e-a5db-4adf-a6c9-b0eb87809837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4c53a9-4e97-4e6a-8e73-832d42939315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe0fe55-77f2-413f-b0b8-4f1106a2c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c7753f-8fab-456e-9268-c267968b34ee",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d1da52-ea1e-4d46-b5e5-deb009a532da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c337c90-13ee-4704-8baa-9ab4d1e56641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e23b682-7f5c-4b22-acc4-e0d97360a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d15db90-4245-4dec-a36e-8ee94896667a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1234d898-3d2c-46d4-ac93-f89e0fe4d00c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc003f27-1291-4e63-9888-379edc161b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c49b55-9c57-451d-b8d4-0d383a258a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10795cca-1030-44ef-ba4f-a0569ad15edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "777a57d4-cbf1-4261-920a-5360b6ce067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e556a5-7f3a-45b9-a7c0-fd7db396ddf1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f4f14-fda7-44f0-a0e6-3a925fcee7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec7cfac-46bd-4cd0-a49f-e009ebf5b37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0657ca3c-58b6-4641-9cf3-35f7239bae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22e9111-7a96-4d20-8050-e901c0e4852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc54b06-537d-4fd2-9798-1127cd41cd39",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791f9d54-3646-4dee-aada-65a3c522bc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210fd002-7760-490d-b2ce-4b3ba411c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c17907-83a1-4250-8ca5-5c9eb1010e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcf77b1-66ef-41c9-8728-7b8f701e14a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b7e15b-cc01-4f1d-87e5-b68672c453f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4b928e-1594-450b-bcbb-34c44693a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbc6c59-8583-4ce3-9461-c787a797d9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b67e2-23e5-4983-b02c-16a581b64ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adc37b77-e534-4253-b82d-e1dc7ec08a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ebffd0-b84e-4ba6-b4be-b5de8749c8b2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde9ba4b-5fd7-490f-b431-d252c128dedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7bc0af-1c90-484f-b770-4e31436eeb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc775cd4-434a-4910-8ff1-22842f5b1c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afa101e6-e71c-4a51-b34e-390763c9bf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4746772-a8f9-49ba-800d-6532e5f2a735",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8c86dc-e24a-4980-9ccd-41b1784936c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed58ec67-b46e-4854-bdad-200af19411ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94e7057-a3a4-4a1e-9855-02c703e9c2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c22e4d0-0d28-4832-af8e-3e86f9e63d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ece0d-685a-49eb-8a75-fffc71974b99",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8061b22-1885-4a41-be24-0dedf7f8026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90b883b-0456-4801-a996-443a011604a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78463320-cfb0-4c57-902a-0254a353ba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00f53ce-6ffc-4524-865c-941c90466996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8e61d1-c22a-475a-8722-476616215ae6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3317ed-d145-4481-a1a8-dcba2bcc516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1ace09-e4a9-41ba-aa77-444c21bfe438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f587d92e-919f-487e-8eff-2b8f7fe02ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ad39b1-8c8f-493e-8925-7a754bd6b06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fa6a02-7a78-4229-a74b-5a2b703c8f14",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28d525f-5843-47e7-bec0-47c235029999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d55f66-b210-40f3-b4be-fab7969ad337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1fa186-b655-441e-a061-6e44aee992b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c5b291-fa0c-441c-b70d-b8bba03cb6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bc8922-99a3-4323-a112-f50538bcc752",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25537f0-f362-454e-8341-3d0e27bead2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8828aecd-2ab4-4ce8-9ab8-c1cf116d2eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5bc498-8459-440e-8dfd-498d16382cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86372920-fce2-492f-88ea-a52733093247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830b6981-5e8a-477a-98f4-a3f96a2d348c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1afae5-0f8b-4f60-a4e3-d9cb777712cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5183a29-7c1d-4d62-8e3b-40dd4f39b576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd921010-c5be-463c-960d-9cff8692737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3ab2e2-f284-4ead-8685-ccd885cf83ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63edf864-239d-4d0a-b8ed-32b99d024c76",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9354e687-1d9b-4900-b3a1-f7c7651dd5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed2c3a5-8081-43a9-b516-4c7b16c6f3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130b6af4-06ee-43b8-b6c5-cc0161298461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f76d9da-0e3d-45d5-999b-d8b64a5286e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707775c0-9a99-4bf3-996c-296e6cdb2ee7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a401d3af-11da-48a2-b7c4-7b422c28c721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b23ea1-18a2-401b-97e5-9f84595058fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16c5d2c-fc0c-42ab-87d2-368cbc32d57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b19fafa-7f2c-4934-84aa-fdb4aadc4630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8891c85a-4995-466d-b845-945b3f968a9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc4a616-1990-4c75-9d74-786c92fb0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb194309-c4c8-4cda-b707-bd77722ad5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba4c21a-52f0-4c1a-84a3-b191756cc2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b470abbd-919f-4a4d-84f2-ed7cb6b00ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcbe26e-2f8b-4ac5-8d8d-6dc2eafde6fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed39f1a-b86c-4f29-a540-5ec3e570ca82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4854c08b-aae9-47ba-870c-b0c6865729bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006b3703-e722-4a19-bb64-71bf3ed39067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4ccf89-0cfa-4e00-8d19-cee97aeff71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8cef5-e925-45dd-b521-50894b5945a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e7c1a1-f093-466b-a45f-5b2d6090181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4132dbf4-46f4-42d8-964b-19c4c714e392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58eccb-f2ea-4443-a050-b97ae706978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "13864b34-4c52-4177-9911-d86512de6e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d296ab-8712-4fbd-b6f6-e3b5f6fa476c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f5740-1880-4512-9427-c8d578d6680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945f5c29-d225-45b1-98c4-a76b34b13cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5cebd-eee1-489a-815b-4433b5d9289c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a15333-48e4-490a-b2a3-c06ab10587ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f6be8-1b69-4479-9ae6-c70cb21c6175",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7ad38c-4650-4a5d-b2c9-2e8fb255984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7efca46-224b-4b4a-9978-469245176678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba5fcb9-f19b-46bf-99c1-d0372cfe1175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdae044d-3226-4866-a2a7-d6d9f328d329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b2e6b-848e-48f1-a5c3-d3d9a824b4be",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc71583-fdaa-4d16-88be-42c6d9b1291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76a9de9-7beb-4720-bd03-da7a26b8f333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61e4d3d-d0e4-42f2-bf62-8beb4814fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ffe960-1e42-4c8f-ae03-95b19becbcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479d65db-630a-4bac-b285-ae1755bf62a5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a552a562-903a-4f57-832c-a7c64d91fd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e49120-82b4-43cc-9f6f-7b7aa85f04a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb75308-a37a-449c-b2a7-3e4ad42b2711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ce18e7-cda6-40b4-8981-8bea1d487bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dabae1-cce5-4506-9f5d-2248831b0d1a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891ac113-56e0-4689-89e3-0bbe4e63ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50fe984-cbac-49c8-97b7-b2210d5a08cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157bde9-9a80-4011-9e5a-91d9e01ec1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9f8384-0f9e-4b17-85b2-57e1d6dc6dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e8554-9ac6-41b7-bbba-bcdf332c8ce5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2d0072-ed7c-4716-a6a6-b486bac49641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad12edc5-0672-4470-add0-3d72588a38dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3941954-901a-44c3-a88d-4d13887facb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20662e05-279b-4172-9418-b904bf07c888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632aeb1a-1b74-4485-97c3-70e1c6d074ab",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d733b3-df84-4bb1-8cfb-2aa6a585ca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28383faf-84f2-470b-97e5-5f3fda308a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1625a3-1e1e-404c-8f37-918f6cd66ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7eeaf7-9a09-4610-bb8d-3ed7ad89effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5917cdb-2b96-4076-af3c-bd574ab4aa35",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf0d393-17c3-4a13-966f-7f072013f600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53745ac0-7515-40ae-87bc-06594ac53216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eb178a-49df-45e5-a67e-d543ce5847b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "507bdcfc-1aef-4899-bf12-d422c57d79ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c907c428-fae8-4354-9462-1af9f94a0aba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2810314-4d3f-4581-9b09-f88fd8e5355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f66c2c-3bfe-4048-ada3-88d874829f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ca1223-294a-4aa3-a752-f85553126f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "014a46a1-4db4-48ef-a60a-1c9646e07263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95515c60-7968-4a30-8f91-0f9b042b31cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e1413-c876-4c68-aea7-1f315a53fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b58e0c-dd92-4d7d-a73a-97b1fa58e592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478461e8-62bc-4ee0-9c84-9fa1a00da3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "000d37ba-eeeb-4dd3-bb94-720668d20cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ae9c40-a661-4ec7-901f-f6796ed4150c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa86b04-28c3-4fbd-bf28-4d65b52ec281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e4b2f0-b631-4d82-bf2a-e31ae10947dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792a66d3-dd09-4fd8-a9f4-b97c9b74b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ba4503-ea03-403e-a548-fb915d3852a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44e14a5-906c-4c5a-8361-dd4736e3b121",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f21d5e-9bc3-4d23-b103-49520d131ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df5714f-f5e5-4e7f-873f-fe49aa1b0ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dc7a4c-df4d-4bf6-8e18-dd9d8b6dd9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a447a9-db58-40da-aa7a-9048a4fdcd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9052fe1-5da7-4cb3-bf9f-d3946936f716",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69da1db0-f5cf-4a41-864c-4da4932a1aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf9c8db-7825-4d22-86cd-9dc79351e2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82815e81-ed97-48db-8e41-618e755ee7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3b5c3b-a6cb-45ce-a5ee-91d593b2656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beb22b6-a7f1-4fe3-a731-0507712cbf8f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f29225-78ca-4a4d-9b1c-c6e9589e3310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469a29fb-ba8b-4500-b513-7341f34e428a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaaa7e8-6b24-4f2c-8728-729b9d7d01b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e5b097-a2c9-4321-8f6e-ead2312f51d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a047e062-fa31-43bc-b2de-679831138004",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb15c5-971a-4ac1-81ae-48c188d35f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe09ff4d-4ade-4319-8c49-1a50a7ba014e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ce6aba-cfe9-4bef-ae2b-5f75cb77f0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1731c035-7ce1-430a-bc49-909017a0d094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef7c86f-e859-4e96-af79-5e5483d52ba9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0441552a-c239-4949-949b-680029b5823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f15600e-81d2-4e2c-b204-3a581a42d57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88df3d1f-e1c8-42e5-bf43-7f52ef69f09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0aaf863-52d4-440a-a79f-7d5be3c41e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bbbd45-432a-46f7-a6a9-a2d1b8b4ca60",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a21dff-9811-43eb-8ecf-6e0818a98b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb913239-eb54-4b26-af42-4e795c1f8525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58fec1b-a634-45af-a77f-fdd165f73dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "024c2f0c-5f66-4a68-af53-2d284888f81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee02e4f-7f07-44a4-a693-d577dc181eac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990b30c1-b67c-41f6-b195-3c644494a1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41099db9-5a31-4aa3-afe2-c89970b74042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3de16a-0835-4097-a52f-97a820dab786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb4608a-285c-4504-bcde-ea9bf82af928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc50b5c6-127a-4419-a941-599225d3b769",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19520486-445e-45f5-b961-3a21a6506087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc9eb2-6bbe-4b30-93b4-1a8e9039f524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152bc106-2004-4e31-bac9-621f20fc1fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b64a1ac-954c-4451-82cb-67793d722c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52872097-9955-4355-b57f-5ce1e5540c9e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b73c92-a347-4678-be3d-f0579beb37da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb11815c-3331-4560-9bc1-acaa317e7a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc280b-a608-4b1a-9593-604210f1a6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e182d7-01f9-4367-a2b4-283546654335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f297cc38-24e1-420f-8a45-d00ee43a62ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9432f0db-e171-429f-9d40-da3e372d2bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a72a0b-8c97-452c-b119-eea07569020b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6742f5da-ffe9-4a08-8cc1-1009205b35d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aa90f6-b31e-48e8-92f3-b20010134caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4fe38d-6a34-49c1-ba02-c187abf382c3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345043d8-c4cf-44c1-83e6-7c0d9812a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba4b548-ee5d-4376-b6e3-7fa2f795325c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90be8691-5a68-4b06-96e7-1e01ad07e644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff43613-444f-47fb-8207-e3b60ef634f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc4bc2-d69f-4ce9-8e08-4b3b380f1f26",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b2e158-6c81-464c-bdc4-88e4b52e9117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8434542a-5548-4b47-b12e-a4df1f1e9c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaaa6b81-b158-4aca-b9fd-cc8044a13a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de1e6b9-3a9a-4958-943d-fa5c28089757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dae449d-c8bc-479b-9d95-f59b51149d8c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1cc47f-d177-496a-8c14-88ab4287b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed3dce7-82f9-4f21-8b0d-441f9c70aa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bedc943-189c-41e6-a278-876bbad1bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "012e5d96-9826-4eac-a3f6-42dcb69fd0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07265a43-c5c8-4621-acf1-b091409af2f0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b130eb-2961-412e-b5bb-609a6037a8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec67c7f-d4d9-4088-bf31-64a8c8a3156a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2176827e-40cc-43cf-b114-2505239c6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b898d66a-ca0b-4523-9e1f-ff254acf2f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3187bcba-eff6-4716-901b-a4806c8b7180",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee01c1-f9f9-454b-b0e8-488c942e015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b384dfd-2b5f-462e-b252-0fdbb74f1169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de237d6c-966b-4c03-babd-265315f4edc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7fefdb-5f88-4382-bf67-0eb3442cb459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135f24f2-df15-4bcb-8054-f6971ad30a99",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511238dc-100b-4d04-9918-18ba922cf4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336ab088-ed82-41c7-b63a-7bfa8a5b5707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0409aff1-ace5-4816-865b-eb0f67d242c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d882b66-243a-40d9-90cf-ab3569ab6a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df16cdfc-677c-4d44-a08a-7de4bfc17865",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf86badb-555d-4ba0-b8bb-ca62a9e1a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d608b9fb-4e0b-4ec5-b096-8a7ab480f9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d3c12-de0a-4e60-9931-c4014ed0cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4831bfa7-6f9c-4321-827d-67449681e74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe27b410-0bd2-4039-8c6d-6135fb4cdaa1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9536e885-60f8-4de0-a548-7d8d81704b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259d9f2-8ea7-4f2c-87e2-79fca2b71822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f0f359-d594-422e-a349-13a24d994096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a23f10-749f-4b95-a8c7-65239f55355f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcfbf59-d333-485a-a1dd-c4c1d19cb4d6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deecc67a-d58b-41b2-adcb-2bb4eaca4518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37044004-01ba-4047-b7cb-7f22ab675c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee7a657-a47d-449e-8b48-3df0835ba996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "581943be-adf0-4e00-9bcf-f5448e6cf70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90f2aef-9459-4d14-92a4-116464dadc4e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc48eaa9-56ed-4fda-9f04-a86a11028ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4fd5d62f-7518-4095-b473-ebbd98ec7808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d18ef-566b-486c-9110-8e641869a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b84e4f-2a23-4e08-9c97-968389347a70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75e67b50-3a7e-4a3a-a12c-636e53f1f903",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fbc1b12-01ad-4657-97b3-33bd4f6f85ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1502a-f459-4c62-8dfe-02f513283c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ea4508a-ca46-4c63-a17c-8dc74f1c4a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a5ec17-31ae-4e42-a7d6-a6bfc1bf5de6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3da9b9b7-7d82-481a-8d95-1052ef020f5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b914ffd-9cd0-4e1b-a62d-ed4ab0be3963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0216a5c-9c49-4f79-8451-2af7947af6af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a336ea8-46c1-47ab-91e2-471434aa02fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7242450f-2d74-47db-b927-48d10578158e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed290e82-55ad-4c4a-968b-92f1a41d540c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9e0fa13-44e1-4b26-93f2-4d5d414eb8d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "278a07f0-69aa-470a-bdfc-854c576acf63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9143bbff-82a3-4204-8659-f7ab4c004965"
                }
              }
            ]
          },
          {
            "id": "0656d891-bfcb-4ee4-a473-12b7a9c9e148",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a11e5c1c-f647-4c59-8c19-8c10d3cb2e8c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e42ebb87-19a9-4800-968e-58136591ee8d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b36ea68-3609-409a-b6fa-ba2377640b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78e6a985-dbb5-422f-acef-04af3931c678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c4b1c8-e50f-4b03-a595-f8b91b6005f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967a26e2-f121-4bcd-ae1b-b9005134ab31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "619710c4-f69b-4864-8830-68ff4de83f55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b35d11-5010-4915-81ab-4577e5137aaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b11d6b9-df84-42fe-ae26-9f771324edfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2706b97f-5198-498f-a2dd-590c4c578d7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a5de9e2-e2bd-489a-8cff-bb59e144c52e"
                    }
                  }
                ]
              },
              {
                "id": "91e9e044-ee8b-4597-bd72-cb405a8dfe5f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7bf4ed7-e7b1-4749-a7db-9f5d82030a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aacb815d-186b-49a1-ad27-9d0d0c552033"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31e72fe7-2915-4976-8a41-56f5d0607655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6f699f7-ab53-4ff9-a654-d4abb52b4a16"
                    }
                  }
                ]
              },
              {
                "id": "12ea4217-4dad-4e82-880e-c2e1965feccb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2fd358c-2e5f-472f-b498-046066cdee37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10cd0f7e-3eba-4acd-a12e-2313084eb518"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39093b1-1c52-492d-931e-d68fd47a08ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d3e1797-34dd-4378-a861-4e3d701cbe23"
                    }
                  }
                ]
              },
              {
                "id": "181ab7f4-b326-4914-9638-b0b966a2e6c5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2da60487-61f6-44ff-8791-716f4f18c91d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f64f20-49b4-4fdc-9a2c-98030834d82c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45345291-5e5b-439c-994e-07796d1fb771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "033a7293-e7c2-4a7b-8d7d-aeb5d3e61e89"
                    }
                  }
                ]
              },
              {
                "id": "e119f201-3d21-48ee-886b-b3658069372a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d39d9bc-026d-4e55-b9a8-96af1bf80a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6d3075b-a932-4b49-bc49-bac9c4d2ee8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7001dd4f-2d66-4b73-abf7-98d19395703f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "34d1eeb5-a2cc-438c-b893-c681669b9f4c"
                    }
                  }
                ]
              },
              {
                "id": "2087e30d-062d-41cf-bd50-1e9793266a5a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12d2cee7-163c-4fc1-b61b-a2f21c19e9cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4ccfffa-818c-4c7d-9d63-b17d1713c791"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3dacbb3-45d3-4780-9712-45d1e30d117d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb41f6eb-6ffb-492a-ad88-5053d3c95397"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d82cdf3-0bb1-4bcf-a74b-2c1d0bc1317e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84359940-3b37-44d2-89f1-e0941f9dfbd3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0adeaf9b-62ab-4853-a28c-99f7903c8ca4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf19b312-67d9-4a58-8081-7699a6ae24e7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d61c6fb6-041f-4a94-a7a2-816c0bf4d570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ad19e77e-85ec-4af4-8728-98778c2d816b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f00c9698-7d07-4ec7-8a6e-7acaa9f1f485",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dc297e2-eb8d-4c11-b9bb-db6d4b3a7ee7"
            }
          }
        ]
      },
      {
        "id": "d677ea9f-1a67-4a12-9be2-c8090aff9c1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "be9b809c-2d86-4448-ae15-d7a346078668",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6f08d43-c49c-4d57-9644-ebf482fa1933",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "144605be-820b-4606-ba3f-14b0046406cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d354ad0-29b3-4829-aadd-768236b50fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76ff414-1d01-4497-8b61-1dc8c06048b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6d9c48-ad31-45b0-843f-06196b2b2825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0bdf94-80cb-426e-b87c-92f9543e2df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a958b-1648-4d50-9ca9-88c6cd4b3f8e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdf7ae7-e5fc-46e6-a4f8-32a5854f0d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fed7a0a-f4fe-48d6-ad57-36d38222a166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b26f0d3-bf6f-4c2f-ab28-38b5c29238dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc9e977-5548-4126-ba51-5d242c63d5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab26ff80-c7a8-4313-9133-964e55e812ac",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9d3e14-d42e-4a8e-b6d1-7ad1a37d4269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4526b8-3905-4f9a-94e2-833b0564ee68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f0bf1-d9cb-452b-b66a-e39e4d7ed17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e7598-b151-459b-a6ce-37e9ffbc0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90064a26-098c-4655-840b-3890cec5cc11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04d45b5-0d38-49e0-afdd-806b31763606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f7817-3b62-45a7-9366-be3f6951238e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9333ba-2869-48bb-9793-ddb5d8e18605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db73e70c-d356-4ceb-98e2-22ecad1dba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f58538-8b37-41cf-bb88-70c100e86798",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e74da-dae9-46dc-9383-45d16fd2f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b71e0a-fbfa-437e-a386-31ee40f93eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956a232-f74e-4c1c-b331-59c94488909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "892749f5-034a-4e27-a694-ca35836306af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b6b8c-3d1e-435d-8fd5-7fc8388a8db2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8d3152-38bb-43c5-a996-6c5e624837ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e4ff1b-c93c-41e5-9c33-498ba8676d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40891b58-0540-4ea4-854c-b7076b0c896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08dce551-f093-4e69-b94f-f37fcbe88067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c904f47f-9521-4b9f-8d2f-be48dbddae56",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a02b0-33bb-4df3-a8eb-7e353ab75fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a67ff56-f172-4bba-b706-a638be4543c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a1efad-1576-4cd9-b6ac-5dab7dee9a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "802c9080-72b9-476f-a1c6-34bda5094296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fb27f3-9414-42ac-957a-ba7f712aaa62",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7590c-5b09-400f-ae1a-df7d6cc76aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c665a7f-68ef-4cd0-8738-3cfaf55ec530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d82182-3ef4-4a45-84e8-d5a8407f39bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece3d242-a170-4c59-bd5c-be770924e19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab06967-3310-43f6-950a-aaab9640248d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c09ff-bd84-48f5-b877-bb4ae7b2a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3376e261-b6c6-4a95-8ce4-807be19e4b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05757b5-9cd9-4319-8311-2567090ef6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0ab763-6524-4a5d-9972-3716c5faec1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a829afb4-d6b0-4c7e-9be2-9b5421f33fc0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbbf02c-e495-4bac-991a-524ecceac106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca0ce6b-e533-4a79-9d4d-8395cb0c67ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc95e6c-7914-4dd1-abcd-7175c38ec41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c74e972-05f3-4fd0-a74c-d29fa387d703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd0115e-8bdd-4ef3-9a48-9fdd7f6eebdf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80e45d4-9b21-47fb-8bf0-535fe5889e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f09905d-fd16-49f2-b135-e0a711fd7822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6ebaad-3e34-4a87-8d6b-237fff33810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3e7203-6643-4cd4-bfbf-7bae4556e744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297a9f3b-e43f-4496-b53e-c29f4ca31424",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04121b-9a2f-4e11-99dc-2b0187eafebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced15a5a-c2dd-44b8-867b-f9f9b4867846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f7fbdb-ac3c-4e61-9d47-f0d5bea434cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c28a83d6-e889-4543-8fa5-1a654cd2d111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daeb057-3c9f-45cf-b54b-a84f72f85b2c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c54efa-d62b-460c-a3f2-ed8e74d53742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a44012-ca8f-4088-9632-585d169b3ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bdb1d8-e207-48f9-bd96-c1ecb79a0001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cabb4f-d850-460f-b057-494861120be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b19bf5-5986-4a24-bdf9-2f2f28534f1a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4c1569-4293-4fcb-aab8-434b309c9026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6485cfc0-0dd2-445e-972f-16425517602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c44c48-2151-4999-8b15-c3f6baeb5529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7cbe6b-f3d6-401f-bf53-ce338ce0e3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd682ec-d887-4d4b-8d0c-de739a860a17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aafed1-d2d7-41de-9bc8-61fbe0a51e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8f5490-1b66-455d-bbf0-308e0c9867f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e26ab8-74c2-4db8-b84c-66f0fd0c1897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63c3be7-8314-4f44-a66c-8075e2c812ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4d23c6-0927-4b12-af66-601320b11a1b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906a8413-01df-45cb-b35b-de167b462f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb376a36-93dd-4564-a5ca-90482308bcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f10ea3-4823-42d4-8fe6-a709a4e50697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75eb1d1a-0126-4d1a-bb76-990faf662c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444c4630-eae5-4075-adf2-981b327ac98a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b21b2a6-11a4-40cd-99de-6c2b2d338cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b44237-38bb-4dcc-846f-2156388f862a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3f707-40b9-4299-ae0a-56b0d7fd19d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b408942-47a6-478c-9018-98c658eb662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4fde70-9355-49d3-893c-ddabd2e38412",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d54c125-89b7-4d2c-b011-5cdfe1d698d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdf5e92-4e52-4b46-ae35-348575210c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2763c8-46a1-47de-8a41-6dfd9fae9e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2451a7-8f0f-4d18-b2a5-d918f0d5542e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a825a53-a4b2-4a28-84e6-54e89436a083",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaccead-74ba-475a-9b78-9e2b9f5ead6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df5dde-e7ca-461f-84c0-7c9df0d06e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70adec-07bf-41c2-ba20-b3a962d3c69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b1413b-0604-4d8d-8f3a-418b0fe8ac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8f33da-1681-4150-a672-95987bad94a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f3685c-4cde-4ab8-b584-7e7458e582ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc92107-8814-4c3e-a814-a2067db12d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f763fbb-3454-4f7b-995a-7400aa071984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3df049-9155-4a53-acf4-4e626c3e03ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6393a26-c819-49fb-a7cc-e729bf5127d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe8807-38cb-44b1-bb99-c9d8769a58b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d216385-061a-485f-bcf8-1f056856bc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39128a97-43d0-4b97-80bb-1c380053f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d00a4d9-7239-4f84-a56c-0cfcd171c6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41cf8cd-0cd5-49ae-b47d-88d209fa91a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5308723a-c460-46b6-abc5-7a4449e14a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f9032d-c8de-4807-ba2a-405bebccbbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b7a239-f52f-4fc0-94e8-e0270e8f60ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60034f1-1ddd-466e-83f7-d3d2ac763bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6878273d-14cf-4b60-afda-09e9a369f935",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a392bc9d-cd79-473f-8762-13ada372c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4e621a-7ad7-45b1-8f5a-930ffce29d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0210b8d-0e0e-4366-98e4-55a0fbdee7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cda1165-9c7c-4f87-89ca-a857a4dcaffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22af694-01c9-4892-9450-66101320bd71",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50205a8f-0cc2-4460-ad2f-5eb03bc6d390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f59df4-a2f6-4323-abdd-011ccfd6b716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ddc950-f741-4e39-a793-efaf92d3c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfd9c5c-77a0-4513-82e0-10326ff03201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45563d69-e2d2-4ac5-9205-0026e20fcb19",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a7c36-8dd7-4482-9979-860604c8f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cdc5e5-84ec-44dd-8a10-9f3af8193888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2092a4de-31f8-4da6-8886-275876a2694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816236a9-7f58-4a36-96ac-0040eec6672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646eee0a-f104-4b78-95cb-11d825a045f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a7af5a-7589-4348-9f98-5d430393ffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d56ce7e-9834-4727-8bc4-cdd9e461a3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433ce72e-e856-4811-9309-14d40a4343b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67fee2b3-0768-4b24-83b4-6bf8e5ebc70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4be09f-1c69-4357-ad38-13379c88477f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1badf2fb-079f-4406-b4fd-9e6a7fef75c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5ec7c1-ff85-4475-991e-086ccfbe867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7371e7-8092-436a-bc59-6c7f3cb13961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea442ee-943b-4fe2-9b96-0825b531fb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d0e7d-02be-4344-b66f-e99534f28a55",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3273940-6b21-4fda-be80-11b2715d0232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0745aab-f942-46c3-b335-a4af88c210ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bfe041-b3d1-45cc-a6b1-41fd4fa8724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fdfbe9-a6fc-4e14-885f-6088e86e0f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f94adb-d109-4a6d-ba01-224aede49067",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df57dfaf-7c7c-4cbd-9f4c-0ad18fe63b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f496dde1-77c0-4174-b678-30d665b8bd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12368622-4946-445f-a48d-fcf5f65592ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d3fea3-5e0a-4f74-93d5-8da7bd0f6145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a46537d-17e0-4788-8c8c-e0cad83c6107",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d3da6d-a018-47ae-9b5e-3bb062cc2201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce685132-462a-49c9-b3d2-2168e84a6eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b52a7a-2fc2-4be3-88c3-1a968421561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa86f62-2e81-4bc9-84b2-aa181f080fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdd567c-2078-4400-ad80-d1890148b9b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4608d07f-0c40-42f0-b148-b73d889c72bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75713219-6b84-4e49-a7da-c75d956588db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8567c07-b75c-40ac-8325-e90cdb3acde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52f937bb-d777-4650-84c7-2a339e3bd263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230e33ec-f770-438b-9d04-a89560826b1a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af959deb-450d-487a-bcff-b5123635f9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce45a48-a486-405d-8a3b-fde7ee40099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4befe48f-69f6-496c-94b6-3140ed8877fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98ad8fb-d065-49b5-a47d-ac6057cb1370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4972e-5e50-4446-9cd0-25913cd69233",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe39a2d-ad0a-48b5-8fc8-5f381a8842cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc27351b-15c2-450c-99b8-b148531686ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f95d88d-d6bb-4732-bfb7-eaea422a6cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cd065c-6808-40bd-b6c3-49f89e631a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e11f25-32a1-46bd-9452-c0f7a895cec9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b65b76-46f1-4fe8-904b-6e8d9630b43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b634b302-7052-4ea7-be80-2a491176d958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867b0726-e70b-4623-83f8-41b8a4ef2c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bddc19c1-cc0c-4aa7-92f1-5423f60d250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ddb8d-bf63-4764-9ce5-f47768f45d80",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088f6738-c1a2-4dad-afdd-4dc1048a3beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db394f78-1eff-4ad6-8c09-040b42716862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18e78f9-ab18-4952-9271-1b7a604d3e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13bff35-a0eb-47a8-bcbf-1ce8ca92c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b51693-f897-433d-b671-05c86e058674",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff339990-1c3d-45d3-a980-38e6a54a821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7fa78c-4b1a-4f44-bbed-c4ef7fef6ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829e3ca3-cea2-4669-9d9a-79daff103dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e040a3a-57da-4941-8758-36a83ae3548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54b8447-9c2a-4401-ba97-6104caee5439",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e926e00c-b21a-45eb-b8a5-7ee56d6f83e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37684dda-2c51-4a19-8c0f-7d60572ea0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e3d69-3fcc-4b58-b5fe-013cef142c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfc6fca-d25f-4f32-aba8-82904b6c9a0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce2e177e-d53c-4a1b-8709-c99ac4eaa9c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17ad61c1-2d32-47ae-8c85-ce124df8f5d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0d122b-328d-43da-a243-c5a453f6f770",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6db5c537-6242-4cd8-b24d-22d5a6d5830b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de793d8d-6f33-4332-ac9f-c9b0c8a59b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf1217d2-2178-4023-9335-45bb54d3c100"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07495329-5dd4-452f-9746-29bb4a002611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77fd6606-bc36-4456-b883-bae052a7d118"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5ad7adf-535d-4b3e-b320-17a01f9954a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2e840b3-842b-4136-94dd-0405cfad8fbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390c06fd-ad29-4040-90a0-1d7ee63567bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0dfd07c-ce90-443a-a172-8933e71a34e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cee704c7-3b78-4084-b8b1-2e013a5b68c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acdd773a-4740-43cd-a26b-258873afaccf"
            }
          }
        ]
      },
      {
        "id": "d84bcc34-4785-4a5d-b75a-9019d34070d9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be414013-ede0-4745-b638-ce1987d5073f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81759ff2-016a-4175-8e40-7142566d7e0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f79a39e6-d619-4a2d-8e5f-c642b6bf6e97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c984ebee-5c14-43cc-b2f3-678ad83b20bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d279476c-c6d8-40c0-b4a8-188c0088bc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad58d6b2-9761-4953-8976-9a77b2d49774",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce63891-83c6-4790-a318-6ce3cde46d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d8b34f-56df-485b-bd4c-cff98b8bc462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33574d1-2d74-4e03-9165-34214f10d2f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5102a4-8bff-47ee-b51c-4a0c14fd24c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9c17e6-2b9d-40a0-a6ad-d1baa6d3f103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feaa725-5b74-4c5f-98f4-2e2374b067b0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95efb592-8cd4-4ab6-8aa4-e70707d259c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da293f60-661e-419a-a1bc-a192d04e786b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982fbae5-fad8-4739-bce1-154c2ca44dec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7231fde-cfe1-421c-a02b-0a733999b695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9f747a-a7eb-49e8-911f-cdd663bbfe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c9fefa-9e53-42d8-8987-a6c9aa1da6a5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf1ea14-da5a-40ed-b279-5478a31dd3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dee7a2-bcb2-44c9-8df5-3485a8231662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cd848d-75df-414a-8b4e-a08280f02689",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52585eb0-61eb-41a6-aa11-1135f2cee55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd079b6f-ac0c-4549-be57-9a1a1d228a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4a1498-6e0c-4ab5-9a0e-d53c8df990bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a864331b-ca65-49d7-9f3d-4775405d81b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133650ef-02ac-4db4-b3fd-ce47f2aba780",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9249af4a-1e96-404e-bbac-64b579a1ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325687f4-9ae3-4f80-90af-54e1a9eb8c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4870703-328f-443a-9557-bf0862f7ef78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeecbdba-8f2f-47f2-a6c6-9479dce16a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2440de0-c2ca-4b22-873e-0d580d5001cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324e1af-37ed-4349-9741-202e0242e58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a543a32-bac8-4908-b5fa-b16a6241bdb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9127692b-328e-4628-b11a-bbf88e75bd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe35a58-fd1a-440f-9714-20ee69c4cc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769fc1d9-3ddb-433e-8200-b3edd3314abd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f319e-390f-4804-9746-5efe0f134b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96503895-5690-47fb-930d-d3f8e6b49c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17735c9-1c03-4fd3-bbe0-4c188a7b1998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758c9bec-b74c-420d-8983-cab16f73da71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00434dda-0834-48fc-b01c-19503c11e622",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd590c6-b506-42b9-877a-31c0f9ac5a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2839754-8803-44c0-9fad-be539f1106ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315dbdcc-fd2d-4728-aae3-2d278ec636a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b6a6ce-43cc-4875-8be0-8801435cd355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e66826-46a3-4397-9def-a68421b5cc49",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa671039-e1a5-4ea2-afdf-fc90a2db7322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fdad5f-23d8-42a9-8310-55d6da48fdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a552df2-c262-49c6-879d-585e7b21b91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9889b936-1621-4b0d-b251-019c45890e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85b633e-82dd-4d6b-8e69-ccbbac26ec34",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dee5252-6187-4fe2-ab51-fddcb806c39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddb5b51-d65d-485d-8f0d-de4966c08ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44da5e39-0ead-4f57-ad3b-afadbea90651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f602211-d0a9-4bd3-ab75-732d34d1e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe4aace-a838-4bf0-987b-efbba087f6b3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f22df4-9a7f-4563-8a8e-38f00505de8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3e08967-64ce-480e-8833-dcad3b86a529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f50f1e-f012-46c1-914a-9bd797178076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb749ecb-48c4-4a67-824e-80b2d19f3134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9b2a58-ce4a-4c96-9505-1c55764e4cd7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c3d37-fb59-4d1d-9453-b3d5eefdceec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6d861d-5b4f-44d6-9100-e72f8b375ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82af2de3-9034-48cf-be05-d37175e9269b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04608c80-be5d-4d4f-a3a1-c8c99bd3f27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4533483d-013e-47cc-b043-f088b9fbd95c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa1bb8-b2dc-4082-8933-f0a00d576d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed891ae-ce83-41c9-a6c8-1abd1c5a7ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e3a0e7-36be-45ac-be50-86de8c4466b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e996263-4b02-4964-b218-a4c640dd8504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ac0a7f-c7ff-4c78-a73f-d143cf132703",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa766a7-f6da-4bfd-bb4b-4fde31a42f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51344446-6feb-49ed-b342-91e63899b121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e63d1f-3124-4871-9fd9-15d8b7e3ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37873c78-2e84-4798-a9d9-fd8d08e5a23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081fd004-584c-4394-ab2a-eca7ef3e5838",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5afbf6-d7c6-46d7-9083-86f760674e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157964eb-3e21-4589-9ebf-d5638154fe4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482b8f5f-f6f2-47d3-90e6-a594aaea7b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a09fad9-903b-4133-bdb8-dcdead9d667f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94fa44c-b46a-4d0d-b03d-ccd3db44b224",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f774ddb7-e664-4251-8d6b-6dedc96d53e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257d2d23-dfa2-4c12-8186-80ecced97627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c494966-bd05-4749-a6d9-defa8691bf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef921018-7fc9-48f3-b390-436db23d8e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d783fff6-7f3b-491a-93b9-0e38f891b549",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a5a4bd-a1a6-4166-af58-6498e204564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f59788-2002-482b-be25-69852b099d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aef0859-be81-4b59-b261-7f5338014b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d1ba21-7f3d-4b00-8a29-b7e04103e6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe45221-0e58-4dd3-9aa3-3932a43164b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1760d9-53d1-455f-8ec7-b8c946729ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be173c00-d8c6-48db-bf4d-e8ec0838c51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48d892-ee6a-4a0d-8051-1812c86301a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc59a68-4303-41a7-a5fe-f7d0c0fdd178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e467a357-09e6-4f6c-be06-81c6b16190dd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0f60df-4aa6-4832-8af0-95372776da94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e68394-f6d7-40d3-bed8-4c1fc4ce4f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084edd7e-79f6-4686-864f-9161b749351e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce85ffef-4de0-44ba-8919-a54e43440dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b93c55a-c00d-4d7a-9c06-1d3cb95527f2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d42a3d-1b75-41a1-aaa1-a9a2bb197fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170980eb-d67c-4016-b822-512c09266d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a024dba9-cdb8-4b3e-b52e-19286e31722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6f4ae7-bf79-43ce-9b13-b058b673576d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b81f29-6658-452e-89f0-047d12a6b42e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141c093c-8dee-4bd8-82db-798add3e80b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939812e1-b5b6-4134-bdc1-f72d2366d2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeded3d-23b2-4656-8d31-5585ad5ca5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720a835f-2377-44b6-ae16-4a12f6e08261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf363b1-8e7d-4671-8b8b-a2da4a95ce37",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cef09f-1f3d-4268-b627-58475138a69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c3d78a-12d0-488a-bf8b-bc15280d3d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b4053e-97ab-4c57-a494-76c5b8ab45a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef75f78e-f093-4c44-a386-fc10d68e4f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6cdc5c-c0de-4f33-8404-ac9f39dedfdd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92757db1-2a72-4a7e-be8f-8b8be882f19d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d57faf0c-f531-48f9-bf52-36aa1989726f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef30d583-0217-4d13-9ddf-1a4a03a2d30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacdc406-0902-4b04-b4c3-9e5ffe4e60fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93e8589-761d-4754-b581-97cfe004c6f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5797cc-2371-4878-88b6-088f57e18f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfa5668-d9d0-45ad-8315-4ffd890d6e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9217514-955b-466f-9f2e-ca210dc90e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77906df7-a752-4a0b-869f-71317ad88414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aafaef-80fd-4ee7-808f-ac6ba24d12cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca57e56-210e-455a-b83c-b98279154c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58471d09-5413-499f-96d8-1882426bdcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d242f-fbb8-4927-9ebb-4834ef7d89da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebee982-55bb-4b8d-b5d8-e2b5318a6f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2a78b6-15e3-4476-90f0-b27a0d8348b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58794cf-c08b-46c2-9a6c-3f5edc252185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f45eabb-5dbf-4d63-bc01-434f21e6b12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f269c-ccde-4713-9d30-998d48e8ae0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b69244-bd2c-48b1-bc93-7c44a4fead07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b5fd6-e1c6-472d-acb2-3ccd9b92a043",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e9d907-fc16-4617-9105-644e82c17e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fef76e-2926-4fbf-add3-eca49c2ff491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0728fcf-bdf0-4c2e-914f-c6b4e5ea0099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac30cf04-38bd-43f2-9089-5ce47399c25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d09502a-6ded-4cd8-86e9-30ad3021985c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b913c-b120-4dc3-b389-30ab06463477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4f3d91-5e82-466c-87f1-e49a6fcbc5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06479205-d7fe-4f31-8dcb-5d5b41a45183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c786d2-909b-4604-af30-b353d948d39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56b1c23-7fd4-4e2d-b79c-97da8ae0e0f4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37089d05-1e83-4fb8-9410-b556d3656a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b96f61-2473-4869-b8c1-e8d6c37e6968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a817aa-1935-412d-b3d2-9819dc5b88de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30205f4-5fd0-40f3-9be0-0e9a3fee4a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896c4426-b33c-4a47-b366-772123faf303",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29750f03-59e5-4b5a-af4e-48a7dad34bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d69ce4a-a491-44a1-92f8-404c2c0a2daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f792ad46-b2d0-4872-b6eb-2a0057428643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc74f7a-daa7-4bdf-8a0e-bdba70956a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4d3f89-2fb2-4946-a613-b4cf257c696c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab34a6f-825a-4658-9bb1-e7f4b991832d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80848034-a8ad-412d-8696-f8bf8b36c161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a84b62-3c0f-4348-83e6-64279d18fc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021a1522-2491-4568-b090-fa7cfc10b847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1aee1a-4641-4197-ae00-3ec65926dc8f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc24bd4-efc8-4316-848e-ae18ee3587d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e251bc-466c-47fa-8ce3-1295b673f6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb929899-4206-4cdf-b45d-828af0c2ac6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d32a0e-2818-4c04-abf7-2614df1fbdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a50057-af00-4854-bc8e-f78a139bc84e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcba16ae-8faf-438a-8d05-30686fd068a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ae6d86-a994-4c35-a432-3f1c21844816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea2059f-ca9e-45dd-afde-6561947e709b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a88586-2ba9-4155-8cc4-903b53122bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4e9217-d5e8-4a80-978f-af518efdb5da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad99c3c-09b8-4dbd-9cfc-a595f72561f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bc1665-0302-42e1-9e5b-fbc577af658d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca56511-ee8b-4b05-a9f5-d4da7427d127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41e371d-bac1-4027-bab2-d14dbe3ece08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0630af4b-9d4b-4592-835b-162b79c58c07",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f5d7c0-baa5-43c6-94ff-c4c99b5c1c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45c2664-149c-4d34-9170-dc4190d94ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07274361-b410-427d-ab77-25dfbbd7a693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82cb4cc-de15-4127-833e-2a178e2d4c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203723f8-dbc9-4636-8595-02e072a2296a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982f44c1-4382-4b6c-ab66-6de4970fba68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bf3896-6290-4088-9879-b055a642d6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195e53bd-fe7c-4a04-b8e5-d9c2985eea25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c13572-3ef9-45b6-b25a-165c8395ff01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9a7d4d-587a-4dcf-9a8a-ed2c9044728c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d966397-ae22-436d-a528-19a4b6aa05bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6effb5ef-71de-4a71-b83f-f8acbf1c77ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba1285-fbdd-4897-8d43-b9c708cad766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ba902f-0867-43d9-946e-ef4fa381a26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58c731f-55af-46a8-997c-ada5664f9308",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b358b0-9aa5-49de-9951-89012bb66e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bbecbe-9c19-4c68-a79e-aea80df5618c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbdc53a-e29e-43b6-8876-3e5dbe90577a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d59d43-36ad-418c-a184-44d8ce39466a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b349e7-ef12-4784-9bce-cbe7c5abfbb1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f3e63-639d-4089-b1b8-6a986d56ce5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bb6ef3-6417-4ccb-80d4-72ad08057da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715411f7-d117-4926-8cae-a7c181f0c8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0decdf6c-987b-4e62-af7c-40f2b0431eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb8988d-e69e-4bb6-ba65-b7a2ee43fb22",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76144526-cd1b-4e10-b780-ea74eb1fba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebb6354-66e3-48ef-a35c-f94d0bc2ff35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c88dd3-4560-4b73-9b96-8ba1a6655f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591f18fb-41c2-4a4f-bf91-35c9bee2ad01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83513499-b82d-4358-9149-81b0429e4e0f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04b13c6-0fbc-43e1-80e6-2b949ca16cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f148e6af-b9c2-4d65-877c-6a31b5de9730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5439db5-6f37-49cd-93e4-1a0598cd825f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6e5f02-4453-4158-a9dc-04025f146d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06765cb4-134f-4e33-9598-e1b442bd9ef1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01537aa8-a36e-420c-950c-828b4f116f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b7f5c2-c8f4-4654-a9f4-38f41351a4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba068f3-86f3-4bbd-9f69-2f87173b2e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88563b70-40c6-41d9-9d47-7ffa7137a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a4015b-ad75-4e9f-b3c2-ddbb757eaf5c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efe93eb-2c0e-4828-bebb-ada4872bb967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229d734d-67e2-4db3-a9d1-5e17deed7332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7a4842-7610-4e10-bcd8-3eb48a6b7560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df28845-4af8-4e85-bd4c-d82cb4e213ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4961b375-8646-48f0-ad3b-3a79db629a18",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b614423e-ed64-43c7-99ba-02131f9e1510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88ed1d5-b4d3-4c31-8c01-a01c30c6b5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4dd5ae-ba45-4e8f-be86-b62d91f38c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e60d6a-f183-41f5-a78a-7c6115166e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70721340-3a81-4a1e-8f55-2647f218d0df",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ac656-9326-490b-ad99-add87985b8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1243057-09da-4e71-be60-8d595cc3f54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830dde50-b883-4372-8596-15c810bb5baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ba0754-0822-4122-b3ee-7f0caad67240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79bca3d-2fab-4d7e-a39d-9bde5163c51b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e479c743-2336-410a-9e0b-56bf009a9ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a05668-e2df-4784-a70b-8c4ba19d61e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db960a2-a169-4f47-a786-8fd3f84d0477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432ea06d-d1f1-4923-a8d6-3da9dadee414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb444d-38e1-4362-af42-47a779b7b9e5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fe6663-44ca-4539-8601-e1aec538ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d8fd91-850e-4fa9-9d76-9bb71b2b7be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5292bd8c-2fa6-424a-b5c5-772cdb88b67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc3ebbf-5d66-4e81-b55c-9849fc91b741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a833d1f-0d50-4add-acee-4978cb7fbc68",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3b54d9-35ae-44e2-a181-7fe1cefe6d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c278337-088a-4605-8765-ce2b8a9a18b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d99b883-18c0-4081-b2f8-7538e92360c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0b97b3-9fa8-4f82-a883-702b2b5a20db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f77a74c-a289-4078-aa23-887b18b6accf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9ddc43-2212-4a5a-8e46-8c1719745419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9172fa76-944a-404f-b234-bb6f0f71bb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1bdcd9-bc3f-4675-9732-f7a94f00a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e370a3d6-75c4-4625-b4e4-06d6bd96fcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2d8792-d1cc-4832-9328-ab56529de12e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b005926f-ca9f-4984-a32b-0ddce54889e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471b8e5a-63b8-4631-89cb-9ff7c037b3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f594779-605d-45fd-8dd2-74adcabb6aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132dcad7-964b-43eb-a8a8-d98d2aad1415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a401ba9-f235-4c00-b61c-e93f84764448",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3db0edf-a2b0-4e95-9267-786c1aac6223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868c3568-56d0-4e8c-bad4-015eb1d03ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355a6ee1-69e8-43be-9fe8-520a25dd223e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7d76bc-330b-4fde-843e-7a66e32a6ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a3cf4-d89c-41a6-a9cc-fa6d9a426643",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c522b1-f6a3-40a5-8624-d80e196b4a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d15de81-28f3-48d5-b04f-e38d79967610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8a3a43-090b-4613-983c-7880ec01a3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad1e200-026f-4e9c-899b-d152194dfc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4457f590-bcd3-4043-8e95-93078ee34253",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1f042c-31c9-4c1e-b045-5cae88455223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b319c4-3958-40ba-b4bd-f5a15d71fa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d38d27-1b21-47d7-9edd-16e01e5a6fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaca96d-1693-4a3f-ae74-a39e7bfc2eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c10e88-eca8-48f6-a540-b19784bdad0d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7fcd3f-4b0f-4448-ada2-5a0907475926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb29298-73db-4bfd-8528-b60df37a9e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df0b443-ded6-44d0-b248-31adcc0e93de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0837266c-c2e0-4b5d-859b-c14c33bb11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b10b88-2fe2-4894-8125-a2ddcd0341ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7b640-c7cc-4159-b8bf-07c0f47cb067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e110a9-3d19-4cb7-9568-22d27a6601ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e9ebd2-ce25-450b-9c84-76a1cede2b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3220500-ce90-4128-901b-29f0456daa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3327485-510e-4064-bd3f-8eba927ca26b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2064e0-62d9-4311-be9e-1bd259ff43ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd75aa75-0f98-436e-a08e-f111c89e4962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefdc43c-9342-4efb-bd14-4298f07fc98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1ee85e-66a7-4d78-b271-5d92c118e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ccec9e-300d-4e5b-a16b-0e30b6d49457",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f6c58-4d05-4d7c-86b1-abf76afe5a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9ecfab-2530-430a-9f7e-9f300c7dc8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a253c3-1ce1-4cc8-b964-fce307a2ef88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a310a10-4873-45f1-b0b6-6f2316e84cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a10fc2-830c-4a72-82dd-4f3d22ffbc87",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d18d0cc-7fdf-41c8-b6ef-e6ae3dbab201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d262665e-9ba4-496c-bf8b-c44241215d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00663041-a994-40a5-a810-eab3a73cb07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a20444-8d7f-46c4-8e8d-ce5be7187003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb28805-88a5-4d23-84cc-3255ab4648b7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed330320-71cc-4177-b212-17f143cb91ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06292e8-411f-4a19-8e60-22762e0b5777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cec791-bddc-498b-8a98-0393808493f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243dc7eb-1164-48a5-9b29-78ddc0e474ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a11443-864a-4571-a55d-bd825cfd64a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d63b17f-81a6-4bfc-bba9-06ca7a230102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48335f8a-f8e0-4793-9e91-8c98fdb14618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e0158a-e3dc-4468-81f1-8448a3d44128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0499c60b-f766-416b-bbe4-51341277cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedb3a60-cfc1-4c8c-b80b-a0c2fb9615b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f8004f-5a39-4115-a43e-d8a0708d2695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16f2e23-adb8-4cf0-a3df-3be1d2b800c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938e495f-13e0-4d69-9f42-3355e4a3bde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188c96ae-0d97-4700-a27b-c1a597d46bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf817a-cf25-4ca2-a3b4-ab3f8a4e15ae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d541d0-8783-4a37-be75-819570572fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "450a87ea-fb19-40d1-b151-f61b8af915da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d093a4-1bed-4c45-b89c-32e048d8e505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4da304f-35cd-4fd5-ace9-98411da3cdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079bfee4-bb76-42e1-a443-c6da3e9de971",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45e95c-461b-4c3e-be0c-1c9200af58c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ef5aeb-05a2-4ea3-92cb-debca3293876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb717ba0-d1c3-4507-9567-30312293f542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caa6d4e-489a-4f0e-9745-defc80dc8cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cafb3d-8df5-48e5-8a86-193eae8c0e07",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87c9a95-1938-4fa6-a178-cdfa11283fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cd35fd-9c12-4d98-8fe0-3f69fa801934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af43ba22-bf4e-49a1-aaca-ca5fe85addbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd5a857-f643-46a7-ab01-f5e92e9641a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810efaf-6512-400a-bd0c-2eeb8c77c80c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa6b0e1-2f45-4a9a-8d2a-85b205e4696c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ee7810-cb4b-47ae-abde-ec9821a87bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def5b1a0-6daa-41a3-9f76-39c77790472c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833188c9-3c80-45cc-8e41-e07ec58368e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5b7b70-64a1-44ab-8433-b1e149e00729",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eb917b-9a66-45b2-8c70-ca8c9362d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46054df8-85e0-44e0-95cb-813cb2b3fc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e257352-343f-4ae1-bc30-62dc9e9c5923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa1d520-3323-4013-b741-400a37e7b063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a64e4f4-4768-4ac6-9e73-06a1360ef646",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff0542-ffbd-43d7-b727-2d8a5e5dffb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba340c6-53f7-4bb0-9c66-ed9ab3975254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4a005f-298b-4b96-a664-90fef12b25a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86a764a-5f98-483e-8143-bfaab9913797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6658bd85-df16-412c-90c5-93e151c44c07",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311fe321-4497-4c56-b7db-00fc220ccd45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f34d44-ac35-4ae0-91ea-b547cacc5924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cfdedd-6532-4e20-9d7a-b6955f573cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1510744d-bd34-492f-9a73-80b69f8fd8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ee5eb6-fc4d-44b9-9883-a0ae0da45463",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a770906-3226-480c-b5b8-1e45f563c211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adec297-924c-4e73-b645-74bbbd29345d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad6f8f4-81e3-4194-9c45-8a0eb6af2bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd9a8d2-30a8-4cf1-9ef2-323abc6e957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42834a3-630b-420b-a612-e64e4c897a66",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9bcd79-5193-4034-bb83-4cfa5741b055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3dd9e3-f2a9-4cad-8ad6-8b3cba3a03e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e39685-b654-4c94-8e67-b1d05c41966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d5a522-0b74-439b-a854-b1d4f94c06c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c142037-21e7-4afd-b84b-0f135039f17f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e34c72e-a829-4e63-8c7f-245c3e70218b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "389766fe-1b61-490b-9eed-aac84b354593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e11a90-e28d-4af9-885e-5ea58aa5a6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c738bcc-e67f-4930-8b85-22f5fb283526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fe2066-4e64-4ad4-832b-3a5e31c3e5b7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867f3b70-2a02-4593-b2b7-aaae9e64b98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0508fb03-5d13-4d84-847c-5ced02a05de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cb3ee5-54a9-426f-85c9-8b8f42889efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2f9e5d-869b-41f3-8d19-3bc54266ecec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09374357-2120-459f-be29-060ac6c27c2c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74b9cc-1fc2-427b-b3a7-eecb24467232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f6619b-5aea-4a91-8d94-4fe0a5b22614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cdeb6-ff3a-42f1-9675-0d05260615e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b19b06-b1a0-40a1-82bd-1a51f65d8d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9676ede0-a8d4-4da6-aa48-6ecd3c57a8fe",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95ab9d9-9902-4421-8391-9ccde61d999b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d4f467-461c-4039-b741-70518e1baaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10801a51-1ea8-4743-9245-6b31e06ac998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1745758-53c9-4dad-aa31-bdc160dc1681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f650fc2-75ac-470f-a9b7-19a772f2797e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4f7847-9ed9-48ca-85d1-fb51b41be7c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c4b24e-d3d8-47d1-8b9d-d16d221a802c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fadd1a-11d5-499d-807f-98e7d69badd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c566dfb8-92bd-4304-8dd5-e094ea595f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daa649c-6ff1-4daa-91c0-e3649fa06038",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e0dde0-d434-44a6-b34a-c5c290f6e399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c978871-9c37-4c36-b8b7-322f3726faa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aba0bdd-d67c-4f01-b67a-24a0d143fb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b474c3c-4dd6-4b5c-83a0-98c3b95cb333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c75615-d658-4280-b1be-a9d200e1a942",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f326182-159e-467f-b4fa-1d10d9111b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b091df8f-bef0-4fbd-96b3-7044c4fa90ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c2f4cf-1c5b-4037-b954-23b7b11fd83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a891bfb6-ffdb-4fc0-8599-9297dcaf6640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa1bbf-65ba-4984-a593-de8a77e927b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c4c1f9-426d-4a68-8fbe-b7858c3d08db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e7e4e6-07bc-492b-b2bb-88cc00f50e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38589ed9-e277-4db3-adc1-536319d9a27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93a1381-ef6b-4dae-9266-366fe026ff0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980c5f7a-ccdc-455e-beae-a1f84662c78f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009e2213-bb47-4ddf-84ee-200e69d06657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ed93c8-fdcf-46d0-a9d0-cae32552caa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0725adcb-b5ed-4af0-8e7e-c00e4aff61dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1295f6cc-7403-4502-9ed6-5805605daf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f33a2a-b303-4f83-9985-8a77e08bcf8e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b7d9a7-bb0d-4acd-b1f0-3ff463cc9a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb59b5f-e4ab-4c1f-badf-8006fd18830d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e622427-fe69-4339-9f6d-888bdf8676af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf9425b-03cc-4bba-ab01-5b725e197f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7071e786-9ebd-4258-b11d-9a1cb4efe703",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cd6c20-2c6d-452b-b329-5816d389d64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b59b49-e30c-4d9e-9170-ac3bc6dd007e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8e6786-9252-466c-860b-452438ddac2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5ecaee-5f7d-4345-97e1-f11cfcfbc24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b62fb7-38be-41ca-a369-f439462e1915",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b4d2d-f074-46ae-aa8b-f61a6a264cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d8af44-e525-40a9-a6fb-aabc64053858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef3c3ed-92cc-426c-9550-fd64745ccc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6c9041-e42b-4a69-badb-e87846b01929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3494f6-db8e-428e-9445-e338c0114122",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c03b879-87ad-4c01-98ae-13098e24b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca21374-f019-414e-b91b-bfaed76e7b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df1f1d3-4dc5-4dd8-963d-f0da449cb193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776fb96a-3b19-4ec6-9f33-f25692514754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a22cb3-9431-425d-84e1-ba63f4d31627",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2ed656-12ef-450b-b2a1-0952a6507b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2e5fec-abe6-4909-9bc4-50938ebe1075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd90b564-f1b5-4d85-a9b2-c8704dda24e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e4f162-836c-4b72-8850-15cdc8ac1d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14302e74-33e1-4ca1-aaf5-ba78d2135c63",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7de7d0a-59a2-4eda-b0cb-4293096bbde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd121050-54c5-4fe7-835e-c8765d39f8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110b2aec-e969-4cb8-ac51-ad9874e28398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246dcbc4-5be3-4dd3-82c1-c67e35b944f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486383e3-e094-4624-b49f-8b546edf4425",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a75d637-ea2c-4b61-9023-9cb951435129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396bd8b4-7a73-480d-9c0e-1ad948d6189e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e57a1-efde-4c53-baa3-9dcd93f2e116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5363ed-c1f7-435b-9dbd-656408cd99d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1920c0-b3af-4fa1-8d1f-bf5fbf3735b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cc24c3-3b52-4c44-a671-d5c48acbd59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9402085b-4e99-4de5-8bb3-5986c3b47257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08329cc1-250b-443b-9fde-efb8cd843665",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe4f770-60b6-47b5-a027-409a5864b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1acd37a-85d6-477b-9c3d-775425cc2109",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cc179f-3d25-48ca-b922-a6fd180a8721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0597ac-b9e7-41ea-ac44-3b1b5bd20066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21248fde-d7b2-421c-a336-72a38859813a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f93a0d1-4f43-4a05-a348-86e27c688ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ecd269-204c-4201-b874-a49e184d01ba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f242bb-0e24-4aa5-9232-0178cf539785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad526d5-cb13-4330-a78d-6a750a760fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ac5467-3b97-4921-a669-3e90ea1cd7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a78a033-e1e9-4ce0-90ea-87e0a11da1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e030008-b68b-444b-9c23-7e95e984469b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fdfaf8-983e-4ce4-894c-ac3f0aba37ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb229b7b-d692-40e0-98a3-9dcf8678507c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b670b1d-1147-452a-8019-2ab00558b637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0aebe24-ebef-40da-8a86-7dfdbe28fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da2c585-0261-4482-bc67-a40cc87efb00",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ca0ce-798d-4ef3-958b-10f81b1c8a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b013e58d-1fec-4527-8bd7-2b2a8fc59571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb0c5e-c453-46fb-8a85-34bb71d7be95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef96845-5fab-4c63-a83d-3eee945baaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c952b1-5e4c-442a-b26d-fab6c77042a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce60d05-3f42-4154-ac00-740e54934b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c072264d-5aa8-4013-b75a-f013d758261b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53a354-c28c-4125-a422-286e33f87c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d955a325-e5ab-4587-9d9b-ac4b4c0301d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ad8bca-f13f-4e19-8a8d-8d16a7293227",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a52b555-f940-4f9d-9d47-a6cd8bdf462e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a01140a-451d-41ea-aed9-2b1654e99c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fad631-4534-4953-93d4-d9a0bcbb0e79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf085ed-d0f5-47d5-a7b4-32f8173bfad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60310ee7-3a31-48f9-9a03-2983a654a0f9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd3b95-a852-4504-ad22-f4f331b4fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae286e5-14e9-4977-89a7-e6083df66e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5d6bd-c52e-47e3-a978-ec1490a37b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924eec1c-6504-4911-ae50-81545676ea45"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "641019eb-3e6c-40fe-8f3a-201666ff6dbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acd267ed-7c61-4e9f-ad39-086e933a90d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "675204ad-c7fa-44c7-ba6e-b3875f244dd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29b3c747-8365-4b2d-8ebf-915d092e2b8d"
                    }
                  }
                ]
              },
              {
                "id": "130a49b0-33d3-48dd-9f6e-184674dab3df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c6021a4-5625-42fd-8b7e-87b9f6ba7a83",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d4c783-3e0a-40bc-816d-c24fb80c882c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dc6843af-2f8d-4869-abc1-e1f68867ac66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757f2aea-1d23-402f-9a6a-a8853e8240ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee4700b6-1ae4-4460-a3cb-9fe061aed9ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a0b5fad-1348-4c97-b65e-3d8d16eedaa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7cdd65-31e6-4c3e-b6ad-259d5e883fc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f13aaa0d-3a82-4711-82e4-cb368f9da254",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "425d56e0-6e67-48bf-92b4-0f664288cb58"
                    }
                  }
                ]
              },
              {
                "id": "55289721-36e7-45c5-bc88-9862b8203e0c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f8245a01-f495-43d8-b617-487c34ecef65",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b803c9-3e1d-41b9-ab71-bbf053fff741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4ea0e10d-8f71-4c56-9e30-dc1eb9f824e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1153251a-4ae0-4345-9b8e-9507c3c2ee52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c49f4df-5750-4a03-97ad-8b59e9f0b1c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52ffa63b-318d-484b-a34f-d8a1409dbe03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4bd1c68-ec55-4e11-bf26-54ca2cc560a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016b9a86-a500-4c81-9395-2fa6c6047aa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e5c6446-64e6-401f-85ce-6b6a59f207a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dd57eb6-b52d-4ab6-bbfa-a27074dc3aa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5984b14d-2c3f-47c9-925e-82c75b54765e"
                    }
                  }
                ]
              },
              {
                "id": "c0302854-11bc-4cde-bf24-8078a3bee6a2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "750c3753-72d5-4222-a701-6f333c060525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "128b5f0d-e87a-482b-a337-d1840f08b966"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94809c91-8da5-42d5-9caf-bf8aa6829409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dfc0cc5-440d-488f-ba46-2a8711085578"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e708c01-b8c1-4926-9207-e2ead44d21c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e678c157-7fae-4a78-b17b-b4c5d7f8f727"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccee0309-3858-40a0-a732-e8de44a1c8d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48169d58-31f0-403b-8a61-758494089f3b"
            }
          }
        ]
      },
      {
        "id": "67b59433-c286-4752-89cf-431cf85251fb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "469df356-4115-4622-a8e6-813707859e52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9c6b996-d8ba-43fa-8869-e1884a8973ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f201d0-3af0-4ea3-b191-42909e564f28",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db415e6a-7a8f-4389-b84f-8a2761d021a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f84ffbb-07cc-45d6-a1f3-b87739f0bf5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c349b2-62bc-4a06-8b51-f806ab71aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3c9d1e5-822b-4ad9-880c-4de7bff8c19a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2725406-a1b8-48f1-8876-a268bb2396ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50b8d83-85d6-49c0-9c95-13530e62304b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20c815ac-ef93-4201-94c5-be0ca9a974b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4b67a2e-a7dc-4bdc-9e31-08e93ae44ed1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93cfcd90-5721-4aa6-bf14-eb0d11b5b96d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4438982-a41b-4f51-84ab-5d3ece98abfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c57db8b-5a8b-4a63-ba21-879e7d497010",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b1db280-d0a7-459e-a904-298d4c889d90"
            }
          }
        ]
      },
      {
        "id": "53a80f48-27d1-4790-a41b-c3ae3f3514a9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a7cb455-4d62-4952-89c3-43571f4a8159",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddf1ea0e-3aae-4ab6-ae34-040298fdff1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "507df0a8-72bf-480e-88b1-0f0eb622d921",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ec2fac-5510-4d1e-a958-064dc373bebc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d578474-ae99-45ef-898a-859a841260b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3168fcc6-500e-42a6-a59a-ac56471c5cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb602d85-bc9c-47ce-8d6b-9a289dab8d85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17df9076-a9b7-4bbe-a87a-0c0a81b35cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eecacbc2-23e1-4479-b595-72c54c3f008c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c39cf80a-e05d-4488-81c3-f243e43e82f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d348670-2da5-411b-b7a2-b12a4f086785"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55ee09dc-464d-4409-974e-3c0b05c6e649",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba1fcc67-dcb3-46af-9598-152387361981"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4940465c-fe32-4405-b402-ed0173af4275",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f475209-c22a-4200-9891-9f3cc34f189e"
            }
          }
        ]
      },
      {
        "id": "138d45b5-2b33-44d3-b66a-ac017b01e5d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dcb8a6c0-88ed-44d9-ae19-1aa667a1d372",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99daa8ed-4618-4151-8030-4bf6fd53be5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37cbc113-f8fe-476a-8691-0b69a0be3ce6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8580fb-b6e2-4600-9fa5-89c2e4ff051c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a0cfef3-ea8d-480c-a3bb-533c3d000dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c814970-d55e-4b23-b7cd-f28781191947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15fb45e0-a160-4c9b-a2e4-c2eefd5eaf77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2ffc7f-50c6-47b1-b14d-68b243d14e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ca08d0-8aa0-4e7c-8134-9bee20273e61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba4e0dc-84f0-4b35-bc13-c98908b51cf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a0b904-aefc-4dd8-bb45-13fad50eaabe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76ddc01a-c433-437c-bd8c-7cd3f2915fba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "099f2b9a-0dfa-492b-a594-f4ad72fbe2aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d43ec62a-daa7-4da6-a8a1-2bef08f2f59f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a305a2b7-8562-485d-aef0-f6714b86b737"
            }
          }
        ]
      },
      {
        "id": "b7376f0c-1d49-4c33-a056-e3115a752bf6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2423010f-7a8b-4e29-8218-6ba97e384ee8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e006fa-4bb6-4b25-9b53-7d354cc9cfee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5ef29499-8e07-4853-8c12-34206cd6e518",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75b59171-0615-4681-9ff4-a7df7c9497f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb431cb8-1538-44af-ba35-f1d5fbd1f584",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 165.07539682539684,
      "responseMin": 6,
      "responseMax": 11010,
      "responseSd": 874.6401880779506,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727571055791,
      "completed": 1727571106129
    },
    "executions": [
      {
        "id": "3447bfba-bc61-49f5-a132-85ff1666ce31",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3f190fb-9fa7-4818-90fc-6740210499e3",
          "httpRequestId": "0cbc51fa-8d81-4ff9-a255-829a0d51082d"
        },
        "item": {
          "id": "3447bfba-bc61-49f5-a132-85ff1666ce31",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "92bac7a1-99e3-46eb-aaa2-1ef204bcdff7",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "244aa37d-635c-4bb9-98b4-285df39d9417",
        "cursor": {
          "ref": "d6a963ce-e057-4bf4-8787-54c6afbfa8b7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "be5d988d-dd3d-4305-a3f1-9a198a7c2163"
        },
        "item": {
          "id": "244aa37d-635c-4bb9-98b4-285df39d9417",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1208f4d7-3ddb-44c5-87be-84e0457cc572",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5a00c170-d5d1-44cf-8517-0957eca6cce0",
        "cursor": {
          "ref": "2e34667d-d839-47f2-9095-ba849d85b0e7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd69602f-a873-44e2-9fe0-5aacc51e7bc3"
        },
        "item": {
          "id": "5a00c170-d5d1-44cf-8517-0957eca6cce0",
          "name": "did_json"
        },
        "response": {
          "id": "c5b6be63-8d89-4e64-936b-1183804a631f",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2173bde7-7256-4f8b-b435-8b7e3b6c32df",
        "cursor": {
          "ref": "9683d191-bb41-414b-8cbf-d43ce1478597",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb554e7a-c300-45e1-90fb-c26062dff759"
        },
        "item": {
          "id": "2173bde7-7256-4f8b-b435-8b7e3b6c32df",
          "name": "did:invalid"
        },
        "response": {
          "id": "7829d7fa-5d94-4a77-a532-c81b5fd3d010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2173bde7-7256-4f8b-b435-8b7e3b6c32df",
        "cursor": {
          "ref": "9683d191-bb41-414b-8cbf-d43ce1478597",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb554e7a-c300-45e1-90fb-c26062dff759"
        },
        "item": {
          "id": "2173bde7-7256-4f8b-b435-8b7e3b6c32df",
          "name": "did:invalid"
        },
        "response": {
          "id": "7829d7fa-5d94-4a77-a532-c81b5fd3d010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8511166-7661-4113-b5a5-f7472123a562",
        "cursor": {
          "ref": "37966414-9e62-4015-af37-b540452b697c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2cd49bf5-6263-4174-8403-df434d6af97f"
        },
        "item": {
          "id": "b8511166-7661-4113-b5a5-f7472123a562",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59a11070-7a46-4322-92c1-dbde2a1dfbaf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb19240-6d95-4bd6-b86c-1a27523c2158",
        "cursor": {
          "ref": "173bbc78-a692-4427-a639-55a5c880ea53",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "faf65b21-8ce4-4662-b71e-4a6b7be8847e"
        },
        "item": {
          "id": "ccb19240-6d95-4bd6-b86c-1a27523c2158",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "94932148-94ae-417b-b007-3dbb04de5267",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e104329-4e82-4be8-bbc6-80a42eb44edc",
        "cursor": {
          "ref": "b5152db0-0065-4ec4-9ffe-745473ee489e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b7ec73e0-0536-4d9e-8759-f90de466a94c"
        },
        "item": {
          "id": "2e104329-4e82-4be8-bbc6-80a42eb44edc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c9badb5c-862f-48c2-a8c3-11e6948d47e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57547c32-5491-47b5-8e8c-3ed70a733126",
        "cursor": {
          "ref": "cdc922d3-d112-4807-82cc-e4f19824f2b4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b15051e7-ceda-4d0b-9283-2fb7af8e280a"
        },
        "item": {
          "id": "57547c32-5491-47b5-8e8c-3ed70a733126",
          "name": "identifiers"
        },
        "response": {
          "id": "0d43fb52-cae4-448d-8c22-ea45568c4973",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f2110f-d2c9-4583-a0aa-d382f21fd278",
        "cursor": {
          "ref": "73478cb1-d163-41e7-9da4-e202392f99b7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7663b1fc-d4e2-41f5-9044-7a6fe25d9989"
        },
        "item": {
          "id": "29f2110f-d2c9-4583-a0aa-d382f21fd278",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e6b446d7-0d34-4724-8fdf-71b42a87352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab43bc1-e227-4b29-9403-5bdc68b6ac02",
        "cursor": {
          "ref": "199119f1-d031-408c-9915-e9b083d4a9c3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aa55a13e-8910-4dc6-b03e-eaaf548620a4"
        },
        "item": {
          "id": "aab43bc1-e227-4b29-9403-5bdc68b6ac02",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c2684c0a-a02c-4575-824a-c246d3d398ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4f3331-d294-466f-9f04-1dec1fd49ce1",
        "cursor": {
          "ref": "58a54ad4-f930-44e9-8c35-bfd398934363",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e0a42da7-21c1-4c74-b288-38209727cb8b"
        },
        "item": {
          "id": "ab4f3331-d294-466f-9f04-1dec1fd49ce1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f3ce5e54-10b5-4a60-a6f0-96d2af7fbe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc9b061-e299-4678-8710-d37da182357a",
        "cursor": {
          "ref": "6a355a7d-3ad7-4dde-baa9-be3b669cd664",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "edcb1d82-2071-43e6-8d99-13d8a2d7d9a3"
        },
        "item": {
          "id": "7cc9b061-e299-4678-8710-d37da182357a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "27a15063-2933-4b54-a77a-6dcdc9cedae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed3323-ab1a-4738-a874-cab02cf32dcf",
        "cursor": {
          "ref": "74a6515f-8af6-4dc4-a775-297613c35fb6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "104a7565-9ec2-4f3b-862c-803e96ae0cf1"
        },
        "item": {
          "id": "fbed3323-ab1a-4738-a874-cab02cf32dcf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "04580139-31c2-40a7-a502-007aff62077d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808e780c-5564-4d9a-822f-92747fbc8673",
        "cursor": {
          "ref": "2b85c6d8-f23e-42d2-bd90-e4be57743169",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24578ebd-79b0-44bd-bfc0-2741370eb48c"
        },
        "item": {
          "id": "808e780c-5564-4d9a-822f-92747fbc8673",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5f5fcf9e-ab5c-4f83-9118-aab534cc4c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6237a7-43c3-4d3f-8faa-87d7134ec4b4",
        "cursor": {
          "ref": "4c4b5743-bf8d-45fe-b08d-9a5814552219",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "244d4267-d38c-44ff-a8aa-53928170587c"
        },
        "item": {
          "id": "aa6237a7-43c3-4d3f-8faa-87d7134ec4b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1c881014-5584-4bb4-8934-078bed8d504c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4a13a9-435c-4b42-b17f-511cdcec1592",
        "cursor": {
          "ref": "b056584a-14b5-40a4-93b5-1b2847ca129e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3b466684-3cad-4b91-9e9f-1236738907b0"
        },
        "item": {
          "id": "9b4a13a9-435c-4b42-b17f-511cdcec1592",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b79aa962-0cc3-4133-ac0c-4ef8cd47150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd70b4-5b4f-477a-93c6-3b32c40612c1",
        "cursor": {
          "ref": "14bead26-3ac6-4e73-acb5-905210100b00",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e0208d3b-397a-4a18-8db7-751fe063beec"
        },
        "item": {
          "id": "87dd70b4-5b4f-477a-93c6-3b32c40612c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1750ab4-f531-4358-b565-9622a5b694d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2a123-e3b2-47b2-9487-8d2ae998c493",
        "cursor": {
          "ref": "9e5c8db2-2360-4966-a9f2-ea481403e355",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2f9a8c3-de3f-4177-b860-d0a28a9320c9"
        },
        "item": {
          "id": "42c2a123-e3b2-47b2-9487-8d2ae998c493",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8faecf68-c30a-4932-bb6d-25b8ae501d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b712bfe6-4f21-415f-a5f1-e02b7d91bd33",
        "cursor": {
          "ref": "297d80f8-fd14-49e9-b157-0c96bc13d19d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "26aa85f8-29b2-41a0-8797-a6b924ddfaee"
        },
        "item": {
          "id": "b712bfe6-4f21-415f-a5f1-e02b7d91bd33",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4e6f25d5-9da9-46d7-840a-ac3508e55796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe3e7c5-53f0-4317-98d8-900f0315ab74",
        "cursor": {
          "ref": "a2f149c4-69e2-411b-b916-f5304cc65589",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c119d27f-d437-41c4-82f0-b2b34bfa920c"
        },
        "item": {
          "id": "1fe3e7c5-53f0-4317-98d8-900f0315ab74",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "35e089bd-fec4-41bf-ac4d-aba713b81f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cdae83-1f73-495d-b33f-afceecc5b900",
        "cursor": {
          "ref": "012e2292-620f-41fc-8d6c-76a1c10c3eb7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9555dad0-d158-4e23-b59b-84ab48c2e176"
        },
        "item": {
          "id": "13cdae83-1f73-495d-b33f-afceecc5b900",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6f0c255c-f194-45ca-a0c8-5b123a064de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35db04a-ec1b-4c8b-b22f-d7db6deb53dd",
        "cursor": {
          "ref": "956007af-9523-4335-b21a-eb84368e89ff",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c0a42bb2-fbf7-4099-b91c-f09ee6819407"
        },
        "item": {
          "id": "c35db04a-ec1b-4c8b-b22f-d7db6deb53dd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f51cd680-cbcc-4943-b476-d6b1076bc76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f51da-702b-403b-a4b0-d673c2c840fc",
        "cursor": {
          "ref": "1ddee07d-8c48-431b-bab1-9f9829eb7e68",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bb25d91e-712e-4949-a317-66935e110fe8"
        },
        "item": {
          "id": "7f9f51da-702b-403b-a4b0-d673c2c840fc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e255f1ed-970f-439a-a2af-5bba597391e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca7b9a-4875-4a62-ae62-91065e78cfec",
        "cursor": {
          "ref": "eb3f3800-91ea-4071-ad62-e79d5773b69b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1847a8be-4dc3-4f68-9326-dd30556655c6"
        },
        "item": {
          "id": "20ca7b9a-4875-4a62-ae62-91065e78cfec",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2c982b21-3f38-44c3-a0ad-1e8595f3e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcadd59-57fd-4067-a53a-b5dabdeabd32",
        "cursor": {
          "ref": "09d190f9-da83-413f-bac3-7ee3b79e4fcb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a350d462-c243-4a1d-ac8e-81401c3f60e5"
        },
        "item": {
          "id": "1dcadd59-57fd-4067-a53a-b5dabdeabd32",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "63ae3ac0-0d30-4764-aa98-4d4b79ccac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdaca4b-7e97-4381-a735-baba96bfc6c7",
        "cursor": {
          "ref": "5034359d-abed-419d-a9e6-c4d3464e5c9d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c3a6febb-72fc-41b0-b81a-0d82a1491e31"
        },
        "item": {
          "id": "4bdaca4b-7e97-4381-a735-baba96bfc6c7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "62ca386c-af1b-4302-b993-76ad7cc95574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d8e07e-a7bf-48cc-8200-339a1b12f916",
        "cursor": {
          "ref": "c7e1917b-ac24-4487-97eb-ec95686f6962",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7e03d39b-5ee5-495a-89a3-6b2c0d29c063"
        },
        "item": {
          "id": "79d8e07e-a7bf-48cc-8200-339a1b12f916",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c4f97da9-49d3-45f9-9361-f4c7b0b9031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576f8951-4bfe-4ab2-9bce-7f3d8160df9a",
        "cursor": {
          "ref": "3b3808fe-fdfb-4cdd-8080-be6f354191b0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d9036011-288c-4368-a0d2-74d6c9ee7fcc"
        },
        "item": {
          "id": "576f8951-4bfe-4ab2-9bce-7f3d8160df9a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "35702e29-8853-4928-90c7-f40fee5df29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd276a4f-82a4-4108-a576-1ec3b41a2040",
        "cursor": {
          "ref": "ca43e2c2-dd43-4488-96b3-b5f22e7ba40f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "315452e0-4eb4-4141-9c2d-fe4a5a15d39f"
        },
        "item": {
          "id": "bd276a4f-82a4-4108-a576-1ec3b41a2040",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d3bb774-ecf5-4d3f-b801-7af55cef8ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022293b0-4d7a-406e-8afe-26874f0535ff",
        "cursor": {
          "ref": "bd80e16f-2ff1-43ba-bdd0-8c8fe5097702",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a0e0dcce-ed96-4fea-9cd5-4167ef7278fa"
        },
        "item": {
          "id": "022293b0-4d7a-406e-8afe-26874f0535ff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ac9e5a0-2eb2-4a4d-be37-44b5dd1557b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37784c40-2a39-4c68-8eda-59fc4ec1b973",
        "cursor": {
          "ref": "96aa4bef-ffde-4ab3-9bf0-8e182c702e9c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1dcb42a-ea84-4231-800b-fcd4033f7e0a"
        },
        "item": {
          "id": "37784c40-2a39-4c68-8eda-59fc4ec1b973",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fe2b8ce-99bf-4005-b0bc-cf001978c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1c0d76-3c41-4852-86a3-633f7d51b9c2",
        "cursor": {
          "ref": "1bed9700-02a7-467b-9c4e-e67588d6d951",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fb4e7685-927e-416b-9367-21d398b8a62b"
        },
        "item": {
          "id": "cb1c0d76-3c41-4852-86a3-633f7d51b9c2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4df5ca77-3851-4e5c-b028-eefd068987ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d55f1e-1a12-4cf4-9cd8-a97646f43ee0",
        "cursor": {
          "ref": "60f3329f-914e-453f-82c9-55500a447e30",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "82cd5b62-3482-457d-8f45-9ac6717e69ba"
        },
        "item": {
          "id": "08d55f1e-1a12-4cf4-9cd8-a97646f43ee0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a417e48-d42c-4547-9705-2710758bf46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f611d4-b16c-4e7e-b5b0-a73faef17ccf",
        "cursor": {
          "ref": "62401105-fb11-4c5e-9ff3-17b7a7c60816",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9a3d9c72-8fe2-45e1-91b7-8efe969540a9"
        },
        "item": {
          "id": "d6f611d4-b16c-4e7e-b5b0-a73faef17ccf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "37d69cca-eb14-443a-9b15-26e9fee5b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde15da0-5a17-4c7d-817a-97faf6c9a43a",
        "cursor": {
          "ref": "8e8fb1ad-2503-40e3-a0f2-f891025df3a9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc25adb7-cd76-4aa2-b933-591ce5466292"
        },
        "item": {
          "id": "fde15da0-5a17-4c7d-817a-97faf6c9a43a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ee29d84-175b-46f5-ae68-d22ec8869ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e82ec4-4ecc-411b-9328-e533d3e1b19d",
        "cursor": {
          "ref": "24dbb522-a775-4e7f-9fd8-e4f8c5f28054",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b86ab483-221c-422e-83e9-acf40ee4a4c2"
        },
        "item": {
          "id": "48e82ec4-4ecc-411b-9328-e533d3e1b19d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d6c26301-dd2a-489a-b334-aec92be23277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5d0aa6-0609-4f9d-9081-197263e98ad4",
        "cursor": {
          "ref": "bad839b8-30de-4857-b020-d6cd73e1c906",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c675de8b-9fd7-4a19-8fd6-504a2fbd88cb"
        },
        "item": {
          "id": "bb5d0aa6-0609-4f9d-9081-197263e98ad4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4ec70d5-e7ac-45f7-be72-49e941aaf7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594198e9-a6fe-45cb-b868-62f166fe2dbd",
        "cursor": {
          "ref": "8413814c-c26b-4f09-866d-502c090fb50b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "560ded00-0a52-4d59-9d8c-a7782e05efeb"
        },
        "item": {
          "id": "594198e9-a6fe-45cb-b868-62f166fe2dbd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "122c44e2-39a3-4eec-9828-ab56e6b9995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6496698-c01c-4e09-b8c1-e3930551a7d9",
        "cursor": {
          "ref": "1a313c4f-5414-4452-bb85-2f7a22763f4d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "12c2acb9-2bf7-486c-bc0f-b4df974dbcc2"
        },
        "item": {
          "id": "c6496698-c01c-4e09-b8c1-e3930551a7d9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6d1697c4-ee21-4e5d-889b-397f3b56a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ab275f-0265-449e-819f-f89ec15b13cd",
        "cursor": {
          "ref": "892fb91b-5de4-40b7-8b29-a5d8b527521e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f9c74a1f-9bdf-460d-92a2-9d43e82b67eb"
        },
        "item": {
          "id": "23ab275f-0265-449e-819f-f89ec15b13cd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ecbe250-ff4e-4444-bbd7-edaeb6a72dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8ea6b2-eb97-4ebd-beb0-ea5ec29c57da",
        "cursor": {
          "ref": "53564bc6-1755-4fcd-9c58-5be03dea6f18",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3f651a3-2382-4e9f-9748-69c02575dc31"
        },
        "item": {
          "id": "cd8ea6b2-eb97-4ebd-beb0-ea5ec29c57da",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4cd98af7-f4ef-49ff-a5a5-3b1df1e6ebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d424e58-179d-485a-b479-c828fe8d16b9",
        "cursor": {
          "ref": "0f5ac686-7a18-45f1-bde6-00c7af0e75f3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "690e00a9-fd3f-45ed-a577-9cd319ca46cb"
        },
        "item": {
          "id": "3d424e58-179d-485a-b479-c828fe8d16b9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6e7fc225-607a-44d1-ad7c-a660af8193f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab2c399-4abd-47c6-8ae9-75aec3ad54cb",
        "cursor": {
          "ref": "974f049c-716b-4252-b4d8-20c9f55e31bd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2496b8db-2477-4c91-b12b-238666117f40"
        },
        "item": {
          "id": "bab2c399-4abd-47c6-8ae9-75aec3ad54cb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b4709c0-f71e-4bec-b5eb-07e7c90586fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8569e7a0-5f45-4713-b9fe-642d7ecfffe4",
        "cursor": {
          "ref": "be44d8ee-3a9e-47a6-a401-440c19897e1d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71c589ee-34c7-4654-a5af-2456fc8933dc"
        },
        "item": {
          "id": "8569e7a0-5f45-4713-b9fe-642d7ecfffe4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "597c8094-7df7-41f7-a98e-b30ece15573b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f4ff19-9289-4089-bf81-50927d4fc04b",
        "cursor": {
          "ref": "6b0c103f-3a2b-488f-8419-cf1ad7d8afda",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bff750fb-4741-4f0c-96eb-e9806952987a"
        },
        "item": {
          "id": "a6f4ff19-9289-4089-bf81-50927d4fc04b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf6559ad-8786-49a5-aab8-5f001ccb08aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b0115f-9407-4001-8afc-141293521a07",
        "cursor": {
          "ref": "0003c481-bb12-4f35-9aa0-7a341f5647e7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "038d2cfa-6f2c-4b31-a075-c77b3412424e"
        },
        "item": {
          "id": "e4b0115f-9407-4001-8afc-141293521a07",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "375b965d-ab25-41df-8d56-2d49f6e14f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f88a4c8-cd68-4acc-a939-518a8dd6b57c",
        "cursor": {
          "ref": "15924d1d-f6be-43a0-a409-2850645a2356",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4d87e885-f035-43bd-bbe9-734e6c2555b1"
        },
        "item": {
          "id": "7f88a4c8-cd68-4acc-a939-518a8dd6b57c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "185f5cb8-c67b-4163-9a04-3bcba46e41bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2f0a3f-25ce-4391-b0fe-d99faa068043",
        "cursor": {
          "ref": "2ace05b0-a849-41b3-9d79-b7b4a9e25e95",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f0cb7706-1adf-4b0d-a867-b61436dee844"
        },
        "item": {
          "id": "ca2f0a3f-25ce-4391-b0fe-d99faa068043",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7cd91375-8bee-4084-a23a-08410008c1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721c7d0-2541-40a3-aea5-506983932592",
        "cursor": {
          "ref": "cba49fd4-70d4-4b09-91eb-fa2f4fbef312",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e15ef7f3-c7d3-41c2-af44-2994de1cf2c1"
        },
        "item": {
          "id": "b721c7d0-2541-40a3-aea5-506983932592",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0e44191e-6031-47fd-8385-82eb0276b0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d098b4c2-9274-48f1-a125-69d017b4566d",
        "cursor": {
          "ref": "3eaa3806-1e00-43ba-8f1c-e66809dffa5e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ba00df3-bb30-4742-a655-a96a34f280d6"
        },
        "item": {
          "id": "d098b4c2-9274-48f1-a125-69d017b4566d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8af95dbe-9edc-4b8e-afd3-470c5a9dc60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2663e733-f7be-436f-acc8-3b09ae14f5bc",
        "cursor": {
          "ref": "fed9a3a9-6bcb-4ae9-ac9e-b5903ac68a27",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7d122c68-0de8-4799-ba5c-878fe6ec88ac"
        },
        "item": {
          "id": "2663e733-f7be-436f-acc8-3b09ae14f5bc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "80d495bd-3db0-46b4-86d3-23c00ecfcf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f37639-bcd2-462f-8904-b1906cb9c2e9",
        "cursor": {
          "ref": "65acbe96-d28f-493e-a465-bd235b14ab79",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4726db84-66f6-4f70-806b-dca7616d1c51"
        },
        "item": {
          "id": "28f37639-bcd2-462f-8904-b1906cb9c2e9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a1e3d45b-f9d7-4eec-bf98-6a61d838fd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c7753f-8fab-456e-9268-c267968b34ee",
        "cursor": {
          "ref": "ff1bb78f-f92c-4145-9f17-aaf394a6de46",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4a869d5-1f14-4edc-a9b4-bf05175f1002"
        },
        "item": {
          "id": "20c7753f-8fab-456e-9268-c267968b34ee",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "27224c0d-8c17-455d-b937-ef9c2e71c8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1234d898-3d2c-46d4-ac93-f89e0fe4d00c",
        "cursor": {
          "ref": "16700799-5e8f-4e9a-870b-b9909efecbdc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fb6aeb68-8d40-4e06-b145-d0f5e2f3fd8f"
        },
        "item": {
          "id": "1234d898-3d2c-46d4-ac93-f89e0fe4d00c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5fe8cca8-57a9-418c-9069-37aa050f90cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e556a5-7f3a-45b9-a7c0-fd7db396ddf1",
        "cursor": {
          "ref": "6fba7eb3-4ff7-4ecd-bbdb-efc3b8ce8173",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "06addb7f-9a83-41c4-af87-3212b1108013"
        },
        "item": {
          "id": "31e556a5-7f3a-45b9-a7c0-fd7db396ddf1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6e963185-2118-462f-9ed4-1f287c50cb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc54b06-537d-4fd2-9798-1127cd41cd39",
        "cursor": {
          "ref": "5da21e6a-a934-4d5c-a1b4-6ca2e19ea396",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0d8d5ba-f3de-4b37-b9ab-61cef4b24158"
        },
        "item": {
          "id": "4dc54b06-537d-4fd2-9798-1127cd41cd39",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0d0117d-5fb5-4d84-af04-13a90eee345e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b7e15b-cc01-4f1d-87e5-b68672c453f7",
        "cursor": {
          "ref": "d4838edc-69f1-4a8c-8186-306d9c2976c5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fdfcbc75-3e07-4357-a004-fff4cd12b9a3"
        },
        "item": {
          "id": "77b7e15b-cc01-4f1d-87e5-b68672c453f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c61303b2-eb26-41d8-b57d-ef742dfea76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ebffd0-b84e-4ba6-b4be-b5de8749c8b2",
        "cursor": {
          "ref": "ae653710-6920-4440-8b1f-9227caa8cea9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f621d80f-c1ac-42f8-80ce-04492855af4e"
        },
        "item": {
          "id": "f7ebffd0-b84e-4ba6-b4be-b5de8749c8b2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7306c786-af75-4e19-8cab-a932c537e4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4746772-a8f9-49ba-800d-6532e5f2a735",
        "cursor": {
          "ref": "fcce3323-0d42-4945-ac98-1cfc0d50e12c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73e5d46f-8fe3-42f8-9b83-25853e710110"
        },
        "item": {
          "id": "b4746772-a8f9-49ba-800d-6532e5f2a735",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3159369c-d22d-4089-bfac-4456f125a504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ece0d-685a-49eb-8a75-fffc71974b99",
        "cursor": {
          "ref": "28f0a970-ce79-4c25-a916-3856a255cda4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "72b7e8e0-28f3-4ebd-90e0-3be3bf75c442"
        },
        "item": {
          "id": "372ece0d-685a-49eb-8a75-fffc71974b99",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1fecf5af-4a19-42f0-8748-4a9d5be86e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e61d1-c22a-475a-8722-476616215ae6",
        "cursor": {
          "ref": "3012852f-99f5-4429-9d73-ae068921a6e1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f8492496-7d6a-45fa-baac-417e4d9cf4c9"
        },
        "item": {
          "id": "4c8e61d1-c22a-475a-8722-476616215ae6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ad19d8d9-d60a-4edf-abcf-0481ea4c8cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fa6a02-7a78-4229-a74b-5a2b703c8f14",
        "cursor": {
          "ref": "6bcf0ef1-1bb5-4eb8-bb3e-2bff834e3e97",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3587cc2c-bf5f-40d2-86e5-6f6be91a20f5"
        },
        "item": {
          "id": "26fa6a02-7a78-4229-a74b-5a2b703c8f14",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "729ae02c-b617-45bb-8948-fd696f8f6e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bc8922-99a3-4323-a112-f50538bcc752",
        "cursor": {
          "ref": "7a693b1c-a1dc-4dfa-9609-1624772e897d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e43c737a-c587-450d-942c-83ca59786a17"
        },
        "item": {
          "id": "36bc8922-99a3-4323-a112-f50538bcc752",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2a9736a7-795e-4946-9626-ab3636b62bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830b6981-5e8a-477a-98f4-a3f96a2d348c",
        "cursor": {
          "ref": "2fb25125-0c50-4b4c-a045-dafdffd96d91",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a51e29c-4bf7-4959-967b-6b729a19a87c"
        },
        "item": {
          "id": "830b6981-5e8a-477a-98f4-a3f96a2d348c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b2e87452-dfd4-4f8a-8890-819d1e305d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63edf864-239d-4d0a-b8ed-32b99d024c76",
        "cursor": {
          "ref": "4396e4d9-7248-4cd3-991e-550c123e5ddf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6dfbcdf0-0feb-41a9-93bc-a6960ad7bed0"
        },
        "item": {
          "id": "63edf864-239d-4d0a-b8ed-32b99d024c76",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "34dbf4cc-761e-4cc4-819b-2e13ed41a72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707775c0-9a99-4bf3-996c-296e6cdb2ee7",
        "cursor": {
          "ref": "72fbbead-1683-44ac-985b-6ee8f8fb8f58",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2cddc8d1-c6dd-45d3-8d8c-1b6d0d0a7762"
        },
        "item": {
          "id": "707775c0-9a99-4bf3-996c-296e6cdb2ee7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "98af1b9e-d837-473b-bd30-bf8906697905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8891c85a-4995-466d-b845-945b3f968a9c",
        "cursor": {
          "ref": "cf5be08f-4d9e-4ad1-b0e7-d8b9b3a6ee08",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ad0646f-a06e-4acd-a6c3-0dd45b7831d0"
        },
        "item": {
          "id": "8891c85a-4995-466d-b845-945b3f968a9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cdfc301c-0e6a-4b8d-9114-e876970430f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcbe26e-2f8b-4ac5-8d8d-6dc2eafde6fb",
        "cursor": {
          "ref": "1f273cda-2a3e-4021-8580-52c201c3befb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c68b47d-a5bc-4300-aff9-aa1d53c157ec"
        },
        "item": {
          "id": "ddcbe26e-2f8b-4ac5-8d8d-6dc2eafde6fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0fba002c-8fc6-48f4-a338-b2bad5ac2bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8cef5-e925-45dd-b521-50894b5945a2",
        "cursor": {
          "ref": "87c96310-b9c1-49cb-8ed9-53d1799b1b6b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e6f3056e-e8bc-4ef2-a266-fed3a094e622"
        },
        "item": {
          "id": "08b8cef5-e925-45dd-b521-50894b5945a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2d4fba81-9f5f-4173-81eb-387965c99fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d296ab-8712-4fbd-b6f6-e3b5f6fa476c",
        "cursor": {
          "ref": "43fc2917-e74c-47a0-9859-3dc6c05cfe88",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7d157f5b-c84a-4e6e-aaf8-074a5840808d"
        },
        "item": {
          "id": "33d296ab-8712-4fbd-b6f6-e3b5f6fa476c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "372751be-5ab0-4ce7-a9dc-2a476ff1f34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f6be8-1b69-4479-9ae6-c70cb21c6175",
        "cursor": {
          "ref": "a505f375-5b80-493b-9dac-11e766c58e1b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1e8ba07e-94be-42ec-90e5-5db22d28860f"
        },
        "item": {
          "id": "5d5f6be8-1b69-4479-9ae6-c70cb21c6175",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "03e13648-8a74-4989-b900-790d5b13254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b2e6b-848e-48f1-a5c3-d3d9a824b4be",
        "cursor": {
          "ref": "945278fa-3ccd-44cb-a962-f684d6de0309",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "942269c9-4c13-4ee3-99b4-c0af01ca63bb"
        },
        "item": {
          "id": "f12b2e6b-848e-48f1-a5c3-d3d9a824b4be",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1de2b015-4bdf-41a5-a978-1a4c650de0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479d65db-630a-4bac-b285-ae1755bf62a5",
        "cursor": {
          "ref": "6f27874b-8077-4008-a72d-4a9af8c8071f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "50b06c7a-79b2-45ca-8470-1771de69430c"
        },
        "item": {
          "id": "479d65db-630a-4bac-b285-ae1755bf62a5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd2af2b9-064d-4f36-b27e-820e95231bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dabae1-cce5-4506-9f5d-2248831b0d1a",
        "cursor": {
          "ref": "792555f4-253b-4e15-81ce-e45117ae5cc1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1ae1bb07-c529-45c5-b495-5a8e065fe392"
        },
        "item": {
          "id": "e3dabae1-cce5-4506-9f5d-2248831b0d1a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f1eb0770-230f-4702-a32e-b26007e70886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e8554-9ac6-41b7-bbba-bcdf332c8ce5",
        "cursor": {
          "ref": "79dcd89e-1c31-41e3-af6d-253746beeda2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cdfc29cd-d27d-4c50-8f33-810cb39c53f6"
        },
        "item": {
          "id": "1a1e8554-9ac6-41b7-bbba-bcdf332c8ce5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7b1a8a3b-37f6-4046-a142-f5f7e4ac01a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632aeb1a-1b74-4485-97c3-70e1c6d074ab",
        "cursor": {
          "ref": "4b41136b-db46-463a-8cb3-01795be558b0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20d380e8-921d-4b1c-8f6c-b3a25a978dcf"
        },
        "item": {
          "id": "632aeb1a-1b74-4485-97c3-70e1c6d074ab",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a7c2dda-0437-408e-9ee6-c43b4c1707b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5917cdb-2b96-4076-af3c-bd574ab4aa35",
        "cursor": {
          "ref": "bb031eee-2f27-4995-88cb-4604f89e648a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8238fca4-f877-4186-98bf-097216523867"
        },
        "item": {
          "id": "f5917cdb-2b96-4076-af3c-bd574ab4aa35",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e99adf57-6695-40fa-a0fb-75557fd6249d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c907c428-fae8-4354-9462-1af9f94a0aba",
        "cursor": {
          "ref": "a2e3811d-9dca-41e4-bc51-96e9a608112d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "99eb57dd-dc99-466d-9b1e-7a462f229372"
        },
        "item": {
          "id": "c907c428-fae8-4354-9462-1af9f94a0aba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "764ca91d-7bb6-4c94-911f-cda35f6e8d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95515c60-7968-4a30-8f91-0f9b042b31cd",
        "cursor": {
          "ref": "fa461138-7b99-4746-8702-658c5952728d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9555a99d-d40b-4296-88df-8147e66e6022"
        },
        "item": {
          "id": "95515c60-7968-4a30-8f91-0f9b042b31cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "47876c43-8951-48f5-9974-2265569cfc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ae9c40-a661-4ec7-901f-f6796ed4150c",
        "cursor": {
          "ref": "b984bb7a-c744-4306-9acd-dcb0cc87d3e8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "830683c6-197b-49af-b704-2346ec30f7d7"
        },
        "item": {
          "id": "57ae9c40-a661-4ec7-901f-f6796ed4150c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e030ab0c-6ec9-49f0-8bda-c6724ce8a560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44e14a5-906c-4c5a-8361-dd4736e3b121",
        "cursor": {
          "ref": "13226484-9af5-4e81-90fa-88883fc343e8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2fde7285-9d02-4a64-bb77-a57a934af2ae"
        },
        "item": {
          "id": "e44e14a5-906c-4c5a-8361-dd4736e3b121",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7b742ee9-0eae-4119-8c98-e862ac39cd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9052fe1-5da7-4cb3-bf9f-d3946936f716",
        "cursor": {
          "ref": "d839a7a7-be09-45e1-a727-43ebaa392edb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7731a5a0-81a3-4deb-a605-d64b0cf79af3"
        },
        "item": {
          "id": "c9052fe1-5da7-4cb3-bf9f-d3946936f716",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "49f9ba71-b708-4e3b-868e-734da9b9fa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beb22b6-a7f1-4fe3-a731-0507712cbf8f",
        "cursor": {
          "ref": "da0609e1-cc59-486b-9a4d-f2344e776002",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7f169768-afda-4b1c-8100-45c520456d2f"
        },
        "item": {
          "id": "7beb22b6-a7f1-4fe3-a731-0507712cbf8f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "174a2687-4431-4af7-a027-63bb6966fd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a047e062-fa31-43bc-b2de-679831138004",
        "cursor": {
          "ref": "02364c9e-ea1a-47ba-9a63-39935df30780",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "115d49ce-2759-48ae-88e7-33dbfc6921ed"
        },
        "item": {
          "id": "a047e062-fa31-43bc-b2de-679831138004",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ab9ccfc9-995f-440e-89a2-3b3e2a646089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef7c86f-e859-4e96-af79-5e5483d52ba9",
        "cursor": {
          "ref": "bf8014bb-ce3d-4c78-80d0-3a62466dd9f6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "492d6d5c-1440-420b-acb0-52a142b75317"
        },
        "item": {
          "id": "5ef7c86f-e859-4e96-af79-5e5483d52ba9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6efe9d29-1792-4459-b5b3-8f8945cc22bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bbbd45-432a-46f7-a6a9-a2d1b8b4ca60",
        "cursor": {
          "ref": "bfb09174-3420-4ada-be98-e45f262ab2e0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6364b3d5-b63d-4c8c-b32d-6c76705cdfcd"
        },
        "item": {
          "id": "54bbbd45-432a-46f7-a6a9-a2d1b8b4ca60",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e466ea15-6bce-48ac-8385-4a65b9a89e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee02e4f-7f07-44a4-a693-d577dc181eac",
        "cursor": {
          "ref": "144696a1-3d97-4850-93ea-a6839c237112",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "37da9278-f267-40b9-af3a-77da54b0f72e"
        },
        "item": {
          "id": "7ee02e4f-7f07-44a4-a693-d577dc181eac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51372d06-d72c-4981-b0b4-8b7697b1a952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc50b5c6-127a-4419-a941-599225d3b769",
        "cursor": {
          "ref": "4141b803-f8f3-46dd-b320-15eb48683e5e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "72b73c7e-1841-40e1-a8f6-dd24d2969d71"
        },
        "item": {
          "id": "dc50b5c6-127a-4419-a941-599225d3b769",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "253bd09a-f5a5-4ca4-b5ea-787158850663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52872097-9955-4355-b57f-5ce1e5540c9e",
        "cursor": {
          "ref": "36850993-c14d-428d-a46d-fd1a698c663f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f6d0694b-fb0c-41a9-8f4f-e3a47b5beaad"
        },
        "item": {
          "id": "52872097-9955-4355-b57f-5ce1e5540c9e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a67f2fb-0003-429f-a6a0-faa207291c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f297cc38-24e1-420f-8a45-d00ee43a62ff",
        "cursor": {
          "ref": "611adcd4-9d82-4b95-bef0-e859469bcdcd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7439eb7a-8707-4eaf-883a-f799fe76ada8"
        },
        "item": {
          "id": "f297cc38-24e1-420f-8a45-d00ee43a62ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f0aca03-4c0d-4f97-af47-73aef1c7a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4fe38d-6a34-49c1-ba02-c187abf382c3",
        "cursor": {
          "ref": "c0ea429a-b9b1-481a-9577-6628c9142947",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7f2fd6c2-eb9e-4ec5-a701-68a1b72edc0e"
        },
        "item": {
          "id": "8f4fe38d-6a34-49c1-ba02-c187abf382c3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "24ac2222-61d7-4c25-8f13-7af00a1b81c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc4bc2-d69f-4ce9-8e08-4b3b380f1f26",
        "cursor": {
          "ref": "06ed8f85-d38a-4f49-971b-b32caa79feef",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ec0b6601-e800-4adb-842d-1657bad24ba5"
        },
        "item": {
          "id": "32cc4bc2-d69f-4ce9-8e08-4b3b380f1f26",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "40810e16-f8b4-4f6b-80f9-605c24a571a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dae449d-c8bc-479b-9d95-f59b51149d8c",
        "cursor": {
          "ref": "3b640d3d-68b4-4158-9ecc-a4b60156da2f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7aa55e96-15c2-435d-a607-3596a9f0595e"
        },
        "item": {
          "id": "8dae449d-c8bc-479b-9d95-f59b51149d8c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b71133fb-3f29-494b-a31c-4c6232928c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07265a43-c5c8-4621-acf1-b091409af2f0",
        "cursor": {
          "ref": "939fe0c3-b498-4da2-bea0-17907a797a5f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b14ff7a-45b6-4262-9804-90062cf8b432"
        },
        "item": {
          "id": "07265a43-c5c8-4621-acf1-b091409af2f0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d03d300-0c15-47fb-8378-24d7af1474d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3187bcba-eff6-4716-901b-a4806c8b7180",
        "cursor": {
          "ref": "ab1e1025-17d2-456d-b671-0a772d2801ad",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c96d61a-e1ce-4689-bd12-470b45fd7a6d"
        },
        "item": {
          "id": "3187bcba-eff6-4716-901b-a4806c8b7180",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "585a3f1c-2e2c-4ac3-b2b5-f62ec4c525db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135f24f2-df15-4bcb-8054-f6971ad30a99",
        "cursor": {
          "ref": "a7535515-f655-4340-b8c8-ea3e72906bc9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9740bf6b-71d8-4812-8741-e83630e0fdca"
        },
        "item": {
          "id": "135f24f2-df15-4bcb-8054-f6971ad30a99",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75a30a33-d409-4c6d-b4b7-f430e3324e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df16cdfc-677c-4d44-a08a-7de4bfc17865",
        "cursor": {
          "ref": "8306cb51-644b-4730-ab83-b0f1850e6436",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3844c5ee-ced2-4287-969f-c88da2b052f4"
        },
        "item": {
          "id": "df16cdfc-677c-4d44-a08a-7de4bfc17865",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64fc93b8-50fa-4c3f-9280-2b297202afe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe27b410-0bd2-4039-8c6d-6135fb4cdaa1",
        "cursor": {
          "ref": "6499521e-0a23-47bf-adc6-fb32a2e264fe",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c2d35ac1-326c-4288-b32d-0a03e04e47b4"
        },
        "item": {
          "id": "fe27b410-0bd2-4039-8c6d-6135fb4cdaa1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "35a1442a-f835-44b2-9878-afc26665316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcfbf59-d333-485a-a1dd-c4c1d19cb4d6",
        "cursor": {
          "ref": "238ba989-1cb6-46ae-b4fd-e998c3cf1dfe",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7af78e67-7dd0-4fc5-9ba8-6d0e50e5a937"
        },
        "item": {
          "id": "dfcfbf59-d333-485a-a1dd-c4c1d19cb4d6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ec52b706-9cfb-4be4-9018-a6c38bb6ba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90f2aef-9459-4d14-92a4-116464dadc4e",
        "cursor": {
          "ref": "74aaf213-42e5-4cf0-a5ec-a79ebf02c085",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bdb40fb4-c93d-437c-b840-e38232bba22e"
        },
        "item": {
          "id": "e90f2aef-9459-4d14-92a4-116464dadc4e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "110581f2-de97-404b-a265-4a8d67f0cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc1b12-01ad-4657-97b3-33bd4f6f85ca",
        "cursor": {
          "ref": "69f6659d-069f-4d92-8e11-a828966be78c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "096a481c-5c01-4c7c-bb75-d26629dd4f2b"
        },
        "item": {
          "id": "7fbc1b12-01ad-4657-97b3-33bd4f6f85ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a81c3968-9771-4092-a244-b3d565969406",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42ebb87-19a9-4800-968e-58136591ee8d",
        "cursor": {
          "ref": "386c95dc-95b0-45c4-8c9a-5ad9d7e15c5b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5a47f326-cd64-4851-9996-43c1f673906e"
        },
        "item": {
          "id": "e42ebb87-19a9-4800-968e-58136591ee8d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a253adba-79e8-4d9b-aa88-4eac487096ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "619710c4-f69b-4864-8830-68ff4de83f55",
        "cursor": {
          "ref": "c16a27ff-b019-4aa5-b91a-90b5f69e3b11",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "601404ea-9c15-4435-b3d2-4d60ce4cb99b"
        },
        "item": {
          "id": "619710c4-f69b-4864-8830-68ff4de83f55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ccdd5b0e-6c99-413d-ba15-a3bc8865c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "91e9e044-ee8b-4597-bd72-cb405a8dfe5f",
        "cursor": {
          "ref": "61c18a08-ab6a-420e-b475-e1e41cfebdd3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b05f6831-13e1-4c31-b06b-9590e10fd4a6"
        },
        "item": {
          "id": "91e9e044-ee8b-4597-bd72-cb405a8dfe5f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8006bfe9-9b67-45e3-b442-b0510cf2e028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12ea4217-4dad-4e82-880e-c2e1965feccb",
        "cursor": {
          "ref": "3bc67c22-40a7-40f7-9a56-f885977aab63",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f67c6d6-2dc1-4638-a151-6946540bce22"
        },
        "item": {
          "id": "12ea4217-4dad-4e82-880e-c2e1965feccb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "be198e8e-3e73-4f82-99cd-9a0a4fe369bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "181ab7f4-b326-4914-9638-b0b966a2e6c5",
        "cursor": {
          "ref": "c38c3bb0-7871-44e8-9673-1b6f79f0f90b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "537bb863-598a-4317-8bdf-b1f133bae42d"
        },
        "item": {
          "id": "181ab7f4-b326-4914-9638-b0b966a2e6c5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "898a306a-c1c5-42fc-b4a0-c832fae9fc6b",
          "status": "Created",
          "code": 201,
          "responseTime": 11010,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e119f201-3d21-48ee-886b-b3658069372a",
        "cursor": {
          "ref": "f34f3316-c9a3-4628-8902-00d5c6be4c51",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5d9af7aa-c3e1-4e2c-bd6d-a943eb0ed683"
        },
        "item": {
          "id": "e119f201-3d21-48ee-886b-b3658069372a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65771d78-9b3f-46f3-a673-89c5f94c68cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2087e30d-062d-41cf-bd50-1e9793266a5a",
        "cursor": {
          "ref": "f78542d2-716b-4b02-a568-cbb69e0dcc5c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7287c1f5-0f4d-4ec8-b3f0-081b199b3246"
        },
        "item": {
          "id": "2087e30d-062d-41cf-bd50-1e9793266a5a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "74599bc2-c38c-4a4b-a613-6954cb505200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "144605be-820b-4606-ba3f-14b0046406cb",
        "cursor": {
          "ref": "505a9fd9-692f-4474-8b41-e7be1aa774c7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9f5a9d2-3483-4105-a477-b2b6cf84df98"
        },
        "item": {
          "id": "144605be-820b-4606-ba3f-14b0046406cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1b3c5b3d-70d8-4e8f-9bc7-8685e961fa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a958b-1648-4d50-9ca9-88c6cd4b3f8e",
        "cursor": {
          "ref": "e08920a6-ad9d-435e-a8ae-aa6b997aa635",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa1b8724-6896-47ff-ba0f-bccd26861ce2"
        },
        "item": {
          "id": "ec3a958b-1648-4d50-9ca9-88c6cd4b3f8e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "362814e5-d24b-4461-a612-7c0954282d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab26ff80-c7a8-4313-9133-964e55e812ac",
        "cursor": {
          "ref": "a309c3c4-f2c8-484b-9a7d-4dc139c1e5c3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2ce796ec-cda2-4cc5-a2b9-687be8a53672"
        },
        "item": {
          "id": "ab26ff80-c7a8-4313-9133-964e55e812ac",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e810694f-a702-480b-b682-d774c548219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90064a26-098c-4655-840b-3890cec5cc11",
        "cursor": {
          "ref": "54a3e0fe-8b27-4a62-b6c2-35ecf1775338",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f7d3a31c-1b78-4a23-9472-f9ebd4adb633"
        },
        "item": {
          "id": "90064a26-098c-4655-840b-3890cec5cc11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ab867ff-188b-4f9e-aef5-12d302bf6054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f58538-8b37-41cf-bb88-70c100e86798",
        "cursor": {
          "ref": "2b261b64-2e0c-4d7a-b394-c2a5d60f809b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fc8a78fe-112e-47b4-8999-c9744b0cdb1d"
        },
        "item": {
          "id": "78f58538-8b37-41cf-bb88-70c100e86798",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec550cab-e7b0-4a03-b0bc-c92c88e96020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b6b8c-3d1e-435d-8fd5-7fc8388a8db2",
        "cursor": {
          "ref": "decb7ac2-1691-46aa-8f40-fb30c35eccac",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1c765b72-11e0-4fd4-9a38-05a1ae028583"
        },
        "item": {
          "id": "414b6b8c-3d1e-435d-8fd5-7fc8388a8db2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13530b55-c99f-4bb0-ae60-650d6c82103c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c904f47f-9521-4b9f-8d2f-be48dbddae56",
        "cursor": {
          "ref": "1ed95748-4a53-4e21-935b-e9801300e55d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36a3d08d-e0e4-4bd2-b564-541d92f24df5"
        },
        "item": {
          "id": "c904f47f-9521-4b9f-8d2f-be48dbddae56",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71a518d0-ac94-4d46-ba64-1f002876bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fb27f3-9414-42ac-957a-ba7f712aaa62",
        "cursor": {
          "ref": "6d08208a-93a6-46fe-9d2c-e71b81d5a0a3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "364455c3-e64f-4c31-bf36-47b976cec37d"
        },
        "item": {
          "id": "f6fb27f3-9414-42ac-957a-ba7f712aaa62",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6947a3c8-a749-416c-ae0e-a963c9b19bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab06967-3310-43f6-950a-aaab9640248d",
        "cursor": {
          "ref": "f56eb98d-9c6d-485a-9071-cb612b380a31",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3ab378de-7fe0-4b68-b5ac-cf7e1ed032c7"
        },
        "item": {
          "id": "2ab06967-3310-43f6-950a-aaab9640248d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f1e597d7-46fd-404a-8a99-831e346a84da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a829afb4-d6b0-4c7e-9be2-9b5421f33fc0",
        "cursor": {
          "ref": "b44b2fcd-f858-490f-9c87-39f7d95c431b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06c0a314-a650-4837-b68c-2b6002049eed"
        },
        "item": {
          "id": "a829afb4-d6b0-4c7e-9be2-9b5421f33fc0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d6a735f6-fa4b-48dd-9395-19c80866b290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd0115e-8bdd-4ef3-9a48-9fdd7f6eebdf",
        "cursor": {
          "ref": "014502f3-3523-403c-82f1-274b93f6ca92",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a304efe6-9e86-4483-8cb7-582cad03db8c"
        },
        "item": {
          "id": "1cd0115e-8bdd-4ef3-9a48-9fdd7f6eebdf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "220fc7a0-d613-438f-9ba9-a3237a053261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297a9f3b-e43f-4496-b53e-c29f4ca31424",
        "cursor": {
          "ref": "90036e78-f52a-4576-839c-08fac43b568f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "575a9659-5a98-4a79-b30b-891c29fc1a85"
        },
        "item": {
          "id": "297a9f3b-e43f-4496-b53e-c29f4ca31424",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0aaf5023-aaaf-4e16-acbd-d0458bdad6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daeb057-3c9f-45cf-b54b-a84f72f85b2c",
        "cursor": {
          "ref": "268bf986-7a75-45aa-9a36-0685a10ed97e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ab5831db-c515-4cbc-9f26-018ea32053bb"
        },
        "item": {
          "id": "7daeb057-3c9f-45cf-b54b-a84f72f85b2c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0c63442d-40eb-43a6-9005-5ee5c202c7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b19bf5-5986-4a24-bdf9-2f2f28534f1a",
        "cursor": {
          "ref": "dbfe01ae-de28-4601-936d-0ef040bf83ff",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c63588a2-8f54-440a-aa6c-794aebcdbad9"
        },
        "item": {
          "id": "d7b19bf5-5986-4a24-bdf9-2f2f28534f1a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "caae8a09-fabd-409e-b618-fb5d6b618c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd682ec-d887-4d4b-8d0c-de739a860a17",
        "cursor": {
          "ref": "90fd3acb-b6e3-4a4f-a04a-63100035ef40",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5b3a76e7-c61a-4d97-b3ed-dce71064c522"
        },
        "item": {
          "id": "fbd682ec-d887-4d4b-8d0c-de739a860a17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ebba6270-d92a-4d23-b73d-cae01f765727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4d23c6-0927-4b12-af66-601320b11a1b",
        "cursor": {
          "ref": "18d7a260-0338-49cb-82be-ea50c10b58e4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d1711b4b-d845-422b-90bd-7d78404ef1c8"
        },
        "item": {
          "id": "5d4d23c6-0927-4b12-af66-601320b11a1b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "846d6f24-26ea-4847-a92f-46293c9cc9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444c4630-eae5-4075-adf2-981b327ac98a",
        "cursor": {
          "ref": "164186d0-506a-43b7-85d5-840d7a93d1b8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a1be33f5-4f91-4bcd-aac7-ee76cb6cca38"
        },
        "item": {
          "id": "444c4630-eae5-4075-adf2-981b327ac98a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "13ade491-8d52-4a19-a926-b13661bd8c9e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fe4fde70-9355-49d3-893c-ddabd2e38412",
        "cursor": {
          "ref": "ea3baf1b-94c6-4168-af93-f8cde794db1c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9821558-068c-44ef-9530-7b88d7549216"
        },
        "item": {
          "id": "fe4fde70-9355-49d3-893c-ddabd2e38412",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e5701700-bc61-404e-a398-4e9447bd5edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a825a53-a4b2-4a28-84e6-54e89436a083",
        "cursor": {
          "ref": "830bb269-a5a6-441e-b33a-6c7a2f69d503",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ccd5f8a0-4cc4-422e-b91e-91c064506479"
        },
        "item": {
          "id": "8a825a53-a4b2-4a28-84e6-54e89436a083",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ac77ffcf-db41-42f8-9e07-cf5ebf5c58de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8f33da-1681-4150-a672-95987bad94a8",
        "cursor": {
          "ref": "cd97500c-44d5-4b5a-bcc0-f77b7e157c37",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "34b38b5d-a01b-4cc8-af1d-a1567418de00"
        },
        "item": {
          "id": "4c8f33da-1681-4150-a672-95987bad94a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3860567a-9f57-4e10-9b9c-81b18199101a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6393a26-c819-49fb-a7cc-e729bf5127d0",
        "cursor": {
          "ref": "db66daf2-5f1f-4eb1-afd7-665692e0c6de",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc6ac01c-4672-4384-b992-1750f787b97c"
        },
        "item": {
          "id": "a6393a26-c819-49fb-a7cc-e729bf5127d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24822e06-316a-42c4-8780-9aeb2bb0f7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41cf8cd-0cd5-49ae-b47d-88d209fa91a4",
        "cursor": {
          "ref": "f6e47fe3-176c-4afd-bd6f-8d68d659ec1b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b8ba06c0-222f-4384-a663-4e42f22effd6"
        },
        "item": {
          "id": "a41cf8cd-0cd5-49ae-b47d-88d209fa91a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "361554df-a93f-4c5b-bbae-2642f7043022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6878273d-14cf-4b60-afda-09e9a369f935",
        "cursor": {
          "ref": "9d6a67e7-7b78-42d5-ab8f-3ceca332c408",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b6e985e1-e705-4353-84d9-84ffed5bd2ce"
        },
        "item": {
          "id": "6878273d-14cf-4b60-afda-09e9a369f935",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d665913f-e716-4940-9069-2cf521628fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22af694-01c9-4892-9450-66101320bd71",
        "cursor": {
          "ref": "588c71ca-f383-464d-8a5b-57d9b8f1b7e0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "90972aa7-fafb-4246-a352-29266f565e40"
        },
        "item": {
          "id": "b22af694-01c9-4892-9450-66101320bd71",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "19791e09-1259-47fe-b152-936957a75ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45563d69-e2d2-4ac5-9205-0026e20fcb19",
        "cursor": {
          "ref": "b7fdc0bd-114e-4a63-b16b-30e38bea8d46",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a2cf66df-697c-48c3-82b2-5f632cd97405"
        },
        "item": {
          "id": "45563d69-e2d2-4ac5-9205-0026e20fcb19",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "efb7aeed-955c-4d63-bce7-059b1ba10d23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "646eee0a-f104-4b78-95cb-11d825a045f2",
        "cursor": {
          "ref": "e11969ea-b2e0-45cc-9527-29d691d1d7e1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6b8f2aaf-4ced-475c-8a7a-b506c31b18ec"
        },
        "item": {
          "id": "646eee0a-f104-4b78-95cb-11d825a045f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "275fab53-1f3a-4d19-9ac9-3d6ac4173fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4be09f-1c69-4357-ad38-13379c88477f",
        "cursor": {
          "ref": "d4e21d4a-3ce6-4165-a7b1-713c4311dcb8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5d7e6203-3526-4152-876d-50e04f3c1688"
        },
        "item": {
          "id": "cf4be09f-1c69-4357-ad38-13379c88477f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a006efc9-40ef-4f14-8fe4-748cfcfc564d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d0e7d-02be-4344-b66f-e99534f28a55",
        "cursor": {
          "ref": "32dcbfa3-7a28-478e-93d8-a3c98121141b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "97b44cb4-6530-42cc-b5c8-cbe6ba1d80fa"
        },
        "item": {
          "id": "3e0d0e7d-02be-4344-b66f-e99534f28a55",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0fd9aabc-7f5b-488d-bfcb-d5f0ef4b2ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f94adb-d109-4a6d-ba01-224aede49067",
        "cursor": {
          "ref": "04dd6b0d-0ca8-44c9-a35e-eff5ea2d5b3e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "43ed7db9-9981-481d-befe-0e499ec302f4"
        },
        "item": {
          "id": "e0f94adb-d109-4a6d-ba01-224aede49067",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5cc7fe92-2963-4bcc-9ea8-eccdaecdf881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a46537d-17e0-4788-8c8c-e0cad83c6107",
        "cursor": {
          "ref": "b889185a-be40-4f6e-9ea7-3c80d6ce34f0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f8297972-a1e6-450f-b426-4d2385246e34"
        },
        "item": {
          "id": "9a46537d-17e0-4788-8c8c-e0cad83c6107",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5cd20250-4eaf-4bac-b66e-416d32c0a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdd567c-2078-4400-ad80-d1890148b9b8",
        "cursor": {
          "ref": "9819561f-32ae-439a-94af-2b763bc899ff",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "836dce92-e7ae-400b-ad9f-ed6f06456b72"
        },
        "item": {
          "id": "8bdd567c-2078-4400-ad80-d1890148b9b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb137ee3-8cec-4db4-97ea-fb95a5376caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e33ec-f770-438b-9d04-a89560826b1a",
        "cursor": {
          "ref": "9362e5ea-4571-4d18-aa9a-0a47ebd2a973",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c1b5ee5-5a87-460f-82d3-3f9f63eecced"
        },
        "item": {
          "id": "230e33ec-f770-438b-9d04-a89560826b1a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "beca2f04-91f5-4088-92b7-61c764c1d77b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2fe4972e-5e50-4446-9cd0-25913cd69233",
        "cursor": {
          "ref": "2101e3c2-2254-4ecc-9f64-7983dcaafe77",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "20bfb318-f6a3-470b-9cf4-b476bd46bf69"
        },
        "item": {
          "id": "2fe4972e-5e50-4446-9cd0-25913cd69233",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "31285c85-2c39-413a-b7f6-30f94c4c4ca2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f8e11f25-32a1-46bd-9452-c0f7a895cec9",
        "cursor": {
          "ref": "474b76af-54f2-4939-9147-ecac3a429b20",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "28195df1-7fa4-49f4-a0b2-7c59b8a2d8cf"
        },
        "item": {
          "id": "f8e11f25-32a1-46bd-9452-c0f7a895cec9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f7879c00-f00f-42e6-8b63-e7ba8e39a29a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b08ddb8d-bf63-4764-9ce5-f47768f45d80",
        "cursor": {
          "ref": "786f1481-32a6-4c86-99d1-baf79e2580cb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "45b52602-2d6f-4844-9823-ae261ebc403b"
        },
        "item": {
          "id": "b08ddb8d-bf63-4764-9ce5-f47768f45d80",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "41be5e3d-1d26-47ab-9a94-461d9168b283",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "08b51693-f897-433d-b671-05c86e058674",
        "cursor": {
          "ref": "070bcd23-a564-4ae1-a15e-fff3aecf11fd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "33bd55a1-de2e-4d64-b5b5-da0ccf331821"
        },
        "item": {
          "id": "08b51693-f897-433d-b671-05c86e058674",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "75628e73-8873-4603-b788-3aa6c4c7500c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c54b8447-9c2a-4401-ba97-6104caee5439",
        "cursor": {
          "ref": "293250b9-e31d-4d98-bb5e-51ce83991217",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9df8132f-953b-412f-9ed3-eb2f7261d5a6"
        },
        "item": {
          "id": "c54b8447-9c2a-4401-ba97-6104caee5439",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "281c76cd-792d-4cec-873e-63db605dfb5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "17ad61c1-2d32-47ae-8c85-ce124df8f5d1",
        "cursor": {
          "ref": "10fcc219-374b-42f6-8f81-8473bee3cd62",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "229650c0-662a-4aae-b81c-8d98f8571af4"
        },
        "item": {
          "id": "17ad61c1-2d32-47ae-8c85-ce124df8f5d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "81225f57-c8e7-498f-8031-ef7ed1ca4e88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79a39e6-d619-4a2d-8e5f-c642b6bf6e97",
        "cursor": {
          "ref": "aa4faad8-dbc3-4beb-9e5f-7c498d7e7365",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7af1340a-7b81-48b4-b3c6-d23bbf7177b6"
        },
        "item": {
          "id": "f79a39e6-d619-4a2d-8e5f-c642b6bf6e97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2b771de-6016-483d-8c60-271db5087301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad58d6b2-9761-4953-8976-9a77b2d49774",
        "cursor": {
          "ref": "d19a9f26-625c-420a-8db2-a90be75e435e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4963643b-7a1f-46d4-8441-4fb9e939bc0c"
        },
        "item": {
          "id": "ad58d6b2-9761-4953-8976-9a77b2d49774",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2017679-bc1c-445e-bf2f-7e34f476dbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33574d1-2d74-4e03-9165-34214f10d2f5",
        "cursor": {
          "ref": "8abd0254-bc61-43ff-8cc8-725a9c089377",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03b75e1b-1e3d-49be-94e5-4d2b7f7ace99"
        },
        "item": {
          "id": "b33574d1-2d74-4e03-9165-34214f10d2f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2f7552f8-2867-4901-b9d6-e8be47a412c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feaa725-5b74-4c5f-98f4-2e2374b067b0",
        "cursor": {
          "ref": "a6685d19-e268-4b7a-bd0e-c8e99b22bbc8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b938426d-25f9-48b0-ab8c-476c77040b42"
        },
        "item": {
          "id": "8feaa725-5b74-4c5f-98f4-2e2374b067b0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b1e3ea2d-f66d-4280-b592-bf5d9796b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982fbae5-fad8-4739-bce1-154c2ca44dec",
        "cursor": {
          "ref": "dc339447-1839-4cfa-a764-7b3a6d9a315c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "41e77b91-80eb-42e0-b643-e01d4b054550"
        },
        "item": {
          "id": "982fbae5-fad8-4739-bce1-154c2ca44dec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dda262cf-5d4e-44a2-923f-ae1f3f45e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c9fefa-9e53-42d8-8987-a6c9aa1da6a5",
        "cursor": {
          "ref": "65078000-eecf-41ca-bbcb-c7a4f7f808df",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "56de7f7d-87ed-41b5-a28a-09c5197cb05a"
        },
        "item": {
          "id": "73c9fefa-9e53-42d8-8987-a6c9aa1da6a5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27c2c9f4-e8af-4a81-a03d-ba8d6b5024e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cd848d-75df-414a-8b4e-a08280f02689",
        "cursor": {
          "ref": "781e667c-711c-47cc-aa62-ecdfb0e7c717",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "162a93da-f738-4b7a-886c-b0c3584d6197"
        },
        "item": {
          "id": "01cd848d-75df-414a-8b4e-a08280f02689",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd963405-c8a9-439d-a962-75048eb92732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133650ef-02ac-4db4-b3fd-ce47f2aba780",
        "cursor": {
          "ref": "2dec8238-0f59-4ab7-9bec-84b03724b802",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56d5ae3f-e963-4b5b-a861-05085144d1c1"
        },
        "item": {
          "id": "133650ef-02ac-4db4-b3fd-ce47f2aba780",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "470411d9-dbf2-4589-90c2-d2a928e949e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2440de0-c2ca-4b22-873e-0d580d5001cc",
        "cursor": {
          "ref": "298ff1ee-607b-4e03-8653-ed2d658e3df8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e9d80277-f6c2-4250-ab2a-80b5168f5829"
        },
        "item": {
          "id": "c2440de0-c2ca-4b22-873e-0d580d5001cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4f4ffc6c-547a-441e-ae8b-ca64923a4247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769fc1d9-3ddb-433e-8200-b3edd3314abd",
        "cursor": {
          "ref": "bc009193-1b9e-4396-b38c-eee2ca622a12",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "822a34da-71f2-4f7f-92ee-7ea531db0ccb"
        },
        "item": {
          "id": "769fc1d9-3ddb-433e-8200-b3edd3314abd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0306968-21b0-42b2-b9eb-f199f19d0f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00434dda-0834-48fc-b01c-19503c11e622",
        "cursor": {
          "ref": "03fd8051-2e7d-4e76-b559-7ced6c34c671",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "61491ea0-d281-4bb8-b8bb-6b5ee2152eae"
        },
        "item": {
          "id": "00434dda-0834-48fc-b01c-19503c11e622",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "31ad6857-2b89-4d44-a603-22d198d4f1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e66826-46a3-4397-9def-a68421b5cc49",
        "cursor": {
          "ref": "1fe071c1-d0f1-4499-90d2-0d74015b47b1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c428ae70-0310-46aa-bb07-aa610e40491f"
        },
        "item": {
          "id": "d5e66826-46a3-4397-9def-a68421b5cc49",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "80af720b-5068-49c3-947b-63d4a4fe18a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85b633e-82dd-4d6b-8e69-ccbbac26ec34",
        "cursor": {
          "ref": "cb45f10f-decc-4160-ba71-e0ff3468a6a3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "26a37a96-7cae-4f7d-8274-6e306af0b0bf"
        },
        "item": {
          "id": "e85b633e-82dd-4d6b-8e69-ccbbac26ec34",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fbb4d2c5-398e-45f0-a748-16eb59617b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe4aace-a838-4bf0-987b-efbba087f6b3",
        "cursor": {
          "ref": "a7e4cf25-9942-4eec-8d69-401f07ff11b0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fd4f907a-6c95-4c0b-a572-2bd94194e4f3"
        },
        "item": {
          "id": "efe4aace-a838-4bf0-987b-efbba087f6b3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d962a429-953b-4643-89b1-c193a4d33d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9b2a58-ce4a-4c96-9505-1c55764e4cd7",
        "cursor": {
          "ref": "efad3f7b-b15a-43f3-a47c-3708ca6af21c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "179a7c48-16d0-4d92-82b1-c42bcec80ca0"
        },
        "item": {
          "id": "ae9b2a58-ce4a-4c96-9505-1c55764e4cd7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "878fd564-e31d-41f7-9f49-5af866a16b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4533483d-013e-47cc-b043-f088b9fbd95c",
        "cursor": {
          "ref": "f444d6b7-7ec0-4a08-8c2f-433916af72fd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca119631-ac03-4868-89c1-31e37bb8f6a3"
        },
        "item": {
          "id": "4533483d-013e-47cc-b043-f088b9fbd95c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "46a9cea1-7ce6-4654-912b-7a412b167022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ac0a7f-c7ff-4c78-a73f-d143cf132703",
        "cursor": {
          "ref": "31c909b5-1d2a-4e6c-b398-d3cc4d5cd544",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "619b6bd5-1734-4db7-be22-71786654d7e9"
        },
        "item": {
          "id": "f3ac0a7f-c7ff-4c78-a73f-d143cf132703",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b1395efc-f48d-4198-b73a-ca8fed9f0dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081fd004-584c-4394-ab2a-eca7ef3e5838",
        "cursor": {
          "ref": "206e1338-c0d3-4192-aef3-4a9e0ea282d1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "62ffe83b-448f-402e-b485-e0f28540e528"
        },
        "item": {
          "id": "081fd004-584c-4394-ab2a-eca7ef3e5838",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ee5953c-9d9f-4e0b-8b8a-23dcb7bdc7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94fa44c-b46a-4d0d-b03d-ccd3db44b224",
        "cursor": {
          "ref": "1db20b85-67f3-4347-8607-5209c07783b1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "429ba1c8-01ef-42a1-8fa0-bfb648991a3e"
        },
        "item": {
          "id": "c94fa44c-b46a-4d0d-b03d-ccd3db44b224",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "78487c21-b8e5-444d-bc68-aceef86072ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d783fff6-7f3b-491a-93b9-0e38f891b549",
        "cursor": {
          "ref": "11893bb0-924c-40f1-9cc8-429587009964",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a70180c7-a388-44ed-8f68-d49726bc7197"
        },
        "item": {
          "id": "d783fff6-7f3b-491a-93b9-0e38f891b549",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d4da1184-41aa-46ec-b6c1-219c1238014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe45221-0e58-4dd3-9aa3-3932a43164b8",
        "cursor": {
          "ref": "2e1fa62c-d823-4b57-9e21-f84656971b97",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "425d539b-3ae4-4a5d-986e-b1166776a7c8"
        },
        "item": {
          "id": "4fe45221-0e58-4dd3-9aa3-3932a43164b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "97fb8a8c-d0b4-405f-b670-dcfa4701eee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467a357-09e6-4f6c-be06-81c6b16190dd",
        "cursor": {
          "ref": "dbd94d0d-a9f7-4d2b-b94e-474a2c359150",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e0a5d9b3-f8f5-4cf1-b605-26a589c5c76e"
        },
        "item": {
          "id": "e467a357-09e6-4f6c-be06-81c6b16190dd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6f34d2e2-6cb1-4276-af16-f275ad065cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b93c55a-c00d-4d7a-9c06-1d3cb95527f2",
        "cursor": {
          "ref": "2155da9c-24f8-4b6e-a0aa-2c85df0d58eb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7dc77676-7d05-46e4-93af-fe2873a03487"
        },
        "item": {
          "id": "0b93c55a-c00d-4d7a-9c06-1d3cb95527f2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "36af5d07-8a74-4968-87b8-ef91459a085e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b81f29-6658-452e-89f0-047d12a6b42e",
        "cursor": {
          "ref": "0633cf14-4762-4e48-a582-4d0d2eaabae5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6592a7d-94a2-4bc5-a017-5c7180f26e12"
        },
        "item": {
          "id": "69b81f29-6658-452e-89f0-047d12a6b42e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fd86d6a6-2082-4bb6-a81e-c835e443e933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf363b1-8e7d-4671-8b8b-a2da4a95ce37",
        "cursor": {
          "ref": "fc44648c-995c-4d1a-be2e-62f33b5e36ad",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "61772fc9-02fc-4c35-9b95-75188fd19a48"
        },
        "item": {
          "id": "ecf363b1-8e7d-4671-8b8b-a2da4a95ce37",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6d80d271-efa4-4fca-b36b-f4e9f2fb16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6cdc5c-c0de-4f33-8404-ac9f39dedfdd",
        "cursor": {
          "ref": "86f6b4dc-e245-4dd0-a250-7c11814e80fe",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fcf6c7ff-3eda-4f5a-8a42-bcd7fbaa260b"
        },
        "item": {
          "id": "9a6cdc5c-c0de-4f33-8404-ac9f39dedfdd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "186e253d-2878-4d96-8ca2-66ac7bb615b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93e8589-761d-4754-b581-97cfe004c6f6",
        "cursor": {
          "ref": "65b0b072-1955-4885-b17f-3669373209f5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "31041b3c-0b3c-4aa4-a3a9-a648c1c45fa0"
        },
        "item": {
          "id": "b93e8589-761d-4754-b581-97cfe004c6f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c4ff8462-d7d6-40e6-a596-29dd2299c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aafaef-80fd-4ee7-808f-ac6ba24d12cc",
        "cursor": {
          "ref": "e0acc17e-1b06-41e2-a2c5-20cebef8ea4e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5a8c56c-7147-451d-ae70-f04bf999a77c"
        },
        "item": {
          "id": "b0aafaef-80fd-4ee7-808f-ac6ba24d12cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d0523b71-dfec-4e35-bce5-507450c89ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2a78b6-15e3-4476-90f0-b27a0d8348b4",
        "cursor": {
          "ref": "93f54a0c-0645-4c64-a8ea-278373998b7b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "44a7ab23-deb2-4dca-93cc-d14eafd9ec8f"
        },
        "item": {
          "id": "fd2a78b6-15e3-4476-90f0-b27a0d8348b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "06a73464-f1c5-4690-a5bb-86ab186d2d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b5fd6-e1c6-472d-acb2-3ccd9b92a043",
        "cursor": {
          "ref": "85e649f5-6fab-4f97-acf8-b73c9ec1d80c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fd772c5d-cc6d-4dab-8004-701e8ebcbf7b"
        },
        "item": {
          "id": "1b6b5fd6-e1c6-472d-acb2-3ccd9b92a043",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fd2403da-b41d-466b-958e-2ef3ca9b873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d09502a-6ded-4cd8-86e9-30ad3021985c",
        "cursor": {
          "ref": "8906bebd-85d6-4f05-a333-4d6b48621cb0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "81eb546b-37a4-4c28-9498-e0a75b5afad5"
        },
        "item": {
          "id": "7d09502a-6ded-4cd8-86e9-30ad3021985c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4b75ea31-aa1f-4113-b3fc-68e6087b75a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56b1c23-7fd4-4e2d-b79c-97da8ae0e0f4",
        "cursor": {
          "ref": "bf8f963f-21a7-407c-9991-8e9d246c2d8b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fc04beac-0fe6-4298-820d-cb8f2991cda8"
        },
        "item": {
          "id": "d56b1c23-7fd4-4e2d-b79c-97da8ae0e0f4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4293744a-193c-488c-9a56-5647a8a895ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896c4426-b33c-4a47-b366-772123faf303",
        "cursor": {
          "ref": "9d151ef4-2b06-420f-b1ef-8f21f1719e5f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "484a7157-6933-4d44-980e-1a7dfd5477eb"
        },
        "item": {
          "id": "896c4426-b33c-4a47-b366-772123faf303",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ec59ca3e-d3ab-4dcd-aea4-50bea610b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4d3f89-2fb2-4946-a613-b4cf257c696c",
        "cursor": {
          "ref": "c0e3f488-5d10-4221-9d48-c7535f218bc0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7dae29cf-8ad6-401f-a68a-6e4dc2d6585b"
        },
        "item": {
          "id": "0a4d3f89-2fb2-4946-a613-b4cf257c696c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41239f40-662b-432c-a1d9-744f5f6056bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1aee1a-4641-4197-ae00-3ec65926dc8f",
        "cursor": {
          "ref": "6287fbd7-a253-473a-a06b-77b8946ca3f5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "90b1bfc3-c4bc-45a6-9a04-962f48b073c2"
        },
        "item": {
          "id": "4f1aee1a-4641-4197-ae00-3ec65926dc8f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fc4c655d-a697-43cf-89ad-8897f42aea2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a50057-af00-4854-bc8e-f78a139bc84e",
        "cursor": {
          "ref": "31b896d5-8487-405f-b73d-97dbe0127113",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cb0bac78-9052-4c58-a505-3cf0da58b547"
        },
        "item": {
          "id": "50a50057-af00-4854-bc8e-f78a139bc84e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9c11b3b9-93ef-49f9-a4f8-4ee01eda03c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4e9217-d5e8-4a80-978f-af518efdb5da",
        "cursor": {
          "ref": "afd53f06-2f03-4639-879a-8927f107c4e4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94f87fa6-d808-4edb-82d8-f60991e75d55"
        },
        "item": {
          "id": "ab4e9217-d5e8-4a80-978f-af518efdb5da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "314d49df-7fc5-4a7b-af6b-2bf35f992283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0630af4b-9d4b-4592-835b-162b79c58c07",
        "cursor": {
          "ref": "2645de4f-c9a9-417f-af16-e6c5f0e31e4b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "703b7bca-f5b0-4364-897b-e926ac0f985d"
        },
        "item": {
          "id": "0630af4b-9d4b-4592-835b-162b79c58c07",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cba5d67d-5c78-4b06-a6d1-4c1896cad9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203723f8-dbc9-4636-8595-02e072a2296a",
        "cursor": {
          "ref": "787690c1-55ee-473c-bd25-3ee24538456d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f14b858c-89cd-4f2d-b178-f756185f174c"
        },
        "item": {
          "id": "203723f8-dbc9-4636-8595-02e072a2296a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "825f51ec-542e-417c-8261-7e9433b24834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9a7d4d-587a-4dcf-9a8a-ed2c9044728c",
        "cursor": {
          "ref": "ddba5441-6280-45f9-b730-48c61c990334",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0340ab93-87c4-4f78-85fa-3e033e375380"
        },
        "item": {
          "id": "ec9a7d4d-587a-4dcf-9a8a-ed2c9044728c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "db99198d-2633-476f-ab9b-989fd0cb0f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58c731f-55af-46a8-997c-ada5664f9308",
        "cursor": {
          "ref": "f6bd62af-eb9a-44ae-98d7-66a351042ae2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "27b4b68e-3fc0-4564-99b7-1771307abb43"
        },
        "item": {
          "id": "e58c731f-55af-46a8-997c-ada5664f9308",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "164590c7-52b5-4f74-b5d1-ff193546f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b349e7-ef12-4784-9bce-cbe7c5abfbb1",
        "cursor": {
          "ref": "1c957e3a-fd54-460c-87f3-ff29527e9769",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a69b963c-865c-420b-a9ff-cfc1d17bddea"
        },
        "item": {
          "id": "88b349e7-ef12-4784-9bce-cbe7c5abfbb1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8882290a-2f48-4e59-a345-6fe0af639b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb8988d-e69e-4bb6-ba65-b7a2ee43fb22",
        "cursor": {
          "ref": "8261bc77-ca20-44ee-987d-e41cd81bcc85",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5c661a7c-f561-4c2a-b9eb-1394a131e894"
        },
        "item": {
          "id": "2eb8988d-e69e-4bb6-ba65-b7a2ee43fb22",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "67cf9ca9-9305-47f2-a567-c29446a6f86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83513499-b82d-4358-9149-81b0429e4e0f",
        "cursor": {
          "ref": "24a4fc96-b9f0-46be-a6ff-35d51bb11323",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "16f5cd19-64ff-48fe-9410-0321e983b0bf"
        },
        "item": {
          "id": "83513499-b82d-4358-9149-81b0429e4e0f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d9e08351-d705-4bdb-aa64-75d4ca6f2fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06765cb4-134f-4e33-9598-e1b442bd9ef1",
        "cursor": {
          "ref": "a949f03a-a668-4294-803a-30f15be12dad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8d2c18f0-24e9-42bc-b084-3b7c74342097"
        },
        "item": {
          "id": "06765cb4-134f-4e33-9598-e1b442bd9ef1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eae4c2ed-3aeb-477e-b1df-678435f3ff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a4015b-ad75-4e9f-b3c2-ddbb757eaf5c",
        "cursor": {
          "ref": "13eaec91-0977-46c6-a51c-fbfad7dd0399",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "58e413ce-2cef-4fe5-b72a-c69869745b95"
        },
        "item": {
          "id": "06a4015b-ad75-4e9f-b3c2-ddbb757eaf5c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "127ac4e5-85de-4dea-8fb9-91753a7fbb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4961b375-8646-48f0-ad3b-3a79db629a18",
        "cursor": {
          "ref": "5ec9843a-7662-453c-b107-6561edc8a021",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32ab8022-743a-4d28-afd0-e4231f6294df"
        },
        "item": {
          "id": "4961b375-8646-48f0-ad3b-3a79db629a18",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8f92902e-df16-4fdc-8a24-0b20e6395c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70721340-3a81-4a1e-8f55-2647f218d0df",
        "cursor": {
          "ref": "09521900-2293-4a7f-835a-8c88df96db4a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d21a3667-f833-4e8b-9788-7301f5afca1c"
        },
        "item": {
          "id": "70721340-3a81-4a1e-8f55-2647f218d0df",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "758caaab-c393-41f2-8194-a1c1bbc57fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79bca3d-2fab-4d7e-a39d-9bde5163c51b",
        "cursor": {
          "ref": "c5905b29-dcd1-4405-b6ae-384c21f8e3e7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0a9444f4-0a4f-40f9-a0df-bffed90a359f"
        },
        "item": {
          "id": "b79bca3d-2fab-4d7e-a39d-9bde5163c51b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "579db732-7331-4f4a-903a-bba5f77940b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb444d-38e1-4362-af42-47a779b7b9e5",
        "cursor": {
          "ref": "98ec9217-a375-4555-a977-4937b908fa30",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c43bd84b-c632-4393-b547-d37a076d5ce1"
        },
        "item": {
          "id": "25cb444d-38e1-4362-af42-47a779b7b9e5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fe3001aa-6600-4a03-94fe-8e48c01d28d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a833d1f-0d50-4add-acee-4978cb7fbc68",
        "cursor": {
          "ref": "63763005-2d1a-4af5-8c02-8ca3e73dee86",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "820bf19c-8c93-464a-8fe6-9df26cb8346f"
        },
        "item": {
          "id": "5a833d1f-0d50-4add-acee-4978cb7fbc68",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "18fafc79-3d39-4b81-bfbe-e065aaad4edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f77a74c-a289-4078-aa23-887b18b6accf",
        "cursor": {
          "ref": "52795ed2-29b5-40c0-b315-0496a907df2b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "09ee509c-db50-4a3f-aea2-c069ef4b19f3"
        },
        "item": {
          "id": "6f77a74c-a289-4078-aa23-887b18b6accf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80773a19-88dd-4ac3-ac6e-2f4853145609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d8792-d1cc-4832-9328-ab56529de12e",
        "cursor": {
          "ref": "ebd16dda-660c-40c4-8d11-55e446ec1fa4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "14a8697c-c8c4-48ac-93b8-e760f120443a"
        },
        "item": {
          "id": "0c2d8792-d1cc-4832-9328-ab56529de12e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "97e576c5-e7a1-4922-be54-f7d60e6adb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a401ba9-f235-4c00-b61c-e93f84764448",
        "cursor": {
          "ref": "7c093091-4226-44a7-9949-41d4834f74e4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1aaf98b7-4a38-4d88-9493-4738f0b20cdf"
        },
        "item": {
          "id": "9a401ba9-f235-4c00-b61c-e93f84764448",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c59ca0d8-9fc7-435d-95f1-84adccfbf9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a3cf4-d89c-41a6-a9cc-fa6d9a426643",
        "cursor": {
          "ref": "74420565-7fce-478e-923f-70509f34ceee",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4e95b33f-3d0d-4ac8-bc2e-e06d0661a61f"
        },
        "item": {
          "id": "910a3cf4-d89c-41a6-a9cc-fa6d9a426643",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "da472184-d722-499d-b90b-75763ccbba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4457f590-bcd3-4043-8e95-93078ee34253",
        "cursor": {
          "ref": "7a643f8e-016e-492a-93f0-ec229aae865c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "608654d3-960b-44ac-953c-926c76154ac0"
        },
        "item": {
          "id": "4457f590-bcd3-4043-8e95-93078ee34253",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6b20efae-544f-4191-842c-c9f383bb74ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c10e88-eca8-48f6-a540-b19784bdad0d",
        "cursor": {
          "ref": "57eb3f5e-875d-4338-b78d-7a56acaa3f48",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6cbc4b04-bb59-4155-80e6-e5cf6d43056b"
        },
        "item": {
          "id": "08c10e88-eca8-48f6-a540-b19784bdad0d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "74b5984a-70c2-4e62-b188-f0467802059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b10b88-2fe2-4894-8125-a2ddcd0341ec",
        "cursor": {
          "ref": "7eefbed8-3c4d-4325-938f-ebe2228a9ae6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "236aad81-af36-4991-b358-2da3680c63d4"
        },
        "item": {
          "id": "04b10b88-2fe2-4894-8125-a2ddcd0341ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49cd5cff-7849-4ab4-8e89-25a1c6a1de32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3327485-510e-4064-bd3f-8eba927ca26b",
        "cursor": {
          "ref": "38f0d7ce-1dd1-42e2-9556-351d22441d2d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8cd85f7a-3885-485c-9e0c-a91df2cfe1ab"
        },
        "item": {
          "id": "c3327485-510e-4064-bd3f-8eba927ca26b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9bcdf7d4-8169-4195-b0b1-0f8a6e0a89cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ccec9e-300d-4e5b-a16b-0e30b6d49457",
        "cursor": {
          "ref": "436232d0-06dd-475c-94a5-dc0927184414",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "27686795-b5a9-418a-b2f7-ab191b50347f"
        },
        "item": {
          "id": "e7ccec9e-300d-4e5b-a16b-0e30b6d49457",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a59fb54c-13c0-4a7c-b98f-5a005544e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a10fc2-830c-4a72-82dd-4f3d22ffbc87",
        "cursor": {
          "ref": "27241cbb-ca73-40e9-8551-9baba907fb29",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9ef12605-7bd0-40bc-82c2-29406802d7ad"
        },
        "item": {
          "id": "07a10fc2-830c-4a72-82dd-4f3d22ffbc87",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f63cfc7d-7aec-4e9e-a347-c157092721ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb28805-88a5-4d23-84cc-3255ab4648b7",
        "cursor": {
          "ref": "b34adce5-e819-446e-a748-4372f1b9f241",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67113a44-3aa5-48c3-a191-f9affe6d521e"
        },
        "item": {
          "id": "9eb28805-88a5-4d23-84cc-3255ab4648b7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b7a985e4-9572-47c8-b7b7-46aeb341d82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a11443-864a-4571-a55d-bd825cfd64a7",
        "cursor": {
          "ref": "22978b6e-e739-4fbf-9235-77ef7d5d341a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "207ba1b1-c495-4de7-b6f7-cd136ffb85f2"
        },
        "item": {
          "id": "60a11443-864a-4571-a55d-bd825cfd64a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c934bcd8-5d92-4c80-9f6e-6ff6ee6de316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedb3a60-cfc1-4c8c-b80b-a0c2fb9615b3",
        "cursor": {
          "ref": "ee34c93e-e82e-4b2d-ba3d-1d65b57b20c9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7410e92-8692-49d1-91aa-e29170939bfd"
        },
        "item": {
          "id": "dedb3a60-cfc1-4c8c-b80b-a0c2fb9615b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "05da9ea5-6795-4bf9-9b80-8e56c504d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf817a-cf25-4ca2-a3b4-ab3f8a4e15ae",
        "cursor": {
          "ref": "3709c216-6ce2-4882-b78b-2ac347ea6015",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "15997ed9-e538-47c2-945d-edee46e04a21"
        },
        "item": {
          "id": "c1bf817a-cf25-4ca2-a3b4-ab3f8a4e15ae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "53beedfc-878e-4e0d-86d0-8ca3a1152e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079bfee4-bb76-42e1-a443-c6da3e9de971",
        "cursor": {
          "ref": "baabc3c1-aa20-41a2-a162-7fdccfbac5cc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e653e5d2-6a39-4af4-8a57-3407d1ca1f6c"
        },
        "item": {
          "id": "079bfee4-bb76-42e1-a443-c6da3e9de971",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0c47bb66-593c-4996-a774-48313f4ac39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cafb3d-8df5-48e5-8a86-193eae8c0e07",
        "cursor": {
          "ref": "e4e949af-ad71-4c80-9f6d-5b5791ac1c05",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "94ddffd5-387c-45bf-add3-dc8fb3f857a8"
        },
        "item": {
          "id": "01cafb3d-8df5-48e5-8a86-193eae8c0e07",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c34ee15-c9a6-4823-8d9b-ecd28862b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810efaf-6512-400a-bd0c-2eeb8c77c80c",
        "cursor": {
          "ref": "c7fea376-5b39-4ab1-84d7-06afd66feb33",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f8d8c9c5-6531-488c-b00f-89c517e69e81"
        },
        "item": {
          "id": "b810efaf-6512-400a-bd0c-2eeb8c77c80c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8798834f-553a-4a71-b605-a73ba20db2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5b7b70-64a1-44ab-8433-b1e149e00729",
        "cursor": {
          "ref": "5f24cac6-6fae-4331-8712-a343e6e496ae",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5521f772-be87-4898-98ba-e019a9c7a26d"
        },
        "item": {
          "id": "df5b7b70-64a1-44ab-8433-b1e149e00729",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "14a29056-08d9-4eb8-89af-40dccb9b44d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a64e4f4-4768-4ac6-9e73-06a1360ef646",
        "cursor": {
          "ref": "540f5c7e-2b62-4771-917f-2f587c79c673",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1ef3ad9b-4d4d-48b4-9e79-2e06dec56d45"
        },
        "item": {
          "id": "5a64e4f4-4768-4ac6-9e73-06a1360ef646",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a16b524-ca07-4bc8-8d8d-273729a6b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6658bd85-df16-412c-90c5-93e151c44c07",
        "cursor": {
          "ref": "70181a8c-1b09-42fe-b22a-b306aaddd568",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "25b43b8f-71a1-4af2-a892-17c4b16f88ef"
        },
        "item": {
          "id": "6658bd85-df16-412c-90c5-93e151c44c07",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c91984b7-78cd-4b16-bfed-a695f43ef718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ee5eb6-fc4d-44b9-9883-a0ae0da45463",
        "cursor": {
          "ref": "5e28b166-b65a-4116-9972-f7c156970795",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47b9e632-763e-4582-b7c1-b8cc2d7d94f2"
        },
        "item": {
          "id": "62ee5eb6-fc4d-44b9-9883-a0ae0da45463",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6370d947-591c-4e74-aaff-3405ee1f0030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42834a3-630b-420b-a612-e64e4c897a66",
        "cursor": {
          "ref": "47e84895-38a2-4a82-8719-9f75395013f8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0dc868f4-516a-4a96-9a77-772dc860fddc"
        },
        "item": {
          "id": "d42834a3-630b-420b-a612-e64e4c897a66",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac1b1ee2-fe8d-4715-8b03-bc1f42383ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c142037-21e7-4afd-b84b-0f135039f17f",
        "cursor": {
          "ref": "437c3795-3bd7-4b02-9ca7-737c80e364a7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "42e580f7-7955-4da9-a88c-854578d21b40"
        },
        "item": {
          "id": "4c142037-21e7-4afd-b84b-0f135039f17f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1d699c42-5d6a-4b68-836d-7bb923347338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fe2066-4e64-4ad4-832b-3a5e31c3e5b7",
        "cursor": {
          "ref": "0106bdb6-fad2-4377-880e-48acdb2d6eaa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2d96c4a2-2d68-4a91-9f01-2deaec060da6"
        },
        "item": {
          "id": "70fe2066-4e64-4ad4-832b-3a5e31c3e5b7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7f8a60e0-c0cf-40b3-8994-91f8b340328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09374357-2120-459f-be29-060ac6c27c2c",
        "cursor": {
          "ref": "a1905554-fb0e-458c-bf18-8c07f1716a76",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3167398d-1dec-479e-bf8c-8bd0a3ac84d9"
        },
        "item": {
          "id": "09374357-2120-459f-be29-060ac6c27c2c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e20200a-b676-47aa-a94e-9382604b2866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9676ede0-a8d4-4da6-aa48-6ecd3c57a8fe",
        "cursor": {
          "ref": "6f007aa9-cba8-40cc-823e-e02ddd9735af",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "14157707-a2e3-4f86-8e09-f70229d70a73"
        },
        "item": {
          "id": "9676ede0-a8d4-4da6-aa48-6ecd3c57a8fe",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe5ed18e-3dfa-4d69-bdf7-b514cc90f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f650fc2-75ac-470f-a9b7-19a772f2797e",
        "cursor": {
          "ref": "de85b8be-95ef-4961-a6c4-ce012fa88012",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d59c792-9531-42ce-97c8-e6e97139d05c"
        },
        "item": {
          "id": "4f650fc2-75ac-470f-a9b7-19a772f2797e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "82585cbd-b10d-412a-9716-a6008e063da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daa649c-6ff1-4daa-91c0-e3649fa06038",
        "cursor": {
          "ref": "fdded1f1-0b51-4191-b3a9-199a3a9e331b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "799ca92b-c1ae-4792-b23d-ba44886fa371"
        },
        "item": {
          "id": "3daa649c-6ff1-4daa-91c0-e3649fa06038",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b62e2fb8-831d-440c-8e84-54e1484fa8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c75615-d658-4280-b1be-a9d200e1a942",
        "cursor": {
          "ref": "360a2d49-f152-4046-8cb9-729bc52f3113",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5db3c448-cf03-4f0b-843a-440b7c9834f6"
        },
        "item": {
          "id": "08c75615-d658-4280-b1be-a9d200e1a942",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1f57011-75af-463e-981c-be383979e15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa1bbf-65ba-4984-a593-de8a77e927b3",
        "cursor": {
          "ref": "cf09f2b4-b82c-4182-83ce-bf76335e19b4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a49c0647-2826-40be-be20-671aee9c8f76"
        },
        "item": {
          "id": "44aa1bbf-65ba-4984-a593-de8a77e927b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f0b24d7b-2b9e-42c5-a702-a9322f3169e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980c5f7a-ccdc-455e-beae-a1f84662c78f",
        "cursor": {
          "ref": "420ae6fc-1d75-47cc-8d89-1abb715f0cd6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fcdcd745-8b44-45de-b894-c300042d70f1"
        },
        "item": {
          "id": "980c5f7a-ccdc-455e-beae-a1f84662c78f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10c637e2-5407-4437-aa4f-5e2da1d119ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f33a2a-b303-4f83-9985-8a77e08bcf8e",
        "cursor": {
          "ref": "8752164b-d3e9-4599-ba99-72a3216a76f4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0e52b615-b210-4990-97bc-49b730eaee70"
        },
        "item": {
          "id": "d0f33a2a-b303-4f83-9985-8a77e08bcf8e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f09a2e71-e2aa-463c-a6c7-75029049ccbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7071e786-9ebd-4258-b11d-9a1cb4efe703",
        "cursor": {
          "ref": "1644db5c-6ac1-46c3-9f54-424a231f7179",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "30444e36-e0a4-4957-bcc1-2be2ff75825b"
        },
        "item": {
          "id": "7071e786-9ebd-4258-b11d-9a1cb4efe703",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1db254b8-3594-4988-a78f-8eccdf4406dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b62fb7-38be-41ca-a369-f439462e1915",
        "cursor": {
          "ref": "3fb22e44-6549-4712-b20d-23eec2cde112",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f41b6916-3fa6-4f11-8436-31574a59afbd"
        },
        "item": {
          "id": "e8b62fb7-38be-41ca-a369-f439462e1915",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "060ec36e-4d8a-452f-bd30-4ef8c909e566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3494f6-db8e-428e-9445-e338c0114122",
        "cursor": {
          "ref": "dd2eef4e-ebfb-4cca-b465-66f2150cf596",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6bfdb976-7e1a-43fb-aaf0-e5fd6b6a48b3"
        },
        "item": {
          "id": "6a3494f6-db8e-428e-9445-e338c0114122",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d529ddeb-b063-4b12-a63b-f0336313f862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a22cb3-9431-425d-84e1-ba63f4d31627",
        "cursor": {
          "ref": "426a57fe-347c-4621-ace3-d8d4a2e7011e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f8124be-dfbc-4183-8181-1ced12ddc405"
        },
        "item": {
          "id": "c8a22cb3-9431-425d-84e1-ba63f4d31627",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cb502e8e-40f5-4128-aafe-72b58f5e1a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14302e74-33e1-4ca1-aaf5-ba78d2135c63",
        "cursor": {
          "ref": "ce2395af-28c5-4195-bd8d-fecc3de52fd9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ded8146-39e8-4346-9645-1082f282ac7f"
        },
        "item": {
          "id": "14302e74-33e1-4ca1-aaf5-ba78d2135c63",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "56def002-c246-4799-b40f-4378d15d9e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486383e3-e094-4624-b49f-8b546edf4425",
        "cursor": {
          "ref": "5be3155e-360b-4eda-8572-67105363b7ec",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd2c8ebe-d27f-46a3-845e-6b7bb4dfe79c"
        },
        "item": {
          "id": "486383e3-e094-4624-b49f-8b546edf4425",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c22a2a14-ec95-44ea-a6e0-f9a551a19deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1920c0-b3af-4fa1-8d1f-bf5fbf3735b7",
        "cursor": {
          "ref": "3e3dfb55-0f40-421b-a711-cc0df9777b11",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2f150e6a-3e25-42de-ad7d-2302c5300603"
        },
        "item": {
          "id": "0a1920c0-b3af-4fa1-8d1f-bf5fbf3735b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "32709f1e-f893-4312-977f-3447edd1e160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1acd37a-85d6-477b-9c3d-775425cc2109",
        "cursor": {
          "ref": "ad4ed786-2561-4dce-a21c-7d16c6e1d248",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "156972a5-33cf-4c42-9f86-fc3a5ae952ae"
        },
        "item": {
          "id": "a1acd37a-85d6-477b-9c3d-775425cc2109",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "289ae539-90d3-494d-ad02-1f50ad4bbd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ecd269-204c-4201-b874-a49e184d01ba",
        "cursor": {
          "ref": "0d89b2ef-4f2c-408c-a088-6774a1e957c1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fc00fbaf-22ae-488e-901e-b83c8482b770"
        },
        "item": {
          "id": "a8ecd269-204c-4201-b874-a49e184d01ba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "33094a7a-9628-452c-a43d-ee510a6586ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e030008-b68b-444b-9c23-7e95e984469b",
        "cursor": {
          "ref": "dedcaca9-ba49-4a67-8283-a43295b78f82",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "62b9a9ad-0d3f-40aa-bd56-d36d43502bac"
        },
        "item": {
          "id": "7e030008-b68b-444b-9c23-7e95e984469b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "051ffe31-8391-4a21-86f2-6f84d9b02df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da2c585-0261-4482-bc67-a40cc87efb00",
        "cursor": {
          "ref": "01cd847d-1f4f-4cac-b27e-50e15891938b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c77489bf-6192-4aa3-9adc-1e75de23d436"
        },
        "item": {
          "id": "4da2c585-0261-4482-bc67-a40cc87efb00",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "abfe1f4a-b101-412c-aff7-601e5ef433fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c952b1-5e4c-442a-b26d-fab6c77042a1",
        "cursor": {
          "ref": "162b6f8d-b74f-49c2-afda-31970f6437c2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eaf5c725-a692-4052-8959-b6498bab83df"
        },
        "item": {
          "id": "a9c952b1-5e4c-442a-b26d-fab6c77042a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9b700d93-68a3-465e-889d-f5a7075b547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ad8bca-f13f-4e19-8a8d-8d16a7293227",
        "cursor": {
          "ref": "aa5b352b-200c-4ff3-9430-4208ca5b5d85",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1039fa25-469c-4935-b0e9-9212889ac336"
        },
        "item": {
          "id": "59ad8bca-f13f-4e19-8a8d-8d16a7293227",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6815aad-a101-495d-bcd5-344c95e5ea0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60310ee7-3a31-48f9-9a03-2983a654a0f9",
        "cursor": {
          "ref": "047b692a-5ef7-4621-a3ad-3e66fe0c3eb9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f022049c-10a9-411b-b5ec-dfdf9bb3386f"
        },
        "item": {
          "id": "60310ee7-3a31-48f9-9a03-2983a654a0f9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b3013923-aaef-4c73-89eb-baa8beba2c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6021a4-5625-42fd-8b7e-87b9f6ba7a83",
        "cursor": {
          "ref": "71412fcf-42a3-472d-9cd7-92f69207227c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "38912d63-ae24-45b3-a590-344e37f8fe18"
        },
        "item": {
          "id": "7c6021a4-5625-42fd-8b7e-87b9f6ba7a83",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7c7edbb-1376-4817-a603-1c8e3d08c084",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8245a01-f495-43d8-b617-487c34ecef65",
        "cursor": {
          "ref": "3baccffe-3e2d-4a31-ac91-af3d4b5b4f0f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "480d1195-88cc-4be7-b5a8-83deee1b8c7e"
        },
        "item": {
          "id": "f8245a01-f495-43d8-b617-487c34ecef65",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c161b3e-6435-4f3c-ba8d-cc4d38baf5d6",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bd1c68-ec55-4e11-bf26-54ca2cc560a3",
        "cursor": {
          "ref": "024c3c23-895c-410c-9636-3c1b6bef42fb",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4f80321-a859-4d5c-8ce9-7c86255db57c"
        },
        "item": {
          "id": "b4bd1c68-ec55-4e11-bf26-54ca2cc560a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "97ba6585-3dda-43f6-affe-95f5b4cc8367",
          "status": "OK",
          "code": 200,
          "responseTime": 5501,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0302854-11bc-4cde-bf24-8078a3bee6a2",
        "cursor": {
          "ref": "60ef0937-d0f8-4d74-80da-79e94ba6a357",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fe57da2b-4970-4962-9b23-6431533b2655"
        },
        "item": {
          "id": "c0302854-11bc-4cde-bf24-8078a3bee6a2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc7fa218-239f-4199-93c9-e0ae150b5074",
          "status": "OK",
          "code": 200,
          "responseTime": 6731,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f201d0-3af0-4ea3-b191-42909e564f28",
        "cursor": {
          "ref": "80afa3c3-1ff0-4abf-8653-eaaece6b0ce7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6682e4a5-dfca-4829-93f7-9f877940a09f"
        },
        "item": {
          "id": "a8f201d0-3af0-4ea3-b191-42909e564f28",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4bf6340-4e18-45e1-b87f-7ff8354e8a07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f201d0-3af0-4ea3-b191-42909e564f28",
        "cursor": {
          "ref": "80afa3c3-1ff0-4abf-8653-eaaece6b0ce7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6682e4a5-dfca-4829-93f7-9f877940a09f"
        },
        "item": {
          "id": "a8f201d0-3af0-4ea3-b191-42909e564f28",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4bf6340-4e18-45e1-b87f-7ff8354e8a07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507df0a8-72bf-480e-88b1-0f0eb622d921",
        "cursor": {
          "ref": "16bccb5e-a244-4df7-aede-1ed91ba09ca5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0436da43-0ec3-41f7-a315-35cc91b99400"
        },
        "item": {
          "id": "507df0a8-72bf-480e-88b1-0f0eb622d921",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5c167638-be25-4e52-aa23-a8d42dc7bd0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cbc113-f8fe-476a-8691-0b69a0be3ce6",
        "cursor": {
          "ref": "ed7e7fec-fd96-48e6-b56d-bcd63a61457d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b83c4e47-d19f-4667-b10b-55f0103e7869"
        },
        "item": {
          "id": "37cbc113-f8fe-476a-8691-0b69a0be3ce6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "45ab9122-910f-4636-85db-d6552ab56f65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}