{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "93410cfb-7367-4419-a6a4-d55d50c82d2a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7cef1e1a-89dd-420f-97bb-23a46ecb582a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c5a9a83-f352-4cda-afa3-cad02f8e4d93",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19f3035c-e865-4eba-9934-da5e4b07ac0e"
                }
              }
            ]
          },
          {
            "id": "d73caee5-0ffc-44a4-9b3c-6a2af1787ac8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "033e18d0-5140-4444-8fad-8f1a2be97990",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d0e7686-0cc5-41b0-a4de-4894e20f82aa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2af977b4-0c3f-427d-9618-8832ae1931b1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "645f682e-de8e-47b3-ab2e-6f77f4d5b25f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd00ce09-e412-455f-90c1-42ecadbe7306",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b646061-0323-45e5-911c-c31bc78a45fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84ce5ffc-8441-4c5e-83d4-f173ae0e6c76"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22516235-c04d-45a3-8ebc-db69111efb90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12beff62-296d-4fe3-80cb-a2e6d0e0cf50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "250c7155-b2ba-4ef8-ac09-de2ad6902a61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f9f2c9-d74c-4c3c-857b-dda9e6e5a4fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2c94801-fcfb-4613-9b85-3e54d8fcb759",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3c4b96ca-e973-49ba-9e92-a5e55c489276"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b664834a-4990-474f-8ea2-8d838ab1f8dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "496ea581-c94a-499b-b176-cac6c2dfb06c"
            }
          }
        ]
      },
      {
        "id": "3f582768-0a02-42fd-abd3-c8ed337364de",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "51fe02e1-9121-4fbc-bcc2-a1ee3f285f0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a23748a-efe3-4e51-ad0d-5f0e4d3c0c36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "295ad74e-251c-4f6a-b40d-501f5986140e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f911826-88bc-42a1-9abd-d95a6e6854ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "babfaddf-9e72-4016-bf3d-894abe1a5664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10772c00-36e5-40d4-8d58-c6049c4a4804",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12593cc-52c2-49b2-b50a-5c82d68b16e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ac0166a-dfc4-483e-a663-fea0c66b5e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b187f0-6d8d-4fb8-b08a-f99d4f98a492",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b5743c-7073-4d46-b3de-0947a1df3fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6433923-8149-4945-a737-8888c6cb3357"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ce5df59-288a-44f9-abd7-2e70d4edf09a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca4bf92b-7256-4f00-ad4d-970d3aa3f3ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d418e91-8454-4b9e-98dd-5ac075cb85aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8636c879-3968-4de0-b8a7-7ebd47162027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daf8bda-2828-4840-a7b7-9539ecf98a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b67533-999b-4e3d-b454-8aba309803bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aafa900e-f0dc-453e-965a-8095781e8fc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8adc027-80bd-4bb0-87d1-b42a3ada9af0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88442513-c7f2-4c72-8861-9edadfe6e10a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dfd2931a-49ac-440d-974c-c82124f48f6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e10c5e4e-814c-4115-86b6-330eb13c1ef5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1e2f8203-ec9e-4081-b579-b5bceccfaf5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1332bd58-d32a-45db-abd4-e34fa05357b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb52d693-c87e-444e-b9f3-1d685b9b4115"
            }
          }
        ]
      },
      {
        "id": "ce4c2660-a475-472c-b7c1-877fc58d377f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "33d8aebd-8c7b-437b-863a-69fff5a82f4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f4a90e2-abe4-4b11-8f15-725a36006489",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dff7736b-7ad5-4328-a50d-9696487889ff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ab133-f934-4b86-b9ef-82e303b3481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653435ac-7abd-41f8-b22f-901398597908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6e420a-9bbc-4865-9c84-07166cef19bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8da6ab7-9e9b-467e-be97-1646a9f52549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48633680-bfee-4fbf-90f8-dad4e875e105",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7632b6c-9c08-49a0-a558-de85aee411ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d26a1c-fd80-4b95-a43b-46a6457692ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad4d592-9cf7-4223-8d14-7452e271fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b97fffbb-ee1a-4786-8567-b7fa0e7d6eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376c0221-6bfc-473d-9484-a340e1810d83",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3521d3cf-4ad4-4d47-a6cc-31e12b28044d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1d307f-cf96-4603-a831-81f7ba11b912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603738e7-3e9f-46c6-b614-39052ad52cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936231c4-53e4-4a52-b3c7-cc9a9167ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baf8b2b-74db-418f-ba91-d7b54d6301fe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f76d1b0-281a-4d1a-aa3f-90ec41f9714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da179020-5b62-4a03-8f06-e192f3bfcc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4541f3b4-1d84-41c9-a02d-75ba72d9290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a01fa9d-ba7f-490c-9f87-fd9b3d940cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3592ded-2f5c-4498-99a9-bbeb8337a0b7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdea402-7ccf-4f00-aa1d-db5ea6734f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a88352-d058-4935-920d-b7702760fbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70425485-1cdb-4e97-a56e-092195d6d4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1917712f-dcf1-4d45-8798-0efea9fa23e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85d12fb-ce6b-4574-b51d-a539cdabd852",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99162c68-35cf-414f-b7c8-20ae06e6e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e3e516-8963-4d31-9173-964489079128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b7215-7268-4df3-a8ac-cbc0d881636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69024361-2a02-43f0-a059-b1f0a9d3a145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01075de5-70c7-4b79-9465-c42da239ff53",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791ad5fd-b161-45df-a24d-dbc45de185e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed94fb0-9af8-451a-9740-7eb8582470f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9304fe1-95b6-4b30-b2a3-08ff9a02f2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c11311-ead8-4c52-957b-e2ea5b098dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5acd84-5d8f-4542-a681-dc0e43c2847d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6f81f7-67ca-4e88-96ad-24bda99b1252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e511cae-b048-4386-b8e4-77e0bf0b6a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9600bc-1b84-4f1c-8c56-42b0818d26d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfeb17fb-2261-471c-a741-9858d5d87c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d44df1a-e269-447d-9943-f7cd8aeb086b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748b21d6-bd52-42cf-8e41-0034c10e4a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a799f54a-aae4-4a20-92e2-8998cb5e82f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b27c8ca-18ee-4393-89a9-653fe84bce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b66f07b-7720-4d13-96c1-626d0dc380e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2afbd6-2493-43d6-8f92-de3fa3dc1746",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda780d5-661d-4222-9443-9ea1c3c9d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06804b75-a15b-4cf3-ad18-0685e4cf7bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0254cb-3b88-4250-bac2-e050f6cee250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc157d9f-6f46-4944-8689-b362d367cc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b904e-7483-4ef3-83c4-3cc28f8f53ad",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db2c7da-7b1f-46f3-bab9-55d8cf166138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8e2dfd-229e-47e7-9ed3-97b0439583c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce2ac3-aabd-4c9c-acac-5625f89b1ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d01efa-055b-4b1c-8bf4-106085616c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec405a7-21e6-4499-a6f6-e7e20b30d91f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67335f68-7e2c-4493-baee-2d6f8249e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459fd61f-3060-479a-9e67-77cc6c3c49cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf998e3-d454-483c-93bd-7fd1e0cedf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba58f14b-bae8-40c6-9be6-61384ee2f03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b29b81-3e67-449f-81fb-450fc97d7b2c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4126d6f-fa12-436b-93e1-9666b4569211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e4658f-dcdf-4b54-a09c-d8881f9dca5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f562022-ea2e-4ad5-a052-39fa0f5ab97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ae7d897-366d-45d2-9e0e-0985209eb51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a1c966-0c3c-455c-a6a7-5ab3afb0a852",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b82f66a-ae5d-41ff-90e7-7cfcdfc2a042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ae78d0-87b4-4677-86be-ba93ac76add9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacd76d1-e195-4ee4-b570-24f839b71920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcdacc95-eaff-48da-8fec-3f548c6a8747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29abb215-4938-4ebb-b5b2-232c361cd3d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2879fd-c756-4dfd-880d-947de3200959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0d11f2-0e81-4df9-a345-abca8def68ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281fdfe0-6277-4589-a0eb-4aac8d55c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5df555d-c21f-4422-9857-c9245de89fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688b04c1-e14d-4041-b183-01c35545192e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19db63ee-5aa1-4c2e-9e6a-8c7b62532aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbfe43e-cdf1-4f91-affe-d013f44fcc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d30805-3d5a-48cb-8cb1-a72f4d1e523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a849a9f7-e8b0-4642-824a-c4a16e5eb93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c33d8e8-346d-48df-95e1-166f17c6842f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f4456-bf2a-4842-8f93-4b82141d3d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f836011f-36ed-4bad-af2b-4a0ed2ce5716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28d02f9-27ae-45c6-9bed-735fd8788f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7996b021-7283-490a-bfd8-0d7b97537696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd3b298-d88a-48b9-9ad6-6672351ac976",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a314b4-20fa-4eb7-a9e8-e7301aca1212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbbd5ec-31de-4603-92ad-d78f32358659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f179a7-6b4f-494e-b65e-88e12d417e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a9274c-48ec-4fc6-94b3-8228000bc592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073a98d3-1bc9-4f24-97b9-cc283df1504c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5d64b7-58e9-47da-ab81-3a2a3c87a79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c33ab9-daa0-4169-9c6e-1c742c04791c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca020219-2333-4906-8c29-d47f9797e947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22283542-4ca7-4594-8f13-4a342b2704e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea05be-656b-4c7d-897a-84c77107db8b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6798b7-aeda-4825-aea0-3c51f6d4bdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ad213c-7558-4dea-ad76-65cbf6ec07c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e4d94c-7916-42eb-b22c-1139ae3d9e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7d8435-4d53-4309-a26b-990174ffb5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9bd24c-ba27-4ee2-9604-114066d40750",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2235b3f0-eb57-41e3-a471-4f8d8d8d9030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b71ac9-a06f-44b6-ba52-e88f0f7fca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d7c310-4e29-4811-8e23-d07165fcbec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f101d2-686d-47ba-97ab-d56f8af0efb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d97342-7eac-4943-8b7d-73ba25863231",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9339e3b7-2992-4d2e-8130-56ff206a1cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48af2502-ed53-4235-ba5c-d7fd2b86fd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc37faaf-2907-43d0-99fe-a9ea3b4e9b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e17567-9346-4187-8310-3ed672f9c636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e165e578-281d-400f-9949-4354c345509d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb36bbf-1de4-4c0e-914d-9272c0293bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e235a26-700f-416d-9b74-4aa9992222b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a017b-beee-498f-9062-fc930ca357b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c24dccd-0e85-4f33-a801-ba16a9e51153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623367e9-ea58-4c61-8762-93c788c247bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4919e1-c433-41d4-981d-f661238d904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb334b14-53c0-4b20-9d99-9da7d8ef9a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e5e8a7-e834-4578-846e-cf0a1aa3fbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdf6ebe-9993-4411-832f-bc6064c5cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5252134-5c8b-4485-964e-3f6db916a13e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f12f9-87a0-46c6-8480-c1f6d77eefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84256a7d-7ebc-41b8-be1c-aca15f049c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e7125d-3ce2-40b4-b106-381d992e3486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6249de-44bd-408d-a4b2-b676b110066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638cb828-d748-4cc7-9564-9734f039e850",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d31cd29-924e-46c1-b659-c33f9ff74e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64f13e7-7040-409a-a629-34db1cbbecb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5f0a5-a22c-408a-83c6-46f33c7f96ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d0a7fd-53a3-4e8d-98c6-1ef619d477ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0878327-6a76-4064-92fe-da780da2470e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6c4807-728c-418f-870d-b0d83435e0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23089786-df96-404c-a71e-122c8f307b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea01121-087a-45be-be7c-5740d45fe97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc74197a-ef2a-4c1c-8a0d-8165ec99c7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88545b-562c-4c6b-8081-15c836a8638b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4091c6ba-c895-417b-8df9-3278187e7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cbbcf0-8e05-4472-8be2-24d41779ea1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb1864e-7ae0-4e49-9ea4-441947b746d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fceb06-c3cf-416a-aab6-425beb8882ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e0bbff-e213-42ef-ba9a-315ad0254ea1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d5c0b-2bae-4c24-9207-c078cd7e0e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d74965-48ac-44e3-8a12-2d76bb606f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dda2d10-6c54-49cc-82d2-269c52e6bf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0b1e4e-ae7d-486e-b1ba-d67be23afbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99915bc-2891-43ac-aa21-bd836d46f144",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a864e5-1f4f-4835-9e9d-1887ae8628ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a490f1-bf76-4cc1-bd1e-c074f1cabe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af90a5b-554e-4483-b9c0-b0c49dc94c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10b4bec-d8b6-43bf-b641-dc0555c200cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0c086c-5ff9-45e7-90f0-44d79d165e96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618d862e-909c-4312-bf5f-76c952d361e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed5a89c-98b4-4a65-aaf2-2ad5ea62dd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae1f230-b1d2-4718-974c-7ec93ca2e752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a255d088-1044-4ef5-b58a-ea446892c264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fbefb9-2472-42bc-b2d1-84bb499def60",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6183608b-efab-4f24-9950-f831c4d1c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c79fa19-d478-4c97-8b3a-8ec16a3d9b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e44d9a-3c48-4b16-8593-69919535905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ca3ad5-4c64-4f9f-81cf-3613266e6f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552789d-4e7b-486b-8c2e-300775d7ba7d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eeb3f9-0f00-4e21-8642-218cf3d4c16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2065c010-776c-4528-b5a5-4fa884e85795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61efd8d1-4ec0-457b-8724-9a372b510d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69de8d59-621a-44ea-9115-a2049462cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23631fd-27d5-4b24-93d1-d7c936cdb4b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d8420-6596-4ac8-8687-a306c007bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0bb40e-9b48-48f6-a202-3e07afcafa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4734c34-93a2-4a3c-af93-585b7fb26d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55137da4-3c04-4acd-864b-ede22975463f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243c46a0-773c-44f6-bac2-7abc8f528737",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c01c3f0-6bd5-4480-b380-b3eeecbc5d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57ba32c-15df-4736-a690-a19aa3098f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88d9e82-2fe4-48de-865f-5f2bee34f38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5c561c01-5785-49ba-b3fb-51ae392b601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cb2201-f44c-4152-838d-47ab63360db4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f4c88-c2fc-4ce3-a798-1f44602a99de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94977085-724a-418c-b08c-c2d0d5e1395b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4927711c-d7c1-46da-af45-a46c44f9d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "233a6fda-a706-4b45-a27a-613d960b6a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e1beb-5d73-4473-9a23-d6829c73fc5f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faf2a50-c6de-4495-a3f0-41d258412cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ef7210-01b8-4416-a53e-97e0ee3e7913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66739050-190c-4869-9877-db9c72f1119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78bf1ee5-d3c9-4e4f-896e-f0ff9890a38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3fbccb-f7ea-4bed-b9e4-90ff36c0f687",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2affc8ed-1245-4a4f-ab01-d5cecda94148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e52119-0de6-468e-a3e1-9b892cc220b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec09d68a-33f8-4527-a5bd-d62a8c0b2067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18a3d02a-2827-4555-a9e8-a1c32c294079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cd807a-e70d-448b-a6fe-3503592f7a68",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e890a83-e299-4848-9222-e976660f51d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcfd4a2-768f-4bdd-aa9f-8313961085c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d7bf6-eeb9-44de-a3bb-aac0f405336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94ebf42a-a00a-4dff-8044-61e5b2a691df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356e29db-ff70-4152-836b-c0898fa00ab0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc12b7f9-93a6-4c58-b465-31e68c5dc482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289a3bfe-3b88-484a-9b70-400c2d03e534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8723d5f1-4f51-4ad6-9349-012690cbdcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b6d24a-5ad7-4aee-9a17-da9585aa3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a753ad-8ef6-40f4-a0ca-66d09aca185f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70186376-8868-48f9-929f-f9f2a4f777b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64aba7c-ba0e-4a52-9d7d-0074f4e502f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe4e28-ab82-47de-939a-6f16006448c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "276871f5-3119-49f0-bffb-b6508f5581b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af351e18-fd94-4290-a020-d258dd546382",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15605c1c-195c-4984-92c4-051ccb21d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f6735f-7820-4c71-b51c-3433789f1a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ea56db-9b45-4e4e-8392-96165928a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e330f3a2-df42-4dde-a564-a1a62d085bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122ae402-ef1b-402e-a1bd-6c245db21e55",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235d34e3-14ad-47dc-9e30-9edff755930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8eccc7-3dc4-410a-972d-bf2cdd8b65dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d97a23c-6e68-4770-8ab0-46ffbc3a2a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24def71-8e52-44a5-aa95-a587b70e77a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85708b77-babb-49f7-a765-68c227926cb3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc27f3-77e8-405e-a70b-44008ee9b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1baebeec-c6ed-4898-8745-0b3b66be9ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f9852c-d624-4503-91f6-d4249d7b9efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a62f5d-ea3b-48b4-a7c1-4518b8ad436d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420c441d-cc18-4706-bf44-557d2ebfcbd8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5acebd0-1696-4272-9edd-832144d3796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e249333d-d39c-4905-958c-9b4b0d0c6f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c1adba-0284-41bb-8fdf-135b748735d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f5d028-ee02-4f41-bb54-847db7f6e20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661835e8-6c1f-4620-b681-551391e26ce4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e1a9b-d3ea-43ac-a39f-f01ee0866a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3599dc-6b23-4e97-892a-8f67f025a498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6eca3a-4dfa-4c85-8ed5-046592efceb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eedf4f9-aefa-460b-ab40-f34ffa612d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41433022-f0bc-4dee-bec8-06c2443a1974",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604e0c29-9368-47d5-b66c-27f8cef9fe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b118e52-46f5-481d-8db7-6966c8c6ad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401eefda-438b-4be4-ae17-8583dcfc0436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67e0c9c-03ba-42fd-b54f-1fe6582d4caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370b4745-c21c-4358-9d58-7a6c58964d3f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a7f3ff-578a-4e47-a14b-75fb109f6498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1edec8e-5039-4ce9-a735-108942781d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b6096-bd57-49a5-bb2d-6ce03b948af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8168d04-4570-4a1d-b8f1-e38453269e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2734272f-5667-4a70-9202-95437d6b3692",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd631f9-4afd-4309-8ce1-03e9d9ac91ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849740eb-89c4-4c09-8198-347a63e802e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c21c5-4bc0-47a3-8b2b-8d2d4b5444cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b6e6cf-00a6-4d7e-81bb-cb59c7292e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313597ae-0ae1-4628-a771-3353265b7dac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc87e4ad-df82-453b-a6e0-71edcad4606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb26631c-e736-4514-aaa3-4e79116be760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28acbd-2d64-4978-abcb-5ea847a806ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47a31542-9d6e-4842-8ec3-03317126d6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046790e1-8c3e-49b2-a845-ff5e6d0f6c1f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88959b55-6a9a-43af-8cb5-a43455e94057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa66878-d0ec-4faf-88af-cb283d640b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90564546-ecb5-4ffb-a75a-465d364df896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "465dd80c-5aac-4c2d-bdff-b1f72c9eb667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb412cf-6f18-4d21-8ef7-227fdd90f3d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41f3200-652e-45ad-9f44-2fbb3cc6593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf6087f-e37c-4da4-9f06-96f6215f944f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea18302-be83-4fb8-8bda-6fbc6aa8440e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "875286a6-958b-41bd-ae53-204379fc645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44e8b10-0a5b-4369-ba76-0feb5cb1969f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc11e07-2500-4416-8ad1-c752e0c7e5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5e4435-2606-4836-b574-690a3ffd76cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40067c9b-b71b-4c76-b15c-e94f9ba0eeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47b882c-cb20-4f61-b0cb-e5b172780d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8835f18e-dbc5-41bd-aeb0-317b9a7bc5fd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583d608-b0b6-4d77-b2e9-50a14c7fabe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3169ab62-0c74-4826-8692-d8b11c4379bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f214c5-e1cc-4feb-b934-c3ab5056b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a34bfb1-31d0-41f2-b2ed-fd8cef330661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bc629f-f83b-47d3-a825-6ce861e7003c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db73a5f9-448f-4347-8673-4ef0ff2fba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef21f078-2ec1-4798-8c19-3b12e1f9fe4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a5a84-f733-4963-82fa-3f8964dea328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb664b1-047a-48be-91c2-71d22a9475d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae39e16-4805-4f81-8561-7da4b4ca1f76",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ecddf7-9912-4dfa-aafd-bb6fc6a8d0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d759ae-ef1a-4973-a63f-5e53867341c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2cb8ac-d2dc-4543-9760-81b4a77c1a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "09351a71-8c1a-4b43-8def-27b55b1121d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af24a8e-fa8b-4ba1-83e4-8dd5cb22a572",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba9297d-834c-407e-a6cd-99f1f6fd1c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e895040-6d56-4109-852f-75dd8d6c140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091bdcd2-d8ba-4dc9-90af-6b83c21bb09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0b3010-0362-405b-a658-1f06765c9dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81689ad7-3e4c-48e8-8cf5-c35130044be6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef26d1c-f32a-4f6b-af3d-709927d886a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11436b9f-bb86-43a0-a799-e7f88768c879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b31321-f541-4dae-b99b-c3ef9ee00eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90b173d-9f0b-43df-bafa-7501776ec59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da04bb8-2255-4021-881b-1b8c6e74b1a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29f423e-485f-4b07-b8db-fa22a6db0731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a29164a-f185-40dc-a5a8-5235d427e833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d0052b-6da8-4b67-8efc-5d2e9df44775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed45ef49-7141-4d1a-9cef-1c959e4b5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f22ff-a0bc-48ee-935d-088b04a81cb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482608b2-5b1a-467f-b4b4-4a6af11556c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975b47a1-c777-48e7-bf6f-423d8092536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac17dda6-849e-4e03-91c6-f233c964173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1e5209-864b-4ef5-8cea-75ab8cf7e316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d5a699-a37d-47a5-9ad1-a7b4ab6efa57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db2452f-e45d-4407-8c82-beafdf0cb645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7353f186-4961-43dd-81cf-5eefd46a971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20676d5-28cb-47ed-8e39-3dec2f6d52b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "496fdb3d-a69c-445a-ab3b-22abf17f3615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c0e13e-f038-4e91-b1cc-d0085e947363",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7790482c-b1b9-4bf4-95ed-126e70b92cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6fd9fa-affe-4202-9f7f-1709e1ce357f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30654834-ead7-469b-9eab-a127d97ad4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "653a15ff-a24c-4c43-a0f5-2de98c66de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803693fb-8005-4e32-a5e4-1647a63fb287",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567aa793-9cc5-4863-a01d-9ff3ea434924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2786e528-659d-4372-9dd7-3836d9740bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eefa7dc-92ce-495b-9b77-840b78abda0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b8076a-bdcd-4ac0-95e9-0eee15efdcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5dd799-0857-4043-a6c4-3ea9ec38e403",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefb94e9-7f21-4379-8cce-16c925f08927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f903f7-c042-43a0-9e60-7e67b7cce5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def4a810-5b3f-431c-8e8b-e7fafc479598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3914657f-1080-483d-b5f0-0fef6fe9827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190cb8e6-98e8-4c95-bdce-7e7f74ae7b97",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904cc2af-2ec8-4e48-84ed-d13a7e5271ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd829233-2cbd-4d36-a744-375851ddf75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f057bb1-54d3-4a6f-8e07-0a3fbcf9db2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e85d06ec-40a2-45f8-ade7-65678a81b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c58284-6320-4afc-9316-ed65fdada5c8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24aa9e3-7587-496a-ad0f-d49cfc887ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66532484-7cad-47d6-a20a-f3031ae4e1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe55c6-5c36-4761-9d85-4f922e4b1106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81db256b-3d5d-4ead-96a4-3e9257d3e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6490df6-320e-4926-97cd-022b2b349b76",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148a713d-cdb1-41a0-a092-2e3864b48d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f889142d-d2d6-48fb-992f-cd0537fc4c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f1b68f-63ac-450b-977c-c3d71579b4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "643f7816-2239-4e40-8652-1adad5dbfd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c36f7a-a8c1-4a61-b431-d33ec9820279",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3684c381-cb3c-4af4-9ad4-a6935f473ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba183794-d0e7-4634-be8d-e5f1dca97e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07162fcb-b0e8-49e7-aa2e-7236e0aab311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51e00c0-a538-4bce-b2f5-7792662bad48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203d441a-308f-43c2-8a99-b2719013679a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dfa751-300c-44d9-b70c-eeb31372bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc572481-f93b-4665-8035-31125c74ee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f2560e-b11c-4598-8277-8b2c965c80a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae82e57-d064-45c9-8b56-26102781f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dca678-d437-43c0-bc84-a7c85a864f0b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a03dcd9-6ae5-4de7-b4c0-5ad4c4aa53bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6800d096-ec71-41f2-8823-375b2dc911c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f958893-6adb-4f73-b58c-6de9f2805ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63bc177-f9c4-4173-a997-d5e7882c5c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5e1b00-dfd3-494a-b3bd-7b1c30e3303e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ab1da8-916b-4142-9436-9e06400a5e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a4ba2-834c-4053-a860-d6cb7613760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f768f5c-c0aa-4989-a872-fe7300912af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d08d74-c2c1-4602-a652-3a705481c4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea40d6c-acd9-425e-b8d2-6b0cf77f3644",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0281b-0b95-4dc6-8cd4-4a3e3b0008e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bf56cf-4735-4a90-a1f9-23c40df59aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d71a25e-1b00-4460-8ae3-597878b29e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d258e547-c28a-47fd-9597-64e7623d2286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfc2a84-a2ac-402c-9780-3f5981af7e85",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91318a65-72a5-40b0-979a-244f7ad50261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0822b6-e3b1-4a59-90f5-0252d32b04a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2e782a-126f-429c-96f2-3b2487bd9014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccf5218-8ffc-46ce-85c9-a799a0bcd61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fed9f03-04f8-40fc-adbd-bb092b3cf7a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370ed853-7740-4a6c-adc4-2119d2d0ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a4f594-2af3-4872-9e81-8c8dec94c84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4be7ba-e8a8-4e59-a3f3-5079eecd3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403daaf5-4d29-4a5d-bafb-df69f85b8459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f9c6b-407d-4f5b-a98d-302ef3e7e307",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ecbba3-2cab-4e3f-a466-2dadc53c35d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60709be0-08d8-4610-a843-5394bf7de8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e5b3b-585e-472d-9b13-d9b652dc083e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd3b9f1-1ead-4ed6-9716-b2087f7b343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc9c997-0bad-413d-953c-5d55d3768209",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d729f5f-f25f-46eb-9308-b3fd8480eddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccfc263-5fd3-4151-9d65-1640e46bd1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c88f7f-1a4f-477c-81a2-34fb34e5bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ce29e8-6919-47c7-aee6-e3c49d7fef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dace161-ef8a-4b0a-9bd4-a44edf668b54",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963d4cfa-13d7-438f-9d0d-0ea3b76227eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d37d44-e53a-4b4d-8442-79ab04cbead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a968c0-f265-4aa4-8878-b578e5c7a15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5dbc0a-4814-4740-aaff-4c7f8806232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9a51e2-497f-43de-8f9b-cae9c64a2350",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8fcf70-e8d7-4cd9-8f6d-35ba59609088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315dcb61-1ca5-43e3-92ae-bbc4be2a393f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a941b39b-3bdd-44f4-adb7-5d76c1039d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce4f970-09e7-44b6-a113-94b976996121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdb564c-2ffb-4def-8497-3698efefe495",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c976c26-68d2-4f1d-a2b5-f24df7e80869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11177e08-1f99-411c-93c3-8c0618afe2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b4954a-2d40-42ce-a24d-74431c673699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7afb40-2dba-4b1d-b7bb-b560e31726a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f8bab7-7171-46e5-80bc-6e52918bb597",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f6485f-a7cf-407f-9421-608239eb6490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff287d04-c10e-456c-bfd8-556ef1b3885f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da622416-4e40-48cc-9d63-21eb28918829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64fb809e-3a28-4702-8fce-47ce6aa6c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f1f25c-a46d-4528-9d4e-a7100ec81d0b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a147ec01-b5c1-4bc5-ac55-de8cb3ecefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a87efc9-b6e4-4552-ae39-9d9b2e0604a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c466b50f-ddfc-4135-a9f0-f7345a64250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "942050ab-fe4c-4ed7-9f2d-697f1c8e76ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e2266-c7e6-4aab-8023-dfb8cccfe53c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea62ac5-5f75-42af-b66e-1b84b9b02831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deb88c2-b645-4903-a6d4-7b653834308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d078c4-427e-425f-82b6-522d01f12f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84141ceb-6eda-4680-beaa-f2310b600c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f810fbf-2494-439e-8b54-d31601f412c1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ee56aa-aacb-430f-951d-01a488005014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65642c10-5fe5-4831-b99c-8b5cafc93f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3f48ea-eb5d-48ea-b1b8-d073dea1cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffda4c5-d3ed-4b81-a8bb-d5bd450f5f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8424ef8-f732-432d-bbc9-51e3864a3ce5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e861c9a2-47f6-4e6f-b87a-8d619fa52c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e82f752-11b5-444c-9b28-16cfb18decd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141dfbd7-802b-4838-a99b-aeb91cf25d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc66a5b5-ff03-4a35-83f2-1951a14c2a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34ed978-191f-4469-a5a8-68b7d21f715f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30b1204-e20b-4b8f-abfa-f4641a94fe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07174c9-b28d-4c28-acb2-801a1222b12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d131eb40-f781-47c3-ae18-ee32daf18f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53cf065a-6aa0-4394-9bbb-6a4006eed1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcebd054-4a23-4d3e-9fee-ddb300298566",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65ba981-459d-41a1-9b25-fb892dd2faf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b5d1bb-b0b6-4d3b-bf1e-758c3d2dbe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7c8bb4-d9de-42b1-9f36-1758af6cd783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43428a4f-622d-45ad-ac78-16d101892653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dc61fc-eff2-42d3-9ac0-98bd3aa49980",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a4dd03-f200-48d6-ba5b-9b5c6056efc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d95f93-4c53-478e-9f6c-0a422dd710e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf80e57-a148-49da-8b36-373a31a2aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66da61d-b0e0-4007-b135-2c703cf1c26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8744bbab-916a-4d20-a646-289a1a00a3b0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4411c1d-dc7f-49c8-9c66-d99070d0c984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48b41a9-012a-4ec4-86d5-1cfe6a0203ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c314ae41-a7de-4cdd-bdcc-7b9abeadfdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41382bf-2982-4d62-93d2-8bd94034e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64b4a56-a875-4fc6-83e3-ba799cfecaef",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da607c-a5d4-455f-9d1d-b111ad2f16af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1ee7c3-d6f2-4d45-a30f-eeca1b65ecab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a7046d-d358-4dc9-9919-5d4ef896c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fbf5d2-a077-4b4b-8b5a-846521a18361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b6082c-5137-4253-9f64-9c4b4958700f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4041a2d6-ba19-452b-ab35-e2e2527d3a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196a43ef-85d1-4f57-afa6-2da3d36828a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0d0820-dc61-419b-b67a-eec946d853fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "544b8971-17a4-45dd-a9bc-919c6a8669a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7bbfa1-cdfa-4451-be3f-60895bb6b88c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69b58d6-d69d-4e4b-b2b6-d637b7c19be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040cad6b-b8f1-4dad-b3b4-387c288b978b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b293fbcd-bd53-4199-a198-0caf9a5b04a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25206b7b-a0b3-4f33-a824-c7287479ddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a497e91-22fe-4a2a-9243-6ae2a09f8741",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd39979-19f9-4e19-9aba-c4a64b69ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d444662c-9dbc-4715-a955-946a712c5b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0911cb76-4c92-4544-811e-a0874560085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3db5e9d7-dc0a-48f0-ac4f-c393b1c6e0df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bbf2025-4c01-4fa5-ac5e-826f68a56be5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84825a86-767b-4ad9-bb9a-d1fe40104613",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3367a2-1dc6-44f8-b34c-8f1a93622df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "437e0659-0225-429c-9017-5c4aa95b92db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f06762-d78b-4b15-b925-c963ca7ce184",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ab9be8-fdb8-4b0e-9b73-1ff78b941fd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cc5505f-6733-4bb8-b544-a3269eb0d906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c61e2e3-b3e5-448a-a0ac-1cedf1926371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fed49e4-c764-41ac-99ad-b627884733d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f001b39e-44f7-4da3-b809-44ff1fcb8bbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2e1ef2c-6ee7-4f41-acd9-70f7a7897c1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3be32270-131a-40de-9430-bd75aff53868"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ff378b5-f2b6-4049-97d4-c97a3f66acb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fa1a25a-9528-4e86-a58c-19e55f7cd963"
                }
              }
            ]
          },
          {
            "id": "0805a058-2dcc-4277-b948-e863577ccf13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3080535-c512-4680-9776-a7fbb75f2dfc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6fb8128f-fcd8-4aac-8414-e546b720c350",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10129e0-32c8-442b-96ac-f2a7dbad31f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "507e261e-6a6b-4503-afe0-5ecc7e011844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cea8f3-ec82-490e-9912-24daf7b5fc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0dc6a5-c758-4c45-aba5-42b347d20a78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "207668bc-35ca-4a72-a5c2-8d4ebae4cc8e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fd3a25-4a64-469b-af4e-c82c1c7a24c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f625cb0-3fa9-4033-abe9-0870377fe522"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac2b6bf5-ee97-4a90-a575-8c1507a5fce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "917b2850-57a3-4d5d-b25e-46984332e7bd"
                    }
                  }
                ]
              },
              {
                "id": "ef710c09-b499-42f9-bd53-9df13f6179c1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea98879-6fe8-4faf-aca0-6276134acf04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a728f18-feac-4d89-a925-a456c32a19b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ff7c0b-74f8-49af-8951-c0cf53ad9a9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7bfed52e-36f7-4272-82be-0b056c296e2a"
                    }
                  }
                ]
              },
              {
                "id": "0a4f65b9-a7ad-4e7c-ab24-e3e58c3950a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13e71775-be95-4726-a972-d46a4063dd40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "356f4e80-d664-4b57-a71a-7a588d58acb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "397a27a3-df6c-4eae-bd6e-c886c4bc7e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab8200c7-9974-4271-9691-f15ae8fc078b"
                    }
                  }
                ]
              },
              {
                "id": "01600305-9d89-4a4f-b5c9-9dc3a23ee504",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed10a6eb-693a-48b7-a96c-f3d5ff11a908",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b6195c2-02c2-4903-8c8f-36bc4dc69173"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eda2a3d-5e8f-4f65-abe3-873b82318160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "202c0f63-5917-4409-936b-47368a3266be"
                    }
                  }
                ]
              },
              {
                "id": "44439de3-659e-4397-8fe8-d12d4b34d111",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00ae4c81-9b09-43bc-a099-9211d3d3848e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d134f522-2703-4296-ae1c-ea945c7aa677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ec8ff0d-cb77-44d6-b714-c7e420a4c1da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "75c0bfbb-05e6-40fe-8301-56b231786428"
                    }
                  }
                ]
              },
              {
                "id": "3eec2542-90c4-4cb4-9f56-f24caa8b1f1b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "489ae49d-b138-4a2c-a392-b5139268d785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89bdc635-e3c5-4e40-b9f3-7b6f1f147fa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d344e7f-7d2e-4d22-b171-740b5fa31e78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe0ca00f-e6dc-4f69-82df-5fc9c2ebfafe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e06add6-205b-4ff1-b46c-3427f5c09d0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1099f33e-7ebe-40c0-afba-a31d4340569e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a4750ab-8f41-4031-af8c-81eeb7252135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a44c19e-37cf-4246-9465-19b9f486cc64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4e15fde-bd87-4bf5-a501-483e5368de26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dab7f1ed-ab44-46b3-9748-e96165f76bbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "317a2574-b5c6-4f0e-b346-1b1555af4ae0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42e7abdd-8b17-47cf-a853-3498e89434a5"
            }
          }
        ]
      },
      {
        "id": "40d197b4-6e1a-48c1-8ad9-0f5149d5e1db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "548db839-7a0a-4a46-8661-c7acc9051413",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8594b1b4-6612-4737-83eb-154d168bc3fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b14dd1d3-4403-4d35-9234-c3c1f2535925",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5567de6a-6415-45f8-a046-2710a203d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e6d322-51ca-425d-9988-6f5042a00a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8e11be-a758-42b9-9baf-d4d6d554cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d0226f-32fd-4e6a-af87-b9881682518d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb3ccb6-7e59-4a9d-8a32-6d4be4a2a48d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f697b-36e8-4ecd-8c89-e45c4800b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dabfc9-7ebb-4d9f-a7f1-32cc6f0b1941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f45d4bc-a15c-49cb-9645-cbab6665f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2818e0-1ca7-4b2a-be9a-a512ad51a4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9676a89a-8e68-4f80-9f87-471970651d9e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a9ab2b-81a1-4694-99e8-363af9c77d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b50b2e-e36d-42d0-a75e-7b921841fea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6c6364-72ee-4231-a348-48a506c6ea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "106e331b-dd96-47a8-9bdc-b7bc3aa89a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1408c86-97b3-4149-bc8a-472eed04b738",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ca4b01-6857-4141-ace0-9469ce44ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a01f9c-e35f-4dfc-9849-940dcc243cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6943dc-e435-4d7b-b75d-8ebe8e620c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f68b28-0614-40f2-97f4-076c4cd7c83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21de2493-6391-4061-ad04-36c0c5b56cba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d935ee-3256-4e45-8a07-a6088487c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15119e98-9178-4971-a91f-e1e8074678ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db738090-15ef-405a-8f1f-e4adad464e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "603305f9-ee59-4d64-8016-00ce4b3cad6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c7a435-34d7-4c91-8f7e-3f7aa14bb6a6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc77a8-b5ee-4a2e-b9ca-1f9aa430ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615d2811-3b65-4bcc-b73d-9b198ce0a3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d18247d-a9a1-4251-8337-8938af4dd9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f236b4-895b-409c-915a-529b4127bf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8df0eca-243e-4913-85d6-7ae7507209ae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d488817-c880-463d-aa08-01fd8fb7ef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647dc88f-5693-48a6-a2e5-5717c2863d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b48cf50-4b9b-413f-ada2-1ece8e2be305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "792225e8-54cf-4c4f-8741-9d5ece53dcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca84322f-735d-4a41-bc15-6ed5816958ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e08b2-ad29-41ab-9393-ff9b3b15a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67d840c-51db-4a89-9742-dc88f4f90e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea757b5-2ebf-45f5-89ec-c4afb7ee3c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0126d108-ca79-4c18-ba32-a7e50a64415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab83ae54-91d7-4226-b126-fc5fba0bdf0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f6c5c-f426-4a43-abb7-5d0b920e81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52c893b-b3ac-406f-aa0b-00d1aead4997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102105a-312a-4ffe-b4f4-cf3ba51e7978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "872f40ad-fa41-401d-8421-16ad5ac9f33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077fabda-ae19-48e5-a14a-009d33125c74",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6898b14d-cb11-43fe-a1ce-a662c980fd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c69eff-080a-4a9c-a666-179057f3b060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20736d76-5f20-4afe-9ca8-9431724f8c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7de4a3b-6434-4214-afef-b19206aa2c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f923a48-fdf3-4ff3-9b28-9e34f06e4a8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591812f3-8706-4189-aa5f-de4b2dfe1fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4ddaa4-dccb-4d96-be44-1dc80fdb99fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775b14b-192d-4935-8a3b-f637aab232ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "77061e33-06b0-4d61-88a5-a8a9374e91a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eae845e-267b-4fb8-aee5-8ffea06ee45a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1643009-da0e-4fa1-a223-267fc7252bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19f9d92-dabf-4836-925a-4809e0380ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ce7989-7f4e-4b62-a048-db01a9c821ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e936451-b450-437f-b05b-d59f3055b097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b40d1-83c9-40c9-b781-75a5b843fc41",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef81acd-22c2-4ba9-b1ba-77097f36d7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38577c5-82b3-4bf7-b857-09f88d43cbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8dbc56-b38c-4b3e-b848-a903d2a5673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c45182-87df-4abd-b2cf-6f2eab4a7a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d07dc1-bf78-453b-b85f-ba1cebfb8786",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf19bbd-5ef4-49b5-8d49-1ff6830f7432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8fb4ca-9360-4308-b72a-c4e1a56891b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bcae27-f449-4d25-85c0-42b5c0f1d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca41b5f-cb23-47dc-a9e4-a57e4a7b12a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abe4f12-3af9-4103-a622-bc89fef9c3d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9835422-2e7e-40ba-972a-7cb55e73bece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7635d092-131a-44ce-b3d6-824418dd3a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876fa951-98b6-4e30-b47a-5f3af8211504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51065d4-76e2-4f36-b3aa-bbae482ce800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22be9bfc-aa09-4cee-aea2-8f908eab2c96",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e5f82b-0ec6-4c72-a960-b39d16632cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82461ec9-a9d4-4bbf-879e-859457942528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2499d43c-75d2-4beb-9840-907b951fdeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8108b883-3d63-4801-ad2c-98eb8eb5815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d7208-2642-43a0-9cfb-60c963e1eb17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1736199c-faf5-47ed-bbf8-05a7260675fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edfbab2-2df6-4f9a-ab18-ab2c306f2ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef2d58b-0683-4d38-906a-10f8b2f9c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e522a7-624e-4a62-8235-bef3d42906ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6656d73-4987-4b6d-8b0b-d6019c22a019",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346181da-1afc-4b4f-98c7-47e1fae96f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cda01d-8795-486c-82fc-5b23c9e8b248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd75fa8-c186-4638-a879-62d7599f293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a41197-f2bd-4e13-8af1-a483b4bf380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523c5627-719a-4831-a773-2ba544c1cc19",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35041953-c46d-4503-a27c-f44a2c0ce5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe11eac-3bac-41a8-948b-674b6f86fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37779def-b6ab-49e4-bf5f-14028f2fe369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0891cebb-1530-4ac6-8a3b-d07f9aa6ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a58e46e-e70e-43f0-9b43-9700f707c316",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6bfb26-1931-4575-b655-748ae9504046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4447a-df71-40ca-abd7-6dc3ff277db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969395ff-6b2c-4bc9-8f65-eb79ae3b4a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feaea4c0-6c63-454f-95eb-bef2562e0e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d564efb-90ce-45c5-a57f-fe03d88701cd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a696446d-ecb8-4749-a674-1d82d0cf1ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5b0e88-3e4b-4d90-bd57-9f9e02043452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4acb70-d5c1-48a5-a2f7-bdb05cb54eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590fe82e-7b5d-48d5-9abe-066d69b03528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964441c8-6cd0-43ac-8f9a-83d45856c568",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416ff917-3ba9-4b6f-a155-d4ae2858fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4224fa0c-19fb-43f9-9719-e04dd9e7a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4b1439-67db-4b56-8ef2-47cc0cce75a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d5b727-69b7-4d93-a36d-066c8146f0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cabb244-f5bc-4454-91a1-9d49045c1525",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0869ea-7b47-45c5-aaf8-5a1c71fa2290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540f01f7-14e6-4afd-95cb-b8e94446e21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d50dd4d-eec9-4999-96ac-3bb23c75ff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb01837-101c-4986-9ced-c2313c5d489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6921cd0-c6e1-4382-b53d-1216e52064f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d485f-eb27-4a93-b9fc-3a984935a496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd49bd8-fcbd-47bd-ba75-a9f52c2c579f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b1500-e887-4fff-bc1f-6a3b6311cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19b7193-6edf-4dc1-9573-ede2092be80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c080b23-37cf-45c5-be61-06d54106bf53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcf6d13-4712-43bf-86fa-d51f5408c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb97865e-7fb7-4453-a228-a56b64784bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8bbbfd-2985-4bb2-b8ef-bc81209afed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c7874a-39e1-4a58-be85-8cc127ddd919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750bd13b-538b-451b-90c8-3c61da61c684",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fce630-117a-42c2-a8a6-5e98b3e1226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcc55b2-d7a7-49f6-be73-1f5673f37c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d0b837-7027-462e-9d12-07b3e00978c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd45c016-6363-4446-b1a8-838e991581b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3c0e27-3f65-4011-82f0-df2bf9b6ea0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559b44ce-e33b-4222-8f5d-fe529183b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f35ebb-1237-4586-abcf-95e8b74e529f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab01249c-3d33-4c23-a816-1fe6bbd735ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35159c1-df6f-48f5-9cab-72c6d177700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d93d5ca-c38f-42e4-aaed-3cb5c6aefb36",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19656e41-2130-42ff-8c8a-6fbbad66162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cf5d84-1172-43f4-8631-bd4e419afba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12843b-a93b-4fb0-ab15-28c977bfbd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba1446b-bc40-43f9-94b8-e8d8770ccb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d4240-9a3a-4f54-adb9-dadc981505d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115519eb-b352-454b-9cae-7680463705c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10004944-2bbb-4514-9279-3cbb23ac2781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5254897-a8e6-4792-bad1-1e1cfc94820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bf6e3c-1cd3-4714-acec-7c63ef820cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318c61bb-d1b2-4f72-89b4-c0a01d9ffdb3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbaa09b-fe31-4a73-ba99-54beb92ea65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bce3e6-92ab-40ea-bf79-2a4c589349dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613ce56d-ec1b-4a44-a7e9-4ccb758a458f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f7642b-1b77-4e82-b209-49a150855ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0027eea-2799-49eb-9799-6f69ac63e6c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b7c4fd-8108-4118-b612-6b51e094a935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b312407-1e73-4d49-9a60-7b4b9106d9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21269ff6-973b-417c-a2cb-af3e8339986e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db9d9f0-7386-40a9-afb6-e7868138cc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fea8e8-98eb-4602-806f-e0a40af4125d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb2cabc-9ccf-48af-95ea-1033c3224213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1b190d-1a27-4b89-b973-9f23dfc7f5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b67a6-7140-49c3-af75-8b1e2ba8c715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d513485-744d-47a9-be93-cacb3ebd192b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795e580b-d4b6-4243-b200-10f43735ca5b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd05354-0fd0-4579-baef-b1b41badab3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f858e14-c44f-47c6-95ad-b683205f8580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace710e8-86e3-43fb-889e-944edd25a323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24df6764-268d-4de2-9197-a11e03020be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876defb-bd55-426f-8df9-3fd3f403ea41",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3b0f1c-72a7-4162-aee0-9adda0e852b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ab8388-f773-471c-bdc6-458f2408a58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283813c-089b-4992-91a8-4f11be426953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64242fa2-26d8-42e7-a2e5-0e60fcbfda85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff0f7f1-a5db-4e4c-8cf0-43bbe5368921",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c2dc69-dcd5-4da4-bed8-93decff88e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152183dd-dd8a-4607-85b0-b7f0bb6cf547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd921946-3f18-4603-8abb-b3090fdc2cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b1aaae-3c8f-41d8-83fb-1a10e915509d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4957a2e-7730-418f-9db9-ac38ff313c9c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952bfd43-6400-4297-a665-511fcbea0950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4516cbf-3a44-427d-a404-184211c502ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91f1f36-c432-4f5d-b0ca-97ee466328d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85cea2c-3db3-4bb0-bbab-5b124d41850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f3d7d2-f85b-4c8c-b286-eff373a753d8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaf9ef5-9598-4d35-b8a0-0e9d7e057f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2af69b0-e2dc-4eb3-9311-58990418fd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d54422d-1ef6-451d-9788-0d906541f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9271d9b7-787e-449a-9e09-c0a46035e525"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90f4b380-c965-4b17-94e6-8a551f6e28b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9c05e0d-8c2c-4ac0-8b57-9b19ff2b78c3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc843a26-7a42-4daf-a78b-1c53a0c085a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6249ab-84af-4841-9c6e-fb79e627aaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9db8c4-4f4a-4c93-bdeb-7a116cb1c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15acea75-d7a8-4546-a599-0d5da566848d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648647ff-3f6c-4161-a014-ccabc873bff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56546611-e615-4c4f-ac5e-dad51e029a8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6989575e-8583-484f-8636-e13cb276ba98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd235756-5977-4b42-b685-1744860e45c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69dba047-6c0b-463e-886f-6746a5027b8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "822d391f-23c2-4bab-b924-67727b499501"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91d46a03-ad82-4527-81b9-028e4fe5f980",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fc6ee29-fd26-4d66-b133-9014a520cb4c"
            }
          }
        ]
      },
      {
        "id": "97cb8fb8-ea1e-4c94-bdf5-ea88c8fbfa5a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84da15d7-47e5-4eff-bd43-62f443df77a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ffae8b5-13f2-484f-9d65-eb87540d31a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c084487e-9854-4ab6-99d2-f2958c12f696",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd8aeb8-98f1-4c92-b35a-459be42a70ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d38b48-301d-4fef-aea7-6e1d9bf2393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789f51b8-3a15-4640-b99a-293efb30cfc3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63178b7-dec7-44bc-a69d-4c71370a8ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e624cfca-d74f-49ae-9b34-4c61985e5647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10064002-0624-4e03-8e3b-b78fcc217f90",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f300d-4963-42e9-bc36-91dd8e878446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb28ecd-bbca-47f7-8052-8c4aef83db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda503f0-eefc-4ce3-8e29-fb25e80b24ac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9c1e80-5e40-4113-9785-cf88488bffb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0355e8e0-740c-4bba-a6fa-824bf784c896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528ff0b-2fd4-4dfb-9a7e-6d9a01142ba0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed5bbcd-372f-41fb-ae2e-4ef53663225c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583cd4f5-be24-4b1f-bf24-3ed40c838176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76095103-1238-4e0a-8ecf-cc5f137bc5f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31b8827-59b6-494a-b91b-0048b35fc24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bd66a3-40a9-476c-bca0-209a1b46c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7321f9e9-ee4a-4392-ab0e-2746755e821b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d133c25-9493-4033-8395-52b88550d9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd217a8c-95fb-4f64-928f-42506d721c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cbaff2-3bba-4fde-8ed0-1eacf9c9ebb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf074651-599a-4d33-a240-c815d633d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731981d4-4eda-4d22-90bc-78ca3dd58276",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6efdac-1c42-4fa4-8cda-5e23169e0928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d759ef8-098c-4263-bde1-45c26fc447d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c272d24c-81a3-4344-8663-c92d713daec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554439a2-f9e4-4553-a035-049d01159517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f466c8c7-84b0-4ad7-9297-b00a40c51b61",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54654e2e-fedc-49a4-acc0-a14fad1230c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8ef751-a6ce-44bd-8ffc-2921f32ac387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172454fe-e590-46cc-9e90-5d30123fa519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653e565d-5eea-4b63-83f4-e8e54c2dad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae65bfe9-5c93-434d-abf6-38da37e3092e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd5e9e6-8374-4027-bba8-c6966fa0557a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb9f764-037d-401e-93d2-93e4c17d8ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bd5390-043f-4b5c-a5c9-8ce850f2a528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b96b81c-8c28-492f-9dd1-78a2a463cbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a76cebe-46d8-40df-b38d-ba8d3da7a887",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344e0d5c-f4be-42ce-a790-717e46442239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f085bb09-7eee-44d1-a5ca-e3d8db710cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a792e8-265e-482c-acab-284ec410fee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2504e2e-c14a-431c-838e-b29606759016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eedc74-206c-43ca-a67e-1997994fe619",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd784b20-3f3c-4671-bcd2-2c349922b4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0046539e-736f-4faa-b076-13c3a37dc21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bca93da-7ebf-4574-a758-8025f1d59180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b641d14-5100-4b52-b859-267f57a3bee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdadf81-1e4b-47ea-a465-97b704a858b5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d19d56-0516-49ca-9338-075e4ad4fb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf2efbd-a561-4636-8665-690ee50a4648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6f059-1c39-4e65-9c8b-999fca2672aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929e026e-3db0-40e0-b347-7dbba088e54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039328ca-6ade-4bf2-bca4-53505c918585",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31811d2d-9bb1-444b-8434-ce0a2225d498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f204208f-d71b-46ee-b798-6c43bf3c4cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c82bf7f-0cb0-45bf-a62e-0b69de4f6b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c06d8-dcff-4e4a-9ef4-7460f4a6be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e83b3b-5deb-4bc9-abf8-404e241b4308",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b322ee6b-bba0-4c3e-8777-34078f3b92ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39228faf-450e-486e-a72e-37c5f95c7517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f8b897-c165-44c7-b2da-a53db11e63eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1920633a-5980-43e8-853e-7c7042d9dd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888985e3-e650-4b5d-bcbc-c0e35b0d3f3a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9237d15e-9cab-4a2c-a061-2e5233f088d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f33e8f4-6d43-4a2c-8d12-58fb2e6f8e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843af931-7bde-4d2d-8cb6-6b6c2c4fb43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc11e404-5ef6-4967-9ea3-56b402e009f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74b1921-0a69-4a23-a5a5-50a440c0d590",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d126641a-9c73-4582-a9a1-749a012cd01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e28d22-d946-40ef-b317-e43812558bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606438d-8384-444f-8c86-878f62f790bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab02fa1d-0b32-4a63-92ce-0ef5a62a3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7de797-043e-4601-b5d5-4c8be3fc5c97",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd8da0c-a633-4f31-98a9-e124290d2f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2826f77-28fa-4e80-b014-faf9de80a3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea4393-3ebf-4711-931a-7f5474ff9eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82d4a7d-a7fb-4f7a-b930-431b8d4ec763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e96e681-405a-4dda-b76d-38f0a2d6e7c7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d91177-2aed-4fcf-91c4-29780ee10a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5bd146-22f8-42ae-8b95-90c6ea756bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a232d-c55f-4aa2-a1d2-2ea4e15e3846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaf8547-00ee-446e-a80f-8f3c49b02e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56777e5c-dc79-4bf4-aed4-ed6091605678",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f46336-df1d-4b19-9681-ad480224c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532b1cce-023d-4ef7-abc4-230c32133dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200a4710-db1a-4cd2-8556-fd6a5ed1e91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0daa30-1ff3-40d7-9086-2a34afec1093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd85fbbb-658d-4866-bae7-b0d72d03b487",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2fab34-d830-47ba-a99a-c3f9406856c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7418ba45-1a52-4073-a1bf-820da6cb3a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27fcea3-27f8-44ef-9b75-2a1395a09251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95066c2-c936-4b12-a65d-235dec98be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37571094-b31a-4a9e-941c-415363bd0790",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b13155-70f6-4677-93f4-a5a6ce438da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b008d2be-89f5-4f6f-b0eb-4eb3349b7803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243184ea-8c54-4659-b08a-1934d098f464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32ba86b-b72e-494e-99d9-9a5d2d83ba9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e458f21-1a3b-489a-a4cd-65d309b48430",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd8e7a8-d95f-413e-a4f5-b953e8167523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee72514-55cf-4df1-a613-ffd77a4e84ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103847ea-f418-49dd-9435-6b0c48229e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddd3c27-c07a-4a0e-8769-557e31e26580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15e291b-2421-4f1e-8aab-5a33b0c8066e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25002c14-9736-4aa8-abf7-20f39767f95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe8c450d-ae6f-4053-8a60-705144200b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcde6fd-a0ef-45fa-9b22-634922648508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66716bb5-fb15-4753-add4-b84971cd14c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c336e28-3dc4-4cc8-9066-c3d5a30d9d9b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d773a8-152c-47ce-8817-ed52e9cfabb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf005b7a-bf48-40fa-9c9c-067da0f108c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2528cb-482b-41fd-9183-cf5035f1b3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccc79b0-5e99-46b8-9f01-64a80055fe74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d198080a-edc3-4835-9e30-cbee07fb7fe7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bc5126-5ed9-4ee8-8324-6f8c15b389c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06238441-02aa-4055-b0c6-f188b0c6accd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a371cc99-84b2-42a3-914b-0925b1f9200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2010b2-266e-4d49-8a22-bcdc56d611ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee977a7c-b483-4e5c-80e5-b084105f9cdf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a4a3eb-9510-4c22-917c-06ccdc406d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5facbad0-1806-43d6-8bad-a49a5df914b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652cb2da-1dd9-4c2b-9390-3b8cf046a9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c4b46f-014a-4250-ba70-03c65b4801b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99e37a1-0ca2-4d55-830d-92428d2e1b6b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f1ca11-8978-406f-b270-b9970c14e3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412177ab-8d37-4631-91be-35699ec9c7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918f457-8904-4dce-b961-8760f35a6f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1780328e-77bb-488c-a1f9-e31a186ec582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac8efc6-f0f0-48f4-a168-9f563944b673",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6637c4e1-18ea-4bbd-9252-7f197be7ada8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da469cd6-a164-4b6e-a588-326d8a0ee1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd7b09b-cf8e-42a5-bebe-dde7b20886b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eef7cee-1a33-4113-a453-57ce8239058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28287757-22af-4358-814d-f269abc44a2f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2335f52-cb10-4bf2-9b5b-49d4238a459b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90501713-ff37-49e2-bb89-6a5016bf1702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d30e27-2296-49e6-8b8e-22494f2d4555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb4aa2b-d125-475a-b35c-69e4a557908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef577a-fd3b-407b-8bd4-24b572e14e1c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de41e1a-2106-450a-af4d-89dd94e92a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e471e3fa-5b05-4039-92a1-b6ecc7dd858c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a5f54a-891e-4cf6-86f3-57300dfd85a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9ef778-5d1b-415a-90da-984025c59f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34708fe3-dbca-42f8-8e16-579ce4003f6a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4685b1-b2f7-4715-a041-b5f6fddd26be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6befe7c-7afc-4dca-93ba-368bb5c5dc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eb599c-821d-4a5b-b041-2f88b600cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388d7bc6-9deb-48ce-b5fb-06b58e94abf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35641bbb-1ae9-4ab5-a771-dcfe11605961",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c5cac1-2875-4d7b-a247-8511e6834367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab7d43b-3d92-4d65-9ee5-6fd06e99e661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66deb4c-a3db-403a-ac3e-2b0a6106868c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e6ec4a-3ef8-4937-819a-d26d44136430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5895b6f-2336-48c4-b78f-ba2d07761f04",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818ffd49-2ebe-470a-b26c-a0aa4bb1ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631ba606-1c79-4ba3-b59e-b4bc267c58b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d815bd6-5f2c-491d-887d-cf913ffb6620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeca528-4020-4629-8580-d42791fed043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa72489-3476-4047-80be-8176e1fc5cee",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6ee1ce-54c8-4c44-a23c-a0aae988a60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1ccd41-a9c9-4d06-bc68-9097c10092c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fff744-ddf8-4bfd-8e42-68d2849f6b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19792c07-2de3-4a63-826f-9f600288c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb5778f-9c7b-4845-971c-24487cd0037b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8b8835-33c1-42ee-a033-a3e3d3408328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c179b6-2022-407e-b78c-5a8ce3c511ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba43ab5-e86f-470e-84b1-bec592d9b515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d6fe8e-acaa-47ad-b1ca-cf88e48e7d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe34990-938b-4890-95dc-9df1ae94201c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2b217-87f4-41fe-aa55-96aa971a9f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d646ff11-00da-4989-bb81-6e1ab9963f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b924bc83-ec5e-4ee4-93cc-bc17ca7c1839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf4877e-1a0d-45d9-a464-57b3febb57c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e38e3a-1926-4382-a553-83b253f94ade",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5027953a-728a-4927-91ac-2a779462ae10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12fe591-b41a-4090-a449-d0bf2f680693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4c6902-c7b6-4a0a-9bd8-7ae82430ff2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9a422b-1f61-47cd-a2e3-7603d3711e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486aac1c-d7f2-441a-8c89-5fc78dc1013c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de2e842-aab4-4f35-bed3-1f0c302511bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c58352-3904-4a7e-8eb9-e458c281fa52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fdd61d-265c-47fc-acf3-25fed3447910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76a1213-514d-4cad-aa41-e94c603fbe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c515c80-4839-46a4-b435-dee0a9d873aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f16d8-dc4d-4948-8572-88f65d80ff25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec34c63f-f2ab-4ff5-b923-9a67048b16eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3e7492-301e-45d1-8960-85846d87904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bdd77d-ee7c-4075-8402-f95f9b1f9674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309d6272-fd7a-48ed-8607-ffbab95c8e91",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb272a27-a747-4d7d-994f-b32cac9dbe15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165184eb-cd0c-4b82-bc9b-0a02cd79fc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e461d2-641c-4bd8-a911-f39d2f7f8143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e97aaa5-bbe7-49fa-b1cd-e4f759c03de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cef92a3-229f-49fd-88df-dc840e118bcb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34373467-cd85-4fd4-bd51-33509cac39e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19673af7-4a7b-422c-a095-7968fa01c7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efeb5cc5-0e79-4313-8234-7e384dd1ce2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac8de54-aed2-4c9e-8496-bac4ad9d3f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3057019c-becf-4928-9153-be18f4b808ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55189715-1ea4-4dbc-ab5b-3c50a27134ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedc91ac-aba7-4b8f-b443-d247efa255e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a8b17-6854-4ef1-ad02-4233f19fb7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c1ac06-7f15-4133-9711-431633a5a98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23d08ae-934f-453c-b756-33943525741c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813bf718-0e11-4f03-bd4e-cdd3528039f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f33e7-6cd6-48bb-9677-27776701a64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4f11d4-55fd-4cf5-b1fa-196b4ff11deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58dee26-235f-4fb3-9ab8-d3015b781a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a8a5c2-c175-4c61-9829-fe7defd97dcb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667b93a-8ec2-4ae5-b371-68fed1600285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a918d4d8-03d0-432c-9dec-8330543b95a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4296e4c4-88fc-4ce8-a02e-12c7ae466912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb231dc-4496-4800-a95b-82e7167b88a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69138910-bc78-4645-a765-f5e40237670e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ad7242-d9c7-4df6-90cb-27fe434d848b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced7a23b-a266-4387-ba33-01042c3d93ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ce3410-d7b7-4787-8f92-e2cd6a2b7b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd5bd83-ffc1-45f6-9793-893809aa1abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cd1451-8aff-46d0-a2dc-fd9a45ccf055",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8498da-1d4d-43fd-bd56-d33a3ad682f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a547fdf-8a62-437e-8744-f09735185abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030bf914-6aff-4357-91a9-b178ae771515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce0fca4-7e05-48ba-a743-b39fc704f91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a7f747-a55f-487f-80e4-8a11fab2aaf2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231200ab-6c52-4e0e-a050-32b5a988e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ba8e74-5364-4225-9c4b-205ac82dd828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6743a6-e7f1-4636-91c2-3f755bd57aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7c12b5-2cd1-4e96-b429-e735260359c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffad9e7-33af-4a64-a4b5-f469d1b3937d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd1b2f5-d3e8-4124-99b9-8f744829f5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc57fe7-7ddb-4816-8dc7-957fe415e627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc2e46-b62e-4b3e-85f0-84a607639cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af372dad-aec0-4d45-bd43-0d45cd557141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f9444b-17e8-478c-b1ab-ebaaec5b3966",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd58f6b-5cd4-4969-860b-9a433d21ddf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970697b5-71cd-488a-90cb-898c2e26e4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0f9b02-a87b-40d7-b55d-66b04dcee1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe3bd54-4be0-4528-a9ec-badc7acbffca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d67ab26-ad08-4bdc-a57a-4753b9d0f7e0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6349e108-f908-4323-99aa-75e5657bc99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17b9faf-83c5-4305-9d4c-382549f84ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d4293e-efb8-4540-b1cc-45046c05f535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808a325f-c7ce-4cc5-a538-489056fec9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1c0acf-a697-4d2a-9f52-e45500c30e1e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81a4789-2371-4513-86be-10aa3ff3884e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49195a0f-4a71-4ec0-9673-7c0f3c3d8000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cf5a96-0563-4912-9643-0eebb8298731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f1425f-3672-40a5-a99d-6966d09113d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b014e1f-50d9-45da-8022-e15e3c65fac8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879a3693-579c-4111-bf36-f8ff5919384a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d2000f-94c3-473b-97b5-d06cbb42bcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1d2691-64e9-478b-8395-5b0b4f36e28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f4d50a-baa5-4039-a8ed-b568d31091ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d17710f-b5c6-4772-bdfb-577e41843827",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d60ac5-0d95-4792-95ce-5bcad64c1ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b43fd0-d788-4c87-9c0c-82f975b706b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e59339b-317d-4108-bc23-5a685a24e060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2908aac3-9555-407e-ab03-34bf4273ce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f6a6d5-b073-41c4-9e3a-ac032867c859",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56239996-f200-4e4b-9e4e-892ff3fa7733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12da1db0-9cc6-4b8d-8b71-32e258fdb2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c6b11-4a9f-4d7e-98c1-c66b9605bf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b51b67-81f5-4537-8f2f-afd63bd3aaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85518134-edca-4cc6-9b77-61b4a42f70c4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295bf11f-22f7-43ec-b838-33efe9940d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9197d10d-e41a-4903-bb99-6acf078bc353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c017d4a8-f136-4a54-b898-03765388a191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4694bc3-0b79-400f-8f0f-5f7da6eac4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b974d0-53e0-4f1a-820c-e6344de6590e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbe2fa9-128b-4128-bce0-aa44952808a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845f77f2-2393-44a5-9f72-6fb21cdf2697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c6da5-91de-4315-a1d4-ff6b21613609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cd50a0-5ed8-41d6-adde-e50047061b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886c186-6e85-4429-972b-58c3461b4310",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c8c317-f335-47b4-a34f-a32185aedf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcce293-b007-4864-b865-23956fe3f8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2df032-52f4-4ca4-ad30-3fba5297dc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02840767-2868-46c0-817e-f90e576e0a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556ac285-c068-424a-af20-260810e62b87",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac76cd7-d03e-40c8-acee-4d4cde186f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5f73ea-a362-493c-ba0d-3ee20ad97df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0207f8e0-04eb-467c-85fb-0e802aa35cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3829c5-2d4f-4602-ab09-e815ecadb0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab500dd9-a374-49a1-ac6b-d94db61b01fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1cfd01-f183-4e8a-af47-b1e2ce31b4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e845cd-e26c-49d1-bf82-b0cbc14bdecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40812a2-8cdb-4bff-88e3-899f70e218f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43ce54c-0b09-472e-a8b7-b9e4dc6e540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8889db-494b-453d-9618-be6b2f565e8a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b841b77-e747-483d-9010-8ec78550f107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd35ed2a-f5a5-435b-abe4-a6ba3af55698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff7d7c-a8d2-43c0-bebc-dcdc623db80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ab226d-7f5a-4121-bc7f-4443123b72ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc2004-bd5b-4d9a-bd3e-d858e4791604",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c76920-5be9-4a36-8afd-f9c1730f7393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb871f46-2416-47aa-9a9b-b06f1e4e5e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf2ce40-e0eb-416d-b788-13b5201bc310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddc0166-9d6b-49bc-a91d-bc7060ee2d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5269143a-4edd-4afb-ae12-cb5a1c87f404",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f367b1-1d49-47ac-ae85-685025597a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85f3279-4b31-4f33-bf4f-efc76a1c2791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f4b141-22e5-44b1-8bcc-7541a879f9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a42f29-1c04-4f38-be5c-57e7cedccc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3347f34e-fbf1-45b6-a7bf-8d6518531296",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9258a5cf-e6fe-48fb-9492-626ffeee0987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770a5a68-7a01-4858-a31c-d1ef4a52a996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbb84e-435c-41d9-8dd8-e76648fa94d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9731ce-0cb4-4727-aaf4-757ef5d3d060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d658822d-34ce-40a8-ba44-0e590335d29b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c488a-f6cc-47d9-9d88-79e09c415c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5f2683-3397-4de4-82c2-75c647c419f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df64e02-cde2-4244-a489-97c6200ff573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff95d07-a159-4b15-a478-3b66cbf7a688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf3b6e1-d897-4433-9d55-5a98b7c7fa96",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c3cd25-1606-461f-a8ff-9f46663cba86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9069d749-4ccb-4734-ae7a-9ca539bde205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb301238-b87c-41c8-96fe-4e0ec0febde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45361a33-8555-4166-83d7-b42c6c14c47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e26909d-215f-40c5-9d48-247f58720832",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00271c52-2b49-460c-8086-9d938f0aa2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687dfdd6-2a01-48a2-8d9f-f65a45f32581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c521e851-84e7-4457-842e-8ba0e564e90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed6a5be-ab5b-4a23-84ef-4d8d52248f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523101b1-4c75-429d-aa5f-252c2b8f570a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef8475-59b1-47d2-a861-060afbf41f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae667938-4818-43c3-a743-ccda249aa6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ca0a51-6f90-4ded-93fc-b412aba3a658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233b56e1-2de4-44b1-9539-642d585271de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a595a53-8fa8-4dad-a013-2982f3bbbc91",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff524e6-fd79-4953-868f-87f0d8c1c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9858ea6-5d5d-4d0f-8f1e-15dc76768c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45238af0-ce4a-48dc-b104-431cc6b63cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495e515f-f391-45d1-b967-5a81a49a3207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cf3b53-da90-4b0b-b0e9-88bb767c9260",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc581a6b-c66b-4063-9a37-97c91c6cc0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f69552-b076-4be6-814e-5b8782a922d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f379a5a8-09d4-4191-b6c3-b3036fbd4b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb125e3-8d84-46b5-8d06-a53a4f07de59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9124fdca-8947-4f51-bec1-4d39ba7d10c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec81850-87d4-4e91-8905-e2b6a4aedf67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d33072d-92c3-4587-a444-007198c13b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46702e30-f387-463f-9155-054a5662ddcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51802fe-55aa-4a1d-a854-590f0b51f24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0887f4f0-ac71-4691-a4d1-3177d8cb3e1e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a5e7b-e02e-411d-9f7c-73efcccb4e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6843f65-d879-4efe-8941-c5665fdca272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8456ba3-fae9-4c53-9345-519b3948eaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f53a4e-0cc8-47b0-be03-22427f2f3f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabbae34-182f-471a-8318-40df6bcb93eb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ded6c17-156f-4388-b57a-4ac5c1cd578f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7beab4ce-1555-4aee-abb3-e82ef65ea345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24935370-5b2e-4bec-87c3-40af86629520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08813c02-1919-4e9e-ba68-9f751b65f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297e157a-d87c-468a-b85f-adfbd433c488",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a84a91-e8c0-4eea-932e-94cb724d8ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3861d6-7775-4677-801f-a4bacbee197e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0fd793-ea13-4cba-a2d8-4ad56836726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a7c326-5e2b-4e1c-ad1b-345e6238c2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e361f17-2955-4479-84f8-4cb358fbb744",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda45c07-5db4-48f9-8da5-f5edfbbc547a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03cbeeed-f508-4859-a9d6-dafb901b0f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebf9d3e-4b8b-49cf-951f-37214bb3ee56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ab7e94-f7a1-40ef-a2c4-de28d1032a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f9b81-0644-43c4-8db5-86bcf99ec651",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1e3fc-6063-4a4f-838b-01a307f143ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6abe9922-0e41-4e32-8896-5dfb78ba0d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3c9e01-ed7d-44ed-9776-bac93e717b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b81e3a-84a6-4a64-9ca9-c76bf78b6759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364d92d-6cfd-4889-80ee-2b6fc0bdc841",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c4de57-b1f8-45a4-bd1e-33897c48b952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0163adb0-bb3a-4552-8c0a-fc7f530b0933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea29365-1a71-4463-8809-14af008206dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b332a5-ca55-4af2-8a1c-8603048912c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540a6ac-7b6d-46de-8c8f-f99da9ae70bd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e007e33e-1caa-4a0f-b6d2-65a3b2e6a375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612ee97c-c930-430e-bbab-3fb458605b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c434fa5-4cfd-4bda-86cc-94c3f302d992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cfd737-d741-4104-8b21-decda2176cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c4b26e-87d8-43c6-947f-626c5aceeb0c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4332e3c0-50b0-4a0c-beae-e0bd48dcf43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338a7866-d069-4a38-a452-bbea8feceda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3558d79a-c7b6-4840-bc2e-b690e557e0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20725d80-8f58-4ab5-97f9-ffa05b45a04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c330bdb-6935-4588-b30a-dee430121ece",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36687b0-c337-4a41-a794-9a5f88ff9f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1a7b8e-2298-4caa-a7d0-306ff81e7e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc5ffa4-72ca-4993-a82f-a269b64a036a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdec1faf-f3c5-431b-bcf7-38644a62f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51422c7-a138-4134-baeb-e0444b54c95c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb21ed5-8890-41ec-8385-291f775d4c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b52e65-91d8-407f-9ff0-9deae4f3e0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2444077a-dd88-4ced-9640-a296d6c8e9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4371fc2e-f5f2-4a2f-808a-4ebe52de4af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d9189c-46d2-4419-b130-0501dce2ec75",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41980e1-96c6-4697-b321-d1128f077047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045c5747-1a6e-4264-8286-10e5c7f3936b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5946712d-374a-4b8f-9d57-f7d821ce3fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ceea1a-baba-48b3-8851-fb19d91d08d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918b284d-1b97-469a-b63a-eba2bac8e0d8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e979fda-205f-414f-9816-338faa290dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12ef5c6-14a9-4d14-9154-d33e21ab4cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc595102-33ab-4c3e-bf92-6d3f9f5c363d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7459a20-dd66-4246-a757-00a00ffc8c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1658eb2-7ff7-4af1-8bef-2699bb9b121a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f0b4bb-7349-48b5-a79c-feccd3c66362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992c1d08-532c-4709-a6b2-8f2692999999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0e1033-d854-42f7-93b0-52845a4fb22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b70157-65f0-4c2a-8f8f-25f10bbb5a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe6beb1-325b-44d3-95d1-a34fcaee7145",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86b2d55-87a7-4624-b67f-dd58109c60ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ef2710-2b48-4a36-8b83-183bdcfee991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786e28b3-d1e7-4532-94a6-2c432c8f5927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409fb6a9-e61f-4947-a60b-5fe9d7b2bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda95426-84d1-42e8-8c21-4f83f15b8330",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f24453-4a7c-40b2-ae83-deee4f6e77a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53752dcf-e927-424b-8b95-76394dfbbc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7dc686-8a72-4b0f-ae60-ff93c7f35e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59023c99-b42e-4257-a110-b96b7b3a7e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d909cd81-7eac-458d-9d6d-df210b9cd6c7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c04b161-55b8-45f1-8ae7-8f53cb849180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c980161-ea25-4460-b451-d5f5763c5daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295d814f-1a5d-4668-a175-a7ac3022a852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b08fdea-fb83-4df0-964f-69e31fe53459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e94bba-d0a2-4a1b-8173-ad2649c92a25",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20683467-4970-4f8f-ab16-026103f48cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a43b751-d205-413b-a27f-7264eabe1248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c35b18-9955-4bfb-ace4-38d4372e1d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71063ad7-ecb5-419e-9de1-5f7ce49a2165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0be67b-8261-470d-bbbc-c31e7480601a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f8e1b0-fcd4-4906-b77f-bd72bdc6c334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72969db8-38dd-4b9d-8d84-ac98c4bbd69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0109aea-25ee-4031-b8f7-65099053bc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac7d912-4e5e-4683-a34b-0e76eecb4559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e43d15-d153-410d-a95e-9bd92cf78f5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411175eb-17ed-47e3-80ff-a6a70a8c5f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd2a2e0-3f88-4ad4-9c70-5dace9e3a74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24983fec-d1f8-4a91-93aa-d3fcbae6d249",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a517f3a1-db9c-4446-88e0-409d87e9d6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4a4768-a150-427c-87cb-5769606a92e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ab48e-4c2b-419b-a99f-815194dbc073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3f2d9c-4f37-4dad-846d-fcb44181e008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b546289-0976-47e1-a268-121ace4c460e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29db676-5b12-4bcd-a0a4-7778412f1282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d357e276-4642-49d9-b2c2-51cec6884146",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc85857-c8a0-4aaf-b394-55c1e5faedab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bba4b6d-cbac-460a-a326-63c246b937b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549552c9-cb4b-47f2-a842-57b66896d0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9a9f1b-2614-4633-aadb-5217fb5834e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce841568-d640-49ac-9290-030fbfdce02f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64829dac-a4ea-4aa2-83e5-629d1e8ffdfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e601f76c-1547-4f7d-a6f8-0e3117523717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f4f816-69c2-4a46-b97a-422f8f54b815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c14c41-160c-4593-aeff-404f51f642a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b853c69a-7420-44a7-a520-3fa95244218f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732dc0b3-a09e-4b78-a867-65cfc05ab175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a628e2f-27bc-4081-bc10-0bb7c00b3d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ffc38-c8b0-448a-b79d-2e0413b4ea27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47bf3dd-2c60-4135-9f19-90456e61361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e6bc2-84df-49ff-b09e-bb93ae7a175b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b4136c-8405-4990-bff2-2fcbab4f8c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a9fc14-57c4-4e4e-93d9-ab388e49be0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb69362f-7f06-4706-a6bd-208928579c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22fb3fa-8ce8-4730-b795-054634163218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353b2879-95a6-45af-b685-4d1ef7516085",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f0c189-5f97-4802-bff1-f815926de52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4b084a-71d1-4014-9089-bc2981071e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932c7497-fd90-42e4-b4b8-9393715353ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929b7604-7f7e-493d-b8a1-67091587d875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8737b0a0-2b10-4f87-abdc-3cc9f939f122",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bcb7c6-bf29-4115-88db-9cfec12c02da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80c1195-a38f-486a-8071-bcc0da04cd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ae8fa4-fb0a-4b11-a9a2-474efb434f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdccf4a-ff76-4918-9389-e39609397e2f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daa6b5bc-7689-4b85-963a-98e80678a599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b343c37b-168a-492f-a6c6-c82ec4b49459"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6772023f-1a7e-44a1-9051-9a3c51b98ffb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec02d8a-4203-4317-bf9e-773ac1481923"
                    }
                  }
                ]
              },
              {
                "id": "a3522abd-75f0-4795-aed6-99c2ed60cc39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "068763eb-1f77-42db-a0a4-288f68900ae2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7ebd21-2595-4363-a76f-d23a41c8e67e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1aad6e3-718b-4319-ab58-af1660c6e3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4534a175-6ce0-4f1c-a1d5-1f477d549280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9a2b7f5-68b4-4e81-87cb-6302b4c25316"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4591796c-e737-4baf-804a-5d5cbbbf8c09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac8efc92-c30a-40fd-ac4d-61f0ef3ae095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7667fefb-de7f-4381-96f6-5faa93b8569a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6be23604-3242-4359-9a73-bc8d880714da"
                    }
                  }
                ]
              },
              {
                "id": "1a92977e-0b93-44d3-a232-86dc2da81287",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e5ca4e4f-fa1f-4db8-a75f-401e62b142cf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b5679-b15d-4d5b-b9ae-d459030cf53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "17883f55-c999-4e53-98e2-af6de8206040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30cb1d-fd08-4af6-abbd-5a13d95c4a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95248697-8456-4a39-babb-d1f04a1cef0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c417e386-1a3a-4a8f-82e9-c8f9ce732042",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0685578d-5561-405d-8df2-66312c3c9916",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5157c60c-5c0c-46bd-b15d-352dc49fddda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "53ba908f-e96c-46f1-b30a-ae5d97505d6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13c946d4-752e-4ee4-8fa5-ae1f8dd6c604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9be7c09-c3f7-48f7-86f0-3f90892d7d5a"
                    }
                  }
                ]
              },
              {
                "id": "39428b64-970c-4660-aab6-3af525ae0464",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ecde69f-3794-4dab-897d-d31a64c847e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05a184ae-f401-4443-9b95-c975909845de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7603b3f-f268-4d88-9588-6f2701553db0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feabf76b-3839-498b-94b6-c90e66495d64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f02fbc32-ffeb-4e74-b436-e774faa964a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "808ccbdc-4938-4484-a378-b1ebba49e09c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f608584b-be99-4f73-bcc1-2a6761e7a61e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d69f63ff-edb6-47d8-8cd8-b7ae64bf60f1"
            }
          }
        ]
      },
      {
        "id": "619c5cae-3c60-4a8e-8e5a-050ba0d672d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bf8af4be-2d32-4762-83eb-d38aa9b7d28c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d178309f-e238-4a5c-a45c-bbf24ff4a295",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13ce7101-756b-4c53-87a3-0ab96732ec05",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8124fa-e22b-474b-a314-06cee85b89e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "01b36ba2-9893-4c45-8a2f-8b98d5fb3d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f555241-ec98-430e-8abb-b428ba56073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de7f06b3-9a92-4328-bd13-ddf89c7165ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ced16a0-ae98-40f2-aa94-57a43d68fe39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b0a335e-ef88-4061-b0dc-941d7da72c24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2369d693-7990-4026-97ae-dcc16cf0267d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49bca4a0-b3b2-4f8e-9f60-8772adb878e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a19946e0-c8d4-451d-b68a-0442c15b2f4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a2d7139e-57de-4548-82e2-cd407c17816e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceb42de2-3d76-4c4c-9b08-8932f421f07a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "867b69cf-9fe8-4f6f-9021-c078f1bef66e"
            }
          }
        ]
      },
      {
        "id": "42815490-5461-4447-b5d5-d920ba504563",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "70d90613-4b5a-47de-8325-68d65dcb1027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4123ee8-732b-43fe-8b51-d38d611d6202",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b36a954b-86f1-47e9-9069-89bf2f6be41f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0055f80-a45a-4aa7-95bb-d43137988a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c3b279-c1a0-4134-b68a-998c0df544a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a23be2-34cc-4365-a2ae-554066b2858c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84ac20d3-6d55-4c40-bb1b-bdd49798e7a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aac9aaaf-6403-4baf-9986-abfadb33e69e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3f86f33-1946-461c-828f-ebfdd713da03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "454f1e1e-4d57-4345-b7ab-e682664896d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d654b642-9e0c-4c60-9fee-f909f2046d3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab17b922-dd01-4254-9c58-de092827ccc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "371dc2ca-4ef9-4795-86ab-575931dcae60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "690148e6-0623-4afa-b713-13d57c98e662",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e35cec8f-f3f0-4ae2-bc06-6d8faa300a6e"
            }
          }
        ]
      },
      {
        "id": "bc2c7bd1-2634-471a-86cf-2eb1acc64d35",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4938caee-8196-4376-856d-35933eb31d7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67bb2395-7bba-43ea-b5f4-9cf5bd13ef15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36f93a3f-44aa-4670-a1e7-0f1a945f7598",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb5ef3b-edd5-422d-90ef-4a88c20a6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a6c7c8-22ac-4651-bf9d-da52b365cccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4791a1f-3794-4de8-ae21-a2d5ac77132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe9c82de-2c4d-4685-bdf8-92292de59613"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac6f3ae-fc39-4084-9598-74c724bba995",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d473e35f-724d-46ce-a943-a53183608d7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e2fc5a1-74df-4468-b8b8-b72f205992a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "709ccd39-4237-4a98-abcf-c9bdb1aa292b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ee4d2aa-eb54-4d6a-a64e-fca08bf3f2f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8cc7e500-5557-4f40-b612-520aca0c4817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7985b3dd-4ae3-4cd4-91a2-adc7548a451d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bc0d39f-19a6-4b19-af8a-d8a74c98d3bf"
            }
          }
        ]
      },
      {
        "id": "351a1c67-7de8-4ec1-8b00-089d1eb5f457",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feb22b77-0573-4bf4-b3de-cb5e95e48d16",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "586fa5c1-7b9c-4c09-a52f-eecf525527c5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "242f304a-35f9-4fb1-b566-da6f972fd57a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252cc252-da25-4044-b1ba-ad6f2e6b41fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b18e7868-909a-447b-ba60-a9366f47109f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.91269841269835,
      "responseMin": 6,
      "responseMax": 17738,
      "responseSd": 1136.5208991845218,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716251818872,
      "completed": 1716251862513
    },
    "executions": [
      {
        "id": "7cef1e1a-89dd-420f-97bb-23a46ecb582a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8e42000b-0a62-484f-b29b-76463876a34c",
          "httpRequestId": "7afcc164-f027-427d-887a-600625e48ab7"
        },
        "item": {
          "id": "7cef1e1a-89dd-420f-97bb-23a46ecb582a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7c3c9c0a-bf6c-4329-9157-24aac9712fb5",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "d73caee5-0ffc-44a4-9b3c-6a2af1787ac8",
        "cursor": {
          "ref": "b849dcd1-7e99-4076-8bca-53ee623d53e3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "083d8937-142a-4762-bbce-e3d693b49bf6"
        },
        "item": {
          "id": "d73caee5-0ffc-44a4-9b3c-6a2af1787ac8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fcf801f7-974c-4f33-b3e5-935b54b595cd",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fd00ce09-e412-455f-90c1-42ecadbe7306",
        "cursor": {
          "ref": "19fb0693-611c-48a4-a20e-0fef19fc57bd",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a57d12e8-b755-41d1-922d-a73daf648588"
        },
        "item": {
          "id": "fd00ce09-e412-455f-90c1-42ecadbe7306",
          "name": "did_json"
        },
        "response": {
          "id": "7ec9f187-8603-4708-b3b7-b8da3834f968",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295ad74e-251c-4f6a-b40d-501f5986140e",
        "cursor": {
          "ref": "179577dc-2bff-45d4-af37-39f4cbef53bb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ec1c947-0709-4d50-88c5-cb7ca653625f"
        },
        "item": {
          "id": "295ad74e-251c-4f6a-b40d-501f5986140e",
          "name": "did:invalid"
        },
        "response": {
          "id": "79d5e323-b3fe-4b65-a726-a3036225aedd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 749,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295ad74e-251c-4f6a-b40d-501f5986140e",
        "cursor": {
          "ref": "179577dc-2bff-45d4-af37-39f4cbef53bb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ec1c947-0709-4d50-88c5-cb7ca653625f"
        },
        "item": {
          "id": "295ad74e-251c-4f6a-b40d-501f5986140e",
          "name": "did:invalid"
        },
        "response": {
          "id": "79d5e323-b3fe-4b65-a726-a3036225aedd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 749,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10772c00-36e5-40d4-8d58-c6049c4a4804",
        "cursor": {
          "ref": "708924a9-2723-4135-9dc7-523e43d9ef89",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5f199c30-2765-49dc-bb7e-d780f7c7ba5e"
        },
        "item": {
          "id": "10772c00-36e5-40d4-8d58-c6049c4a4804",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8c56d265-345c-4aff-842b-de284de26fb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b187f0-6d8d-4fb8-b08a-f99d4f98a492",
        "cursor": {
          "ref": "90f2f896-3cd4-438f-a688-e657bb165cae",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5d4aeb7a-834b-4092-b0f3-13d7c62c29bc"
        },
        "item": {
          "id": "39b187f0-6d8d-4fb8-b08a-f99d4f98a492",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c3b63798-f5cd-4c55-821c-2ff4f7a6a13d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bf92b-7256-4f00-ad4d-970d3aa3f3ed",
        "cursor": {
          "ref": "9cc855a2-b350-4f56-bb89-392eb009f070",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d91afc6f-af3f-4637-b1a3-e82a088ce8d4"
        },
        "item": {
          "id": "ca4bf92b-7256-4f00-ad4d-970d3aa3f3ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bbf24570-dbfe-442d-8513-7ef12b3e3c31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8adc027-80bd-4bb0-87d1-b42a3ada9af0",
        "cursor": {
          "ref": "f373d777-c14b-4ef1-afa8-0560d139d4d5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "211956e8-c4e0-42d3-bef9-98c4e91faf1b"
        },
        "item": {
          "id": "d8adc027-80bd-4bb0-87d1-b42a3ada9af0",
          "name": "identifiers"
        },
        "response": {
          "id": "b6bf6ddd-7061-4497-865c-073e64199fea",
          "status": "OK",
          "code": 200,
          "responseTime": 291,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff7736b-7ad5-4328-a50d-9696487889ff",
        "cursor": {
          "ref": "31ae1a5e-7850-43cf-950d-04cd8d74d6b8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b0605c98-abf3-4f02-9900-f283aafe5508"
        },
        "item": {
          "id": "dff7736b-7ad5-4328-a50d-9696487889ff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "561907bd-3733-4c5f-a496-1a955f031a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48633680-bfee-4fbf-90f8-dad4e875e105",
        "cursor": {
          "ref": "8b1980b3-daff-44e3-bc18-3e83f7243026",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c9004596-d7c8-4a2f-b929-e2b2d860cc86"
        },
        "item": {
          "id": "48633680-bfee-4fbf-90f8-dad4e875e105",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "45f33c0a-e39c-42b9-9fbe-5ae42c9c3200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376c0221-6bfc-473d-9484-a340e1810d83",
        "cursor": {
          "ref": "cb660da1-6f46-43de-922b-6afe657e7b73",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32e8e0c1-e548-44a9-ad3f-74188726a3b5"
        },
        "item": {
          "id": "376c0221-6bfc-473d-9484-a340e1810d83",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "91c2ef2c-5188-432c-8d15-c035d6b883aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baf8b2b-74db-418f-ba91-d7b54d6301fe",
        "cursor": {
          "ref": "20bc95c9-f8b6-4521-9273-036f7678e58e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7ecd795c-12bd-4c2c-bbab-ada5d7f4b5ae"
        },
        "item": {
          "id": "8baf8b2b-74db-418f-ba91-d7b54d6301fe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8939bb67-6937-4abb-bf84-d4c20ed81159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3592ded-2f5c-4498-99a9-bbeb8337a0b7",
        "cursor": {
          "ref": "23890fc0-009e-47bb-a37f-e52f359f05c5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "95114cc7-a4c2-4bea-adb1-8c28d7e31a10"
        },
        "item": {
          "id": "c3592ded-2f5c-4498-99a9-bbeb8337a0b7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "200dc56c-7f30-4dba-b801-ec8d6c614e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85d12fb-ce6b-4574-b51d-a539cdabd852",
        "cursor": {
          "ref": "8b3bb304-b253-4019-a422-19734d7f843e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e5a6ad7b-2882-4310-9584-86d7693934fc"
        },
        "item": {
          "id": "e85d12fb-ce6b-4574-b51d-a539cdabd852",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "048219ab-1378-4271-95df-be4a11af4fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01075de5-70c7-4b79-9465-c42da239ff53",
        "cursor": {
          "ref": "a3f94e94-ad78-4c54-bf38-4885e7fef9e7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4599caa4-260c-45d8-b326-954875addad8"
        },
        "item": {
          "id": "01075de5-70c7-4b79-9465-c42da239ff53",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bbe064e0-fce4-46c4-ad8c-13cc8f3fe9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5acd84-5d8f-4542-a681-dc0e43c2847d",
        "cursor": {
          "ref": "1225952e-879e-4da7-a90e-c35c5eb10867",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3098e255-6918-43e0-99d0-cd31b4b40a29"
        },
        "item": {
          "id": "2c5acd84-5d8f-4542-a681-dc0e43c2847d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "585ca007-c7bf-4b17-8489-c28fbc3fdedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44df1a-e269-447d-9943-f7cd8aeb086b",
        "cursor": {
          "ref": "fc3415db-c861-4709-8474-a92349ac70fe",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b801f5d0-4224-4b69-91e4-e86c6130470e"
        },
        "item": {
          "id": "8d44df1a-e269-447d-9943-f7cd8aeb086b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e0d8cfc4-80cc-4efc-8c1c-d485b01428ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2afbd6-2493-43d6-8f92-de3fa3dc1746",
        "cursor": {
          "ref": "44dca22f-5873-438c-a2e3-debdf1178921",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5fc56c09-e915-4640-af73-f8e110eb477d"
        },
        "item": {
          "id": "cb2afbd6-2493-43d6-8f92-de3fa3dc1746",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ee33973-27f4-43d1-a118-05cbd95638ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b904e-7483-4ef3-83c4-3cc28f8f53ad",
        "cursor": {
          "ref": "a67a464b-6164-4016-b4c3-71878a9fc981",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d18ede37-2fcd-4af0-a0f3-eab504f1f6fc"
        },
        "item": {
          "id": "485b904e-7483-4ef3-83c4-3cc28f8f53ad",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9aa13b87-e624-452a-9653-1ffdbee0a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec405a7-21e6-4499-a6f6-e7e20b30d91f",
        "cursor": {
          "ref": "25bc7223-9620-4229-8a3f-979328c5ac19",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4bc65911-32d6-4e06-b993-10a70082da8f"
        },
        "item": {
          "id": "6ec405a7-21e6-4499-a6f6-e7e20b30d91f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9c0e612-f222-47b2-8435-362ce8cf985d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b29b81-3e67-449f-81fb-450fc97d7b2c",
        "cursor": {
          "ref": "2344908d-af55-4b35-9759-a7010f7bd746",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "373113a4-dbaa-4b5e-9f77-da7282e7ba84"
        },
        "item": {
          "id": "d8b29b81-3e67-449f-81fb-450fc97d7b2c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "304ac16b-f90c-43ea-9ded-c8263a7bee0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a1c966-0c3c-455c-a6a7-5ab3afb0a852",
        "cursor": {
          "ref": "66338359-c295-46cc-9f76-db0bf5daaec2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a25da739-d12a-4210-9484-fe2b2acab327"
        },
        "item": {
          "id": "05a1c966-0c3c-455c-a6a7-5ab3afb0a852",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e38422cd-407c-454b-8c48-f4e08acf1cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29abb215-4938-4ebb-b5b2-232c361cd3d3",
        "cursor": {
          "ref": "e7e5eaf3-6360-49ac-bb6b-5fdcf4593893",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d48908a-ba01-4cb6-8fa2-0b9c1ba6bc80"
        },
        "item": {
          "id": "29abb215-4938-4ebb-b5b2-232c361cd3d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7710fa57-9ea7-44fe-85a6-f71f6b08e121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688b04c1-e14d-4041-b183-01c35545192e",
        "cursor": {
          "ref": "183d66a3-e976-4db9-8d11-fac049f7644e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44dda5aa-dcae-454e-859b-b8cfd11ca65c"
        },
        "item": {
          "id": "688b04c1-e14d-4041-b183-01c35545192e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "555faded-790d-4cee-ae63-f7af0237b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c33d8e8-346d-48df-95e1-166f17c6842f",
        "cursor": {
          "ref": "9fd0e1ca-f9c3-4b2d-8b0d-c5f58febd5e0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4995b4ec-ca50-441e-9261-79b4bb95b82f"
        },
        "item": {
          "id": "8c33d8e8-346d-48df-95e1-166f17c6842f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6e658c5c-5e59-49f9-bce6-c8b92c71cdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd3b298-d88a-48b9-9ad6-6672351ac976",
        "cursor": {
          "ref": "7a915787-20dd-4231-9181-6a0173abea7b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "23f56fdc-1934-4eab-8af1-320b8eb22334"
        },
        "item": {
          "id": "8dd3b298-d88a-48b9-9ad6-6672351ac976",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "30ad9a6c-e536-4303-a212-8890def7bc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073a98d3-1bc9-4f24-97b9-cc283df1504c",
        "cursor": {
          "ref": "3d1cbec8-0cec-4bf4-99cd-1a7d7b03f780",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0ac46a25-b9c1-4152-8a3b-37e81fb545e5"
        },
        "item": {
          "id": "073a98d3-1bc9-4f24-97b9-cc283df1504c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "10f2e7c6-e9fb-4072-8038-27ec15178027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea05be-656b-4c7d-897a-84c77107db8b",
        "cursor": {
          "ref": "c4359e35-9840-423b-8ce2-a91033f5c9ca",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7fcceddd-e32f-49ce-98f2-017dc949270d"
        },
        "item": {
          "id": "21ea05be-656b-4c7d-897a-84c77107db8b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b68bc02a-ea7d-42b1-82eb-13524e4e11ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9bd24c-ba27-4ee2-9604-114066d40750",
        "cursor": {
          "ref": "f713a1df-a2ca-4043-a40b-334e0036feee",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d91fe5b1-d9cc-4d5b-8b4b-13594d8da0eb"
        },
        "item": {
          "id": "cb9bd24c-ba27-4ee2-9604-114066d40750",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b6acd06b-aa36-41a9-9720-389e5637ca9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d97342-7eac-4943-8b7d-73ba25863231",
        "cursor": {
          "ref": "598fcd57-3ea8-4049-954a-b9602eacd41b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c683a341-4729-4593-98ca-571d9771dd19"
        },
        "item": {
          "id": "84d97342-7eac-4943-8b7d-73ba25863231",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "64ff8df2-48e7-4b09-a64e-987120acf10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e165e578-281d-400f-9949-4354c345509d",
        "cursor": {
          "ref": "d5cea3c0-1047-4e76-a3c9-8b6548033e1e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c42e4b63-49b6-4a81-9708-cf8e8babc104"
        },
        "item": {
          "id": "e165e578-281d-400f-9949-4354c345509d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c8fcdc09-fbe4-487f-b0f3-5393f10d6779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623367e9-ea58-4c61-8762-93c788c247bd",
        "cursor": {
          "ref": "65fafc95-d696-4ef7-ab52-9548d9e8af7f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4bf4057c-35fd-4242-a6e4-42657eca4540"
        },
        "item": {
          "id": "623367e9-ea58-4c61-8762-93c788c247bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d75edce4-f78c-4cdb-8022-a0b8f3220a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5252134-5c8b-4485-964e-3f6db916a13e",
        "cursor": {
          "ref": "576976b1-a686-4cd8-98b4-903ab60cb7ad",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3448514-5994-42d3-a351-feec7994fbda"
        },
        "item": {
          "id": "e5252134-5c8b-4485-964e-3f6db916a13e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f552fbe5-8408-4662-9ebc-6a2b47502aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638cb828-d748-4cc7-9564-9734f039e850",
        "cursor": {
          "ref": "7c4c9a1a-f113-4c8d-bfae-1b8f83c52adc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "96a88fc5-4d85-4e81-b54b-612751334601"
        },
        "item": {
          "id": "638cb828-d748-4cc7-9564-9734f039e850",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4298b707-380d-4d2e-875b-a22760aff48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0878327-6a76-4064-92fe-da780da2470e",
        "cursor": {
          "ref": "42cc047a-95df-41be-8105-85ab6d9b406a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cf5ac9bd-91de-44a0-bf26-4bb511f02da4"
        },
        "item": {
          "id": "a0878327-6a76-4064-92fe-da780da2470e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a8c0a6b3-ca1b-4364-b8b5-42da7e35a600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88545b-562c-4c6b-8081-15c836a8638b",
        "cursor": {
          "ref": "70a81560-9810-4258-9f44-c0df02a63fe8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7a9faecf-5390-4b2e-a37b-da043594d3e7"
        },
        "item": {
          "id": "2c88545b-562c-4c6b-8081-15c836a8638b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03ab99d5-1e24-4b8e-8481-394500335804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e0bbff-e213-42ef-ba9a-315ad0254ea1",
        "cursor": {
          "ref": "c3280463-460c-4dd0-a249-da9b981eb122",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c10ac46-c4a7-4773-a93a-9d26418c0bd3"
        },
        "item": {
          "id": "40e0bbff-e213-42ef-ba9a-315ad0254ea1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d11a265-cf6f-4cdb-be47-28d212e678c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99915bc-2891-43ac-aa21-bd836d46f144",
        "cursor": {
          "ref": "4681bdd7-66a2-4961-9d80-5e240464cea7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3954fe0f-79cf-4351-8e62-394c9eb28858"
        },
        "item": {
          "id": "e99915bc-2891-43ac-aa21-bd836d46f144",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "35849df6-8f93-4d57-b12e-7f3bf285cc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0c086c-5ff9-45e7-90f0-44d79d165e96",
        "cursor": {
          "ref": "f9449f3a-5669-4559-898d-73ae7f692490",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "14025c4b-d9ef-4ae7-83b8-f3c3b6eb1098"
        },
        "item": {
          "id": "cc0c086c-5ff9-45e7-90f0-44d79d165e96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ba54da3d-d78f-4de9-bb4c-729ba602b07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fbefb9-2472-42bc-b2d1-84bb499def60",
        "cursor": {
          "ref": "d6257f22-898a-4a07-91da-28c09531c1f2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5a53fb6f-6845-4dab-b338-eba3d08f687e"
        },
        "item": {
          "id": "86fbefb9-2472-42bc-b2d1-84bb499def60",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6260c693-de7f-40e5-bf17-e7cb15c8236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552789d-4e7b-486b-8c2e-300775d7ba7d",
        "cursor": {
          "ref": "76a1e66e-0345-48a9-b44a-7eb6e8bfd6c1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c596113d-0801-4c89-a8e6-354cb2a06045"
        },
        "item": {
          "id": "a552789d-4e7b-486b-8c2e-300775d7ba7d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5096c4d3-7ab2-40ab-baa6-7a1995b4ee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23631fd-27d5-4b24-93d1-d7c936cdb4b2",
        "cursor": {
          "ref": "825af018-4074-4c6f-90e3-821b659b8c7e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "633cfa5f-0dc0-49c0-af59-852f8e326291"
        },
        "item": {
          "id": "c23631fd-27d5-4b24-93d1-d7c936cdb4b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "340961a2-890b-41d0-b63d-ec090f028bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243c46a0-773c-44f6-bac2-7abc8f528737",
        "cursor": {
          "ref": "82f9ac8e-9293-43a1-b6bb-f4d34dca6de1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "23d83135-107b-4427-9e0d-56cc0d63d095"
        },
        "item": {
          "id": "243c46a0-773c-44f6-bac2-7abc8f528737",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "99d8f7d7-e115-42d1-bfeb-315a8183b2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cb2201-f44c-4152-838d-47ab63360db4",
        "cursor": {
          "ref": "13914c10-37d8-486c-952a-d304573e6b66",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "85eedbe3-189d-4a33-9edc-dca28af00eca"
        },
        "item": {
          "id": "76cb2201-f44c-4152-838d-47ab63360db4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9d377efd-234c-440b-8c81-66eae5a2df96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e1beb-5d73-4473-9a23-d6829c73fc5f",
        "cursor": {
          "ref": "90e34506-c4e3-4790-9d6f-c865bd44d4b5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c0073de1-d465-41fa-9867-b41233d04161"
        },
        "item": {
          "id": "549e1beb-5d73-4473-9a23-d6829c73fc5f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d7be588a-1719-423b-9d4f-c3767bbc38d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3fbccb-f7ea-4bed-b9e4-90ff36c0f687",
        "cursor": {
          "ref": "a000cea6-60bb-4487-b2b6-bf27041c6ca2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1be764d2-35c4-4c69-825c-ca0f91ab6088"
        },
        "item": {
          "id": "fc3fbccb-f7ea-4bed-b9e4-90ff36c0f687",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "52de28df-8aec-4b25-a753-3ba4112fc9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cd807a-e70d-448b-a6fe-3503592f7a68",
        "cursor": {
          "ref": "ea034294-d4c9-47bf-898c-26425685f5af",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "381cd9d4-4123-4500-bfb4-c94732a43a9b"
        },
        "item": {
          "id": "b5cd807a-e70d-448b-a6fe-3503592f7a68",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fa324880-e982-4467-8fba-1a24223ab92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356e29db-ff70-4152-836b-c0898fa00ab0",
        "cursor": {
          "ref": "11f0081b-879a-4e2e-a6af-2f656d54e833",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d6a92924-d89d-477f-b765-81da81a83741"
        },
        "item": {
          "id": "356e29db-ff70-4152-836b-c0898fa00ab0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "558ac89a-f8f5-4e71-b6f8-9cdb502f9cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a753ad-8ef6-40f4-a0ca-66d09aca185f",
        "cursor": {
          "ref": "13a02686-3212-4a9e-8c98-e81b396664cb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "726905f0-9c93-4e0c-8456-51ee04088332"
        },
        "item": {
          "id": "c0a753ad-8ef6-40f4-a0ca-66d09aca185f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f87813e3-3d12-402d-ad29-64c2707fbab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af351e18-fd94-4290-a020-d258dd546382",
        "cursor": {
          "ref": "3146c6b7-96b9-4f0d-a83b-e9311189207a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9e12e6f0-212d-46de-9609-52d8baf16a1c"
        },
        "item": {
          "id": "af351e18-fd94-4290-a020-d258dd546382",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64c21c46-4db8-4a5c-be1a-a4bdfb67bc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122ae402-ef1b-402e-a1bd-6c245db21e55",
        "cursor": {
          "ref": "1a1da6ed-3189-4491-9e66-ed3b944b493a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3285b151-d580-486c-aa94-5bb77a951d3f"
        },
        "item": {
          "id": "122ae402-ef1b-402e-a1bd-6c245db21e55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9c06f4f-0f96-4697-9e37-11dcbab5c1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85708b77-babb-49f7-a765-68c227926cb3",
        "cursor": {
          "ref": "cd8f55fc-fe6a-4ff9-9cdb-8a5986b02d43",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6d4b5084-a593-4ea4-bb0b-6b0176e24a69"
        },
        "item": {
          "id": "85708b77-babb-49f7-a765-68c227926cb3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "98987c7d-f235-4a17-bae3-75fd18c98070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420c441d-cc18-4706-bf44-557d2ebfcbd8",
        "cursor": {
          "ref": "9ea03ae2-50a4-4920-993f-5dada74e6710",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "02770ea3-2583-4b29-a22b-74f97d369faa"
        },
        "item": {
          "id": "420c441d-cc18-4706-bf44-557d2ebfcbd8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6a7b6b8e-0286-4884-8059-ff9f7d47f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661835e8-6c1f-4620-b681-551391e26ce4",
        "cursor": {
          "ref": "8000755a-2ac9-4010-99ce-ca3813161580",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97e8067d-fff0-4eef-978f-dd2a97a62fde"
        },
        "item": {
          "id": "661835e8-6c1f-4620-b681-551391e26ce4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "327c37af-b3a9-44bf-8aac-2e1d2dcafa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41433022-f0bc-4dee-bec8-06c2443a1974",
        "cursor": {
          "ref": "a88ac3c8-834a-4173-bbd2-0ae25ceffa70",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f84c853b-06e2-4497-ac54-b4674562e3ee"
        },
        "item": {
          "id": "41433022-f0bc-4dee-bec8-06c2443a1974",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a45f0f7d-b1aa-40f9-8a3a-cc3ce7d92b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370b4745-c21c-4358-9d58-7a6c58964d3f",
        "cursor": {
          "ref": "e220d654-f95c-4833-ba9a-ec567289df7e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f475a009-0dde-4436-9b79-40276fd9e523"
        },
        "item": {
          "id": "370b4745-c21c-4358-9d58-7a6c58964d3f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a6935bc5-ea22-4821-95e5-aefb07bbc6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2734272f-5667-4a70-9202-95437d6b3692",
        "cursor": {
          "ref": "ea142fcd-b987-4bd5-b8b7-6919bfa906fd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bb90974d-1dd5-4207-a229-97a5e36870d3"
        },
        "item": {
          "id": "2734272f-5667-4a70-9202-95437d6b3692",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b576dbff-bbfc-4bc7-9a0b-93ec344857db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313597ae-0ae1-4628-a771-3353265b7dac",
        "cursor": {
          "ref": "d8ab9741-0616-421d-9ead-02493c6c8714",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4fd4a61a-baec-44fa-a52a-ddc85501f0d6"
        },
        "item": {
          "id": "313597ae-0ae1-4628-a771-3353265b7dac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f35cfc3-8543-4f34-a5c9-518a5e62a2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046790e1-8c3e-49b2-a845-ff5e6d0f6c1f",
        "cursor": {
          "ref": "e06c9874-c6ee-4d3a-bf78-6eca4a43e10e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2652b75b-b35f-465c-9ea9-c4fe30e6d8a0"
        },
        "item": {
          "id": "046790e1-8c3e-49b2-a845-ff5e6d0f6c1f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6e539d6-f8b6-49c4-920b-a1c1859648e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb412cf-6f18-4d21-8ef7-227fdd90f3d9",
        "cursor": {
          "ref": "8f0ed816-e85f-4635-a02b-330a1772468b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "688b9bdc-87bf-4b15-9213-b0f1ab61c170"
        },
        "item": {
          "id": "dbb412cf-6f18-4d21-8ef7-227fdd90f3d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a14d9c66-6a79-4aef-8e92-448179bf6eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44e8b10-0a5b-4369-ba76-0feb5cb1969f",
        "cursor": {
          "ref": "8cee5eb0-aa56-4431-acf2-e3875b142d6d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "97e0925e-18fe-405b-a2a0-d7bded74d12f"
        },
        "item": {
          "id": "d44e8b10-0a5b-4369-ba76-0feb5cb1969f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1a8f8a4d-39c1-4eba-9bd5-0a3643b97a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8835f18e-dbc5-41bd-aeb0-317b9a7bc5fd",
        "cursor": {
          "ref": "ea8e80ac-8a6b-43bc-b178-72837de4a2e5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e85600ec-36aa-4a59-9256-0657963e8c03"
        },
        "item": {
          "id": "8835f18e-dbc5-41bd-aeb0-317b9a7bc5fd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "99a95cfc-de08-434a-bc1c-1d9162ef310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bc629f-f83b-47d3-a825-6ce861e7003c",
        "cursor": {
          "ref": "1f049d18-2c56-43eb-8984-b8e230c9a9c8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "319ba1b5-bde8-4cc0-8ab0-5cd54cf06b42"
        },
        "item": {
          "id": "47bc629f-f83b-47d3-a825-6ce861e7003c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aa416045-79fd-4b94-a5d3-4a3072ac2ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae39e16-4805-4f81-8561-7da4b4ca1f76",
        "cursor": {
          "ref": "f02ffcb3-872d-4081-986b-3adf9ace8e35",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "524b05e3-3859-44af-ba17-85e1172aedbe"
        },
        "item": {
          "id": "dae39e16-4805-4f81-8561-7da4b4ca1f76",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "485b3f47-28a3-4d9e-b699-90424e1868f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af24a8e-fa8b-4ba1-83e4-8dd5cb22a572",
        "cursor": {
          "ref": "1b090c82-d36a-4bd7-80a1-2fdae0ba248c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cce5cbe0-ccad-4871-b278-4b9a1a07a0f8"
        },
        "item": {
          "id": "8af24a8e-fa8b-4ba1-83e4-8dd5cb22a572",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c7749548-3a55-4ba2-b6b3-4251f2803e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81689ad7-3e4c-48e8-8cf5-c35130044be6",
        "cursor": {
          "ref": "0f519385-0e87-4f6a-9fca-9edf03f4bf36",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7927172f-0a6c-418d-9479-802f3da9054e"
        },
        "item": {
          "id": "81689ad7-3e4c-48e8-8cf5-c35130044be6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "06ff898f-2561-4a76-a2ce-652f5c6059f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da04bb8-2255-4021-881b-1b8c6e74b1a6",
        "cursor": {
          "ref": "6c2997ab-823c-4116-8655-be9b92683141",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "784e0666-d43f-4b37-8395-d166d2f2125b"
        },
        "item": {
          "id": "4da04bb8-2255-4021-881b-1b8c6e74b1a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "228cbf8f-7184-4da4-8e4b-4e481db3d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f22ff-a0bc-48ee-935d-088b04a81cb8",
        "cursor": {
          "ref": "4c4ee1b8-fa66-4fb2-8011-60d48da01193",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5f4ddec7-8f2a-446a-9bfc-6c5626acbf31"
        },
        "item": {
          "id": "376f22ff-a0bc-48ee-935d-088b04a81cb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f14b27bb-3863-4641-a522-b66599eae95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d5a699-a37d-47a5-9ad1-a7b4ab6efa57",
        "cursor": {
          "ref": "8cfac52f-3fe1-42ca-a12b-c27fb3ae75cd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43134f23-4d06-4e90-ba0c-cdf9b72ec445"
        },
        "item": {
          "id": "54d5a699-a37d-47a5-9ad1-a7b4ab6efa57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3faecad8-0ba4-43f9-bcb9-d8a8176ba575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c0e13e-f038-4e91-b1cc-d0085e947363",
        "cursor": {
          "ref": "563faed4-5167-402e-9d5b-761ebe8d99ef",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8a554776-4647-42a2-868b-148b0093e17a"
        },
        "item": {
          "id": "20c0e13e-f038-4e91-b1cc-d0085e947363",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "921d7e49-21c8-44ae-ac8a-1bb2732e7182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803693fb-8005-4e32-a5e4-1647a63fb287",
        "cursor": {
          "ref": "ae1c0a40-a6d6-48c7-ac16-66dc80d554fa",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0f2b4824-3966-483a-a950-bacaad833f7c"
        },
        "item": {
          "id": "803693fb-8005-4e32-a5e4-1647a63fb287",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "60198562-947d-49db-b8dc-f55795a09b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5dd799-0857-4043-a6c4-3ea9ec38e403",
        "cursor": {
          "ref": "58b40218-4bf2-42c4-b535-8682b2a414df",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3a4c03d3-bf70-412d-8c70-a007304017f6"
        },
        "item": {
          "id": "af5dd799-0857-4043-a6c4-3ea9ec38e403",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c38e2542-78ba-434d-8abc-c7ca4c28aff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190cb8e6-98e8-4c95-bdce-7e7f74ae7b97",
        "cursor": {
          "ref": "c09b6c4a-c01c-4155-8dcd-4b0c22b6ab5d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e648002f-b282-46fa-ace5-55e05014cebd"
        },
        "item": {
          "id": "190cb8e6-98e8-4c95-bdce-7e7f74ae7b97",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48537f20-3c1f-4613-9e08-67106c207d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c58284-6320-4afc-9316-ed65fdada5c8",
        "cursor": {
          "ref": "4c9b88b1-f944-42e3-b37d-3ee2433fc8bc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3de19e0a-2db3-4207-a655-cedb1496c546"
        },
        "item": {
          "id": "73c58284-6320-4afc-9316-ed65fdada5c8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3196a0fb-7fe2-4ab2-8133-a4bcfe264934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6490df6-320e-4926-97cd-022b2b349b76",
        "cursor": {
          "ref": "d08a0420-999a-489c-abca-8dc1325d3366",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "933fc3cd-4ea1-4dd7-82f5-2db8b6e07e6f"
        },
        "item": {
          "id": "b6490df6-320e-4926-97cd-022b2b349b76",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d57b4488-c310-49f4-b315-6b97e1275946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c36f7a-a8c1-4a61-b431-d33ec9820279",
        "cursor": {
          "ref": "434b94bf-5793-4e8a-a100-8210a2cfd0a5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "13a755fd-2a00-4a96-8d0a-6ab79b5fe983"
        },
        "item": {
          "id": "13c36f7a-a8c1-4a61-b431-d33ec9820279",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a838b53a-d5ea-4747-a98d-1892951b94a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203d441a-308f-43c2-8a99-b2719013679a",
        "cursor": {
          "ref": "116a999a-7c29-4abb-9d2a-5400030b2472",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a2b29821-115b-44ed-8e2c-ad655fdbef29"
        },
        "item": {
          "id": "203d441a-308f-43c2-8a99-b2719013679a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "34fbad1b-8890-4c73-992f-41534a332187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dca678-d437-43c0-bc84-a7c85a864f0b",
        "cursor": {
          "ref": "0f2c5c05-6f73-49e0-9d47-805f4463cafb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95c0744b-c89b-4aaa-a994-bb48d0da42e1"
        },
        "item": {
          "id": "91dca678-d437-43c0-bc84-a7c85a864f0b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "10bb25fa-8712-4983-88f9-60e4d9392e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5e1b00-dfd3-494a-b3bd-7b1c30e3303e",
        "cursor": {
          "ref": "3e9c2977-ac88-47aa-b567-6fcebb71a2f8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9a890d42-608c-4643-8489-ecb5712ce150"
        },
        "item": {
          "id": "2c5e1b00-dfd3-494a-b3bd-7b1c30e3303e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e6fbff81-51ce-4ac9-bc09-3340f4a7c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea40d6c-acd9-425e-b8d2-6b0cf77f3644",
        "cursor": {
          "ref": "abaa40f7-2fa9-4c74-baf1-32e6e5d9ce22",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "46ec2693-c059-484f-add7-0ff72787650e"
        },
        "item": {
          "id": "8ea40d6c-acd9-425e-b8d2-6b0cf77f3644",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f11bb613-42d2-4f54-81f7-bac58040668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfc2a84-a2ac-402c-9780-3f5981af7e85",
        "cursor": {
          "ref": "e7e2f2ee-adec-41b3-9b2d-21d7ea2842e1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e8cc5a99-ddfe-4dee-9f2d-6ba4223c38c7"
        },
        "item": {
          "id": "edfc2a84-a2ac-402c-9780-3f5981af7e85",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "acf9b6e6-b2da-4909-a6fb-2794b6cc9159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fed9f03-04f8-40fc-adbd-bb092b3cf7a7",
        "cursor": {
          "ref": "ad5e40d8-d5d9-4ad1-ba4d-c50b29c1c211",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6f82a5b3-6b80-4d49-896a-01f3208f1dfa"
        },
        "item": {
          "id": "3fed9f03-04f8-40fc-adbd-bb092b3cf7a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "696282ee-35cf-4873-adc1-1dc0a769d3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f9c6b-407d-4f5b-a98d-302ef3e7e307",
        "cursor": {
          "ref": "ef6f9ce7-56c9-4621-9316-3474f21cffcd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d325063c-8704-449c-b428-fabca3825f72"
        },
        "item": {
          "id": "a64f9c6b-407d-4f5b-a98d-302ef3e7e307",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e1b83622-a13d-4c84-8c1d-522780df02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc9c997-0bad-413d-953c-5d55d3768209",
        "cursor": {
          "ref": "9573f2ee-a658-4ae2-9196-e423763a536a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "61f1a542-1544-4f29-ae69-bab4e2ba3ca9"
        },
        "item": {
          "id": "efc9c997-0bad-413d-953c-5d55d3768209",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cf008b07-d2cf-4074-b33c-e3e7bb6bab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dace161-ef8a-4b0a-9bd4-a44edf668b54",
        "cursor": {
          "ref": "f9491a80-35fb-4dbf-8ded-350fe43e78d4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d4a8e4f-94ae-4539-96ef-f26d752d2c8a"
        },
        "item": {
          "id": "9dace161-ef8a-4b0a-9bd4-a44edf668b54",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54ca12d4-667d-448c-b404-efe8c57a1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9a51e2-497f-43de-8f9b-cae9c64a2350",
        "cursor": {
          "ref": "29e9e312-136c-4784-999c-3c7d96cb3824",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3d54fc6-9faa-4efe-8a55-a3af9699846f"
        },
        "item": {
          "id": "ec9a51e2-497f-43de-8f9b-cae9c64a2350",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "56116e81-85d0-475b-88eb-9bb2648de2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdb564c-2ffb-4def-8497-3698efefe495",
        "cursor": {
          "ref": "7cd46a13-5349-494e-a04b-b62cfae2c47d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a269505-eed6-4cf6-8329-d86c580929dc"
        },
        "item": {
          "id": "6cdb564c-2ffb-4def-8497-3698efefe495",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "01e5fd9d-d488-4618-8001-d9178cb62448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f8bab7-7171-46e5-80bc-6e52918bb597",
        "cursor": {
          "ref": "1e2a1a2f-ee6a-4c1b-8a87-f53b976a6625",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e4489d3-81b9-4bfe-8ce2-ab2c91759e37"
        },
        "item": {
          "id": "49f8bab7-7171-46e5-80bc-6e52918bb597",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5fffef30-267c-49b1-8f52-6a4a55d598b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f1f25c-a46d-4528-9d4e-a7100ec81d0b",
        "cursor": {
          "ref": "879994a1-f983-4911-ab53-ebe3d0dd90f2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f7a2e34a-130c-46bf-b93e-e871f2e05b4a"
        },
        "item": {
          "id": "21f1f25c-a46d-4528-9d4e-a7100ec81d0b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "031989e0-848a-4535-9597-0d2a7fe52e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e2266-c7e6-4aab-8023-dfb8cccfe53c",
        "cursor": {
          "ref": "9235bb84-9a73-4e1b-a73b-2c43fe29e3bc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "46b86b55-5444-4358-914f-9e4cf6c540eb"
        },
        "item": {
          "id": "367e2266-c7e6-4aab-8023-dfb8cccfe53c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "361121b1-b854-4143-9dfa-ffc1fde7a0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f810fbf-2494-439e-8b54-d31601f412c1",
        "cursor": {
          "ref": "83daae36-4f5f-4625-9da4-c47e2435dc03",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "909446b4-464a-4287-8828-2c7a1fbfa289"
        },
        "item": {
          "id": "2f810fbf-2494-439e-8b54-d31601f412c1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c82988bd-a498-4d93-a7e4-51d91871d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8424ef8-f732-432d-bbc9-51e3864a3ce5",
        "cursor": {
          "ref": "09f44087-5ca4-4462-b3a8-a186e73b9d7e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8ce75883-e5ab-43e8-8acf-c803a5e0db41"
        },
        "item": {
          "id": "f8424ef8-f732-432d-bbc9-51e3864a3ce5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48885b74-c66a-422c-8b60-32db0dd06692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34ed978-191f-4469-a5a8-68b7d21f715f",
        "cursor": {
          "ref": "3fc96972-ccbd-4276-8bef-f01b5972c033",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3fe6a215-9269-42a2-9f78-b6301f5fc74e"
        },
        "item": {
          "id": "c34ed978-191f-4469-a5a8-68b7d21f715f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "94be71c2-c683-4a33-83ce-a200c6c330e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcebd054-4a23-4d3e-9fee-ddb300298566",
        "cursor": {
          "ref": "0e4195fb-9432-4c0b-8537-90ed01fb09bd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "207b752b-8b4d-4f62-a304-b200dcceae35"
        },
        "item": {
          "id": "bcebd054-4a23-4d3e-9fee-ddb300298566",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "12ae0644-959a-4bba-b153-e8530975ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dc61fc-eff2-42d3-9ac0-98bd3aa49980",
        "cursor": {
          "ref": "e6999810-666f-4ceb-b41e-e4b502f55fe5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9a6d5c3c-6bac-4ce8-8ec6-a57cfefd6ab4"
        },
        "item": {
          "id": "c5dc61fc-eff2-42d3-9ac0-98bd3aa49980",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5a589675-c961-41fb-98ee-f22454ca2a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8744bbab-916a-4d20-a646-289a1a00a3b0",
        "cursor": {
          "ref": "dc2f260e-c322-4427-acf4-6380088e2957",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f7d273c3-595e-48cc-b0bb-5559ec54387f"
        },
        "item": {
          "id": "8744bbab-916a-4d20-a646-289a1a00a3b0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dbb25768-08ea-4fe4-b86b-1eba6c40ccb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64b4a56-a875-4fc6-83e3-ba799cfecaef",
        "cursor": {
          "ref": "8733f037-8467-44e6-9f7c-2638afcc7dc4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "471d371f-2fa2-410c-941c-81c1252d7022"
        },
        "item": {
          "id": "f64b4a56-a875-4fc6-83e3-ba799cfecaef",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e2c8878e-b24c-423d-b7cf-f7c6f1b89338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b6082c-5137-4253-9f64-9c4b4958700f",
        "cursor": {
          "ref": "d1601759-7af6-446f-af9d-cadec4797722",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7495069c-9e00-401d-9c4e-f05a77cc43e3"
        },
        "item": {
          "id": "50b6082c-5137-4253-9f64-9c4b4958700f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "deaf3362-1351-455d-abca-fbdacf58bc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7bbfa1-cdfa-4451-be3f-60895bb6b88c",
        "cursor": {
          "ref": "4db979bf-4bf2-4978-baa5-e850693defda",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3d49fe31-449a-4264-914f-42cb2e45185b"
        },
        "item": {
          "id": "fb7bbfa1-cdfa-4451-be3f-60895bb6b88c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "60b53344-5dd6-4d89-a8f2-f9f6c66f8a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a497e91-22fe-4a2a-9243-6ae2a09f8741",
        "cursor": {
          "ref": "ce56bbf8-0f39-4803-ab21-e85c9985a709",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8bd6af4c-da64-4b61-9870-f359226d2a90"
        },
        "item": {
          "id": "4a497e91-22fe-4a2a-9243-6ae2a09f8741",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "32a40c46-4b46-425b-8e12-0cd66143070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84825a86-767b-4ad9-bb9a-d1fe40104613",
        "cursor": {
          "ref": "8a575c49-f954-4930-9b94-433fed9e83c8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e89ccd03-2ee4-466a-86b7-d0d3bdeb29b2"
        },
        "item": {
          "id": "84825a86-767b-4ad9-bb9a-d1fe40104613",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8ecfb25-c5e6-473a-9116-9cbb3b584ef5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8128f-fcd8-4aac-8414-e546b720c350",
        "cursor": {
          "ref": "2abc2dbd-d005-49d5-b1f3-05baa1838387",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8f5d5b42-47b6-420f-b124-95f282b5d0b2"
        },
        "item": {
          "id": "6fb8128f-fcd8-4aac-8414-e546b720c350",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "27082c66-4451-4b3b-9540-86fd3cb6ce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "207668bc-35ca-4a72-a5c2-8d4ebae4cc8e",
        "cursor": {
          "ref": "9f368c71-dfd2-496f-a397-bd9d91daf4db",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bebc8370-dbbd-4a7b-a5aa-cbe8bec3a909"
        },
        "item": {
          "id": "207668bc-35ca-4a72-a5c2-8d4ebae4cc8e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c319388-1d83-46f9-91d7-99da14acc3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ef710c09-b499-42f9-bd53-9df13f6179c1",
        "cursor": {
          "ref": "58cfcba6-18b4-4e3d-97b2-bf3f4ccd3d5b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b0ee54c8-c8b4-4ba5-8514-7a86b5ce7adc"
        },
        "item": {
          "id": "ef710c09-b499-42f9-bd53-9df13f6179c1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f9554dfc-07e9-40e9-a984-aa773ecad87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0a4f65b9-a7ad-4e7c-ab24-e3e58c3950a3",
        "cursor": {
          "ref": "7fcfec10-242e-418f-8e3b-ccf2964ed0df",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cee57108-2890-4d6d-8221-295f05c6ac77"
        },
        "item": {
          "id": "0a4f65b9-a7ad-4e7c-ab24-e3e58c3950a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2dbdafcd-cecf-489b-9546-b2f9f631a1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "01600305-9d89-4a4f-b5c9-9dc3a23ee504",
        "cursor": {
          "ref": "34ed8bfb-60f7-4e34-95d6-b1ec2648138f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e08f280d-89d1-4b35-af1d-926573b4335d"
        },
        "item": {
          "id": "01600305-9d89-4a4f-b5c9-9dc3a23ee504",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7f032c14-fa56-4249-84b1-89675e2f9f2a",
          "status": "Created",
          "code": 201,
          "responseTime": 17738,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "44439de3-659e-4397-8fe8-d12d4b34d111",
        "cursor": {
          "ref": "28f1bd9d-c5d1-4ed3-ae6c-520679f69466",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f854b89f-c5f6-422d-88c6-e0161bfa404a"
        },
        "item": {
          "id": "44439de3-659e-4397-8fe8-d12d4b34d111",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8a0c9d8e-74a2-4bd7-889d-6700b897f7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3eec2542-90c4-4cb4-9f56-f24caa8b1f1b",
        "cursor": {
          "ref": "244110f1-f28f-418a-9e18-b692a8081607",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "494f1fb8-a8d3-4dc6-833e-cd0b195d47a1"
        },
        "item": {
          "id": "3eec2542-90c4-4cb4-9f56-f24caa8b1f1b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7a61f3d9-41d8-425f-a400-707d7303328d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b14dd1d3-4403-4d35-9234-c3c1f2535925",
        "cursor": {
          "ref": "f439fbfe-1fd4-4135-a925-a46610304f4e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "47420b32-e7e3-4a0e-9e2f-cfee3efd1a47"
        },
        "item": {
          "id": "b14dd1d3-4403-4d35-9234-c3c1f2535925",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2615c90c-03ba-42a2-8e96-c6d276f6815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb3ccb6-7e59-4a9d-8a32-6d4be4a2a48d",
        "cursor": {
          "ref": "16517196-6e99-4529-b6a5-6df5290224b4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c4549f74-4a51-42b1-92c2-565b2a3dc37b"
        },
        "item": {
          "id": "edb3ccb6-7e59-4a9d-8a32-6d4be4a2a48d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1488cf21-acff-4e34-88fa-dff7dedcaa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9676a89a-8e68-4f80-9f87-471970651d9e",
        "cursor": {
          "ref": "6b5d381d-16d4-4c32-a400-a8369260ec8d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c61600cd-de78-490f-b186-4c7a732cf88a"
        },
        "item": {
          "id": "9676a89a-8e68-4f80-9f87-471970651d9e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b512e9ec-85df-49d9-aaea-63cd5ac0d350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1408c86-97b3-4149-bc8a-472eed04b738",
        "cursor": {
          "ref": "08ad2044-2436-4fba-b7b1-44cb0330b5b2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "859c98e7-bff9-4f98-bf0b-230f569820fa"
        },
        "item": {
          "id": "d1408c86-97b3-4149-bc8a-472eed04b738",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c94725ea-5485-4b12-9e55-f8c9f1b217d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21de2493-6391-4061-ad04-36c0c5b56cba",
        "cursor": {
          "ref": "16353bba-4ef6-4c52-ac13-2e8126004c0d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4595ab26-cf35-4e60-8f01-02953c1dec52"
        },
        "item": {
          "id": "21de2493-6391-4061-ad04-36c0c5b56cba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "956ae44c-d050-44cb-9e12-00b3f914f03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c7a435-34d7-4c91-8f7e-3f7aa14bb6a6",
        "cursor": {
          "ref": "193709ee-3895-46a5-822c-39ecd70653fe",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cb71bf71-4d80-461f-9046-9ed1980c7fae"
        },
        "item": {
          "id": "c3c7a435-34d7-4c91-8f7e-3f7aa14bb6a6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "744ed993-9745-41f4-a666-34672f554998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8df0eca-243e-4913-85d6-7ae7507209ae",
        "cursor": {
          "ref": "7c7ee600-c819-4039-a59e-93bd61fc86b4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "23eab6d8-80fe-4189-81fc-98be6abaa0ee"
        },
        "item": {
          "id": "a8df0eca-243e-4913-85d6-7ae7507209ae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf7b564b-a81b-4b6e-8b33-d4243e1ddbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca84322f-735d-4a41-bc15-6ed5816958ce",
        "cursor": {
          "ref": "bd9482fa-72e2-4a7e-a947-24e210bedaa3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5526ea79-5d28-4d5f-a13b-837df3ab9d89"
        },
        "item": {
          "id": "ca84322f-735d-4a41-bc15-6ed5816958ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c1d75a2-e054-4725-8db1-358cfe931a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab83ae54-91d7-4226-b126-fc5fba0bdf0e",
        "cursor": {
          "ref": "e781574c-5ec1-49cd-8a5b-b71391698d62",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e3cecb1e-ca3f-4129-b180-8c2eaf8e6fb2"
        },
        "item": {
          "id": "ab83ae54-91d7-4226-b126-fc5fba0bdf0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c05c1fe4-3cb1-4d2e-8312-e66107b873d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077fabda-ae19-48e5-a14a-009d33125c74",
        "cursor": {
          "ref": "016ef11e-b348-4ca0-a158-5c9c76bb389e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "85179771-eed9-404f-b036-e8c1a6c53ed2"
        },
        "item": {
          "id": "077fabda-ae19-48e5-a14a-009d33125c74",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b708223-c0dd-44ca-a8bf-780690b6689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f923a48-fdf3-4ff3-9b28-9e34f06e4a8b",
        "cursor": {
          "ref": "f592ff37-f980-45f2-9361-ac16d6720c9f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08d820d6-99eb-421a-b61e-d456b9c432c8"
        },
        "item": {
          "id": "4f923a48-fdf3-4ff3-9b28-9e34f06e4a8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "43d7b57d-fdc4-46f1-a4db-39f2460ec6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eae845e-267b-4fb8-aee5-8ffea06ee45a",
        "cursor": {
          "ref": "0c897616-8d9d-43c6-a573-3854cff9b321",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "89818609-8a24-4ce6-82bc-e824e193b72f"
        },
        "item": {
          "id": "1eae845e-267b-4fb8-aee5-8ffea06ee45a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "519a08b2-1531-465b-8147-c90190738b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b40d1-83c9-40c9-b781-75a5b843fc41",
        "cursor": {
          "ref": "9363aded-958d-49c3-a4ce-d53f0fbbe835",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9b85dda6-043a-42e2-8602-792865f1d888"
        },
        "item": {
          "id": "791b40d1-83c9-40c9-b781-75a5b843fc41",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64f77fda-bd76-4b74-ae1b-c9e65cd2f7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d07dc1-bf78-453b-b85f-ba1cebfb8786",
        "cursor": {
          "ref": "c720be8d-d9e1-488b-80cd-bb01ac9d027a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aa0f99c9-294d-444e-a8da-0fd99d3e8b85"
        },
        "item": {
          "id": "c4d07dc1-bf78-453b-b85f-ba1cebfb8786",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32aa4d8f-8b43-41e4-9cd0-236320cb68c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abe4f12-3af9-4103-a622-bc89fef9c3d1",
        "cursor": {
          "ref": "f9cf424d-54df-41a6-83d4-b6660e7240b9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "30b652f1-a068-4a01-8f29-138cc06813f5"
        },
        "item": {
          "id": "0abe4f12-3af9-4103-a622-bc89fef9c3d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "23f7e614-c438-4947-840b-499671010ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22be9bfc-aa09-4cee-aea2-8f908eab2c96",
        "cursor": {
          "ref": "a9bb4875-e11c-4b2c-bda2-74690b8e4373",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dcb64ba4-7a6a-43a0-b5d0-a01eef41b501"
        },
        "item": {
          "id": "22be9bfc-aa09-4cee-aea2-8f908eab2c96",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "246afee2-e42b-44c2-b2c6-41fd4b297167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d7208-2642-43a0-9cfb-60c963e1eb17",
        "cursor": {
          "ref": "224e98a9-7e9b-41d4-b00d-28d5b3050217",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5cf572ed-498d-466c-91ec-d0d186e90329"
        },
        "item": {
          "id": "ef4d7208-2642-43a0-9cfb-60c963e1eb17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03431c3d-7519-43d2-8755-348212fc9a85",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a6656d73-4987-4b6d-8b0b-d6019c22a019",
        "cursor": {
          "ref": "920575a0-afa1-4f1d-9191-2b62a69d2fff",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5e900aef-4f56-49cb-9207-92342988c249"
        },
        "item": {
          "id": "a6656d73-4987-4b6d-8b0b-d6019c22a019",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4f24adc-6326-485c-a5e7-8cdb7142d2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523c5627-719a-4831-a773-2ba544c1cc19",
        "cursor": {
          "ref": "4a92689a-0030-4714-821e-f1abd9ec4830",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cd040775-1411-40ea-a02d-a397d46b1eec"
        },
        "item": {
          "id": "523c5627-719a-4831-a773-2ba544c1cc19",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1fc1d57a-c142-4270-83b8-b002735cc1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a58e46e-e70e-43f0-9b43-9700f707c316",
        "cursor": {
          "ref": "99f52e6b-b7d2-43e1-81ec-ec44574a9794",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d097e8f8-eec9-4f21-97c1-02e9f9d2c2d0"
        },
        "item": {
          "id": "7a58e46e-e70e-43f0-9b43-9700f707c316",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1089078-3403-40ec-b9f7-35f0ff218097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d564efb-90ce-45c5-a57f-fe03d88701cd",
        "cursor": {
          "ref": "585053cc-5e13-4d8a-bdcd-6b68a0342d86",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f6440430-9b11-4128-b5ef-33572c233978"
        },
        "item": {
          "id": "9d564efb-90ce-45c5-a57f-fe03d88701cd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6fe6b18-1bdb-46d7-8a1e-746fbbb457ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964441c8-6cd0-43ac-8f9a-83d45856c568",
        "cursor": {
          "ref": "8e55a682-d2b3-443f-821b-cef4c2a2987c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e7568ab9-ee8c-4385-9e4f-8c65e1c315de"
        },
        "item": {
          "id": "964441c8-6cd0-43ac-8f9a-83d45856c568",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c013d80-c812-4f4b-9667-b9ec750be580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cabb244-f5bc-4454-91a1-9d49045c1525",
        "cursor": {
          "ref": "2e94f932-33e3-497f-9834-4238a31b987d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e99c15b9-54e8-4376-894b-b21e97d2daba"
        },
        "item": {
          "id": "2cabb244-f5bc-4454-91a1-9d49045c1525",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "694e6cb0-34cc-4419-a048-17c7ec026fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6921cd0-c6e1-4382-b53d-1216e52064f7",
        "cursor": {
          "ref": "a3fa22d0-ab63-4cfb-8d48-05c6567bb9af",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2c832896-0cef-4834-b288-dda4bc746ed8"
        },
        "item": {
          "id": "d6921cd0-c6e1-4382-b53d-1216e52064f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b132e637-2205-40f2-9e6e-ccce86adda37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c080b23-37cf-45c5-be61-06d54106bf53",
        "cursor": {
          "ref": "907df76e-9af4-4ad1-88cc-42d6069fe9d2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76a201b9-f2e2-4c62-a829-e15ff684fa30"
        },
        "item": {
          "id": "0c080b23-37cf-45c5-be61-06d54106bf53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6340851c-b3a9-496c-b7f7-240ed55f65e3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "750bd13b-538b-451b-90c8-3c61da61c684",
        "cursor": {
          "ref": "0d5833f6-89d9-4a9b-bc67-77c706dd7d92",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "036b9513-2082-4bd2-93b1-42be2649cf9f"
        },
        "item": {
          "id": "750bd13b-538b-451b-90c8-3c61da61c684",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4cb3ef28-c4cf-4540-a134-6c2ccc99e6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3c0e27-3f65-4011-82f0-df2bf9b6ea0c",
        "cursor": {
          "ref": "4d9dce98-4cd0-4c7f-957f-9b8957c0978f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7f7665f2-a76d-46c5-b4ee-c4de50e82693"
        },
        "item": {
          "id": "9e3c0e27-3f65-4011-82f0-df2bf9b6ea0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1d86d0f5-aca7-488e-a19e-48c38df8787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d93d5ca-c38f-42e4-aaed-3cb5c6aefb36",
        "cursor": {
          "ref": "f8bbed8d-bb15-4b70-8f8a-9b2e3884d7df",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9ece2003-0dbc-4233-95e9-2734f27f9610"
        },
        "item": {
          "id": "0d93d5ca-c38f-42e4-aaed-3cb5c6aefb36",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "44edfe35-7e63-4a83-9d73-9d858c88f72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d4240-9a3a-4f54-adb9-dadc981505d0",
        "cursor": {
          "ref": "a4afc2d6-38af-472a-b7ae-58fd21b43820",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4db867c6-9a18-400e-af9b-23ae666743ee"
        },
        "item": {
          "id": "707d4240-9a3a-4f54-adb9-dadc981505d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db875357-c5c4-428d-b0b7-8a62a589e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318c61bb-d1b2-4f72-89b4-c0a01d9ffdb3",
        "cursor": {
          "ref": "e7293d39-bb19-4b8b-a258-f613a935c660",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9389fdeb-25dc-4cf1-bca3-a8e5bf076008"
        },
        "item": {
          "id": "318c61bb-d1b2-4f72-89b4-c0a01d9ffdb3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "274668c4-305e-4067-a4f9-b411d36985f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0027eea-2799-49eb-9799-6f69ac63e6c8",
        "cursor": {
          "ref": "ccd8b686-4a81-43d8-b158-fecdb94008f1",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bd0e6537-a2f7-4f8a-91d5-e61a996bbe11"
        },
        "item": {
          "id": "a0027eea-2799-49eb-9799-6f69ac63e6c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8ec4a5b-b99b-495a-b9d6-22faf463f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fea8e8-98eb-4602-806f-e0a40af4125d",
        "cursor": {
          "ref": "383b8d94-8e22-4b1b-be7b-e66dd14f3540",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e6bc6693-aec8-4f44-b919-51b16109a41a"
        },
        "item": {
          "id": "c2fea8e8-98eb-4602-806f-e0a40af4125d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "90dddaa0-26c6-4d23-8b23-fa805056b34b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "795e580b-d4b6-4243-b200-10f43735ca5b",
        "cursor": {
          "ref": "8e1d5d3f-cfdf-435e-ad3e-56747cb804c3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d885ae22-d7da-4aba-b39f-978c87060057"
        },
        "item": {
          "id": "795e580b-d4b6-4243-b200-10f43735ca5b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ee67e78f-ecf7-43ac-8817-bf56f00c3ca1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1876defb-bd55-426f-8df9-3fd3f403ea41",
        "cursor": {
          "ref": "f86c0287-7944-4cdc-8f88-f0051a9ec1ab",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c1e25958-838e-49c5-8c45-5e220b902d9e"
        },
        "item": {
          "id": "1876defb-bd55-426f-8df9-3fd3f403ea41",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "51887f5c-a880-4188-8b6f-27dfed6bdcbb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8ff0f7f1-a5db-4e4c-8cf0-43bbe5368921",
        "cursor": {
          "ref": "4175b532-1e61-4391-ac85-60a543cfb8ac",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "38568037-f862-4513-8bbd-2e198efd2d2d"
        },
        "item": {
          "id": "8ff0f7f1-a5db-4e4c-8cf0-43bbe5368921",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "05f9085d-0902-409b-bc80-daedf64a4b58",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a4957a2e-7730-418f-9db9-ac38ff313c9c",
        "cursor": {
          "ref": "f217a13b-1ef4-4fba-aea3-43786ba712d6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4e6145e-a87d-4893-80ee-477785f74b63"
        },
        "item": {
          "id": "a4957a2e-7730-418f-9db9-ac38ff313c9c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4e8893f4-9b87-419a-b766-1c5a9162db82",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "79f3d7d2-f85b-4c8c-b286-eff373a753d8",
        "cursor": {
          "ref": "3a48e78d-0a40-46f7-9150-f8ae436e2866",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "439f7a7f-6ba5-4d3b-8741-cb12526a35e0"
        },
        "item": {
          "id": "79f3d7d2-f85b-4c8c-b286-eff373a753d8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b4ea4776-a346-48d5-a6cc-604e9c042e1e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e9c05e0d-8c2c-4ac0-8b57-9b19ff2b78c3",
        "cursor": {
          "ref": "fced8510-1d06-43f3-aa02-b097ef34d95b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23b5d41c-fe9d-4d26-af1a-9798de81acff"
        },
        "item": {
          "id": "e9c05e0d-8c2c-4ac0-8b57-9b19ff2b78c3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "929c3744-c27b-4323-ad4c-cc5670555e4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c084487e-9854-4ab6-99d2-f2958c12f696",
        "cursor": {
          "ref": "939bcd98-7631-4883-ab90-d6d2dac306d4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "85f08db7-d3cf-47ab-a3c5-c7799f1ffdcf"
        },
        "item": {
          "id": "c084487e-9854-4ab6-99d2-f2958c12f696",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b45162b7-ee5e-4400-91cb-1ef8a66285fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789f51b8-3a15-4640-b99a-293efb30cfc3",
        "cursor": {
          "ref": "38cc71fc-4507-4eec-80f4-fdcb2a7193d2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "810e1614-182d-4773-83c7-7e6ddc5ca32c"
        },
        "item": {
          "id": "789f51b8-3a15-4640-b99a-293efb30cfc3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a54ed54b-b07b-4171-ad9c-5cc428f7f776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10064002-0624-4e03-8e3b-b78fcc217f90",
        "cursor": {
          "ref": "f2e1803e-ad16-4a31-803f-ab8e2a55efdf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6842f209-663c-4c7c-b148-3ff9195cc987"
        },
        "item": {
          "id": "10064002-0624-4e03-8e3b-b78fcc217f90",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a0c98673-c214-4a3d-a43a-16c6cb0ebbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda503f0-eefc-4ce3-8e29-fb25e80b24ac",
        "cursor": {
          "ref": "9add4db6-c753-4159-b9c9-1b77a2e889d7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "89e74595-4723-4778-b074-2c9e3461b672"
        },
        "item": {
          "id": "dda503f0-eefc-4ce3-8e29-fb25e80b24ac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c40447da-2a2f-4c11-892b-e757e278c898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528ff0b-2fd4-4dfb-9a7e-6d9a01142ba0",
        "cursor": {
          "ref": "3727988e-01f4-4d17-8ed5-cb7d00bbe113",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bab18957-27a1-495f-83ce-09310b19bfd8"
        },
        "item": {
          "id": "8528ff0b-2fd4-4dfb-9a7e-6d9a01142ba0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3cfefbc-71af-4ba4-96b1-6b8024198736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76095103-1238-4e0a-8ecf-cc5f137bc5f8",
        "cursor": {
          "ref": "69b4bfc5-8311-4f29-8b42-28a9edfd459f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "29a6eebc-796a-484b-9847-1ef039c4131c"
        },
        "item": {
          "id": "76095103-1238-4e0a-8ecf-cc5f137bc5f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7530c5f9-3e93-4aff-ae1b-0cd0bfdc76a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7321f9e9-ee4a-4392-ab0e-2746755e821b",
        "cursor": {
          "ref": "93757d9a-8e36-4510-b9ad-83f67f608390",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d60231a2-a887-427b-a57e-d3549671026e"
        },
        "item": {
          "id": "7321f9e9-ee4a-4392-ab0e-2746755e821b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dacd2558-af34-4ae2-8333-cd3dd57f8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731981d4-4eda-4d22-90bc-78ca3dd58276",
        "cursor": {
          "ref": "6855d7b8-5782-4be0-9671-e6201d8d701a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0a35c2da-4136-4984-934e-190fa607f048"
        },
        "item": {
          "id": "731981d4-4eda-4d22-90bc-78ca3dd58276",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "62cbfc82-1587-411c-bbb3-f8bf4673c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f466c8c7-84b0-4ad7-9297-b00a40c51b61",
        "cursor": {
          "ref": "99c87347-7158-4e4b-9f56-6db639fd0f80",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e340ae0b-1481-46ab-80fc-c05ea812d33d"
        },
        "item": {
          "id": "f466c8c7-84b0-4ad7-9297-b00a40c51b61",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "64384e34-9022-4819-9569-395cda255500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae65bfe9-5c93-434d-abf6-38da37e3092e",
        "cursor": {
          "ref": "1cbff0ab-1d58-495a-b8f1-6dbad9bbd95b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a13f78dd-3d5e-4ec9-ae02-c17cc16ca318"
        },
        "item": {
          "id": "ae65bfe9-5c93-434d-abf6-38da37e3092e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "930c373b-9777-4eca-a27d-8bc31a68eceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a76cebe-46d8-40df-b38d-ba8d3da7a887",
        "cursor": {
          "ref": "0dcec907-0d24-4dc9-93dd-01f5793b1175",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e2ca4d43-05e5-4526-8e50-1525e4afdce1"
        },
        "item": {
          "id": "3a76cebe-46d8-40df-b38d-ba8d3da7a887",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "05d62a9e-2f41-4ad6-b997-9badaba133c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eedc74-206c-43ca-a67e-1997994fe619",
        "cursor": {
          "ref": "a0aac7cb-760f-49e2-bb5f-9640a8a1b0e3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "673fadcc-c9f7-418c-9b5f-f5bd47329ff8"
        },
        "item": {
          "id": "a7eedc74-206c-43ca-a67e-1997994fe619",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f79cb3e7-f51c-49f6-980b-7f4b486a7c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdadf81-1e4b-47ea-a465-97b704a858b5",
        "cursor": {
          "ref": "3746136c-8164-4268-8c62-7b15702df696",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a40d04c2-cd2b-400b-a746-2559b0d8b819"
        },
        "item": {
          "id": "bfdadf81-1e4b-47ea-a465-97b704a858b5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f8f2815-17a9-49b1-9bea-d0374eff7b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039328ca-6ade-4bf2-bca4-53505c918585",
        "cursor": {
          "ref": "2b467d2c-3a00-48bf-a184-07d6d0652ad2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9a1437cf-0323-4b75-af8e-d85782092cf5"
        },
        "item": {
          "id": "039328ca-6ade-4bf2-bca4-53505c918585",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f1a97e6b-19c8-4341-8be0-b3704e9f3e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e83b3b-5deb-4bc9-abf8-404e241b4308",
        "cursor": {
          "ref": "0d5f3566-fa50-4c75-910f-e1bb6558682d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "70bad450-a878-4c38-a234-5eb5b2a54a33"
        },
        "item": {
          "id": "d3e83b3b-5deb-4bc9-abf8-404e241b4308",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "51fb861d-0f3c-4bf5-aab8-df623d6c5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888985e3-e650-4b5d-bcbc-c0e35b0d3f3a",
        "cursor": {
          "ref": "d966eef5-61b8-422e-9989-6622b220d4f2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "695e3b9d-c4c8-4faf-a723-9c5a3100e279"
        },
        "item": {
          "id": "888985e3-e650-4b5d-bcbc-c0e35b0d3f3a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4f3acc65-57fe-4277-b7ff-e617bafc30bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74b1921-0a69-4a23-a5a5-50a440c0d590",
        "cursor": {
          "ref": "3df65442-d7a1-4150-a025-1b3f204aa031",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cbab0914-4bc8-45a6-afcb-c36316aba305"
        },
        "item": {
          "id": "c74b1921-0a69-4a23-a5a5-50a440c0d590",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6769597b-1c97-43ad-b6ad-9d22695a8dd6",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "8d7de797-043e-4601-b5d5-4c8be3fc5c97",
        "cursor": {
          "ref": "a8f898ab-30ba-4194-8faa-3bac1232887d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "050375cd-1c46-47ba-bffa-132536633693"
        },
        "item": {
          "id": "8d7de797-043e-4601-b5d5-4c8be3fc5c97",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b559df7-6c16-4dee-b1a4-3875934e6447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e96e681-405a-4dda-b76d-38f0a2d6e7c7",
        "cursor": {
          "ref": "0b65d47e-6d4c-44f3-985b-316a4655a476",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "955e3726-af32-4039-8f0b-7278a2c77eaa"
        },
        "item": {
          "id": "5e96e681-405a-4dda-b76d-38f0a2d6e7c7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d9e2bae-9759-4608-8207-0aaba2bd5eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56777e5c-dc79-4bf4-aed4-ed6091605678",
        "cursor": {
          "ref": "419131fd-bbd3-4ff3-88a0-34bb9a413770",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "507b05ae-ec13-49eb-873d-1fd8d9559e4c"
        },
        "item": {
          "id": "56777e5c-dc79-4bf4-aed4-ed6091605678",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "82f4ba9e-3e3a-452d-9904-e41acbd14a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd85fbbb-658d-4866-bae7-b0d72d03b487",
        "cursor": {
          "ref": "bc832390-78e5-4c49-ac6b-45fb1131d822",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "30eaa873-bdab-4998-a4e4-0ce3d3fee629"
        },
        "item": {
          "id": "fd85fbbb-658d-4866-bae7-b0d72d03b487",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6578604-5afc-41ad-b46d-85793f710840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37571094-b31a-4a9e-941c-415363bd0790",
        "cursor": {
          "ref": "6ac25a60-1990-4c1d-ab48-52912c97d3c1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b2e7f33-7194-4884-9cd9-3bab56d4ac8e"
        },
        "item": {
          "id": "37571094-b31a-4a9e-941c-415363bd0790",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ff4efe58-c2d6-4632-9eee-d42d14745a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e458f21-1a3b-489a-a4cd-65d309b48430",
        "cursor": {
          "ref": "46a6428b-c816-4739-bcd1-9e654b2d6e1d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e150e79d-b97b-472b-8408-727573200478"
        },
        "item": {
          "id": "3e458f21-1a3b-489a-a4cd-65d309b48430",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0019255f-330d-4c68-9d31-b5b32e39a014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15e291b-2421-4f1e-8aab-5a33b0c8066e",
        "cursor": {
          "ref": "02d489f7-4e75-4a31-8c08-c2c17f361693",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2f82b19e-cabd-4e26-90b9-9c14e73004ee"
        },
        "item": {
          "id": "e15e291b-2421-4f1e-8aab-5a33b0c8066e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8208cbd8-3440-4045-bac3-a9481b1cc226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c336e28-3dc4-4cc8-9066-c3d5a30d9d9b",
        "cursor": {
          "ref": "1eea3130-5a17-4e9f-9737-fb9dd7f2d9df",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e0f9201-a4e4-4be7-a149-ccc7b8646e05"
        },
        "item": {
          "id": "1c336e28-3dc4-4cc8-9066-c3d5a30d9d9b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0ef017e6-b237-4de0-b052-e55db0c13764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d198080a-edc3-4835-9e30-cbee07fb7fe7",
        "cursor": {
          "ref": "37a874a0-50a1-428e-b19a-2bad2e13d6c1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "20c3c7d1-4d87-4a5a-89a2-2880b6caae90"
        },
        "item": {
          "id": "d198080a-edc3-4835-9e30-cbee07fb7fe7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5bfceec7-b07f-497f-8f9e-1a851658fe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee977a7c-b483-4e5c-80e5-b084105f9cdf",
        "cursor": {
          "ref": "b0608b45-1e16-400c-aae7-e35c9ec8d789",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "90a5122e-0f47-4213-9be2-f51bed7fff29"
        },
        "item": {
          "id": "ee977a7c-b483-4e5c-80e5-b084105f9cdf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4248020f-97f7-42c9-a235-796d3630bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e37a1-0ca2-4d55-830d-92428d2e1b6b",
        "cursor": {
          "ref": "90b8bdce-7c50-4e0b-83b0-95d3a7a0a430",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb9b0e6d-8873-4f64-a476-d88ecd569eaf"
        },
        "item": {
          "id": "f99e37a1-0ca2-4d55-830d-92428d2e1b6b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "abb7c957-f72c-4f8e-ba93-2e22173b77bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac8efc6-f0f0-48f4-a168-9f563944b673",
        "cursor": {
          "ref": "f74b97ee-134c-4a0c-87e0-06623b192ad2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7c4397ea-1cc9-4f24-95f4-96cc662367c7"
        },
        "item": {
          "id": "bac8efc6-f0f0-48f4-a168-9f563944b673",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4754294d-05bb-4ca9-9474-995df8a8e735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28287757-22af-4358-814d-f269abc44a2f",
        "cursor": {
          "ref": "361b8a37-1b3e-4e44-b89c-52a10c6475f5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ceddda64-caea-4772-b648-0eda3cf497d9"
        },
        "item": {
          "id": "28287757-22af-4358-814d-f269abc44a2f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c861bccd-2277-4aa5-a149-dff255709807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef577a-fd3b-407b-8bd4-24b572e14e1c",
        "cursor": {
          "ref": "b4ac7ae5-bcbc-487a-8f88-78f4970bfbb8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "16a607bf-e181-4cb4-9798-4bd87bdf7bbf"
        },
        "item": {
          "id": "75ef577a-fd3b-407b-8bd4-24b572e14e1c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a13e796b-0aef-4380-b85e-70f1aab16a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34708fe3-dbca-42f8-8e16-579ce4003f6a",
        "cursor": {
          "ref": "0a314ae9-f6ea-4345-8d2d-f1ae0aee1c45",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c7edbda9-47af-4ad9-9fb8-30cfdd8bc01e"
        },
        "item": {
          "id": "34708fe3-dbca-42f8-8e16-579ce4003f6a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ba33588-35ef-45b3-9e21-91aad6021ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35641bbb-1ae9-4ab5-a771-dcfe11605961",
        "cursor": {
          "ref": "f90d90ad-e76b-4450-a42e-7c2eec19b540",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "57d1647c-5fb4-4468-b9fa-693b246ba193"
        },
        "item": {
          "id": "35641bbb-1ae9-4ab5-a771-dcfe11605961",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3932fb4-abe8-4dce-ae85-d8c4aba8ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5895b6f-2336-48c4-b78f-ba2d07761f04",
        "cursor": {
          "ref": "dc7b022c-62f6-4469-afcf-3350f46efa88",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "81aac987-bc1f-4528-9729-fb3b3d236ad9"
        },
        "item": {
          "id": "b5895b6f-2336-48c4-b78f-ba2d07761f04",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da118232-b532-4d82-9827-902b8b0441b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa72489-3476-4047-80be-8176e1fc5cee",
        "cursor": {
          "ref": "520ce287-2b03-40a2-b0ad-9a15ca061fba",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "97c448cd-eef5-4ff0-b26c-c75d79fbce8f"
        },
        "item": {
          "id": "0fa72489-3476-4047-80be-8176e1fc5cee",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b00c9289-2cfb-4bbb-b97e-3cbd9dab64ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb5778f-9c7b-4845-971c-24487cd0037b",
        "cursor": {
          "ref": "f6579885-431c-4af9-82f3-4c27daa173d9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "848d6ed9-037c-4054-8733-02869549c315"
        },
        "item": {
          "id": "6cb5778f-9c7b-4845-971c-24487cd0037b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "78a9572a-c6d4-4274-8f1d-17f9343a3a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe34990-938b-4890-95dc-9df1ae94201c",
        "cursor": {
          "ref": "16b4ce04-72ac-4239-a929-1ff2860f1e36",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b40b459-4399-4726-af93-e93db09969c8"
        },
        "item": {
          "id": "8fe34990-938b-4890-95dc-9df1ae94201c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f35ed94d-910d-4ef5-8772-99850942804a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e38e3a-1926-4382-a553-83b253f94ade",
        "cursor": {
          "ref": "a3f27908-f36b-40fb-973f-f0eef8ee3902",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2aea532c-17fc-40ae-b0b3-42f0e2b10cab"
        },
        "item": {
          "id": "13e38e3a-1926-4382-a553-83b253f94ade",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cde105d7-fdc8-4493-8c82-86979dac533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486aac1c-d7f2-441a-8c89-5fc78dc1013c",
        "cursor": {
          "ref": "438cab37-3f43-425e-b8d9-951fad3cb160",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9d8803ea-e4b6-40dc-a333-ff9b41e30f61"
        },
        "item": {
          "id": "486aac1c-d7f2-441a-8c89-5fc78dc1013c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0575f718-4152-431e-88d6-75ad90a889a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c515c80-4839-46a4-b435-dee0a9d873aa",
        "cursor": {
          "ref": "72f5fa41-8711-4c8d-bb88-a486e1305aec",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cdcd65e7-16a0-4993-9947-8528daf0fd15"
        },
        "item": {
          "id": "8c515c80-4839-46a4-b435-dee0a9d873aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "131f39c3-cb2e-4064-bbf7-c08489533446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309d6272-fd7a-48ed-8607-ffbab95c8e91",
        "cursor": {
          "ref": "d1fe76f1-7900-4c5a-bf29-5eccec1d0a6c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c0ebcdd1-0ce5-4c50-bd88-33787171c643"
        },
        "item": {
          "id": "309d6272-fd7a-48ed-8607-ffbab95c8e91",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1dc58b75-513a-45c2-9372-da8fa4f06a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cef92a3-229f-49fd-88df-dc840e118bcb",
        "cursor": {
          "ref": "4d7fc066-ed5c-4c37-bdd9-4875768f270d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "15cf20e4-b9d2-49c4-b7ca-d7b9cf9b933d"
        },
        "item": {
          "id": "1cef92a3-229f-49fd-88df-dc840e118bcb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e1c6ea8-c7f3-410e-8b5c-888257c1be97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3057019c-becf-4928-9153-be18f4b808ed",
        "cursor": {
          "ref": "482174fe-84d5-40e9-b66c-45d7cf3ee4a2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c103064-614c-4f91-9e0f-d4c6d14aeb57"
        },
        "item": {
          "id": "3057019c-becf-4928-9153-be18f4b808ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ce9f9be5-7858-4f91-9e50-2d2f79d7a0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d08ae-934f-453c-b756-33943525741c",
        "cursor": {
          "ref": "30a1ad6d-b059-422d-939d-5a7c2c582e5f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "af8a061f-b633-44ca-aa92-2cca40e47afb"
        },
        "item": {
          "id": "c23d08ae-934f-453c-b756-33943525741c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "44bb013e-fdc8-4bb0-9de8-8c7dafa602fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a8a5c2-c175-4c61-9829-fe7defd97dcb",
        "cursor": {
          "ref": "3f8b9f36-89dc-442c-8614-0d04dd6d559a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6ce5d50-53e7-4c82-aa9a-511ca3490956"
        },
        "item": {
          "id": "32a8a5c2-c175-4c61-9829-fe7defd97dcb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5727b8f6-2c1e-4c62-9cd5-13d8c522eb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69138910-bc78-4645-a765-f5e40237670e",
        "cursor": {
          "ref": "03fcbc33-b5f1-4643-99d6-b93ccfd7442e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1310ac8c-5788-4ceb-bddd-8f2f19855d17"
        },
        "item": {
          "id": "69138910-bc78-4645-a765-f5e40237670e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5ef7fbe-c813-403c-ba93-92cb3fda8c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cd1451-8aff-46d0-a2dc-fd9a45ccf055",
        "cursor": {
          "ref": "8bce6419-3a1c-4de0-9074-b46a5c9b3bda",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1f434a22-7bac-4395-8e30-9410714c0127"
        },
        "item": {
          "id": "29cd1451-8aff-46d0-a2dc-fd9a45ccf055",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9ae41acd-46f5-4604-902e-f076ff5d98a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a7f747-a55f-487f-80e4-8a11fab2aaf2",
        "cursor": {
          "ref": "4860d7f5-7826-4a54-ab78-f2b164d82c83",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "55d393d0-ba54-4602-8f5e-0b112531c8ea"
        },
        "item": {
          "id": "25a7f747-a55f-487f-80e4-8a11fab2aaf2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b66b04fe-7cee-4f43-86d9-596a075a355c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffad9e7-33af-4a64-a4b5-f469d1b3937d",
        "cursor": {
          "ref": "a519e161-7e72-4158-9f3f-d994045bb16c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b7f3f9f-90a2-4b6e-beda-0dd3a0480c71"
        },
        "item": {
          "id": "9ffad9e7-33af-4a64-a4b5-f469d1b3937d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e7121426-437e-445e-b309-d6288c6d222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f9444b-17e8-478c-b1ab-ebaaec5b3966",
        "cursor": {
          "ref": "e34864cb-6322-469c-a173-c0a925c3bcb6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "44a955fa-6fe2-40cc-aab7-2d7a5eb7aa1a"
        },
        "item": {
          "id": "10f9444b-17e8-478c-b1ab-ebaaec5b3966",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3fa8607b-06e7-459a-a133-7599d6f42b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d67ab26-ad08-4bdc-a57a-4753b9d0f7e0",
        "cursor": {
          "ref": "d1407461-b29b-43f1-b3d0-c5dd82df213e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fe8079bc-5f9c-4c35-a12d-69f494de64fd"
        },
        "item": {
          "id": "9d67ab26-ad08-4bdc-a57a-4753b9d0f7e0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "83e67533-a455-454f-878f-084644dd35ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1c0acf-a697-4d2a-9f52-e45500c30e1e",
        "cursor": {
          "ref": "a7e5c597-f3c4-4913-ab65-67aaef64665e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1b780a10-f46a-43ad-8649-d19b29897a21"
        },
        "item": {
          "id": "ba1c0acf-a697-4d2a-9f52-e45500c30e1e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae20f809-14c1-4ec5-8f9f-ba49762b4d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b014e1f-50d9-45da-8022-e15e3c65fac8",
        "cursor": {
          "ref": "82cf6d5d-ea99-409b-8386-77f588ff48f1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7039dc75-0ce6-4163-9353-902de97bb4cf"
        },
        "item": {
          "id": "4b014e1f-50d9-45da-8022-e15e3c65fac8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "602daaf0-8e2c-4c04-b501-2af43eccc489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d17710f-b5c6-4772-bdfb-577e41843827",
        "cursor": {
          "ref": "4fc6357c-8293-405e-a980-526b2b898b99",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "496143d7-c21c-4536-9652-9e3ca7a10f33"
        },
        "item": {
          "id": "5d17710f-b5c6-4772-bdfb-577e41843827",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5ae9b922-d15a-479c-944b-beec7b2bcc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f6a6d5-b073-41c4-9e3a-ac032867c859",
        "cursor": {
          "ref": "c4a074d2-c539-4c37-aba4-d424b41b9dd9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fd8b4700-c1a8-468b-ade4-b3ade2fe1785"
        },
        "item": {
          "id": "82f6a6d5-b073-41c4-9e3a-ac032867c859",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2b531b29-4db0-4f77-bab3-dbb033401cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85518134-edca-4cc6-9b77-61b4a42f70c4",
        "cursor": {
          "ref": "6adc5d1c-2b9a-4c8b-921b-e15bed191dad",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "737fc29e-d66c-4250-87c9-f240a54d80d3"
        },
        "item": {
          "id": "85518134-edca-4cc6-9b77-61b4a42f70c4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f190c34-437e-470f-9202-94c54a414463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b974d0-53e0-4f1a-820c-e6344de6590e",
        "cursor": {
          "ref": "26048b33-190d-459f-bb1d-7e4d145ceb42",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c1221b58-fb16-43e7-8d4c-4ba5073dcb78"
        },
        "item": {
          "id": "f5b974d0-53e0-4f1a-820c-e6344de6590e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2452931f-8fea-4905-bf27-94772796b9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886c186-6e85-4429-972b-58c3461b4310",
        "cursor": {
          "ref": "6997a170-64d4-494d-806b-716a97659db7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6f65a2ef-12e5-45bf-a032-9483087ac8b3"
        },
        "item": {
          "id": "f886c186-6e85-4429-972b-58c3461b4310",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fb6641cd-4d95-4c61-9cda-8de0c3c9aa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556ac285-c068-424a-af20-260810e62b87",
        "cursor": {
          "ref": "af02e971-045d-4ca9-8abc-834b543ab3af",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2d6c7508-bc8d-4419-a59d-e82dbdcdca04"
        },
        "item": {
          "id": "556ac285-c068-424a-af20-260810e62b87",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9e57346d-61fb-4932-9575-c71c59234d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab500dd9-a374-49a1-ac6b-d94db61b01fd",
        "cursor": {
          "ref": "f3fc1495-e3bf-4d50-87a9-091490cccee6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ca84ebfe-d1a2-4b1f-9288-37dea02887e3"
        },
        "item": {
          "id": "ab500dd9-a374-49a1-ac6b-d94db61b01fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "28334989-c425-40f0-b56e-97ccfc13b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8889db-494b-453d-9618-be6b2f565e8a",
        "cursor": {
          "ref": "be3a17c7-5b5c-43c8-8141-886329dcd646",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf8446a8-75a1-4950-8736-4a73607d4aa0"
        },
        "item": {
          "id": "1b8889db-494b-453d-9618-be6b2f565e8a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2fe96c09-a0c8-4f93-a262-e57dc052133c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc2004-bd5b-4d9a-bd3e-d858e4791604",
        "cursor": {
          "ref": "3e1f3997-3ce0-45fe-9fb1-00c6d47f4a57",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0f8bcd2c-54b2-4167-8909-ee73c86958bc"
        },
        "item": {
          "id": "14bc2004-bd5b-4d9a-bd3e-d858e4791604",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30cced6e-a312-44a2-b470-622726168809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5269143a-4edd-4afb-ae12-cb5a1c87f404",
        "cursor": {
          "ref": "0def960d-0bc9-468f-b653-259a86f99a3b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7d21b4ff-a819-4d82-a0cb-074b82a9d4f8"
        },
        "item": {
          "id": "5269143a-4edd-4afb-ae12-cb5a1c87f404",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "755f8921-0833-4408-b35a-e55ccd4ce815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3347f34e-fbf1-45b6-a7bf-8d6518531296",
        "cursor": {
          "ref": "f8c84da2-42ae-4df5-93f3-fb02680778dd",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9b04c1fa-7ed6-464d-9275-a0d64c29a106"
        },
        "item": {
          "id": "3347f34e-fbf1-45b6-a7bf-8d6518531296",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0653b422-3341-484e-8eaa-098896f2ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d658822d-34ce-40a8-ba44-0e590335d29b",
        "cursor": {
          "ref": "8806806f-2ce7-46d3-a5a2-7a290bec14ae",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c80dc011-2f5d-4dff-8898-a4436194369f"
        },
        "item": {
          "id": "d658822d-34ce-40a8-ba44-0e590335d29b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1fbebf6a-2020-49d9-95dc-0eaefed5eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf3b6e1-d897-4433-9d55-5a98b7c7fa96",
        "cursor": {
          "ref": "e3359423-9f85-48f1-90ae-11b035fdca01",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b83fe3dc-ed7c-474e-bd0e-7c7449428007"
        },
        "item": {
          "id": "1cf3b6e1-d897-4433-9d55-5a98b7c7fa96",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4adc052d-7bfd-45e2-ab2b-88f79d08e25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e26909d-215f-40c5-9d48-247f58720832",
        "cursor": {
          "ref": "43e4575a-044f-4976-89cc-4591701f82ef",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a05e8613-f9cb-480d-9f49-a8519be02a24"
        },
        "item": {
          "id": "6e26909d-215f-40c5-9d48-247f58720832",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "920e98a8-f30d-489e-b809-6efaee13bfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523101b1-4c75-429d-aa5f-252c2b8f570a",
        "cursor": {
          "ref": "60e51daa-9ebc-46c0-9d56-4af19851a95d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9f6295e9-6518-47b9-b9d5-6704ef1e9ec6"
        },
        "item": {
          "id": "523101b1-4c75-429d-aa5f-252c2b8f570a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "28456caf-cc96-4430-ad66-a411ff684838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a595a53-8fa8-4dad-a013-2982f3bbbc91",
        "cursor": {
          "ref": "a36285d5-a656-44da-abba-45fd5e949012",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "157fa27d-9071-441b-b410-cceb99f99786"
        },
        "item": {
          "id": "3a595a53-8fa8-4dad-a013-2982f3bbbc91",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9fc30439-1ba3-48c7-a46c-123006980ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf3b53-da90-4b0b-b0e9-88bb767c9260",
        "cursor": {
          "ref": "09a6feed-0e6a-4e4e-96c1-246c113850da",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "96bbf132-f46c-403d-a277-13a8ae19c9b0"
        },
        "item": {
          "id": "b0cf3b53-da90-4b0b-b0e9-88bb767c9260",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ef9f6b9f-a326-4006-8455-4714d7cd38e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9124fdca-8947-4f51-bec1-4d39ba7d10c8",
        "cursor": {
          "ref": "c8e4d1e6-5a35-4778-9655-3d4c11a0dc8c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b1b23b7-2c77-46f7-8fb7-f93afd31a418"
        },
        "item": {
          "id": "9124fdca-8947-4f51-bec1-4d39ba7d10c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "30460191-7b43-4ecf-a86b-cd3ebd5a3c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0887f4f0-ac71-4691-a4d1-3177d8cb3e1e",
        "cursor": {
          "ref": "f031297f-ecce-4bcb-9e08-ac07e6c5806f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c69bd65a-e09a-4031-a789-e4fa02f2618e"
        },
        "item": {
          "id": "0887f4f0-ac71-4691-a4d1-3177d8cb3e1e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a94e6e5f-13ab-437d-bf29-db51e1d8e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabbae34-182f-471a-8318-40df6bcb93eb",
        "cursor": {
          "ref": "07482e68-0513-4064-b4eb-be8b92d46f03",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8c7e22dc-04af-4ed2-807a-a5306e864642"
        },
        "item": {
          "id": "aabbae34-182f-471a-8318-40df6bcb93eb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "925de058-c3b2-47fa-acd9-45fa8f59477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297e157a-d87c-468a-b85f-adfbd433c488",
        "cursor": {
          "ref": "a790f26e-4cc3-4da1-9015-7f9b307c19ab",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0df261bb-1eb2-4f81-acc3-d09034cf185f"
        },
        "item": {
          "id": "297e157a-d87c-468a-b85f-adfbd433c488",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c9753f95-24b2-4bc5-9546-d116fbcb14e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e361f17-2955-4479-84f8-4cb358fbb744",
        "cursor": {
          "ref": "bd0688fa-e06d-418e-904e-4a3d822e7c79",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fdf706ee-cc7c-44f8-8a4f-438def19e9f4"
        },
        "item": {
          "id": "0e361f17-2955-4479-84f8-4cb358fbb744",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d2783f43-2e02-45a4-ae25-6038b5406376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f9b81-0644-43c4-8db5-86bcf99ec651",
        "cursor": {
          "ref": "f30ac82d-2b2d-4df1-a83e-797d7c77410b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c070a634-32e3-49b3-bc07-c00183deaa6e"
        },
        "item": {
          "id": "ca4f9b81-0644-43c4-8db5-86bcf99ec651",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "edb1d77e-c885-4131-a794-e99daed4da16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364d92d-6cfd-4889-80ee-2b6fc0bdc841",
        "cursor": {
          "ref": "5944acb9-63cb-4173-9c2d-918c5f782141",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "76db3100-186f-4f2c-a283-fa46173483ea"
        },
        "item": {
          "id": "3364d92d-6cfd-4889-80ee-2b6fc0bdc841",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "676ca6bd-f2dd-4097-8206-6326ff207601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540a6ac-7b6d-46de-8c8f-f99da9ae70bd",
        "cursor": {
          "ref": "12e17b97-4e63-4970-b848-6c7f60926959",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "29850e62-d2da-4877-90c0-c79d75b15eda"
        },
        "item": {
          "id": "f540a6ac-7b6d-46de-8c8f-f99da9ae70bd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "935b09cd-1747-4a80-b814-867ec904be25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c4b26e-87d8-43c6-947f-626c5aceeb0c",
        "cursor": {
          "ref": "44fdf517-8cb1-4df6-aa62-8488ffe6caa8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b0dfd7eb-eb02-45c0-9007-b4eb9fb5d0ba"
        },
        "item": {
          "id": "74c4b26e-87d8-43c6-947f-626c5aceeb0c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3b102986-5736-4302-bfc8-4ef03aebb82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c330bdb-6935-4588-b30a-dee430121ece",
        "cursor": {
          "ref": "d74a0dac-ae35-4b99-8d06-62c53e510eb4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "535b6376-3547-4026-9e71-0aa290936261"
        },
        "item": {
          "id": "9c330bdb-6935-4588-b30a-dee430121ece",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "48cad2c5-ff0e-45cb-b6a7-7fd079311db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51422c7-a138-4134-baeb-e0444b54c95c",
        "cursor": {
          "ref": "3aa37f08-031b-4dee-abfa-a8d00dd62b70",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "681d4b4e-34f4-4a90-ba0e-3475d9b9e945"
        },
        "item": {
          "id": "b51422c7-a138-4134-baeb-e0444b54c95c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9066a688-19e2-42c6-b29f-cc66410d4f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d9189c-46d2-4419-b130-0501dce2ec75",
        "cursor": {
          "ref": "e1159253-bdf6-4687-84e8-fe557aaff96d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f0a040c0-d323-4cf5-8c9e-5b40b21da9c1"
        },
        "item": {
          "id": "e6d9189c-46d2-4419-b130-0501dce2ec75",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cef23b21-8101-4bd9-a6a4-800566dece4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918b284d-1b97-469a-b63a-eba2bac8e0d8",
        "cursor": {
          "ref": "2c7f7b5e-6fad-422b-af28-cc21c3fa576d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "077d06b6-06ce-4ec6-b59b-355c430982fa"
        },
        "item": {
          "id": "918b284d-1b97-469a-b63a-eba2bac8e0d8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be6e3ac2-f716-4fbb-9d30-bf3b6f5ad0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1658eb2-7ff7-4af1-8bef-2699bb9b121a",
        "cursor": {
          "ref": "864987f8-87a4-4664-a58e-e8392f3ca4c4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d82d08be-af6a-448c-861f-68422a2faa8f"
        },
        "item": {
          "id": "d1658eb2-7ff7-4af1-8bef-2699bb9b121a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "48fc64eb-a7d2-436e-bbf2-628b89d38dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe6beb1-325b-44d3-95d1-a34fcaee7145",
        "cursor": {
          "ref": "8e489106-35c3-496c-970e-3e7ca82e720b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60599a38-3c76-489f-867d-c73ab4f34438"
        },
        "item": {
          "id": "8fe6beb1-325b-44d3-95d1-a34fcaee7145",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "659b4767-7e74-4606-8966-f0c02ed7aeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda95426-84d1-42e8-8c21-4f83f15b8330",
        "cursor": {
          "ref": "71bdd659-1d64-4682-bd3b-7a3ffee4ee3f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e0a3f9cc-ae94-4fb7-92cd-5aa21dc869aa"
        },
        "item": {
          "id": "dda95426-84d1-42e8-8c21-4f83f15b8330",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "03591be4-13a6-42af-87d1-df5241070b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d909cd81-7eac-458d-9d6d-df210b9cd6c7",
        "cursor": {
          "ref": "ac1431c0-5521-46f1-ad63-2accde17ab21",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94e8b043-c041-40f8-86c9-b9413d936297"
        },
        "item": {
          "id": "d909cd81-7eac-458d-9d6d-df210b9cd6c7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "90461cce-95e6-467a-94bb-d65c4ce1475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e94bba-d0a2-4a1b-8173-ad2649c92a25",
        "cursor": {
          "ref": "b28c918c-23f7-486c-a9a5-4399ba87e35b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "21dd6c90-1bce-4804-b3a4-e2a7e44c5cc4"
        },
        "item": {
          "id": "09e94bba-d0a2-4a1b-8173-ad2649c92a25",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "015ace73-9d9d-4c9f-a2e1-4de573422230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0be67b-8261-470d-bbbc-c31e7480601a",
        "cursor": {
          "ref": "20073640-6ec6-4d89-8d8f-64693945ffcc",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cb4914ac-6321-4ddd-826a-48d0a4081ea4"
        },
        "item": {
          "id": "bc0be67b-8261-470d-bbbc-c31e7480601a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2522532c-4bfd-4cb8-9e30-bb918ee5e1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e43d15-d153-410d-a95e-9bd92cf78f5b",
        "cursor": {
          "ref": "e9eb6485-a355-42f5-9d5e-a836d11ed920",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "adac6326-df11-48b2-8c31-9bb9172c7657"
        },
        "item": {
          "id": "96e43d15-d153-410d-a95e-9bd92cf78f5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3d425284-b420-4683-89a9-d812f6128939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4a4768-a150-427c-87cb-5769606a92e9",
        "cursor": {
          "ref": "2ae2a7ca-1e64-430a-bb28-d88ebb08b7e0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0c8f769d-7f87-408c-84d7-cb56bf573bd7"
        },
        "item": {
          "id": "db4a4768-a150-427c-87cb-5769606a92e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41b81df1-deb3-4ace-aaf6-df09c1a994ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d357e276-4642-49d9-b2c2-51cec6884146",
        "cursor": {
          "ref": "944cf690-9eed-419f-8d3c-b1ee2c08884e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "575537d5-8834-47fd-a000-7cf920b8d9d5"
        },
        "item": {
          "id": "d357e276-4642-49d9-b2c2-51cec6884146",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f5c30ac-bfd7-4c08-8b77-ef3811a284df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce841568-d640-49ac-9290-030fbfdce02f",
        "cursor": {
          "ref": "31b91f57-e7b0-48e2-822f-935fa3b8dc88",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "048dc7f9-f805-4f1b-8646-918cb9994c8d"
        },
        "item": {
          "id": "ce841568-d640-49ac-9290-030fbfdce02f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c77a7b27-4d36-4c52-8df6-537d7a042728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853c69a-7420-44a7-a520-3fa95244218f",
        "cursor": {
          "ref": "1328551d-cdd5-4c34-82e5-070fb5299736",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2389a694-4703-400f-aa2d-462b0adcf3a6"
        },
        "item": {
          "id": "b853c69a-7420-44a7-a520-3fa95244218f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1355501d-6562-4178-9e90-456f48392257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e6bc2-84df-49ff-b09e-bb93ae7a175b",
        "cursor": {
          "ref": "b4de5153-2833-4853-97ef-1f539f459a24",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "35257597-4212-4382-9d0e-97c6d868cbc9"
        },
        "item": {
          "id": "3f0e6bc2-84df-49ff-b09e-bb93ae7a175b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b3d86c6-4f28-4dc8-95de-72d73e7a5b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353b2879-95a6-45af-b685-4d1ef7516085",
        "cursor": {
          "ref": "0f5a2b25-0b6a-424d-ac74-cfb5bf98a1ca",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "676c2560-6306-4e40-ad1e-c096b3495061"
        },
        "item": {
          "id": "353b2879-95a6-45af-b685-4d1ef7516085",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "487773ec-b756-4104-b3f0-3e137794fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8737b0a0-2b10-4f87-abdc-3cc9f939f122",
        "cursor": {
          "ref": "eb4ab89b-3fd0-4699-9669-ca0768ebef13",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3fa05211-5972-4c3c-90e3-90d87dea168b"
        },
        "item": {
          "id": "8737b0a0-2b10-4f87-abdc-3cc9f939f122",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3b962cac-471d-4505-98be-0e53d7195c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068763eb-1f77-42db-a0a4-288f68900ae2",
        "cursor": {
          "ref": "a8f32fdf-2f3e-4fe4-9b11-d5c742d1c678",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "042de948-db02-4403-9449-ca3fec13dedf"
        },
        "item": {
          "id": "068763eb-1f77-42db-a0a4-288f68900ae2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b6ae11eb-2fbb-4ff0-9c85-bbdf68412ab9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca4e4f-fa1f-4db8-a75f-401e62b142cf",
        "cursor": {
          "ref": "fa072a17-fbe1-4cb0-a1f4-fab5a3ce7daa",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9d976ea9-6df6-42af-a779-60554ae1c99b"
        },
        "item": {
          "id": "e5ca4e4f-fa1f-4db8-a75f-401e62b142cf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c06baa40-b849-4b09-9ef1-f706dbc2a3ce",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0685578d-5561-405d-8df2-66312c3c9916",
        "cursor": {
          "ref": "f90f270d-9d1f-442c-8241-2e193620b5dc",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "60fbcb18-83b1-42c4-bbc2-f7706086240f"
        },
        "item": {
          "id": "0685578d-5561-405d-8df2-66312c3c9916",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d81cb8fd-1cab-4f6e-94d6-b9006bc78b98",
          "status": "OK",
          "code": 200,
          "responseTime": 2270,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39428b64-970c-4660-aab6-3af525ae0464",
        "cursor": {
          "ref": "5f090d67-0c25-479b-aafc-669ea040878d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "420f8557-3aaf-4344-9848-4460e4158b47"
        },
        "item": {
          "id": "39428b64-970c-4660-aab6-3af525ae0464",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7f14e0c6-f6ba-4632-8228-6407c667650c",
          "status": "OK",
          "code": 200,
          "responseTime": 2651,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ce7101-756b-4c53-87a3-0ab96732ec05",
        "cursor": {
          "ref": "5379c872-4f29-441e-ba35-bf3c66a6f0f5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e20fc31-6b73-4e78-9b08-72d60a9721cd"
        },
        "item": {
          "id": "13ce7101-756b-4c53-87a3-0ab96732ec05",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bf17794-7eee-464d-b145-96cee186b1da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ce7101-756b-4c53-87a3-0ab96732ec05",
        "cursor": {
          "ref": "5379c872-4f29-441e-ba35-bf3c66a6f0f5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e20fc31-6b73-4e78-9b08-72d60a9721cd"
        },
        "item": {
          "id": "13ce7101-756b-4c53-87a3-0ab96732ec05",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bf17794-7eee-464d-b145-96cee186b1da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a954b-86f1-47e9-9069-89bf2f6be41f",
        "cursor": {
          "ref": "e78d2d92-d601-47d9-ba39-a29bedee89c7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9b81ffc0-28d6-46cb-a8f4-f7666c74d61a"
        },
        "item": {
          "id": "b36a954b-86f1-47e9-9069-89bf2f6be41f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8a3affad-8e4d-47ca-8c5b-4776464d2b75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f93a3f-44aa-4670-a1e7-0f1a945f7598",
        "cursor": {
          "ref": "b89e7f23-d544-4378-9dcd-c5612dacc0f0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9e6c7c6c-beb0-4018-9596-64c02ae3e104"
        },
        "item": {
          "id": "36f93a3f-44aa-4670-a1e7-0f1a945f7598",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d45d70d6-1d64-4394-9d6b-90d55c5b10cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}