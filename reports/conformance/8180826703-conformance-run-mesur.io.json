{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9dd1307e-0c16-452b-9a1b-52ef3d14d862",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2c00242-5b68-43df-9f3b-9adfd06fafe0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70a882c8-83af-4a14-879b-316784cd27db",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7dec35e9-7d65-4807-9adb-089a50ba3677"
                }
              }
            ]
          },
          {
            "id": "efe99124-ac10-4e0a-9392-90eb0613f333",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e420d3b-d5eb-4cf8-9b84-cc281ed59d1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e760cf48-55b4-4da9-b837-61501afef559"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "625798d0-a744-4d82-bbb1-b66616190e89",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "856abeae-7441-414c-8d1a-34595e73ade2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20289084-1110-4784-b735-5c9b3ac2fcc9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3796a85d-bc68-4eab-83ff-f5a34b03b3d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20a7b1ab-5a0a-421b-aca5-202ff528db74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84a04799-b64f-44b6-b1ef-b0af9442cc63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b73ebe19-360b-464d-963a-c43b11a7498b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1baf0ebe-11d6-453e-a227-7028d9d8f0e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccaeec01-7f34-4aea-9428-f1cdfa5456db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4884c7e6-c3e7-4beb-96ea-5882a0e2fc81",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "33ebae29-85dd-4547-89ea-a006272ed5d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a28d6b3e-4bd9-4bed-b10b-be24f4d91c86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2deac5c-75dc-40ed-b994-ed5c2824dcbe"
            }
          }
        ]
      },
      {
        "id": "457526a5-dc5e-4822-8bea-e0c649dc4c9f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a06516d-131d-41ea-afd9-803a6da34fe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0a9fa32-ee1c-4491-94b5-99f492bc11fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8f16e18-6f5b-4e09-bfe4-f5f88a81ca64",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd51c3-5160-4036-9aae-b09557322d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e12ec5f-5435-4531-8690-64d91a155c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6c8be5-d57a-482d-bed8-dfd1cc917317",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa92dd6c-8ca2-4684-a55b-861ea40e34c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d447273-99c2-4aad-9572-4f3dd0731237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cf3269-0403-400a-85e0-3ee6863dbfa7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3fc9c-0df2-4397-ae3f-5b3ffc85985f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3e21c13-265b-4abd-b434-abb6a265ffaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "579ebc61-c193-4cac-98b9-0da6369246a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c36cd621-03f2-49e8-b539-e013a8641526",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c4ce95-4ece-492d-b5c0-7863d85246cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "846ff1a8-d96f-4369-be06-316a74feb769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185725bc-42df-4837-921a-ee338e0ffeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb5d0a5-3c21-449a-8848-534750b60982"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f61cbc7-c8c0-473d-a8fe-d8caab694b2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a209752f-b248-4f61-ba09-7e4a96ef2057",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bb3fa95-a44f-44d4-9890-dff2396bace8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "26bf6ba6-b855-4942-b6d1-3f44f15190e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "642e98fd-4cc3-4ad0-90b4-d0934131e00c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4e7c7df-e6c7-46d6-a05a-040475ecbecf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e00e046b-0c38-42ee-9a72-ff182c3381f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd4f2b1b-075e-4c3b-a0c6-1936cd9be558"
            }
          }
        ]
      },
      {
        "id": "b4d5ef3a-570c-47fe-a47b-9af7537a2231",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "130ec30e-56f9-4af0-9128-74c1620c05ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04a96016-b00f-4a67-93d0-fe6aaa0efcf6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "83e87d8c-664c-486a-a634-d28c02f237f3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4a9b73-7f34-475b-a5de-2b6a2be50c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bedae2-bbee-42e2-9b77-f044a1bf2fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8366c-ae77-4691-882e-ae76a8cb961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a356384-7d1a-410a-837a-a847c292764f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5021c0d0-cfd7-47ca-8c7d-b80a2513349a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a325b27b-2775-47ed-9a1a-583df67bc944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960cf98f-e6d8-4e02-92e6-904e2f588410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca9c69d-4165-42b0-a914-bdee2a2f932b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe01f7b-8133-4047-8953-c2daf19a5e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c362e99-d636-40ef-bd5f-a0453fcfc6f2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09672a0a-d849-43a9-80a0-7e993273f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bd5f28-5936-4feb-8fa7-4facf45a0a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf87b19-3534-4fed-82ee-5da7c8a47033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69cf85d9-8ad7-4463-bee3-dbe79262b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d983cd3-3165-4998-b6a7-6eecce915b38",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2779b8a6-0c42-4ef2-9b8b-83c3ede26404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c6dfc5-802c-4042-a5c6-78c9af6dbc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce3683d-a888-4e6e-8220-4daf55db757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692ad4b9-7b2f-487a-9d80-3efc9375b184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5a0a0-154b-4081-a2c8-056c24bfedd6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25106805-fdcc-4894-8616-c6c616e4664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e77c952-390d-4ae7-80fc-4c04afad3515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32467b3-62e8-4c52-9e6c-ef8730c94417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44a2576b-c50e-4020-a600-818cdbb511ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1aab8-9885-41ee-aef7-caa15eedcd14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb6c4a8-7aaf-4570-b268-db579a384b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06827870-0419-4370-a9b2-7d77b44d9c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43f3738-15d9-4d8c-b2ef-e8ff34069dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb90ab5-cc8e-4026-ae51-64885552984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5805bc4-6618-400a-a3a8-85f50df9c607",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd52815c-0f42-4ae0-99f1-3bb97d0612d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b38695-23eb-476a-83bf-e81d75b46a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ceca81-d8ee-449a-a868-36bb7febb696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb4fdbe4-1781-40e9-8ce0-b585036a083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008135c2-add6-40a5-b81b-5c373c6ed7ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38551a45-4f47-4756-98d7-490fbde02b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8185408d-4980-4453-8191-8ccaf9619b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfac549-4bbe-4588-b9f4-f7002d5f261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c40c0fa3-0341-4f0a-9077-b5e237653465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af50bc-d256-4db0-b3f5-433be6bcadd7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61a2361-6fc6-4d9b-9863-99e4fcfd6956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d217908-905d-4680-8a50-0227b62b756a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfa966a-622e-4da6-be76-cd37064a701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eafe26f6-35f9-46c4-b6b2-623d08fb39e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42cf2d3-e752-496c-8f7a-37463e867ae6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0644792-632d-4941-ae4a-50f37983645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62797142-7017-435c-b15a-d6bb3235ae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343eacbf-91c9-4e88-94f3-6aa9a670f2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ce0762-a7d6-43a9-9723-86bd04dd2eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1e5929-d4a4-4c76-881e-0ac2c8fe6641",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0302d4e4-7fa9-4cf9-9346-dfa4e2a5fb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717f8270-720a-4545-8a06-6c7975754b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78a25a-b91e-4e72-b10b-f93787a7342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e581eabd-2a13-4374-86d9-f8d1b818c4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcef996-3555-48eb-a1e5-7eaa95ba50c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e80e2b-5a55-424e-84b8-be33c1fd90e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7903cfc4-f0ea-400b-beee-759dd2568e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06f6a55-0e5b-414f-9627-0779edac95cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a3cb736-c3a7-485d-b258-d1d89eb53a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183c994c-5eac-4431-baaa-a493fdfd4b46",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857ff07c-fcbf-449c-9c62-5df1c0301fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4a8ea9-3a21-42f2-8d39-9f9c24236fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eccc4b3-8744-4b46-95cc-b853275d697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "078f62db-66f1-4576-a8f2-91b65697c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e1eb70-c28f-4aac-9f9c-dd4b6a7bfb96",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a32736d-b0f4-4c16-a3e0-88e9ac063b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf66d395-5269-4d94-9809-b56357b1821f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477dc4c5-578f-4b05-9c17-4ed6093f524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f743be-1a27-4d03-b41a-d57806ecea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb81271-093d-4478-b983-3be0940f55f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93046c2d-6ba8-4b66-a0fc-9ca1d618f5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bea3b32-985d-47bc-bdb1-75be863ea027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c18182a-38d1-4ec9-b242-f57ebf6ebe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbf8f7c0-01c7-45f1-a181-30ab1880e063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cae939-4cd1-4968-a3ac-a56f84765bbe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b50266-9189-4da5-a42e-9f71bee99e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a050d466-de21-4dbc-87a7-afd056238cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb424e-a8be-4efe-a88e-cccfe3b8473f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dffeb87-701d-4a0e-b07b-07275c36edbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49a9587-054d-45e3-90f3-1a4578276804",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca48d25-6f89-40f7-af41-d4cb0f935d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca640f67-03fc-41cf-9317-8fc8edde9d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f223e2c1-c1dd-4626-9533-dd32364f3772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f64ce073-51ae-4120-9d76-8792bd5b147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f0aaad-8379-4f6a-87e5-0494ef6f3472",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651d4efe-3041-4ee7-b9d2-f04204a27906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab657b7b-a9c3-4171-be67-516a0dc5aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c7830-cc70-4210-90e7-e0ef9a712dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9160594f-f20e-47fc-8ae5-5b9ef9e72947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd206f4a-39fc-4284-9d98-09e3bd8ee5cf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00018f52-2743-403e-b550-4aecd2234559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0edf64-8a3f-489a-954b-dba32883aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54ce87-7737-4416-b8e2-b75cea2aa0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff23d8ee-d057-447e-9e7f-0c59cdba33c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e79535-6d36-47e7-97d0-a2bff275ffa0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e724aaf-f7a2-4a98-af2b-c4d5b2d7d577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac24deb0-cb39-49ca-9bf6-58eec168d0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a72398-7f5d-45da-a4b0-b15db326fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf778c4-2bcf-4a0c-94e2-57c5638635a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b5d2c0-b853-44fd-a368-12677b5f8453",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17de624-e2f2-4deb-90e5-af0055ac5768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc00618-9d29-4984-9ca5-943a86ad22fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b137acee-9795-44f6-a7ba-3d425a01cf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24363ce-e28f-4153-8147-72b5d2d66b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3003a958-3693-4e1d-9178-84396c8ebe73",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc33bbb-f398-414a-8615-ec3bfca16f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02592cf9-803a-4fd6-a66d-1547f98d7de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d9dfab-274e-4be0-a082-186235f5c791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1c49a4-c9d0-4d1f-a64c-20da1fbcb4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf59118-5225-488e-8b03-41382a6a5279",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b255c62-43a7-456b-8408-8db8616987a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df375be9-6254-4e20-98a3-b794576648f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831151ed-25fa-4704-a3ff-4f1e05bd48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56e3e60d-72dc-4a88-b2fc-c83e207044b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e93ec3-b699-4820-9ac3-c97b707e8881",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0293d3d4-16c5-4666-bc7a-4ccfb6e5f079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61cc2b1-b699-4681-9e82-9a08042f675b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9b5bc9-5014-447b-966f-1af53e5b070b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff359af-5410-495d-9d11-06faaed26120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643b108-8036-490c-9bd1-ea66f06e1c43",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bd425c-7873-4ae6-a6f4-05ef8157b433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733db4b2-30bc-450d-801d-13ae934ad0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3801e79-1f98-4b57-a14c-fc2533b2ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8597950c-1800-4201-a215-e9634909b1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589302ca-c131-4f24-ad4a-b7235d05c98d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de803422-d4d5-432f-a473-fb4cd247be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a33452-6fc1-4651-9d9a-969dd07efadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b40aebb-65cb-47ab-b555-e9d50ed2c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de874607-2d58-4dbc-8bd0-1d7c185c4851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35358bf-6bd3-4cd7-b05d-a731e3bcf339",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d875618a-794a-4cc4-884f-d48fd9b21117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4f60d4-6887-4865-8a55-83b7459fe872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59835112-6ca4-406b-81b4-92da34f4cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c163be-83d3-4955-8e92-fce92d3ff5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8376cd83-5072-4fdb-bf25-4df8ecdf757a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9fe147-bdf1-4a41-88be-f5bd1771e2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5b5e1e-0f5a-4121-8e74-8b46db7fe18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed8426a-e7cc-486e-b4ee-a5fdc077b550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c562e86-8801-4b5c-95d7-06146cd66df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437307d2-3614-4f54-b5db-3173a8c8db8b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3835e148-b33a-4220-b361-d989b02e49be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df34c3fd-b889-4fa7-8415-1ea0b96df4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a7832d-9769-4cae-86e0-e8d65bbd3084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f1c4ae-e324-41a4-a370-72f962a8f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce828af2-39fc-4cc8-8a74-ff0f30a66a69",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c28ad49-a656-4f58-9ece-c77a5b385676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b942e8bc-9cf6-4fea-bcd8-f8d64d4fddbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79257926-4653-412c-89f2-023d6904b33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5a12a5-04a1-45c4-8cbe-871e157c921f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c53b910-428f-4d71-9acd-169f7da500cc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84554a8f-ba14-439a-83d5-57327a8f8776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b910f2-70ed-4943-9181-d304ca35d312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47d5fc5-024a-4295-a7f8-fc411e530467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cad33b-6960-41f9-8fb3-547ad8519360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47431369-6a18-4b85-976c-90084cee3f6a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1278a49-f88c-4a7b-bb07-4218ce8143d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0f7b1-b5bf-40f4-8fc3-e7c0994caddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3b382d-7353-49c9-bbff-e705f6daa610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb63c9b-4b7c-4fa0-b30d-ee9c91fa6c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a6bae2-b043-4128-bf22-3f9ef1dcc8d8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b837610a-7fdb-4cf8-905e-a1c36c7f04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcd1262-217e-4a53-b3c6-576cdb109a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db44e07-19ce-4813-9b0b-a31473f2ac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc222b9-ed76-41a4-b19f-67f8945b846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb7a82c-f399-43e7-b7f2-77d5eaf1e68a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966c7cf2-db50-4e01-a536-f99a045b1246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1252fa16-c3a3-49c7-8237-34ec99261cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5cab08-dd01-4bea-983b-2a7063b88339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37cb8b7c-7d21-40a1-8bf4-aa22ef707d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f7804e-50c5-45f2-8443-36c5a2b04b2e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3458dbd4-a280-46c4-9bd9-553ffdb719fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086282a3-25ba-4a11-bbaf-9e6e2208bef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81c29c5-0724-4402-b2ed-999edbe16b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fa744850-59dc-44ce-9c32-9ea2e9aa747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc9ba61-10f2-4a87-91b0-12347917c96f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014678a8-88eb-4c64-a70f-5d06825c0d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33ce2d7c-55dc-423c-af83-35061c9b08fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24942d-dcf6-443d-b35c-3d721045d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea4a8ea-3320-4f5a-8fa4-a76673b36c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033edc6-1ce2-4c3d-9e57-1cf7acfe1292",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f560bcb6-ed20-4788-b0c6-95f2a4ff6c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cbd7dd-4b8d-47da-8bf8-26748a65806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ee900c-ba00-49eb-882a-d5962d66ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfccd349-7705-4abd-81d2-313c0449c44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ccdc7a-0f09-4e3f-8dd4-c05c494f5d0b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe93c69-72f6-4fcd-84b5-e55ba41c1090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4858ce9-b51b-42d5-964e-33326efad72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c69b6-0995-4b00-aba4-a2b5d7c43425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb72f22-c92f-4303-a5dd-1fb41d468fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f8bc44-7c82-4d90-bdb6-ccf6bf59d1d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8435e9f-f2c3-4925-bae1-16ac5c270c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c40195a-2167-4448-b57d-888c53227dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f3959e-69c7-45b5-b9f8-bf156453b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1d7fb9-97df-4fea-bf1d-19a1515690a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe6e9d-2764-45df-afa9-467ceff0ef6f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf613a6-fbac-416f-b61e-7fc6d18e2d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84540f89-1df6-46b6-98f6-2e468e077439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ec9966-904d-47b3-8ee4-d134efe5b063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7170e5cd-384e-4661-bd28-a1169ed9aae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bc5abc-a984-45e8-855e-585103bb85db",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7a6bf6-1bb2-40df-93e5-5aed66ac15eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1c1690-caf5-4256-9711-2b31b43af6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f76e7e5-565f-41b6-9326-83d4cd9bcd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "100b273f-068b-468a-aea9-ec18c9f101f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e4e3c1-152f-4748-92ab-710d452d9687",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752d9832-3770-4b09-ba91-2f9b1be9f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304c59a5-d091-4d4d-a543-01548198e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c9c19e-f5b4-4836-ba67-343d488d93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "138c1859-bbb7-42b9-a9d7-72bc1f077f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ad3d5-43f4-4cc1-a9f4-e78d73624181",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117a0014-bb9d-4140-9b36-1f8126a2bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e154a75a-543a-47bf-b2cc-e79a1e811e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b099bcf-74af-4585-b8ee-31c21266e6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b59d1151-e416-459c-9ccb-d0833b804eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e313fc-2f2c-4bcf-ad2b-ab284c9b763e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5818d63-d722-48e4-9434-a8243a3910a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880b9e1d-ab11-4f07-86bf-19ef3034809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59643f7f-464d-4c3d-966b-9fbf45993e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a6ec97-d183-4796-a977-8b5afa14e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3b6765-67a8-486d-893d-a76f995f421e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90506c83-c001-426c-9ded-346274ab201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bea1d42-0ac8-4a84-adf5-22335b666385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d7e55-9d36-4e6e-858b-278c5c31894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f2eb12-b62f-4512-aabe-bf145e5db6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da8b50a-2376-4e3d-9f4c-c24bf676960c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ed6cc5-5c06-49c1-a972-584515e5f05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cae957-6cf2-45bb-89d3-a2d562b1e95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab5be4-953f-4345-b974-8f8d55fc83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5a390d-040b-42ef-ab42-8864dc61cc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0652059-6033-49af-a38f-8c934748db90",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23be5a0f-37d1-41b7-bc9a-ff6abe97e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb83be9-30c3-437a-b348-d2a8539636bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf8be48-3315-4a27-bf14-645b92a3ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d995d1ae-82d6-497b-9165-0755cdba80af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b3e2ab-adab-4de5-8b02-056215c1114d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13833806-b8c0-42bc-b6e2-f38321dd4621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce0a2f-b0ae-4022-b43d-b5d9a8f575d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb7d24d-6ad8-41f8-bd0a-20e2e821db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f98930-4c09-4db7-b2f1-a68e0e9afcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca6172a-a5ec-4d2a-a895-65145467593e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8b46d9-ae3c-44e6-88d6-28ee275ee7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0412eae4-16e0-432e-b1c5-280b4f538112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2447abb8-e7e9-4c60-bdff-182fe43e67d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d623bd-7f32-45d8-ba14-c8b53c2dc7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81619056-dfc8-4001-b63e-7c574ef7cee8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5129ca-7c80-4327-962f-fc4f2885edc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28749320-831d-47cf-8dbd-d8ff5cbe66de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31ef12c-97e2-46ae-aacb-5ffb5ed58e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01aaf571-20ca-4fca-bfba-7ed2c89984ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fff678-a347-4e6b-a458-88e791cc28de",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d340b7-8ca0-4341-8841-decaec33b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8c990c-a8c4-4d21-ba0e-7e5afb8a8b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2eba6d-4326-4db0-8e8c-6b3e80279bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d35b7a-a2d6-4aa7-99b7-0c178b05dff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb41ca1c-53f6-421a-affd-2a96dc4da5a1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5386945-fe70-4ac2-9de7-6800a5e51f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dceaaaa-719a-45f3-8b79-7c97358ff7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a9f990-5981-48f1-ae8d-4f4ac32a8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0ee8b1-a3b3-4467-8c91-7e28d7548c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b8b935-3b0b-4549-bd37-f90a3392d195",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d5600a-f58c-4e05-beda-fdeb7aa6f099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1098a9-3371-4bb5-9cdd-eb05729e702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad624248-f51c-4af4-91e3-8078d0ac445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2010f890-3c96-49fb-8d08-eb8e3aa4805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ed0903-b086-4bb5-86d0-e79736914362",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b34afe-5020-4a80-baf1-40d64ff2a5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94fee71-aa08-4ac8-b6cf-fd2dc655e003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53909236-5094-497a-a268-d691592daaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbd3b10-8bef-45c0-9248-08fc5a96afc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48fdd10-2d62-4362-8d89-8103d92bf642",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c186c3-0a6e-46b1-9aee-3105ae7bf0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6ea839-ed50-42c5-92a8-f5c8afd3841a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3044b2-dac9-4e1a-9e3a-82e8d8d0f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3704c0-b230-4ed8-b949-4309243c4ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e98229-abd2-4d65-aa49-d90d0f89b796",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c5c61-34e3-4dba-93ed-f67fc7398b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951ba3be-27b5-4c76-9a7d-f0dfcd35998d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63faae19-6db1-4df4-8e57-aaba33d04d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "be0f5b4f-88e3-430d-816b-fc3a42972089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a097505-a0ef-4391-abb8-983790bf4005",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa35258f-60ab-479e-aedb-b9638b9d342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c040f484-23f3-4ed8-8b25-600af262e523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f28a51b-d28f-4078-b06c-2564999b9170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d4d448-c242-485a-9236-cdf5f17c4beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63a0102-6e80-4d70-ad0b-c3499a97043d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6a19e5-2448-4fd0-a745-f53589908354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896ba557-5894-498a-9de9-576e4801d0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbbc81e-06c0-4c29-a614-8041a761c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38bf7a00-6cc9-4274-a294-763618d8eaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ef7c0-cc6f-4da9-9378-da0d1889dd88",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3988cfd-fd50-49c3-98af-8e9a34bf2e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cbf17c-9246-4e62-99aa-d5aadacd9af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a61bd41-d17f-4da0-860a-5092fc5072f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e17d9ea2-9aa9-41e9-9bd8-0a4b1d79350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b14e024-ff0f-4a83-812c-ca5a389e105b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8af1b3-3636-4dff-a15c-2137ade987fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c2e22f-5b39-4cd5-b20f-c08757b6b0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08193d99-fb8f-424d-9179-d82308bc4f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1da073e4-3da5-42c2-817e-3af88bf06073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4683f-644d-4a2c-ab32-92c1f78964d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4de2ce-7f35-4e57-bae6-ab406d096b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbfd581-5275-4b02-b3d9-8b400c7445ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7125f387-0687-47c8-86cf-fb56f5fa410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c54f5dfc-9d19-4743-9b5e-7f56777acb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c33d6d-39f9-4217-b193-00e5224ced78",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e67f88-4dd5-40fd-88ad-6aa6553bd17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d509162c-b39d-46bf-9cff-3757ec846840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a6a278-7d06-41ee-a8ec-c5a828984ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1f529d-5c6a-4aba-8b91-391c8ca27889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d9db29-d538-45f7-b616-00ebb70adfcd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1c1151-9bc0-4fd9-a463-8687d09f9072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b969e6f-fd42-4a12-93c7-5d82da6ba23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0b1963-2778-4aa4-93a0-ed5864e3e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0a2259-7ac3-41c9-92dd-00133ea5aa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2fac7f-4ec8-47cb-8110-0049d50b1820",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d98d92-99a5-412c-9de1-d7b067cb5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c736575-2b25-4ce6-b4ef-81e613d95f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65421018-246c-468e-b18a-6b3ebda11eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd2458d-feb2-4f4e-8155-a5b375eda90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2c0850-4825-4957-8ba4-53dbd97b2d4e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1fc111-0edc-4ba7-a773-ebed80d8790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7dd253-e580-44d7-95b1-fe72e425bdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87fd0dd-415a-4481-b4cc-741da992ec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e6510-44f1-4e80-91b6-d6ad7f70478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c227c5-e5d6-4dfb-ac6c-d81fe6451d58",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e73bf-3a55-4941-b8d9-99355444fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d16dd8d-35ab-4ca3-8629-d05670c58968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86e65b7-b8a4-46ef-9d9d-ad95bd723f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd0c93f-9554-4a61-bde9-1eab34a43ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e36f658-792f-4310-9273-e3e097101a6c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ab736f-b607-499a-82d7-fc50cb19108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e350e-70b0-4a73-9695-26061c3a3187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294d2feb-028b-47d3-9b08-1fb297eb575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0a8998-2d56-4b56-a58c-4e720718b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3282ef9-5f4e-4ed0-a891-e6a13c042f18",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c9540-0046-47ea-bc9b-0efb48049ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30189479-818a-45e2-a963-759122c86ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c878b7ed-77b3-4e27-bb6a-2a8872192a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c9e449-cb41-411c-b4b6-4f330ed5a9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408fa1c3-e3a0-42a6-9179-122b216db893",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4b91b7-d1b2-458f-bf1e-02dce36f3309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accd34ab-8dc7-4c73-9ce5-636fb5143f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7352dbf2-77cf-4f7c-b06a-8a48c7d981ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec854504-b075-468c-8cc8-5e8ab16884a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2672f31-ce8b-4745-94b4-a47b2f0a0ce2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb3f79e-f3fc-4bc4-ba3d-512d337bcce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee9fd95-0e5d-42de-a83d-6b2c9c10a13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b3a2d9-527f-4564-ba98-e309fe7bf015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4914736-4f7e-4eac-a098-dfa57445b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c852c6dd-79ec-47ae-9a77-38bfbb35c0db",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b53dd6-463b-4e1f-8e9c-775cffc69594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c6fa92-14e3-41dd-8718-ea7bc5fbf99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f94701-63e9-43de-ae8b-9fa538a19ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00011697-212d-4157-b8fe-ab7759d727df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc459f9e-d4f7-422b-a5d7-347fbe1cc3c7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a71f969-84cd-4240-8a3a-8aa88ef4443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea456f1c-c799-43e2-b5ca-171045e9914e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0130e3-d642-4297-8329-7902c974af83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db64bc86-258d-413b-84d4-0c5f7a2ffe71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e3d6ab-dc86-48c3-bc6f-67d742703a56",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6958a858-b549-4d66-843b-eebfc05d5f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cc9673-84c6-404f-b148-23245c29a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b1d0bd-6e43-451b-a68f-5007acd583e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40d14ec4-264a-43c7-a914-ef81bca96cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a15f76e-b0f8-44bc-9f13-b14ff74741bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e251b025-6e41-41a6-8cab-ce33e8964f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa5b6a0-693e-4224-a599-462244171971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a91ca4-f363-4893-9353-8349ea74bf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7563b697-67ae-47d6-8817-09e3905929e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8651f6-16b9-4c75-99ce-51f4d69f1109",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2276b0d9-326b-4569-8034-9a6516911cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec72a07f-a31c-4090-bfa2-cdffc30a4ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd01fcdf-6463-41e7-bb54-02a0fa2a8368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73513c84-3ff0-4a13-8d83-4a7c48993751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de6b634-d5e5-43e0-b608-f43ea0686576",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6bf624-29ed-4d8a-a627-2582a35bbbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8404aa3e-c12e-44ff-a3ee-8d47960e0204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaf13a4-314c-44f5-b351-ca2f557fd515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ae07d4-0cd3-4b20-9628-a107b85be36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af04b22-8932-411f-a437-6538a74f02e5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f448cea-34cb-43a4-8ce4-a2cd5a67c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbaa55b-4ff9-4a30-a40c-4af566de49ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad01e6-9955-4b9b-96e6-6810f335822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9755c7-3005-43fb-8f88-09cae45da83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cf6d7c-8159-43bf-959c-266e51c28655",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1d3e91-a893-4b7d-83f9-36d89d0a2c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a570ef-13eb-484a-b629-53dddb5470a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee560c8-c98d-479e-9de6-ab1fc178e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32735a53-b6a1-4b61-b290-c365ef1cc643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf3575f-3226-4284-8aaa-518be6c56ee0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5618d22b-c6f0-4394-8be2-666ff149714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2521906-cedf-404f-8ff4-9709ee466812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438754af-4dd8-4e58-8052-dfc7f474ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd54471-2976-4bc6-8bc2-46f6b36781fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f537f665-2e4e-4e54-89d6-f1c6c85c56a5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dab99a6-815b-4253-a837-84587464f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccf5f8e-2c97-459f-9200-4ab2a0f76c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a10fc05-6835-4c0d-adef-7ffad602b2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77e49860-97df-4bbf-b721-5341a7e1a8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9280a2-6ef5-4934-9320-0d1a974aab66",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc5008-e506-4321-8aa7-2342bdd669d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5753b5c2-c803-4b99-80c1-ed19d0371281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4a6294-95f9-4816-8d58-ee99e2873a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac981f98-4945-4839-a15c-9aa6826f49f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc5c4d2-4fbc-4d7c-9c76-45591e94b389",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de6ae25-2818-47f7-8b7f-81ed2839a750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bcb0c5-b2cc-4a2b-b638-c954da1eb960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92745037-9c16-4e22-88bc-98ebe661957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e52797c-20c6-4e64-99a3-68a18a7431ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08550ada-8f51-484d-a992-c68525183d10",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d9e337-85f3-4f14-bcf2-3ef88781f396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e46dd1-ca43-4a82-97c2-50f4fc07b45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8238840c-847e-4bb0-b956-effa3c7c008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11a340f-266f-4877-b5f5-77c39c1dde39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e678c3f-4c9a-4b14-8e16-07a923729520",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c377c5-0af1-4eb5-b343-9b1fa460d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458eab1d-582c-4ed3-974b-4b80e99a217d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f2341-2692-466b-9a50-8923dfb65cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa96f96c-5668-4bfc-a210-9777cbddd41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf90736c-1de6-4341-8af8-ca13cabeed04",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bb64a5-ad62-47e4-b210-3d18fba27b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c5f69e-9a66-461e-9380-6015d3cf1861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdbae24-93cf-400e-86cd-18c96a4337eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6970d393-adb6-4d02-ab73-bfdae3a6c70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd0089-3f75-4149-abd7-214d322e5f5b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b9c1bb-d808-494d-9ea8-6334ae3f7206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df635a74-362c-4dbc-a740-88915e8f61bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd41c43-a474-4ee6-bcfd-a8b4975be249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e97e7f2-f0b8-4991-bbbd-2c180ebe7e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585a01c0-270b-42e0-bf9d-1fe446b31307",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f38ce84-5315-48b9-ab7b-3525f0ae9bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27c8348-b841-4086-ba00-61ccc3576307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c151076-9cb2-42fd-a826-9d8ff2830d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf42b550-6cca-445f-a696-837d766fb340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9883ad4-6f04-400d-b635-96788099a171",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5f6495-97d4-4b2b-9967-08206a68c023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9e7154-d8f8-48e5-865c-59f5ae8df3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d092aa7-153e-4206-9202-59fb7be0169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50acd7c5-96ac-4f96-a5d1-f4ba848a9341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ec2e8d-6831-40e1-b3ff-757a91f8d078",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375edea-0643-4a58-b7bf-76a5f72a23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba37a9-28b4-4d97-8705-c6fad519e4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55d5277-9205-47d6-bd1f-21a7058785cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88818157-9289-44ff-886d-72fecd562c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e959ad-46ae-444b-bae2-4dfc94ba45ed",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41238f7-6e45-41b8-9dfd-2ea42f97ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a0a6e4-ad23-4ea5-931a-7be302cf4256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38e0ea7-7e3b-4bdd-8da5-b78fb562f237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35638af7-d65d-4c9d-8f68-3ff76211c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f18ded-c12f-4846-97f1-f773b5781bdb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e60b2a3-13f7-4258-ad13-31b8657c942b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcadef6d-704b-4e8b-8ff1-08df55ba6a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd5bf7-359e-44db-b47c-dfafd81ebc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20aab694-6af2-48a2-8c6e-8e882eafc272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a890be-403c-4a9a-9386-6fc0d05965c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ef3245-01ef-4ea4-a6a7-01f13ad4fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "551b74e5-7af3-4fa1-b34a-ea234f543012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8382c1f-af20-44f0-a64f-2b185654df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b693cb69-6ea5-433d-baa8-7d494733d423"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abba7947-933f-4b2c-959d-1e1ae8cfca7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e942d34-64f9-45b0-b39d-dc92f9ab19f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daebeca-6b99-4b15-8602-86f9c7784fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92d30269-0194-4605-8f30-cef3e1fca864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68f3b34-cac6-42ae-a5a2-8b86176f7420",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea3462a7-337c-4ac7-8c52-5894c148b723"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5492cc4-ab6c-4653-9d87-a6210cdf4fa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a9795ba-5322-42f4-9d49-cd9e83501b32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ac92869-182d-4f0d-99d3-34e48edcc03c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cde400f-74c7-45ce-b71a-db665d5bc2b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69981809-4ead-4ad5-89af-cad914a806d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29c9017c-66db-4ab4-94c2-231536aeb3b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c62949e-5fd7-4384-a1bb-1e1b4bf12688",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "640d12b2-cd6b-49e1-ad37-3084afb10e8f"
                }
              }
            ]
          },
          {
            "id": "8a4e500f-5b0c-45ad-ab79-d9cb5d1fe58e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91677ab7-02c1-468b-95ff-fab1d58b7dce",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "71fdb81b-2008-4f7e-bc00-16128ff02140",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e2c691-736d-4d81-a8da-95cf39e0a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b01bce4f-82a9-4736-889f-b7b69446e12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8478f842-d62f-4805-aa4d-61b39948ded9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab86aba-3896-41cc-b7b6-3be8433f8033"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eed7bda5-3475-488f-85ab-26b0feb7d4b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf9bd8e6-6817-44ed-b0b5-0633a2044701",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c413d29b-454f-4ca7-a021-5af24ea6ed89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa9563af-8271-4eff-b782-ee474342144b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57c31942-f2c3-41af-9b15-f35a53b0f2f6"
                    }
                  }
                ]
              },
              {
                "id": "fd73b900-4f03-42b9-b859-1c49b6978b4f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e1ab6fb-6c5c-4c2f-b3b6-9bdd4ca684f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9104fb0d-1683-4ae4-bdcd-fe723ba21dda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b94be571-8a94-42ea-9c0b-ee04e5a1bb50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2337a3fa-2119-423c-ae2d-3c75dc11c7e6"
                    }
                  }
                ]
              },
              {
                "id": "667c44f5-27f5-4463-ad30-33c1d44adf5a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1efeda7-83b4-4ac9-9049-fc4ed8186c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c78ee8e-7b36-4468-b98d-e4228d4fc94a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64748f8e-1e3d-451e-a728-6270653427a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ef83bd8-c0d8-4081-9280-aec3d8567dc0"
                    }
                  }
                ]
              },
              {
                "id": "65137362-7c19-413f-9279-36323ad89d6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79411bfb-3be3-42c1-9095-5c531b22408b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe388e65-c087-4084-9707-b3e9888d25e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a1e63a2-88c2-4431-b71e-273d3d41752f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "598bba52-3f72-4d4c-b5e8-79ad13569d58"
                    }
                  }
                ]
              },
              {
                "id": "0aaefc0d-0a27-4279-924a-c99d8ecaab23",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bb8b3a-bd9b-45b8-9013-072315798e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41d41c07-e525-424c-8983-3ba24c613a32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb1f9011-d876-41a5-8ff7-77760d1c1d3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "05a21f63-b908-42e5-a196-1f9755173e1a"
                    }
                  }
                ]
              },
              {
                "id": "de9b44d7-191f-42f7-80b8-3402bab66e92",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f82ed4d0-5786-4b0b-9c99-cb78c9777d54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ad1fa95-3021-4a70-a3e5-c03290b02be1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcec243a-5d79-4fb6-9594-840180cd3b7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f0f264f-72e5-42ff-a2fd-4f31ec330581"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd620c73-0386-47de-81e0-7abff969fba0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d01cf578-c4fc-4d88-956a-f5ae7356d810"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e82efda8-8594-4881-8115-886eea52ce4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06b5e701-b788-4776-b36c-32fe92141e9f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf153276-40cd-48ef-b611-312f5d8da586",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9407a707-b949-4f27-b213-b5d47a0f038b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bd2f729-ba37-43d3-a41f-c83ea8559ffe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bcef5fb-c485-4fad-ab9c-91eb0848de73"
            }
          }
        ]
      },
      {
        "id": "5d889f76-b0d6-4047-8543-fe05530f2091",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0bf0b52-38da-4d82-b077-3a1d83da16dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a80b7335-927d-43f5-9db5-0663973821fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e51839ac-a2a2-4438-91cc-a3d10908f081",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7de876-bee9-48e9-9f28-c26c357c0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e8c96d-d819-4bfe-b9b2-a4e1123e2893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724b7945-915f-4497-b869-711d3dfcfff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "730946c8-4500-43d5-b432-576b8285846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec88a57-5ad4-4114-b613-e309a06ce877",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d4d53-a29d-445f-b0bf-51f354abe514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09be4728-b631-4139-ae66-2703e9283edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da8f973-49fe-4897-b23b-c43aa85ef3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a050b2-eaa8-4d2a-8f35-33730cd3467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b97e64b-b21d-41c7-8e29-3f132d864d6e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b356cfd2-1ca9-45e4-a70d-575914a73d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c2bbe7-6c14-4234-98b9-f2b3644eec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bcb542-77fb-4553-b7e1-8ff2337f0592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac8b99b-b886-4472-9e1e-03fb99c09b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496b44c-d7f4-43a0-aa6c-4489900f2212",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415e9bff-752a-4ef0-a43f-7a9aa187a8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab28cab-0867-4662-be36-000015d03c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fae5a0-3ccc-4b9e-9c44-0375b0064202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "095a5d8e-152f-47b8-982e-575afdea8de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e1b0cd-a973-4852-acca-bef0a0700770",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f67f071-92fb-4962-aa72-1fb2d7adb70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfd8192-e241-485d-b083-c7b36431ca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c55e85c-0973-4b0e-a67c-ac6e25677872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aa83f7-4523-4aef-b1fc-a4ee240f4fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51200e5-e90b-4682-978d-088cba1d2901",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ffd8e5-614d-4e53-8419-3a18599c400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db0c98f-b222-4469-9825-a327aaefc174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ddf71-fe10-4bf4-921a-5bf0b47a998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "525d138e-8551-4785-bbbc-ed1ebedff33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8d36c4-9086-4e23-9158-9ae9ed222bc1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a102c0df-3155-4920-a226-28ee08845d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5144090c-83d8-4c1f-bbb6-c23dc205b536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf55ef6f-c3fc-4f06-878b-dfbbf7e75973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f39a480-f044-4c45-9c17-b5aba306f6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54075c32-3ecd-4260-814c-a54931af9f0a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e1599f-97c2-4e29-99fd-1f920c5a268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e657c2df-69c1-45a5-ac32-12246282d406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d166f2-5ec1-49b5-842e-c7e74e5fa2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "573abe9f-10ed-43c2-a1fc-7c0ca54415f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834d87e-88db-41e1-8469-f06f3bd991dc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535f764d-bb09-4b83-87f6-af84fcee36ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4adbfba-6673-4dc3-a44a-07afdf538cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cced4d-6146-40bd-ba5b-050915e20c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b9d3b8-5dad-4be1-b804-210fe0787da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b178188-b0d1-430c-bcc9-a6154b94eef8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121926b3-6105-433e-99c5-da1875a7b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1937c7d4-ee0b-4ccf-8ea2-c7ef36855091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d8dda-51c1-4a1f-8be8-d54bf3d79fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7de5723-81d1-4ff4-9c1a-1d542c916870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7edcabc-f904-4c26-8921-9c03c6b18294",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af5f41b-f250-400c-95c2-1c1f23790c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582ba01a-cf82-45f2-ad40-37c57b90c644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e83390-aeb8-4d45-9401-4bb67ed2bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "727808a5-1855-4ead-b3ce-0db7abebc901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f42ed0-07c4-455d-af19-edc50286c00f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6deda07-db23-46a4-a6ea-3bb8e0e843d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb26a7bb-85e7-4dfc-9c3b-927acf6c1ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7555283-fcb9-428d-9e43-4e3ef7bc14cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97caee8a-cdf3-4b96-92bb-8925703cd181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733ba5da-61d7-4a71-a2b9-7981ae67f914",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a03918-7e05-4278-9d97-6323be19807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c95659-6cda-4e1c-b4c8-db8bcf0eb6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094e5a28-6b93-4759-90b4-d4ee62b2ec5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad914c9-18e1-4220-a85a-127f453c7704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fb1c0e-56b5-4ce6-b1f3-b0426720daef",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5449ef-beed-4e2a-9354-2cc9a60dc931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2dea35-9992-490b-b060-7f591f0ba63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457006be-f0ec-4296-b62b-125fcfda6958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a04082-18e2-4c36-9e9f-d3dcee87b11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cf0d25-2ceb-408c-9668-4d3b1c4164ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec9e08-7ecb-418e-9254-eb1bf2a882f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579fa570-f23d-42f8-9a0d-8c7d425325f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1b8ad-7b55-4c77-b9dc-94da01453a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c306e10c-b3a4-4c51-9358-a2002deccc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd283ca-2a5b-4412-9e9b-3c61f0758d88",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e4ae7d-76fc-4305-86f7-73e6508a5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5818dab9-0c41-4916-8f55-e477765aa464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d827ef-7f88-4c85-98eb-31654f3c0ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c67cc3-e6ce-4653-87ad-17c061fb63a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66da8ff1-6482-499d-ac39-10fb5f996bb5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dff7cd-805b-4854-8058-4487b61b86ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d582ba-2fc6-4af9-8e8e-481cb9661f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d9832e-3b1e-4b84-89db-d0089c1f52dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25e9385-8fab-4a22-93b0-8a6e7d476272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f1717-8283-46bc-8fe4-3424f70881af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44596fc-7882-4131-88b8-1cb106f62517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9149fa14-89cc-4a19-a4ac-0d254113c60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e9ef1a-e346-47e2-9654-65fb07f0421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf445aa9-e0da-46a8-9358-6e8d6cc27b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0245a882-8c28-4c49-9f29-5527bc7174db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39da02b0-9d07-4d45-a637-5d2b195ff997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0b2092-6a41-4a24-9191-30768f2f19d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b4d766-7a96-430b-a486-437e95a27493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee7b1cf-67bb-4029-b85e-da199075a15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ef82c-fcab-4d32-b387-b8a553745522",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bb0f5a-a121-4a18-b94f-e6945c2d45a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f78934d-9d63-42f6-a58a-fd49000bd452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa55efd-5448-4af2-94dd-c5e24d37d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ccea26-5779-4b27-a685-9f28da504269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229eb6ad-a9a5-4347-aefb-3d61c6dfefad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a00ff-3628-48c7-8000-467a8f4ed96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4912ca9-6885-437e-a1aa-9f5b577c33c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017874a3-5eb4-4905-8e2e-570e78e9ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90007a5-a94d-489f-b762-024696f30fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39d6e5-4e67-46da-abdc-19dd742220cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23641cd-bf35-4b5d-a740-249a3dc55081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed58f7d6-fd5a-48c8-bb0f-47ab1981c286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cce03f-ceb8-4151-88e8-b0477c7e94c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7673b6f0-b4b6-4010-bf23-b57360dfa4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d092cee-7f74-4c4c-bee7-67e4888a0d78",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6920e5a7-dfdc-4f6a-9133-6009ba4eb2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f87736-ecf7-4cf4-9f24-518a81febda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042e5257-a82e-486e-8118-987b1df90e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768e194b-a098-430b-90f7-2da6f1ef1ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ffdb02-a865-45a6-afc4-bed2e096274e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65070cee-bdd3-47f7-8233-f12ffa8acc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04787bea-b2b1-4f65-a7a2-330af64be7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c114089-5d47-40dd-b442-3ba9c7ef0597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf66924-af73-4b0a-a529-274fcad0dc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c8a705-fa28-4c73-97df-9b3ce5d51cff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88899a-d2fd-4200-b3ce-2b1e3e09527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfb45d5-a8ce-4ebb-b0a6-75731a7fbeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2626f744-ea12-465b-a04d-4a07182ca9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0402d5cf-19e5-4fee-80a6-ec80773fd3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace5b068-4f92-4412-9dff-f101d53c9fe8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b46c97-6ab0-4fc6-8ee5-57f06690896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ee2bca-3436-419a-9844-caa1ca259cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a3348-be30-4d20-a508-b34df8dd0963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abb803f-7eed-4ed3-85dc-c4a5bfd70239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5712ed53-51a3-45cf-ae4e-4a092502d04a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f4544-89bf-4cd5-b531-b96fe89eb559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b7bc04-d321-45b3-a134-b8874cb765d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a19587-f123-4124-9248-4d7880309915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25376855-3e5d-4f54-ad7d-a3112e552d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f80398-1c90-4705-bd49-17478471c407",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cf0b9d-0d1b-418f-a297-509737af3d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82796bf-648f-4dab-bb59-de8bf0cab2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d0ed4-a88c-4fd4-8583-1c0a9dc0f657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c83874-3382-4921-80eb-7dbd3e37d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9180139-6f02-4bed-a2f2-c0068022a1b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c83520-321c-438f-85d0-93c0072e0896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76cef98-2175-485f-b195-9fd799bf5874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b73687-f03d-49d2-9737-9b8043f898d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee994e1-b147-4b3b-affb-08d64fad5b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26648c0-16fe-452b-842c-c9b48d501e05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f584e7dc-c4a9-43c1-a0e5-43fb1c8edae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0fbfc9-95db-48c8-81c7-2f61a1a8ea41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e24089-f524-4577-9514-98d7752a5c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4a4fa4-63c0-416f-a743-bc14a6fe3de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36992768-c0e7-4f9d-b86c-945146f3a6fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02bbf70-f245-45a0-a090-0302966987a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7384ec-5c6e-4e6f-be0e-3953a4fc901a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1102cd46-52fc-4086-914c-f99f41aeb707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c7350-f94d-4836-8b1d-92ddd6125bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121eaec7-4e72-4a3c-8e44-19a0d718555d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b2d172-fe2d-4007-bd08-d432686df063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cade5993-b8c1-4005-bf86-055e332525b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1520592d-f4ec-4d05-b3a8-0ea4ecf121f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694885d6-4171-4a64-8c99-daa4c2a16a27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8de97207-57f2-45bb-a13a-315a402097eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69562499-4c85-4ba1-adba-03b0ebb8a333",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0105620-825f-40a5-b591-673c3e0b7e71",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff69a8a-b617-470f-b60b-8a413429b85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3941a99a-c6e5-4fc6-b522-2761f12ea103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60c28f63-0f7d-43fb-9c7c-720875980ec4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01c57ac3-e2c2-45c2-8ecf-20b9e1f44658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3436d3d4-a910-4f35-93ad-799c828a2cb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3955584-dddf-42fd-ab6d-954078cb667e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c78ec72c-d10c-423c-914c-a3955ae17c94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18992c1e-43de-4780-89c0-645096885dea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82e7d2f9-f5d7-4b8d-b7f3-0f2473e3c4f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28d54fad-509d-4dfb-86e6-02e507d4bc33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "140b01dd-e0e5-4307-bf4f-57c1012288d1"
            }
          }
        ]
      },
      {
        "id": "b8c156e9-0454-4d4e-b23b-39e1f0b9e37e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0daccb65-6841-4159-98c2-190e7e05d1af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31c018a6-81fe-488a-bd38-b80a9783aceb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f37f7e06-0812-48cc-a714-8e6561ede136",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc318c0e-a90f-4e3e-b97b-01a8690152c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9de5f6-c4ec-4e3a-a8ed-e6126e916835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd9ab1-3f30-4c0a-ad54-002078d61a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3acfabc7-8ad2-4797-a95d-e3d776f7fcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f0b82a-b41f-4310-a7f1-226519f0dd93",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af81d60-5401-4870-a136-5530622a4e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7900b6-70fb-42eb-a799-bf9dce545af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630c49a7-a427-4d46-bb68-2da7569a822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2400ca17-2890-4899-babf-d89a12e05bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe7a943-bcd9-4035-b64b-129044662c41",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a932a-2849-48eb-a772-0b912331f679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d83b0e-6cdb-4c6d-867e-904bd905806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96085064-d297-47b0-92c7-926d9d6076ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e5078a-da9c-4b1a-97b5-e8c0e4e60c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03656aa-0488-4687-8abf-413a715c832d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37141824-0385-41f1-83e3-2601b643688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791c2a8a-1e81-4b1c-ba42-46490b659218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48d8ba6-3f72-41b7-8bb9-84a3f8336dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "135efd2c-dbfd-43cf-8350-4427416815b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adce59b1-f722-4eb8-80fe-422c8c700be3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a1fae9-7328-4b6c-9184-d7d211e13a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb2359f-2751-4591-ba29-3d1d95e8d3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9560e7a9-45a1-4b93-82bb-d028b0fd1274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1968bebd-b275-462a-a46a-6421395a808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09774a3e-bd0f-460d-9f6a-d6d2f3521a57",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f755db-2dd2-4f30-b973-6026d8d89d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f635740-f159-494b-9997-eb5b14564513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ff8019-7221-4075-8008-c277cf9d1bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "236c76a0-9246-4f09-af35-1980304fe919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d0d95-f794-422a-9ef5-e556889e09b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b182998-ebe0-4504-9ff2-1a447b473cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3840636-e7aa-4601-94a8-63a8c0eae830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac072e52-f88e-4bda-a8ff-d3c34e577339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c4e886-9a7e-47b2-b9e9-12a37ddeedc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fec45d-ee33-404c-a39b-498be1305f47",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285444fa-eea7-429e-a81e-480f85cb2287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89a062e-2b43-4a4c-8c8a-d97dbf947243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3956d356-9406-4735-bf33-1fc994b201db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af259ddd-242e-4f32-9bae-281808219a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451377b1-e8e1-4ee7-a267-04b8e3fc9236",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f6225-8bf4-4aa6-8ef5-2b89451a47a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31219e3a-1fec-41e6-abaa-8f9fbf36cc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d5ad64-dea3-4564-92b7-bea3c0ec6250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b366a65-9d3c-4552-a5b8-ea2dd60b79dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3030df6-6afc-4775-9209-7ebd6b4d6a94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184d88c3-0732-498b-847e-00cc866bc4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6254af29-237d-4649-b824-b1b34246640b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47044d7e-aa65-42fa-a1d3-fea55e8f1115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f642d3-c356-4894-9a70-d4a3a0c04db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0636d83-3e07-4642-ad95-ac2ee44a9753",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e239794-f2e4-472c-845b-88b26da89a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c84856-243f-4c60-a13e-1cae3a9a4b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9579cab1-7093-4ad4-afde-9b57ac3da2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6e75e8ef-9340-4a90-8900-f87877d2674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594eba1-acd7-464e-a74e-75b423106364",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b282575-4673-4757-bf9f-7b20422ceac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e7a9d9-b240-401e-92ca-9aeadbb640e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ade87-7f3b-4978-aac0-fafaf1fa1c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbacafd-02d6-4877-b67e-bded24fa96cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbc0996-6121-4cbd-82b1-1defc09fc264",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a48ac5d-4200-4418-a9e3-b1e32ac6393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdef5dd0-c43f-484e-b550-f5c8ad494fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138300a4-cf95-4dcf-b192-f9a258ac7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "831bbb29-2272-452c-bd80-cf7829ffa9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdce097-352a-4ae0-96bd-3873c76f477c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd8f95-ef97-492b-802d-d47c8cb66233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104ba8e6-287f-4866-9efc-89e98e31b67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41387f99-9ca2-40b8-b684-c825b15a454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc81a11-f747-4a92-bc0e-2ab9c05e02ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e419b6e-cf40-4352-997f-fcd859e1de4a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d174613-a3a7-4a4e-bd3f-75427c2ac96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bd1273-5534-4fee-ba72-cc23b060ab8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6c72b4-f860-4030-bf93-52ba1c63181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e56047-62f9-4012-a538-f5bdd8b117a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8869a36f-053f-43a8-8504-756e1580fa4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcb7d6d-75df-4f7c-8832-6aef84c847c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7fca6f-52ae-4277-bf70-0a3ad4cc1cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcff6744-a976-4001-a635-ca834c271889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68cbb589-9a79-4271-bec5-a9267fde788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758ef276-067d-4ff6-8007-00cb674e958d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1207a578-7654-4d17-badb-bf56663a1dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb5f479-0ece-41bf-a434-00fb7c8e063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfb729e-dd42-4492-bf89-9b34f2ec2c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbad4791-066c-4cf7-93c3-5f1c69fa8544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a231f1-0d1b-471c-9abc-a643a7d10efd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ca7f62-6cf5-4845-a9eb-8a1d5722ec59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a05de49-70ad-4c41-acd9-c9c00603e5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193398dd-d664-4d62-8015-a3032d91593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35aa2398-8e1f-4dff-9121-44ffb657a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e02984-2eb5-4926-9ccb-5b229a8fe5f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b0313e-6c80-4e4b-8fd3-6db82eb32d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd430cdf-6e63-4abe-ab95-c11259471b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e110cc9-9d0b-460a-bd4b-44d1c156ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b28534-536e-4d56-b301-b810d0c7253e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c092a3-9b20-4c24-8ee4-eed9caaf118e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7e8df3-1aa2-42f3-a71d-f125c8767e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23a5629-5c14-4639-bab2-a64888a1ab8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1aae90-c478-4de8-8a99-e89562c4afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf48a53-0407-4290-ae64-ee50c4ff92ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca8c6d4-efbc-4104-993f-610cfd06281a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a2cf0c-ed1e-43ee-ab40-b54a46353ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a12c0-f2be-40f6-a214-82bc2bd5ead3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59a11dd-bcae-483c-a74b-2aa80c63cfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da51db19-9489-48a1-92b3-d1cbc59a9d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1f0d57-e82e-45f0-9838-5b1637ece335",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e79d5ae-b02a-43f9-aaf9-e5f3b933d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e177de-9e08-43ae-bc03-eb35b7fdcc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c086a-65c9-4979-8170-c0ed080110eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a975226-9d99-40ba-86b6-37ce3d19c7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570da4ed-8e5e-4d28-bc42-783cb33c113f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5684d83-babd-4e33-8b21-9d882f75a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df45ea2-d696-44e9-b539-972de2c60c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd53b71e-6024-405a-b6df-9c421bfb4b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8238538b-8068-43b0-b096-858a85877c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137eb9a0-5719-484f-8b89-e415cb25f538",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0e31ba-0158-4ee3-bcba-0284f1539fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58868802-4be6-45a7-9bf0-bd5b506add38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ecec64-e350-426b-910e-b52dd52f9132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "750fe207-2ff8-4cd3-9f3a-dee6a47ca11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb1afc0-1b17-4580-aee0-779a7ad37661",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a79e8d7-cefc-40ad-b0ac-b469457d577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9638235-30ee-4eca-8494-26145c7a1531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d125b099-b731-44ba-ae5b-c254b7a1eae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ff0e54-2189-4902-b4a3-ecccf6d52abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40ba54-2e7a-4edd-a0e4-7b26036e1873",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46e226-5d73-4828-a102-f6331ad6964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a064047f-3022-4e9f-8519-959fa2814e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5d391d-1dc0-4df7-9199-4f61d004a152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87163948-cba0-4666-8f6a-ca90b4494712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b4f61b-1d90-4ae5-a6d5-9bbfba402b17",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfff2c10-3426-4c5c-936a-70a043dd81a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f8d53b-c6ad-4bfc-a777-858f9f1f51ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7814cd-07fc-4cd6-8457-296615326fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd580b8d-2e94-4e02-86ac-f61d63b644d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b06485-9a12-4902-8884-6d3cc3b195a3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40ed8df-6c6a-4c32-8886-66bb01a79383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba500874-4248-47e8-a920-73226f64844a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce2f0eb-a7da-4e9e-a4eb-79ecf120f595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be39d460-c9e8-4388-b53e-beb213a4aac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7232c9da-4c13-4e7f-9a86-79275cfdf05e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db7c137-b724-4f9b-9c07-9d81c6b6759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f98b636-bb7a-4b7b-a5a1-d77986b130be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f0280-74e0-47fa-896d-20b711c76760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd53d585-53e5-496d-a27b-85bc0bb209a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96a5e3f-f0f4-457d-87e0-0b158f5f407e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9cb349-0360-4d51-97b7-f74a333b8760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbfd130-cf84-49f5-97e7-e1f6007eddf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca0854-e0f4-4c46-bdae-cd884b8820c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511fa8cf-e77e-4fad-8448-8f810a2a3617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d22607f-c7a2-412b-bd7e-03aa5846b324",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b7f03-e143-484a-8959-70581c96b2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eb571c-fe72-4d4d-a108-7566b4bfd713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aecdfa2-6afd-4f89-80b0-f5a696bd9069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "475c3e4f-579b-4909-a05f-fd0f2b7b6c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2479f885-e17b-4617-969d-d9bbdc023f20",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76644715-82ee-47d6-8820-c9da914ea76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fad71b-5dd7-4223-aabd-52719f824116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9412a857-204f-4f84-a301-31a7e11066cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6b46e3-8699-459b-8206-469ce0825298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b50b8-46ac-47ce-a39e-1feb74372222",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a1a87a-aefb-4794-b2de-1f0999009431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c79a49-ac56-4da1-996b-92352f9885d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d6424-d06f-4881-8b4f-212f53bf1195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da6f78f-f65d-48dd-b7a7-3b7cfaca20a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4547f3d-1fdb-430b-bd30-36b6be9bb3c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950bd97f-d392-4b37-8456-31d77115e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd65ffbd-0981-44e0-9f3a-109a0afb901b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f236194-e48b-45ed-861e-6c13f97387be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9294f15d-d3f5-4c45-b4ec-869715035f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cabfa2-5fe1-4aa4-aa32-66b72d1c48d8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398414eb-dd2a-4f40-b787-18ff55211c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34df9a4-d5c6-4efd-8b93-77f232352f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc1d193-ed14-4e9c-b245-84b168111d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9474d502-0e02-4918-a8a6-1ce20dd02250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683beeb3-9248-48b1-b55f-c47600e26fcc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7ee510-ee4d-4832-b1cc-010a17028306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6218ee15-d53d-40d3-9e6e-43026cb842d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a425b605-3b30-4252-b24b-d1f41802c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21c27f8-19e7-442a-bd50-4df0615609a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6991a348-f207-45ea-81b9-815401cbb953",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad0800-6ef8-46b2-a134-9e4639390c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b7d0a-5d0d-4ce8-9e5c-f6dfb8592030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff1615-589c-4bc2-8008-27586c717c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb95ba5b-1a34-4843-a8e7-a80b46a64aa5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2853da64-dd8a-4675-83b3-a653ef36bc7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9d16e6b-fa6a-4924-932b-1ea0b5fab2fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9066ccf-5134-4541-8604-a64de4f1df40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5de3bad2-bb4e-4e89-9696-396a86412900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aafa2f3-318a-4516-9e7e-6f9155fc38c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "362394c9-6f66-4bf1-96ff-0c8096de07b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf70a721-5783-4c78-9d3f-cbb127d5d7af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9693aca2-1680-4118-bac1-feea8765e34d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b45d929-20b5-47e1-9531-7e92bb230261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd330d1a-b60f-495d-9fa5-19be5071011a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "739784cf-cec8-4df5-9368-b839caf735d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba6486fd-cb49-4ed2-a576-1b5bd40b2c8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ba58e2f-fec1-4a81-88fd-6a31285abd19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0796cd67-0cca-4def-a047-40b188f59265"
            }
          }
        ]
      },
      {
        "id": "174b53c7-6a9f-4d3a-8d00-c45dad02639c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87d0581a-43c1-4970-9dac-c59a2a3f8144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c05386e7-d0c7-4a97-acdd-9a1d048f8d21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8862cb9-38bf-4eac-bbcf-47a593883195",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8660c2a-00b1-4b6d-99f9-69d57f7cdce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e4a612-07f4-4bbe-b5b2-f5706137a0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97d3aa-af17-4fa1-b3ff-f2f5c7b69972",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6d516f-2a9b-4346-8a2f-bf52ebcfcdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e2f290-142d-4e0e-b5e3-14fcbe3bb744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627377b-f6fd-4cf1-aebc-8047e8d6abb1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b1b09c-3e8e-420b-ad9d-2e4ad96d8449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b115c3c4-dde8-440e-b0c2-961724c61ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac17efe-c290-49c8-bf90-8241b19c4649",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dbfd96-7fee-4a8a-881d-8bff86ccdbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ace056-7579-45bf-ab21-71db1820fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65765b7-13b8-4d26-bdb0-0eca08a28cd7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c19663-8ed6-4661-8abc-c115c21f02ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ff6bf5-f001-4274-8dc7-e9ce41ae1606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d6e1f8-4e95-4aa6-9632-b538ff1db187",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f4e540-c57e-47da-85f3-1499b5765c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b7a7a-013f-46fa-9b7c-1ba4ededb901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36635c23-7b8d-4fdd-8d2c-ebd87235a152",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b004777-8103-4e66-8a69-ed47bfdc0811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afefb801-2c1f-442d-a115-61c09efa4cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fdc60c-2711-4a08-959b-110e5da05afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e64602c-02cb-4fd4-9f83-22c755086d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf13e249-bc81-41e7-bb6a-10c9508f90e5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc1a751-83dd-49c5-9b13-61109d67c01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa29c2b-8d4c-4b97-a49d-4f155722dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779bde68-45ce-4ece-85da-81067f5083fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ecccc8-acb1-45b4-8e43-9e56dba39298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea137e3b-f697-428d-94ec-f6b1926ae117",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3b7622-06ee-411e-8a5c-75da60be3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd944f6-cb11-4ed7-896c-80bd089190f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8346624d-6aee-48ec-9110-786971e96fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6e6805-6d2f-4dc7-b803-6187f5151f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c3e466-f62c-4ede-9811-fa2eb3072151",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d403bb-80c6-4c24-8e18-ada0f3c941ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "275ad5dd-7121-416c-a3f5-a4ba8e917350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83806986-65c5-4de1-8a77-b705dae00312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263c705c-b344-4c04-a99b-5b0b6a280257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcfb22f-c749-4575-9da9-f971bec61e7c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa887d8d-6d4a-4d7d-b4e6-9357d6422395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257e1a36-0998-46a5-9604-01ceec2d2555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4aea54-9014-4f0d-8349-f2d8467848e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2b2d71-26ae-4e06-a528-c3a076d0c8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81258b6d-e03c-4a72-b557-6163044e7d5f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eea2a53-c109-444c-a469-49528bd23df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8f5507-08d1-4920-b9c8-4dc02c1a5940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6efe539-6f3f-4e6d-9b84-c7b5a4bd374d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab1ece9-c871-471f-844c-f5d770bdd419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129593d7-7059-42bd-a20b-1feddb2bba0d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3794856d-1609-4ec8-af78-f80b89e9596c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01df826-c59f-433d-9fe2-806044ad8570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249ff618-bf12-4fb8-99a8-f051947d6ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebf4ac9-e655-4fb6-b094-cd3054eb95ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3453c115-0418-4ce0-bf62-3ca2b33f4bae",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a610ab-7a38-4b54-ac29-fdab14d55831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3bc7133-645e-40e4-aa0d-10b2ae419b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9bffff-2b4b-4d87-b51e-32ffae0825bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5053850-4d8b-41f2-a81d-61a0d1f1cc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efa6f25-25af-411c-9ca9-0f39035b2f0d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd3fec0-1b9a-408d-9031-e00fa538ca95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a238ebf-c24d-4486-934d-2f2a56a7a385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35670a26-5a22-4eb8-a708-96c404826a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88bad56-f0fe-40cd-a120-4661e61c1897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdfb304-c6f3-4a89-b5d8-3ae508b7001f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc8b2ca-240c-409f-9c46-81878312b83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804039bb-6f31-458e-b946-9a12137ae41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77aa5bc-c2dd-4a21-80ed-5961de408606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe46188-9241-43a4-9b00-6abc749e3f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f3f2ae-caf4-4874-94d0-dc085b930593",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a924517-59b2-47b8-bbd4-81fc74ff56e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5693e5-e53b-4f3a-be8a-47e1d661aee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f74f8c8-e6e4-4532-89e2-b2c064aa874e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0012d1ac-3016-41e0-8588-dbfc00f220a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab7786e-2a08-4650-b587-cc54d79646ee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f463c0-e9dc-474b-b079-94c4007b7ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856390ba-88ca-469a-8639-872ea862b3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29acae5b-b614-4e4d-8c41-c69c189c3287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572b9de7-061e-49c3-bc31-c8718027a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84486bb9-0225-42d9-b43d-02882a7119bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaf0b2d-a715-4728-addb-c1d47e5d95d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436c9b43-1899-4fba-9ad4-9290a13b66fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4380b2-c93d-430e-bacd-fb271103dd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95cab67-3439-4dbb-869d-ef80b296721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b0cdb-aa6f-4c43-a4c1-e443fabcb059",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7889401-c6b2-4fde-8f4c-3040971a2bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c15a621-c8e9-489a-8769-b5f80a50206e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725785a5-2709-4a07-86c2-5682df3af0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9341b2b5-64b0-441f-9ee3-3b157c68c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f854a6-9512-45d4-92c7-adfa63355092",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a12313-26cc-4706-a674-5aeacfedbc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f86a19c-a0c7-44cb-b431-a5d062b938ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec3f6e8-2822-441c-bd42-9001897bfdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422115c0-f889-470d-a14d-98ce3f578e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a65c620-08ce-4e2f-b4d2-cc8c7749133f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258991bb-f6c8-4213-bb1a-a9b4940c7fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa34f5e-0bc7-45ca-bd1e-e0ada2921a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910da81-0aea-4891-9111-c71eafcda2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3696a463-7283-496c-9524-7399e63faccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d942ffd1-0e41-4717-b404-0b211ebc7254",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e44e8-3e26-4def-bd84-166377f191cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894ab167-1ddf-4be9-9159-b6bd684ea5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe745b8-20fa-4b8d-90bc-c60f12beabdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907e702-bc43-48fc-b433-39c3d0992a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a9b4c-35dd-4fdd-b553-f9f483d0ead1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f28ac-5dae-45b5-8065-5d1c043136e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e137eb-50c0-4aed-9e79-f8333d5d4837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79ad27-b5ed-4790-8e44-b480ff88d940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63316c8-88f6-4560-ae6b-8b21d3a32f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d936c1ce-c073-4da0-9fe6-2f717edee99a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f5b00b-a7f2-4d97-813d-24e232337c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e064c60-1c45-4b97-88d6-e77def27522b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369c30d-6d9d-409c-ac65-74f35cc6f617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e924bb7-d5c4-4860-8b37-c1f02f87e411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080a94bf-8bec-4be6-9c11-212337648e07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9e24b-6358-4790-a025-09044aae56a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc425689-8849-4158-8cef-19071d5dd14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21376c-b630-43e0-b32d-a1bf3b51512b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b373d27d-7e9d-4940-8d07-6483d8ac8f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4306c4e4-9ee6-4952-875e-451edfe8f721",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a43ce8-675b-477f-80cb-96f56cb5c209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb987584-f793-46be-8693-93c76113516a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534b65f3-9fe1-4c09-991b-f8f07d29c45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d8a70e-0072-42f1-b11f-4d3fd51b76d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d89a7b-1a54-4525-87c1-972e53683079",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a795f57-7186-4156-97d0-890494065424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd5bc03-f7fd-44af-aaf2-2d329fe78878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ce1272-3530-43d7-b086-55b211c67f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742ef8e5-f69a-4e5d-b064-b231d3fc1340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f45a2-e578-4481-b340-a93423f4f163",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e702d5-72a4-451d-8001-45450a1bd1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d639f5-7197-485c-befe-99c338e0bb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a4a12-3ce7-4083-90c0-3ba9b995c2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cac23f9-ee94-4cd9-9fb6-6537a92e1ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb55adb-9282-48f8-aef2-b7827a4f1170",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f65d01-af5e-4a07-9c91-5cd625345565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5591d09f-429f-43c4-98f3-3d25e0069feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16bdb16-c914-4ae0-98a0-89be186a7bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e75603-5a6f-409a-a6b6-4e9b54af723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d5f89d-e4fc-4913-b497-4a728ea521aa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3cbc89-c402-437a-a12b-6a7f5ec6ebc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a88e0df-2001-4ae7-9851-d471aad6c3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0132b33a-aeb9-4740-9195-2e5058be7205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d478c538-165f-47ae-b90d-4fd1c318eb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b5bc7-4414-4e43-819e-e495a6ebbd25",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cc76f3-b5c2-4c62-b69e-897ba540cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f0560a-725e-41f8-ad1c-5fb3b36aa5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8950d7-e420-48ff-b559-c959c901a8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a6ebc2-71b4-4ec0-af31-b5d459bc908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e58c9a4-c0ca-4c93-b018-9abe73392ab9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750701d-4f03-4f5a-9a5b-f2092705a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88fc5d2-771b-4357-a05c-c5dd3dfb33ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df64f4c-2983-452b-a082-7bb052c839b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c127c60b-ba98-48eb-bdbd-453ce6a3f16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c34056b-a7bd-45d3-8bfd-05a07b4b19e4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf41bd8-fcca-4a8a-8e8c-f863d0882e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae355479-a84c-4b69-a636-f66e93e1d336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f250a82-6a53-4e75-b432-ef29aa80a6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e11489-fbd8-4598-9b99-4beb8ee362b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b327a9f6-992d-4944-a337-8f6ce21c0946",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b36b1-19a0-4fc4-bccd-5d0a1211304d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8321dbdc-617e-41e5-8602-564b820d7a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51145c4d-30bd-4e9c-a916-a02cda669964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62002869-7504-477a-8b27-f3ce232114bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76512448-bf60-4492-945f-00aea46b6a2c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22963ce8-b4f9-4b3e-b3ed-4f39da4a3ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4f1efa-550f-4902-85d2-d871482a4de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcb1c87-1abd-4559-9a97-2392402c7fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4216c18c-af6d-4a60-857c-e5c49a7c9eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b85a4-5485-4566-b1a8-ddea24d958e3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9f2216-36af-4b4d-8a52-3ce97d8ad319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe7138e-4117-4d97-a098-098c7ca033d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa209e9-fcc6-4dc3-a06f-a78a9fc6ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcd92db-a5da-4517-94c1-7edf316b0bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b7b630-70da-4009-b4ca-b61417fad8ef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f43dea-66e4-41b7-87f8-4224b3972b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e615e65f-7bc5-4ae2-a7b6-51859c0d74a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5f5ba8-fc73-4ba2-94f2-e5027527ea09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8d04e5-9a2a-4fa7-81ac-be375fbfd2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c6f6db-83a1-400a-b9f2-96364f6469e3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631b17fb-a108-48fd-8124-8ef7d73111e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe570a0-1160-4d9b-990b-086afdd7adb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4316476b-e24d-4334-8d42-d212c8f1e50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caccd84-7252-46ec-81a8-0dcbb1959e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425c7ba-6ab0-405d-98c0-b7ab1dd2ac83",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b01ccd-759a-4124-a81e-acef1efd1499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e62dd2-7948-47d3-9d9b-7a754873d054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9905f1a3-8bab-444a-abc7-c262fa745564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78187973-c617-4c72-ae64-4a9468cd7b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d905c3-7d95-4e47-a7c1-0af9e11795d2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b1619-6f24-45d0-b8fc-b030dcb1b8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5d429b-2976-4bb7-9a50-38c2666dde50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139405c1-1eef-492b-8eb9-623069ff0761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5c3a69-dc11-40f9-85bc-0c800970384a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec869e3c-29e0-447b-b199-fe0fcc04cd6a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cae77a-d9ed-4f78-9a78-875008bdcb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83cdb0f-e632-48ed-b3ce-f45c8ff37722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667b541f-82fb-4f2c-9a92-aed8385d679f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ceccd6a-8866-4698-8652-9400f17f9bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dfc34b-0c30-448f-8903-eeb809132228",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b925ba-9ef2-449a-aac7-16cc966dfca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dad63e-bf15-482f-9611-49cfeb54c19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605e140b-687e-4088-8294-acbc0ac393bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7791b73a-f94d-45e9-bf71-52ca3216cba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283a7c9a-3dc0-4f35-bed1-0acad1b55b7d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191a0f2f-1204-49af-ab01-b67b0220d0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8deb4f0c-74ab-458e-83b3-2ac8d0aa04d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d492b5-4d20-415f-aed3-064e382a779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d695c3be-bd2f-4380-aab6-c5fbe89c4b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5e80f4-b947-442a-9827-b88bdd087dd7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294169d-c510-4547-8d4c-e7f799e715aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401689b1-3e78-42fc-8717-150b309bdee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f11edc-7307-4925-9996-b3aa1071d48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0704bbe7-af9e-4ea4-ab94-01b1f5856731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff24fe9c-0463-4eef-bdc3-c2811397cdbd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8b3ca3-aab0-4a7a-97a5-f75b1f159476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7312d1e4-a950-4cce-8526-a1745c1d5581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84bdca-e9eb-4504-a403-7ed81f0b5c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a08f33e-fa30-4c69-baf2-96cf4b1d5438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66ba0de-0845-4db0-8a6c-896de5cdca7e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b1e35e-af03-4ee5-a29f-0170c3eab502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca97a8a8-8328-40c0-9901-dd5fbe4f3a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a883a64f-6be8-4c8b-b437-97256235b31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b654af-d73d-4586-b7ee-0f90c2c8a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a289a4-c966-4b5c-9f42-326aeb39e63a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734f7a91-73f2-4084-837e-039e74a97e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d3de39-f6d6-4def-9a5d-a88cd5067f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d96e9-dc68-4063-aa99-4f17ec154bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1218ca-455e-42df-8844-97b182dd97de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f239cc86-0c5f-4c41-8b49-4fb87146d92a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f4c81c-1dab-4ca4-904d-bfd9f68cdcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbdcfb7-66c1-457a-aed9-9050232d0cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc4fa4a-1b73-46ad-8df7-c13657d3b7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecee996-94b9-469c-b0e4-cc6ce60c2608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779aa6d9-01ab-47f8-8ca5-d014e464f6e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d85005-659f-44bf-9d4f-94bfc147c787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cc1c1d-e312-48d5-9461-e5a46fc31b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c90873a-507f-43fb-b8ab-9cd1d5f9b288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dec624-7fd9-4968-ac17-4670ab0028c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5b3adf-1249-4e54-855d-ce8ea6b92938",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f259035b-3fbe-4e3d-bab0-186aec1c68cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4008b161-d7e6-4e0b-ae14-a06d984f7d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633055cc-8b28-4905-a94d-c4fb4d323461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc51d7b3-2306-4d88-b930-23b41e181e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e794a57-c400-49c6-b0c5-41aca6491dde",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a144688c-687b-4669-9d51-a9931cc36cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188c5be3-0e33-4b25-9298-5df26199168b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62659b6-0725-4d20-80bf-535a76568eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7acb39a-98b5-4589-9bd7-22e2ff00a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b6dc4-200c-41c3-ab94-9efca85042d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037113a-14d1-46f7-94da-903ec010119b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff04d1b0-cc45-4d57-9bd5-c7976438fd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b4b441-f924-4f6b-9686-12b5aef7c3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af57f05-bc6c-4e21-825f-a1953046c5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dce1c27-a984-4bc4-91c0-0e17d1e5b8e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e8ffe-256b-4710-a3bf-37b4a2fac366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c54c77-37d8-44ed-b194-64f9b293bbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3970050-96d6-4558-92a8-9ca1d93d452d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e369579-f11e-44ec-9ac5-6c84a6ab74cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466a097-68f8-4cd8-847d-f97b571316d6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a460ae07-4c0f-4095-ab3b-ecd7ee853c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7659346c-ff29-4be4-9845-23e35d8dea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537909b5-4303-4645-b363-e804e6cd5c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2b08eb-33d2-47ac-a9fa-3ead7e899d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa88f722-bfbd-4927-b8d2-1d61aa8d58dc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d9900c-ed90-46bc-ac24-43baeff70f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e1a293-b4d2-4009-a7ad-b95f3b14f039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c6dcda-ed78-47a3-b097-ef264620f2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc422105-7547-4efe-ae41-0d3853b09424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566e7a1b-96c7-41fb-9dc5-443050674d72",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fb1f46-637f-4d73-9a14-2525c325176f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5d8457-c311-4296-a8b4-8b84e7046939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f62d42d-25d9-408b-bda7-7dbb1884a957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e2aea9-a605-43e7-b0fe-59df7e583c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e099e44c-405a-4544-a1a6-0e104cbd439a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acab210-03cd-494b-a977-cd92a2cf2aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31c930a-d6ec-4c26-a5ff-52fe4bc605aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e1e79-3a22-4874-80ec-89169f79138d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b551684d-d77d-4f45-b29b-c6c1a3e8fa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4e9b6-189d-4853-aac2-bc99f6e392d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5375a9-3a62-494b-b27b-2cdef54d92ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46354f9-ec54-4c0e-998d-4afec92420d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b02e704-dbab-4d26-9f82-971e3feb17d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6dd1c4-e874-4799-8ece-95ce1c257974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f8bee-b12d-4f42-84bc-d39637264cc4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8aeffa-5f9a-4dae-b6c4-45b5aafec990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1c641c-17e6-407a-939f-b26806657384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e090fff6-6518-4576-a3ed-e77a8e340e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa3e622-27aa-41db-81c7-b58d1188ae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374c322-1031-4d15-b9ef-c489e25d5818",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21b5f91-eef5-4b1f-a785-b5fab4dd9fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5551b26a-b8d1-4227-ab99-ccca17fb1709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e769c170-3a72-476c-b2af-5d447313929b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368debe1-095b-4124-a65c-4cf80d6559b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14341653-d5b7-4e42-be9c-5950d5e7d541",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afc2ce9-d4ce-4233-80fe-c0b3e9626b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e67f2b-5315-4703-9fc8-891e6b671c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbf5c50-6298-4865-b3e3-b2ab02e99fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb65bc39-45f8-4b61-bb70-143f6d847f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd13476-a118-4bad-8c15-7e7c64ca2e39",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faad343-52e2-40e4-b471-321a7dd8c68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3912b882-3c29-42d3-9192-4652e2aca480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56288ac1-f396-439c-8e8b-cfa6384c508e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8456bf-d3d9-4490-b084-22b34429d6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c0b8c2-88df-4de2-8011-df89e1abbfe8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab489b2-8683-446a-a232-a403edcdee4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d92803a-5700-46c4-a23d-9a9e86623add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64213726-af2b-4b52-acdc-7a7f699c944f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4dd288b-fc55-4481-8f9b-d310e67f3c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5961ef3a-5a00-4e8d-86bd-06f82bee7b3c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e428444-9109-42c4-bb70-7409e377f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e644d79-1bf2-4b30-a14e-2d710cbe8538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566a0436-a8f8-4c17-988e-de5802a33c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45224b6-dcb7-4844-aab2-da263d2bfecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c07a92-793d-408e-a802-d7dbe915e46e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5014bbf-2368-4387-8280-9989b4548990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "263cbad0-8c9f-4cc2-9e61-0fc1f30c6946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9790225-a4ad-43c8-9bfd-41f632a122eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a633b91-ba0d-4c4b-975d-adc8d00d134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cc125c-c0f9-4560-8be2-783b7ec6b7a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2881b9-ed1f-44ec-8997-3da06f09ac8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6babe238-e9be-457c-915d-8ba4df068c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9dee8f-ec63-450b-91e2-71ce32d09799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9751b6e9-5b5b-49b9-9f20-2fe551ed9c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfccc9ba-ecfe-4848-b983-4babe783c196",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc656024-4f2b-4cc7-b5a2-d0e3b73000cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e0cecf-f939-4050-8b91-d76ce82fd2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb555f3d-5e86-48e0-9567-3b849f6914d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aeaf1a-8266-439e-a5db-7532dafe6b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806f9a3-9462-4961-85b8-a623153f42c7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57991f-0b30-44b9-ae97-4c212f2a834c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900fbbc7-70f6-42a5-a71b-c015d8de1d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219135c-b680-47cb-adcf-fd66e8f06104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9123e1b4-2095-4c93-8ec3-32a2f6b2fb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01dc3a7-bc45-4986-beee-9cde2899c3c8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a9ad36-3324-45e0-8efb-2f246f60da23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22bbb81-5056-4fd6-89aa-a4f67aa5e046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382da5c-a56a-46e2-915d-2c21b36a90d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4688d814-817a-48ea-865e-a67cf9b5d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c95813a-e630-460e-9400-d88841b3cecc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e351074f-627f-43ff-a366-30060b89bae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bed46d4-160d-40a0-98ae-ebf5d75c4f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef19cf-66f8-43be-bb7f-58ff4038f23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b656dddf-78ac-4295-bb07-404ac92be319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f3a6a2-72f3-49bb-a3a6-d36d14d4b966",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755c3738-268b-466f-8d51-2581d4c4f638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cfe1a2-d6b9-4cb8-9223-0281074bc7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e451476-d271-4556-8b9d-d575be5f87cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50114adb-6b3c-4586-b51e-ada80dfd7ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aafb15-25d2-4092-ad1b-93c5f7e52eb8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f764bbd-d243-41d5-9379-d498f60208fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b630cab2-a2cd-4279-8c16-2009e32c73c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cdad68-8a8c-494f-ba2c-66c7b49eaa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d10d83f-1a5f-4843-a031-f050cf2b63aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ce5b32-e580-4a34-b4c0-54b3affe3a9b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e3c78a-2ad8-40bd-87f3-f2670412d833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59771d34-5e4f-4624-8c8c-a8daaecbedfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af06e98a-b9fd-4fcc-80d3-755fff6835fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fee3ae-76bc-4642-b6ea-aeb6fece575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1737576e-5eb4-4a4e-98d7-c2ebd6790366",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782af1a5-a0c1-4b50-bb50-0f5b50739c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c3e0ce-afb3-4632-bd83-675284d504fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51509079-4154-45ee-ad90-fd5925e91d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc94d39-3bfd-4572-b7d1-8bfbb93bb216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6434f37f-80e3-4478-8c71-fb72e0543fc5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5e25fa-d179-49d7-b6eb-a08025e49e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b99336-3a5b-4cd8-8e36-a5dd10470caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1e31d3-1b32-4bb2-ab25-55a474a82e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae17f8b0-cfcb-4302-ae8f-65ce942d7577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440c686-1857-4ec3-b242-d9337fce4014",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08731752-44a5-4dd4-8c26-5ce70872a9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52a9c15-f490-4827-8176-53f5ad00d00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e18c204-01b7-47d4-816c-a9e4cb01e4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2aed57-d2ce-4c16-83b1-5148bc006332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a6554-4efc-4293-9f77-d24dbccbe1f5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1342471d-9011-4023-8cad-fb08e414cd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50be23ac-3b0b-4224-880e-e96517e019cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95f9335-b231-4026-991b-697149ae12d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0e7777-d2ab-4a0b-8295-8145acb09c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7edffb5-e982-4efc-9dcc-cd965d96d930",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38ef997-3f06-40e9-8541-f6b6ee348307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e14445-9d87-4be5-8fbd-695ecb188f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa831c-ee86-4aea-b130-4668883030c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1905ae7-4a7b-449c-a320-0f7d04074ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d858c56b-cb80-4947-8cc2-972c8b815c82",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ee78cb-73b2-4d4d-8415-c86d3d47d798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cb25d3-f014-4e44-a537-4a32b2bb4a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca286401-f368-4a0a-9b86-f89968bf9f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40fdf7e-eebd-4263-b039-356afc6165e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d922258d-a7a4-40b3-8935-4f4009528b03",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5084b824-c2f2-489a-9a0a-c49cdafc201c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4158d2f3-ab6b-4a4b-aef0-6f131e964f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795abc3-bcb8-4939-8dbc-28e5e063697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fb3b32-56f3-484a-a455-f7613a31dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa7eba1-9051-44e8-be2b-619dcba17e41",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b8ffc-6ff0-487f-9f58-45ff6e191a0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2a884e-a7ad-40c3-84d1-81c6dfa31cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8877a6b-bd6d-4d79-ba47-6b926e2683c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9826b4-4a3c-4e40-8a66-217b2d58a503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07939def-99e1-4868-a98f-97ce10b9f84a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b8b5d7-3251-4516-88cc-6261dfb97ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4459d5-db6c-4388-89f4-ac018ec3319c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17441a93-8b93-403a-8614-d0bfef7165f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac6ac1d-69b0-430e-b3a0-ad91d0304547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3c2837-26ae-4d12-a367-64b580b3c524",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341204ff-f8a2-4fba-b74d-c405a2669e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451e7e88-ac06-4d87-9f73-cb11bc3e9408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e70b7-3a97-45d9-9c0f-342b7fdc4801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb00fb6-d75b-415b-9720-51d8c11a58a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331861c-44e6-40fc-bee4-dcb4c4bead2d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28880ed-40e8-462b-b717-4d3d0b982baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a383efe-ffdb-4c8f-8aee-56c2401535db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8bd00-5d4b-4b3c-b05c-a9c469831499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd8dd33-3cf9-444d-b456-a575a798ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a24a32-609b-48ef-8b68-5a56e11696b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c044a27-6fb9-4440-9e6e-909f81b8f462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ceb6f6-6964-48ce-abb8-d1ff045fb4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c66b5c-67e2-48bb-8de7-51c8c11e71b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4580ef36-3f5d-4f02-b946-8f5b077f44c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f8824-5737-4b19-8fa6-0c4c5d6e79b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae3d559-e905-448c-a88c-e71109100ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df227b14-57b0-4678-a061-4fbf7ea13e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88dff3b-f2d7-490b-b61e-b62ee9de80d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f96f2cc-cfea-4fa4-88ba-09bf4f449512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e723b7c5-ec5f-4f0c-8741-f86dd163d5a4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de023476-ca7a-430f-af79-4fb36aaf783a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c785e6-6cc6-4ca9-8b3a-dceddb35f526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a99c3-df86-44e2-bb34-7ee586695e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e44790-ee1b-4b83-b6db-b4dbb428e9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2099be0e-ef27-4bcc-bcfe-e91da7eb61e3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a43105-7a10-4092-9bd0-b47aa6fa19f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff2a347-33b7-4f5e-95bc-102339699de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0d2b83-7fb6-4d2a-a533-334b9ad61dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc341b7c-90a1-41d2-83c3-1cbbe9b40308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732eb2f6-dfa8-4f4e-b430-3a74c120ba95",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9f2c3e-a911-4c12-be24-b3b64af42d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46da7a4-f48f-4977-9b17-8856f2359c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2e67ef-34f8-4b52-9bc2-854fad6e560b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534fad8e-0558-47f7-8946-ca84b3f4f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd29328-1989-4cd7-931b-156557bab52d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0a8642-78ca-4c53-bdf0-5b0869e1ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a93536-747e-41c2-a57b-8f80e8d81619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8562c886-d747-4f49-8cee-991717b45127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b338c02-6b19-4919-9472-36a4dff1ef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea47ec5-fcc6-4909-a923-327ad3f84e11",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb6918f-7310-4b04-b345-18bcb50f38b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9306e3ab-db14-486d-8404-5b4d0985dfb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a30f9-b9ba-4a93-bcc9-8e15d7d63ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ace17c-ab2b-4379-99a8-bfa745b02391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969e6820-aecc-4500-8218-696afedf2d5b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab7915-48fe-41ff-aea6-596a7e795b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc677bf1-ea32-4323-9188-32b2c81c25e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd591e-772c-4126-a46b-ed6aaf0165a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e51a099-0d6e-446e-893f-343adf1ae117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c30f0a-664b-40a4-83cd-21dbfd86a9ac",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03f8886-2ec3-4146-b793-3187dbfe5ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e41b8b-377a-4923-9c23-a39005d78e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3f4e95-08eb-4d6f-971e-07001e0332ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f634c9e9-5b71-4c00-87c0-ab8350f82026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d1495-05e2-4027-9712-371f003f44fc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33910d7a-7b31-41e4-b24c-29741a74bc47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ad94f6-1059-4485-bef4-1f7509f48a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fe70ba-3b7a-4ff8-a8b2-983e7448d3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebb167e-3a99-456d-b788-1f624281a418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ab9e6-9e46-4493-b8aa-cd2dfb1df12c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63742ecf-e5e3-42bf-a0ca-4f44a6988771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19636821-1023-42f2-b539-b31c713696a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049cfdc0-2c9a-4883-be48-e34f0b7dd167",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5dbd4c-4291-4a13-8c24-de54a5aacc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38984b1-c227-411b-819c-54d09c87a6fd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43ac44f-a750-464a-b958-bee263454e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3026e2c-0ba1-4cce-ad19-15f37ac71106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b7ceed-eb94-4141-814c-0cc03399fb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de7fc27-58a8-46ec-a243-6e751de02cde"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a89c00b-8a49-40b9-a945-a0cd3d05672a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13b7f1f4-88eb-409c-bd7c-a9e8d51bcc5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a26277b6-4d94-4ebe-ad9f-3c5d725b5314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5918f32-2556-4adc-b988-d9f4ffffd80e"
                    }
                  }
                ]
              },
              {
                "id": "ddca6023-b98a-40fc-ab72-747bccd61864",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7a8cdb8-b894-40fe-a7c8-95b60690f0a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c10683c-658d-4be1-b1ed-aef543e1a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7eccb577-ab2e-4331-a3e7-8e77e4df868f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2af6aa-c024-4891-813c-27af463f7f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cdbbf0c-47d3-4e41-a6af-849994b4e660"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3239eab-6e24-444e-ac21-c5e4f537c801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae874975-b2ea-4fb4-9dad-eaef8a814693"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "104c5898-60c4-4317-8f8a-fcc7c8781f17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df24a70-d42e-437b-8b67-ddeddedcb3c4"
                    }
                  }
                ]
              },
              {
                "id": "8a7d6349-a025-453d-b41d-fa9c5a96547e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b8ea8da4-7f8b-4984-95cd-55f58aff1c04",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a98b0e-d898-4f74-a0df-79bb83ce6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6dd59250-fada-4c1f-b0df-5234aed70bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5717063a-864f-4d3e-bb4b-e23d63ab2347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f445a7-7093-444e-83b5-e45bf6746d61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71a6da7a-cf42-45ed-bd01-5bef321c0c8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e77cb6f-a174-4409-bdd1-3da25bfa3626",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ef60616-29f4-4b64-b50d-a8d531203588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a483a4e-0875-4c54-94dc-d6b321362dcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44c4e48a-29b5-4b23-99c9-5befc5c5cd30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac8c42ff-b70c-4dce-9830-c1ba20f9524e"
                    }
                  }
                ]
              },
              {
                "id": "5a176fc9-2207-45e5-b40e-5361f762c7de",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bb23581-2653-481c-a5dd-a422dfc9d281",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0eace9ed-0b2b-44dd-9463-b4aec01b52c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3702d2a2-fc6b-4fd9-9814-b8186ffd277d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6bdb5b-2046-42ad-a0fa-6ebad4000032"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a215414-a9d1-48c2-906b-7bb62ea08278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "636a5d34-4ec0-46ee-9623-1de1c0e5382a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af796c4f-cdde-4ff8-bf88-0c17eec63c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53e0acdf-e87b-48ac-855e-929bb8c9d8e9"
            }
          }
        ]
      },
      {
        "id": "6c77f4cc-fcc0-4da9-b563-860db32ce4df",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b805675-d2c9-46eb-b3a8-01f7219eed11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46283434-1e00-44e4-9ee8-ab02461a0f4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e69d4566-1230-4135-b09e-f38b4d971e1e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27c336f-482e-403a-8ba6-4b00524dc86d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "85371c86-4b3a-4e1d-9334-16c4e0555419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d9b20-6ef4-4eda-b51c-82c3ffe92fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e3ad441-5179-4e92-a2a5-038bd12b5c75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a3e4a7-e17c-49f1-9a00-41461a868b93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f02aced2-d0e6-45da-a09c-89bc2f28c700"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf9d52f9-424b-4199-9f4f-302d2897841c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9c71b0d-b4dd-44b6-b3c1-0a2c29abb4a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa1a6dd5-cb7e-4909-8141-d32266d23540",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "50f33c53-4eb1-4523-ab65-c6cb41d7134e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4b6aecf-ce20-41f0-a0e5-9b70e709faf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7df95b7c-1f73-444b-8bb8-06ddc843f58e"
            }
          }
        ]
      },
      {
        "id": "644b1ca2-c228-470f-8727-7cd50c036b2f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "324c3090-7df1-4e16-b4f0-e497fa76cb45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98b29979-5376-46b2-91a5-6a0bb00b73fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b2ac0f2-1ee0-46d8-90c6-0af9663adffb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbcf0a-0dec-4528-8e90-4ecba6b4c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60509433-0dd0-4a43-a00a-9a9e281c85c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ce6479-5a50-492a-9091-8c2fa3853edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "715f1c44-781f-43c0-b0d3-a59179c8c855"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbcb77d0-a2dc-4781-be15-64584f8012c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b55e0e-b13e-422b-94cb-ab405900a4a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c22a75b-7ff6-4fde-8fa0-05dee541c5fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0c1a2f8-eb07-4627-9464-cd16c92a42d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e774a8b4-ce14-4bde-88a5-1e1f1f69475c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c970b8a-2e0d-4e44-83d9-f47028eca9aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9aa2f0a-458c-4519-b637-1bfebc2228bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7d730f9-a937-42d3-8302-df6bc02d7c05"
            }
          }
        ]
      },
      {
        "id": "8251e37d-e295-4bc5-8cfe-19ff1f4f53c1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "02d58d8c-ec19-4677-af0e-2a762d4a0d04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94c31e50-99cd-4617-b70f-fe98f44ee1ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceb5eba1-11d3-4bb7-98e0-f75eaac67fc8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134747ea-6c82-4119-8a10-1b419e2190bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9661d03-07d1-4253-a21e-0b047e62ea87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d236b7f-b573-484f-861c-3e1f53b9d904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8190ae74-2f2e-4f82-a3cf-230d921c2da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdcfc91e-a6bf-4760-916a-317ed9771f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b456e32b-4583-4805-9239-0a4ce0a7dd07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3940601-afb7-4dc4-8e38-6194b5bbdb74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c00b57a9-67b4-44f2-9576-a4bb4bfe5517"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1187e50-4a49-4278-87b2-c02958a03bae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e566594-5e3b-4e82-8217-79deade2015e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55b03500-6e84-44c1-83fe-8d277f38592b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08d27cd4-78f0-4979-a48b-ffd165e8fb48"
            }
          }
        ]
      },
      {
        "id": "0b7f31ef-aba8-4c97-811f-061776c3f487",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb22214e-c7fa-4cdd-a07a-a04818647f84",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce0457c7-425d-44b7-9d4f-ad81bee5613c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3712f700-9af1-4a5c-af0f-d5b654cb52ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2984c900-de05-479b-af12-ecbe2e002dea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35cfa3c9-086a-467b-af10-edf2de1c4aa5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.557894736842073,
      "responseMin": 7,
      "responseMax": 284,
      "responseSd": 22.70175004745204,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709771274119,
      "completed": 1709771292023
    },
    "executions": [
      {
        "id": "c2c00242-5b68-43df-9f3b-9adfd06fafe0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e16f7d54-bb58-4a1e-b9e9-ccc9271ea230",
          "httpRequestId": "3805fb18-6ba4-471b-8a6c-571102c0658b"
        },
        "item": {
          "id": "c2c00242-5b68-43df-9f3b-9adfd06fafe0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ce34689f-e60c-46d2-a842-8ddaead3d5bb",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "efe99124-ac10-4e0a-9392-90eb0613f333",
        "cursor": {
          "ref": "f7369493-9373-40a7-9ffb-8bafdf1d1306",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a6d8fc2e-98f4-4b55-8791-affaf4f0226d"
        },
        "item": {
          "id": "efe99124-ac10-4e0a-9392-90eb0613f333",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "25da79e7-bf93-4308-9336-d72223c421d6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "20289084-1110-4784-b735-5c9b3ac2fcc9",
        "cursor": {
          "ref": "df0a2196-605c-4300-831d-d3c2b69cbcf5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7da5e16c-e9e4-4832-ac2a-f6ffb4131761"
        },
        "item": {
          "id": "20289084-1110-4784-b735-5c9b3ac2fcc9",
          "name": "did_json"
        },
        "response": {
          "id": "6fed216e-cdca-478c-b181-73c267a253c4",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f16e18-6f5b-4e09-bfe4-f5f88a81ca64",
        "cursor": {
          "ref": "dd31985e-d393-4f2e-b327-36320257608d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f01f2a5-d220-44e4-ad23-c6dd976285ea"
        },
        "item": {
          "id": "c8f16e18-6f5b-4e09-bfe4-f5f88a81ca64",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5ffea1f-95a3-4b4c-b469-a517cabdf0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f16e18-6f5b-4e09-bfe4-f5f88a81ca64",
        "cursor": {
          "ref": "dd31985e-d393-4f2e-b327-36320257608d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f01f2a5-d220-44e4-ad23-c6dd976285ea"
        },
        "item": {
          "id": "c8f16e18-6f5b-4e09-bfe4-f5f88a81ca64",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5ffea1f-95a3-4b4c-b469-a517cabdf0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6c8be5-d57a-482d-bed8-dfd1cc917317",
        "cursor": {
          "ref": "1d364dd7-830b-4911-a020-f83fd790e253",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "41559870-8cc2-4548-8601-76604def4815"
        },
        "item": {
          "id": "bd6c8be5-d57a-482d-bed8-dfd1cc917317",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce079c5c-23b7-4185-842b-0c94e2dec66a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cf3269-0403-400a-85e0-3ee6863dbfa7",
        "cursor": {
          "ref": "38a13943-cc62-4c25-a1c3-a98ea40b8edb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "45207647-405d-4227-a7b5-bfae977785e8"
        },
        "item": {
          "id": "79cf3269-0403-400a-85e0-3ee6863dbfa7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eb1158cc-eca1-4d62-bbea-2208dc446c1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36cd621-03f2-49e8-b539-e013a8641526",
        "cursor": {
          "ref": "9b303601-ae99-4d50-9b31-503aac873d7a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7f6d0fcd-1358-4b2a-b0b1-b04557b6bdd3"
        },
        "item": {
          "id": "c36cd621-03f2-49e8-b539-e013a8641526",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a8ec7dbf-9c8a-46bb-b06d-59c155381feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a209752f-b248-4f61-ba09-7e4a96ef2057",
        "cursor": {
          "ref": "74384f67-4ccd-421c-a033-f8ec42e07c06",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a7d2992-d29d-4c2d-a637-f5f6ea42ae13"
        },
        "item": {
          "id": "a209752f-b248-4f61-ba09-7e4a96ef2057",
          "name": "identifiers"
        },
        "response": {
          "id": "e3c9537d-5072-439e-8e63-af1479a91481",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e87d8c-664c-486a-a634-d28c02f237f3",
        "cursor": {
          "ref": "0f08f937-1c0c-4458-8f4c-e7e5bc8e2ee1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39ca70c7-7e15-4f0b-9362-85d7c4aa5a19"
        },
        "item": {
          "id": "83e87d8c-664c-486a-a634-d28c02f237f3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "698474a7-e5c8-4192-a00a-8e47272794fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5021c0d0-cfd7-47ca-8c7d-b80a2513349a",
        "cursor": {
          "ref": "2fdb593a-ecda-46a8-91e7-d0e5194d7d19",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "94709584-4857-4905-8e55-44de328426b6"
        },
        "item": {
          "id": "5021c0d0-cfd7-47ca-8c7d-b80a2513349a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "70a8f972-331c-4811-96aa-358171966e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c362e99-d636-40ef-bd5f-a0453fcfc6f2",
        "cursor": {
          "ref": "549f3d7e-4475-42f3-9a94-4727dc1173ef",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e56b6758-0c3f-4c43-b07d-50d79e35e4d6"
        },
        "item": {
          "id": "6c362e99-d636-40ef-bd5f-a0453fcfc6f2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "049d846a-dc0b-4133-9d03-26c5680cea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d983cd3-3165-4998-b6a7-6eecce915b38",
        "cursor": {
          "ref": "5b0a35da-c5bb-4cf6-9df8-341633fb3b22",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e70ebac5-67d7-40bb-b540-52b44a4de4e5"
        },
        "item": {
          "id": "9d983cd3-3165-4998-b6a7-6eecce915b38",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b5df6cf9-b846-4f31-83d6-e9fa5b0315e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5a0a0-154b-4081-a2c8-056c24bfedd6",
        "cursor": {
          "ref": "0ec0a7a2-99e4-4117-a85a-19d58e939962",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7104adb1-e38b-43d1-9ed0-f623c97451df"
        },
        "item": {
          "id": "aac5a0a0-154b-4081-a2c8-056c24bfedd6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f76852a8-7841-4060-8771-cade8e96be53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1aab8-9885-41ee-aef7-caa15eedcd14",
        "cursor": {
          "ref": "bf30913c-89bc-4b60-a66f-c136f177bb49",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "57dc0b26-7bb9-456f-b0bc-9e3a28af67c0"
        },
        "item": {
          "id": "69f1aab8-9885-41ee-aef7-caa15eedcd14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "03db8e20-c1c6-4fa7-bd3b-987a9e4fff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5805bc4-6618-400a-a3a8-85f50df9c607",
        "cursor": {
          "ref": "7a50c6d6-fee2-4e85-a049-0e0d58337e3c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2e6b9687-9661-474c-af4f-620d630a814f"
        },
        "item": {
          "id": "b5805bc4-6618-400a-a3a8-85f50df9c607",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "39a1cec7-143e-40f7-9204-78a088232404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008135c2-add6-40a5-b81b-5c373c6ed7ef",
        "cursor": {
          "ref": "0c7f2154-7473-4c54-8910-3edb8d3d8db0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "51ecd17f-8404-47d0-922a-317171d468df"
        },
        "item": {
          "id": "008135c2-add6-40a5-b81b-5c373c6ed7ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8011cd05-cb62-4cc4-871b-5a5ce14f4f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af50bc-d256-4db0-b3f5-433be6bcadd7",
        "cursor": {
          "ref": "6a8eef5c-0528-414b-b7ea-9d9ad51c6c48",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "813973db-407e-44c3-9390-4ebb794e3c53"
        },
        "item": {
          "id": "d1af50bc-d256-4db0-b3f5-433be6bcadd7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7c344dea-ea05-445a-b096-4a3eb081fbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42cf2d3-e752-496c-8f7a-37463e867ae6",
        "cursor": {
          "ref": "91c4d34b-8699-44ae-bf2b-c738037f01ad",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc240a83-5ea1-4de2-9827-0bb6a600299d"
        },
        "item": {
          "id": "b42cf2d3-e752-496c-8f7a-37463e867ae6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fbd2b2ce-406c-4660-a691-75bfe4f01d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1e5929-d4a4-4c76-881e-0ac2c8fe6641",
        "cursor": {
          "ref": "b7b8df0f-653f-47df-bbea-297ff5e34ad1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cbcc51eb-5e0f-4a03-a5e6-dfa6af39dd29"
        },
        "item": {
          "id": "7d1e5929-d4a4-4c76-881e-0ac2c8fe6641",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cfc39398-e870-49b9-827a-a7081dbac370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcef996-3555-48eb-a1e5-7eaa95ba50c0",
        "cursor": {
          "ref": "031332bd-0a16-4283-a5e4-bd99d4fa6f37",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cd782761-b705-43e2-8d09-ff3a2854e4ac"
        },
        "item": {
          "id": "8dcef996-3555-48eb-a1e5-7eaa95ba50c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "46529674-8dd5-49e6-8af3-b99b6260e214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183c994c-5eac-4431-baaa-a493fdfd4b46",
        "cursor": {
          "ref": "daefaf1b-4f92-409e-b7ec-18db3cf20c11",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1fce952b-05fe-4c9a-b22f-1bc807faa7ef"
        },
        "item": {
          "id": "183c994c-5eac-4431-baaa-a493fdfd4b46",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "31d46a05-43fd-4063-acb2-6644a8f91917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e1eb70-c28f-4aac-9f9c-dd4b6a7bfb96",
        "cursor": {
          "ref": "a2787983-06b0-4e42-a606-11223b78d60c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55d4da89-6a91-4ac4-8208-dc6b90501e90"
        },
        "item": {
          "id": "d2e1eb70-c28f-4aac-9f9c-dd4b6a7bfb96",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34bcc4b3-ff5a-49e6-a9f3-81b18a29f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb81271-093d-4478-b983-3be0940f55f5",
        "cursor": {
          "ref": "5b89c238-3d3e-4b71-bf3a-d5a1ba9b0fb6",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2641fcc4-d4f6-476c-bef5-361e1e7fd1a1"
        },
        "item": {
          "id": "9fb81271-093d-4478-b983-3be0940f55f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "efef6247-a31f-4cb8-bbf8-81acb5ca41fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cae939-4cd1-4968-a3ac-a56f84765bbe",
        "cursor": {
          "ref": "2dd8d6cf-ed00-49aa-9acb-6c3090df0e5d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e5ef6d2-a68f-4bb6-9abd-2e7b4bd97f56"
        },
        "item": {
          "id": "28cae939-4cd1-4968-a3ac-a56f84765bbe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8ca02c4c-4671-446c-9e55-06024f22a970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49a9587-054d-45e3-90f3-1a4578276804",
        "cursor": {
          "ref": "838d1d89-2c1b-4793-88dc-2d6239a49597",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe801d9b-0473-4d2d-93bd-8f04eeac6b37"
        },
        "item": {
          "id": "e49a9587-054d-45e3-90f3-1a4578276804",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "13f24a71-38de-42ed-b1dd-e366bafe51a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f0aaad-8379-4f6a-87e5-0494ef6f3472",
        "cursor": {
          "ref": "f45693cc-007f-4ac8-9d55-2a9184bc76c0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3b1c7a59-fc59-45da-8bd1-1bbcc1e2f696"
        },
        "item": {
          "id": "05f0aaad-8379-4f6a-87e5-0494ef6f3472",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fc30db6a-e2a1-4588-8bcd-794ac28f9452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd206f4a-39fc-4284-9d98-09e3bd8ee5cf",
        "cursor": {
          "ref": "cb6a4614-e8e2-48c0-9808-e6864ac9fa8b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83a30509-6ed6-4fdb-9a6e-6c6cc81baa2b"
        },
        "item": {
          "id": "cd206f4a-39fc-4284-9d98-09e3bd8ee5cf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eb9166bc-ffbb-479f-8956-bfd335bf19e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e79535-6d36-47e7-97d0-a2bff275ffa0",
        "cursor": {
          "ref": "9201aa56-b80c-4872-8849-15412e60d672",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "421d06b4-0758-415c-83a0-09c235008131"
        },
        "item": {
          "id": "37e79535-6d36-47e7-97d0-a2bff275ffa0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9cf024ae-672b-4bac-82ac-3885955a43d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b5d2c0-b853-44fd-a368-12677b5f8453",
        "cursor": {
          "ref": "10d1bc96-0875-44ee-bc05-98c1fb01d9ed",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "94bde268-3758-457f-a8a4-bc4d3c2293cc"
        },
        "item": {
          "id": "b0b5d2c0-b853-44fd-a368-12677b5f8453",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dcd4b7fb-b244-49fc-82dd-b586eb3c00f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3003a958-3693-4e1d-9178-84396c8ebe73",
        "cursor": {
          "ref": "5f8ca6ed-e0f6-49bd-a5b6-829bf9b56c18",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "70010c02-ec81-424a-9a68-d0ae2bf50c1c"
        },
        "item": {
          "id": "3003a958-3693-4e1d-9178-84396c8ebe73",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c81b686c-f69c-4edd-af5d-1394ec9c4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf59118-5225-488e-8b03-41382a6a5279",
        "cursor": {
          "ref": "2dade139-4981-4e19-9e15-44cc76cb890f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d2f4c1cb-85ed-43bf-b45e-06d940bb84c4"
        },
        "item": {
          "id": "ecf59118-5225-488e-8b03-41382a6a5279",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "95545be1-f3f0-4b35-9c8c-4b955ee10a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e93ec3-b699-4820-9ac3-c97b707e8881",
        "cursor": {
          "ref": "988017f3-78db-4ac2-b83e-155a1e3ffb3a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a3e8fbee-d83e-4342-b054-7b455b8bbd2c"
        },
        "item": {
          "id": "43e93ec3-b699-4820-9ac3-c97b707e8881",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "144f3d1d-e1af-4faa-ade1-383dc004d77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643b108-8036-490c-9bd1-ea66f06e1c43",
        "cursor": {
          "ref": "8a09147b-215f-4e76-9d46-2587a1274dd5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "78559adf-60b4-4e97-a006-8e0a50fdab74"
        },
        "item": {
          "id": "2643b108-8036-490c-9bd1-ea66f06e1c43",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8dd6402a-88cb-4d0f-8123-3f8bdff85f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589302ca-c131-4f24-ad4a-b7235d05c98d",
        "cursor": {
          "ref": "03d50bd0-7e00-4789-ae6d-8db1442f5d8c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1aacbbf6-5115-4a05-921b-cb50b12aa9a3"
        },
        "item": {
          "id": "589302ca-c131-4f24-ad4a-b7235d05c98d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "597f25a7-0421-498c-8b85-02492585e2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35358bf-6bd3-4cd7-b05d-a731e3bcf339",
        "cursor": {
          "ref": "c188a662-1a7a-412f-bf9d-74cc84231cd7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dd869dab-952d-45eb-ac79-e1c8d66ac862"
        },
        "item": {
          "id": "f35358bf-6bd3-4cd7-b05d-a731e3bcf339",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c038ec8e-2701-4032-a15b-234aae5dc261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8376cd83-5072-4fdb-bf25-4df8ecdf757a",
        "cursor": {
          "ref": "22673259-c9cf-4044-bbf4-80be6049c4fb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6dd2286f-5173-42e9-872e-efeba5031959"
        },
        "item": {
          "id": "8376cd83-5072-4fdb-bf25-4df8ecdf757a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c9cf4ba0-6162-4fe3-9e4d-1259829a91fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437307d2-3614-4f54-b5db-3173a8c8db8b",
        "cursor": {
          "ref": "2440f822-be70-45b7-b7dd-5af81c07ff0a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e98fd012-5457-4006-92d7-2d44b5d49fd1"
        },
        "item": {
          "id": "437307d2-3614-4f54-b5db-3173a8c8db8b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bc835712-80f1-4348-8fd4-02ef2aae9d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce828af2-39fc-4cc8-8a74-ff0f30a66a69",
        "cursor": {
          "ref": "ae3ee538-7f57-45dc-9339-87626804048f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a651ef1-a27d-4d90-88b6-197b8452e287"
        },
        "item": {
          "id": "ce828af2-39fc-4cc8-8a74-ff0f30a66a69",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "842d19cf-3f8e-4777-9c39-3f30bf9fa0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c53b910-428f-4d71-9acd-169f7da500cc",
        "cursor": {
          "ref": "0027e7bd-21e0-40d2-82f4-3b78678d3aea",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68a47800-09fa-46e0-bcb8-3c981cf8a464"
        },
        "item": {
          "id": "3c53b910-428f-4d71-9acd-169f7da500cc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b73fff6c-0c63-4530-97a0-6d5f2d1afa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47431369-6a18-4b85-976c-90084cee3f6a",
        "cursor": {
          "ref": "19ba0a79-a410-49f8-96f5-2fea64d7ab37",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7122e068-80e9-4f1a-b199-9356bdbc8bdc"
        },
        "item": {
          "id": "47431369-6a18-4b85-976c-90084cee3f6a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "198e0e96-9318-49c5-ad82-f530ec38bdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a6bae2-b043-4128-bf22-3f9ef1dcc8d8",
        "cursor": {
          "ref": "ef9558b7-7da4-48f9-b8f7-544a52f84a09",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "91b20159-607b-4fc5-bd0b-88812010d9ba"
        },
        "item": {
          "id": "c6a6bae2-b043-4128-bf22-3f9ef1dcc8d8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "424dde30-78d9-4430-afbf-3c0cba1b5351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb7a82c-f399-43e7-b7f2-77d5eaf1e68a",
        "cursor": {
          "ref": "0264d914-b0ee-4443-9a89-0e329bc78942",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77014e13-9861-427a-b05c-500f0229d595"
        },
        "item": {
          "id": "aeb7a82c-f399-43e7-b7f2-77d5eaf1e68a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9943309-efd1-428c-b86f-30dbfa186a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f7804e-50c5-45f2-8443-36c5a2b04b2e",
        "cursor": {
          "ref": "749ab19f-b2f9-44b8-8225-351d40763aeb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6eb1a29e-591a-4439-9ac9-0c16639fd105"
        },
        "item": {
          "id": "08f7804e-50c5-45f2-8443-36c5a2b04b2e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4eee3acb-95a8-476a-a952-4114ffddceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc9ba61-10f2-4a87-91b0-12347917c96f",
        "cursor": {
          "ref": "c90bda29-0aa6-45bc-9f69-72bff788151c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fff18e02-b1a1-4bd1-9f59-4d29ddc7b668"
        },
        "item": {
          "id": "dcc9ba61-10f2-4a87-91b0-12347917c96f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a1feae45-eb28-4773-ba01-273370bd10d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033edc6-1ce2-4c3d-9e57-1cf7acfe1292",
        "cursor": {
          "ref": "56120ea5-bc48-46d4-ac8a-f727f6b13a4c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20b68703-648e-49c8-bf48-9e831c0f7d70"
        },
        "item": {
          "id": "5033edc6-1ce2-4c3d-9e57-1cf7acfe1292",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "92ad38aa-c787-4feb-baa3-eac1fba7720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ccdc7a-0f09-4e3f-8dd4-c05c494f5d0b",
        "cursor": {
          "ref": "b5fa6a03-6bf8-4b52-a159-560a5c477ab2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "584c22c3-2525-4141-aa90-3741a1f2ff1a"
        },
        "item": {
          "id": "d1ccdc7a-0f09-4e3f-8dd4-c05c494f5d0b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b24e92ad-79c7-48c5-957b-37a2a50997b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f8bc44-7c82-4d90-bdb6-ccf6bf59d1d6",
        "cursor": {
          "ref": "c487da09-5d43-4297-b21e-4bd9ba4a7ed8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be56d51d-928c-4ba3-9083-e0b9256c88ee"
        },
        "item": {
          "id": "14f8bc44-7c82-4d90-bdb6-ccf6bf59d1d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "961856fc-485d-407d-9c0f-bf23dc58445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe6e9d-2764-45df-afa9-467ceff0ef6f",
        "cursor": {
          "ref": "1ccd834f-cc95-4cea-b486-313008a95796",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "24034fe2-5fc9-458b-a3f4-f1b156eacaab"
        },
        "item": {
          "id": "fafe6e9d-2764-45df-afa9-467ceff0ef6f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ed998ca6-6849-44c4-b3eb-f7bfa73d4673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bc5abc-a984-45e8-855e-585103bb85db",
        "cursor": {
          "ref": "fd6c8d55-3be6-40b7-8baf-8402c525f3c5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9929e16d-eec3-4f81-b275-be95f56288a3"
        },
        "item": {
          "id": "27bc5abc-a984-45e8-855e-585103bb85db",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4f21fa3f-4082-489a-8fad-cb211faa5e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e4e3c1-152f-4748-92ab-710d452d9687",
        "cursor": {
          "ref": "c2ab41f4-e8f9-46d3-b04a-de42be05e369",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b0a7c83a-9fe4-416f-8dc7-360f97b3ad99"
        },
        "item": {
          "id": "f1e4e3c1-152f-4748-92ab-710d452d9687",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c16f8def-72b0-4f45-81ac-b3464f3bcf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ad3d5-43f4-4cc1-a9f4-e78d73624181",
        "cursor": {
          "ref": "c31d20f0-c876-4a7d-add4-f84d6f47041b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "14e871d6-9214-4356-ac80-e288d2711b96"
        },
        "item": {
          "id": "867ad3d5-43f4-4cc1-a9f4-e78d73624181",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "395e6c09-386e-4453-beb8-a0ed9e7b444f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e313fc-2f2c-4bcf-ad2b-ab284c9b763e",
        "cursor": {
          "ref": "2e99d9d6-aea6-44d2-abd9-e5811ff9bc37",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ac12fa14-e518-4263-a29b-cdfb4283f306"
        },
        "item": {
          "id": "77e313fc-2f2c-4bcf-ad2b-ab284c9b763e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf64fb23-b791-4465-a39e-96b2d3acfe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3b6765-67a8-486d-893d-a76f995f421e",
        "cursor": {
          "ref": "81845629-8e21-4f5c-bb02-8a8c078f714e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8898d176-4686-4aef-ba5d-cc25149731b9"
        },
        "item": {
          "id": "df3b6765-67a8-486d-893d-a76f995f421e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "de62f0c9-c54c-4034-b8b3-3b9f156df937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da8b50a-2376-4e3d-9f4c-c24bf676960c",
        "cursor": {
          "ref": "7d7e76dd-8fb1-4b09-be96-83e9eb51e145",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f30d640-0b7b-4ffa-94e3-963d57afa73c"
        },
        "item": {
          "id": "9da8b50a-2376-4e3d-9f4c-c24bf676960c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4e323f5-5996-46c5-bce3-df6121389162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0652059-6033-49af-a38f-8c934748db90",
        "cursor": {
          "ref": "c50351d2-490f-4d23-9000-9cc9f703751b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "37b0cda0-777c-4004-9c45-0c5cb728c0da"
        },
        "item": {
          "id": "d0652059-6033-49af-a38f-8c934748db90",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a03ad3d1-ef07-4975-937b-270ccfee8a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3e2ab-adab-4de5-8b02-056215c1114d",
        "cursor": {
          "ref": "2e146f2b-c2bb-4810-bf66-368f31d3aa4b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3ab3aa62-db95-4f69-a92a-6f7bb3cb65eb"
        },
        "item": {
          "id": "f0b3e2ab-adab-4de5-8b02-056215c1114d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d5e63f7b-6036-4001-bdde-d03c7ba45379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca6172a-a5ec-4d2a-a895-65145467593e",
        "cursor": {
          "ref": "038417b1-0514-46bb-b8c3-d4d547c43d2d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "751a46cb-8862-4d5c-907c-8b56ad233a83"
        },
        "item": {
          "id": "1ca6172a-a5ec-4d2a-a895-65145467593e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4c46c541-04f8-45a2-858c-e75430e7de35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81619056-dfc8-4001-b63e-7c574ef7cee8",
        "cursor": {
          "ref": "c8a12e10-32f0-451f-a460-de37a8d8a5e5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5b426abf-3525-4383-acd6-1027b42296ae"
        },
        "item": {
          "id": "81619056-dfc8-4001-b63e-7c574ef7cee8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b24d901f-17c8-49cc-a490-66a54c32fb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fff678-a347-4e6b-a458-88e791cc28de",
        "cursor": {
          "ref": "3b14fe8f-aea7-4c4e-b49f-411ee27db32f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ec88ee6-edd9-413b-b8dd-673b4004a1df"
        },
        "item": {
          "id": "e6fff678-a347-4e6b-a458-88e791cc28de",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6d42ea8b-9383-46c3-90a1-dae13729e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb41ca1c-53f6-421a-affd-2a96dc4da5a1",
        "cursor": {
          "ref": "6a706d38-d973-4795-a7e3-10247103bf39",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cdc40202-0762-49eb-a418-421506c24a98"
        },
        "item": {
          "id": "fb41ca1c-53f6-421a-affd-2a96dc4da5a1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89fa4137-b03e-43b3-ac00-c90c9b076335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b8b935-3b0b-4549-bd37-f90a3392d195",
        "cursor": {
          "ref": "68accd5a-5b1e-48f2-ad1c-b465efc3395b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3dc276cd-5e19-46ca-8070-f0ea03fd087e"
        },
        "item": {
          "id": "b8b8b935-3b0b-4549-bd37-f90a3392d195",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b8a20b55-4fe1-4be8-b3fc-9ef1496afbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ed0903-b086-4bb5-86d0-e79736914362",
        "cursor": {
          "ref": "acc34c40-0a6b-48c2-978d-6c80a20c9356",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7ad594f7-29d9-43b4-975b-1ac07eb2323f"
        },
        "item": {
          "id": "25ed0903-b086-4bb5-86d0-e79736914362",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ec24d2c-4a09-4182-999f-6a44cb93f5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48fdd10-2d62-4362-8d89-8103d92bf642",
        "cursor": {
          "ref": "2ed03275-d5ba-4bd5-b0f2-33c759b9700b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3da2fb5f-9d8c-406d-96c2-065e6bbd5cd0"
        },
        "item": {
          "id": "e48fdd10-2d62-4362-8d89-8103d92bf642",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a8b1637-cf84-4d7a-9787-99df8507bbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e98229-abd2-4d65-aa49-d90d0f89b796",
        "cursor": {
          "ref": "5693006f-3993-45a7-ae19-ea2bb1f2c75f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ada1c14e-3210-4e20-b91c-a28e95182c58"
        },
        "item": {
          "id": "e9e98229-abd2-4d65-aa49-d90d0f89b796",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "acf86cd9-f527-468f-9bdf-ec60a2271785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a097505-a0ef-4391-abb8-983790bf4005",
        "cursor": {
          "ref": "d3ba516c-83a6-452a-806d-5c585a2f8856",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6936ffd3-dcf6-4d80-a194-4325a5a21cea"
        },
        "item": {
          "id": "4a097505-a0ef-4391-abb8-983790bf4005",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4bc0b124-b272-4a1e-86b3-af66ebda194d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63a0102-6e80-4d70-ad0b-c3499a97043d",
        "cursor": {
          "ref": "2acfa067-1d8b-4f24-8912-5ce1276b91bc",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e3f907c7-7007-4d48-9098-f252f8f3e824"
        },
        "item": {
          "id": "d63a0102-6e80-4d70-ad0b-c3499a97043d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f08025ac-aeaa-4c81-847b-3655211e329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ef7c0-cc6f-4da9-9378-da0d1889dd88",
        "cursor": {
          "ref": "5032ad9d-2e6c-4076-87d3-3c58e8638a32",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7fb6e0aa-09da-410c-b4d3-7789176079be"
        },
        "item": {
          "id": "896ef7c0-cc6f-4da9-9378-da0d1889dd88",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "27b506cd-8819-4977-84d5-276881845c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b14e024-ff0f-4a83-812c-ca5a389e105b",
        "cursor": {
          "ref": "6437de92-a7da-43ee-9914-d5e75f4a5e76",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e87256b8-10af-462b-b87b-5e610bebe0ba"
        },
        "item": {
          "id": "6b14e024-ff0f-4a83-812c-ca5a389e105b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2d358469-91f3-4d15-863a-6a91eddcb450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4683f-644d-4a2c-ab32-92c1f78964d1",
        "cursor": {
          "ref": "24c0f29c-546b-4e95-a956-48e874921556",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8c046f32-eacb-4842-a271-20065fbfa7d9"
        },
        "item": {
          "id": "5bc4683f-644d-4a2c-ab32-92c1f78964d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "acb8a660-9786-4357-a8a6-ada196e6c06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c33d6d-39f9-4217-b193-00e5224ced78",
        "cursor": {
          "ref": "60f87e32-7b68-41fc-8c33-5558445ca582",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "68967c29-537b-4b81-ab8c-c0273540e3c6"
        },
        "item": {
          "id": "43c33d6d-39f9-4217-b193-00e5224ced78",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8b2db52d-6564-4a24-a5da-060deaf38650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d9db29-d538-45f7-b616-00ebb70adfcd",
        "cursor": {
          "ref": "4c9a52ed-2f0e-4c1f-aa89-97b3124d21e1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2ac3a973-0c3d-4fcb-8ac4-898a3a229403"
        },
        "item": {
          "id": "57d9db29-d538-45f7-b616-00ebb70adfcd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2d033bc3-37c7-4850-8c40-6225d3e5f69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2fac7f-4ec8-47cb-8110-0049d50b1820",
        "cursor": {
          "ref": "735b27ea-9068-41a6-a5af-e7fef744da5e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6a5720ab-d18e-4c1b-934c-c5e640420661"
        },
        "item": {
          "id": "2f2fac7f-4ec8-47cb-8110-0049d50b1820",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "110d5b1c-a446-4789-b2a6-6afda62dec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2c0850-4825-4957-8ba4-53dbd97b2d4e",
        "cursor": {
          "ref": "f2bf1424-64da-4d4a-ad71-e0ea2b53315c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bfe68ad4-3ceb-4338-a2b1-b596ac805abc"
        },
        "item": {
          "id": "ca2c0850-4825-4957-8ba4-53dbd97b2d4e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bfb24b1c-4bef-4772-8a1b-0bf85f26c4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c227c5-e5d6-4dfb-ac6c-d81fe6451d58",
        "cursor": {
          "ref": "4ef6dfd1-49bb-47f8-bbb4-dabeed1bcc82",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9fe53380-205e-4bfa-8b7e-059d0d4799f9"
        },
        "item": {
          "id": "80c227c5-e5d6-4dfb-ac6c-d81fe6451d58",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "543beff8-5664-42f5-9b9f-ccdbd5651f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e36f658-792f-4310-9273-e3e097101a6c",
        "cursor": {
          "ref": "2c16421c-a767-4fa6-8695-f3a58084548c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "eb41a9c1-4ac7-403d-b770-95ced819564d"
        },
        "item": {
          "id": "3e36f658-792f-4310-9273-e3e097101a6c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c2b0c2d3-5a09-4cf6-9da1-20c5f5e02409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3282ef9-5f4e-4ed0-a891-e6a13c042f18",
        "cursor": {
          "ref": "5f74e627-8886-42b9-b630-48d092efe4e1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b389295b-bdf3-46cc-839b-21e154feddad"
        },
        "item": {
          "id": "c3282ef9-5f4e-4ed0-a891-e6a13c042f18",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5573059e-e51e-486a-8e82-e8441571c086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408fa1c3-e3a0-42a6-9179-122b216db893",
        "cursor": {
          "ref": "f690cd36-306d-4fcc-84a9-9c20c54e7048",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c381e13c-83e8-4cb1-8912-c43d947cb811"
        },
        "item": {
          "id": "408fa1c3-e3a0-42a6-9179-122b216db893",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4aa5772d-75ee-4fa9-8c4e-ef456d51eaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2672f31-ce8b-4745-94b4-a47b2f0a0ce2",
        "cursor": {
          "ref": "ae46c7e3-4e88-4551-841a-4c4478816c5f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c9b16bda-3123-451e-901a-2bae0756feb7"
        },
        "item": {
          "id": "a2672f31-ce8b-4745-94b4-a47b2f0a0ce2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ce4cac9-98ba-4b1a-99fc-6a9702943ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c852c6dd-79ec-47ae-9a77-38bfbb35c0db",
        "cursor": {
          "ref": "8d5343d3-edc0-4c6b-b3d9-74d4cf326e2d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "360a656e-0536-4b0d-a586-83e7cedf89eb"
        },
        "item": {
          "id": "c852c6dd-79ec-47ae-9a77-38bfbb35c0db",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "623fe8f9-cd8c-47e1-9620-5a25102a111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc459f9e-d4f7-422b-a5d7-347fbe1cc3c7",
        "cursor": {
          "ref": "4e5b94cf-21f8-4478-b8dc-213c19d5c09f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "998188a0-ace1-4337-a74b-b3a3fb81250d"
        },
        "item": {
          "id": "fc459f9e-d4f7-422b-a5d7-347fbe1cc3c7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f1d8161f-0f96-45a6-a773-aed8b05b0797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e3d6ab-dc86-48c3-bc6f-67d742703a56",
        "cursor": {
          "ref": "9df638ea-2fa4-4066-9d38-de4cc5026ef4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5758a631-ba8f-4ec3-9873-fc83cdfd7fda"
        },
        "item": {
          "id": "92e3d6ab-dc86-48c3-bc6f-67d742703a56",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "222bc290-d7b8-4fdf-aa75-f3a0fcb880d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a15f76e-b0f8-44bc-9f13-b14ff74741bf",
        "cursor": {
          "ref": "749fa118-82b0-4b17-9f98-ed35fbc4cff9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "539ce6aa-45a4-45a4-beec-a5fad7ffa728"
        },
        "item": {
          "id": "1a15f76e-b0f8-44bc-9f13-b14ff74741bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b268fcac-010c-47a1-b7db-ba4e24b3874b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8651f6-16b9-4c75-99ce-51f4d69f1109",
        "cursor": {
          "ref": "ca58956e-7cfa-43a2-b056-4a28af82fabb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "52891161-2406-4340-b981-453c6c0667a7"
        },
        "item": {
          "id": "dc8651f6-16b9-4c75-99ce-51f4d69f1109",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ac6880c9-21b4-40c3-8d7c-730d629cb65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de6b634-d5e5-43e0-b608-f43ea0686576",
        "cursor": {
          "ref": "4622f8ad-1bc7-433e-9935-4437b4e7ed04",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3858ebfe-b02b-4f70-bab3-8fccbf8620b5"
        },
        "item": {
          "id": "9de6b634-d5e5-43e0-b608-f43ea0686576",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9e845dad-299e-4a11-a444-cc5c23833cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af04b22-8932-411f-a437-6538a74f02e5",
        "cursor": {
          "ref": "6feeb1f2-4794-4968-87a3-f0fe206a8be4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "495f8ef0-0880-417a-8635-9de8b806165f"
        },
        "item": {
          "id": "4af04b22-8932-411f-a437-6538a74f02e5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1d119c0-657c-4be0-bf2d-502c64c6b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cf6d7c-8159-43bf-959c-266e51c28655",
        "cursor": {
          "ref": "6afe650d-1c44-4210-8eb7-97b0dbff2fb5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5c3088c8-8fda-4808-b6e9-ffcef91f93fb"
        },
        "item": {
          "id": "00cf6d7c-8159-43bf-959c-266e51c28655",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3b02758a-985f-4dc4-88ff-cc753e0e2a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf3575f-3226-4284-8aaa-518be6c56ee0",
        "cursor": {
          "ref": "5f8088ef-2b63-4e03-bfe5-a8ca0fa11773",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db1388ba-907b-4e87-a8c5-603a492fb9c8"
        },
        "item": {
          "id": "aaf3575f-3226-4284-8aaa-518be6c56ee0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1d44b7b7-519d-462d-817d-b0ab6f3858e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f537f665-2e4e-4e54-89d6-f1c6c85c56a5",
        "cursor": {
          "ref": "fd7a058d-32ab-4e90-afca-47fff0e52aff",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a3d0d174-cdbb-4fc3-8823-d57e58060dd3"
        },
        "item": {
          "id": "f537f665-2e4e-4e54-89d6-f1c6c85c56a5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "09facc8c-e2fc-496c-aa17-c12eaab310b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9280a2-6ef5-4934-9320-0d1a974aab66",
        "cursor": {
          "ref": "aef2bed1-d90a-4175-b7fa-8b80d288846f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "715b180a-ada3-42b8-b8e2-959db1e8db04"
        },
        "item": {
          "id": "6a9280a2-6ef5-4934-9320-0d1a974aab66",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4eee1360-16c1-4b90-89ee-fc2a3cd2c7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc5c4d2-4fbc-4d7c-9c76-45591e94b389",
        "cursor": {
          "ref": "16bdce90-0936-4aa4-a743-4b9b7169ab2b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9200e31d-000d-4404-b5e2-42630db077d7"
        },
        "item": {
          "id": "4cc5c4d2-4fbc-4d7c-9c76-45591e94b389",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2509a29b-deed-4434-a63e-4a06d0e580be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08550ada-8f51-484d-a992-c68525183d10",
        "cursor": {
          "ref": "f4b6a187-701b-42f7-a66d-2185a59d740c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eebb8bb9-aa15-4c80-94ed-a07b48240afa"
        },
        "item": {
          "id": "08550ada-8f51-484d-a992-c68525183d10",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be78cc1c-66bf-4a5c-a5f8-b900cf18334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e678c3f-4c9a-4b14-8e16-07a923729520",
        "cursor": {
          "ref": "7c03e5b7-a035-48f7-8769-0b9039cfd821",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9641b3c6-bae0-4137-a8ef-fc6b6c5b8161"
        },
        "item": {
          "id": "1e678c3f-4c9a-4b14-8e16-07a923729520",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "527e09ec-3829-4e77-88d5-b9feb22260a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf90736c-1de6-4341-8af8-ca13cabeed04",
        "cursor": {
          "ref": "439c94ed-70e0-4cd0-8032-71ba38d442d9",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "37c6e823-b394-4dc5-af9d-2bc31001d942"
        },
        "item": {
          "id": "cf90736c-1de6-4341-8af8-ca13cabeed04",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6a3ecf3e-56a4-462b-af09-0fd2b7fd9678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd0089-3f75-4149-abd7-214d322e5f5b",
        "cursor": {
          "ref": "c1858e02-e00f-44e4-b56f-49babae46491",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59e0f320-524f-4e4f-8b81-934bec6e5c22"
        },
        "item": {
          "id": "cedd0089-3f75-4149-abd7-214d322e5f5b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e2bf2bce-2439-4dde-9f49-68539a1dc2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a01c0-270b-42e0-bf9d-1fe446b31307",
        "cursor": {
          "ref": "275a0233-63a2-475c-9b81-90af145ce16a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "207dca0f-de28-4303-9133-47390775c959"
        },
        "item": {
          "id": "585a01c0-270b-42e0-bf9d-1fe446b31307",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "24a9dac7-a2f6-499d-a7d4-b6b7eb954b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9883ad4-6f04-400d-b635-96788099a171",
        "cursor": {
          "ref": "ccb9c609-624d-446e-844f-25a51210fa7f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5542397e-58dd-454a-a174-7aca45261f72"
        },
        "item": {
          "id": "b9883ad4-6f04-400d-b635-96788099a171",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "323a60f5-2c15-4a81-9cb2-36d8aab13d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ec2e8d-6831-40e1-b3ff-757a91f8d078",
        "cursor": {
          "ref": "98c51976-a9bf-47a6-be12-13db48c5064f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d1317eb2-32f5-41d9-b000-6798644afab8"
        },
        "item": {
          "id": "54ec2e8d-6831-40e1-b3ff-757a91f8d078",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d15f42a-a17a-4f51-a990-af4bead5e691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e959ad-46ae-444b-bae2-4dfc94ba45ed",
        "cursor": {
          "ref": "05e194ac-bd43-4e0f-b121-bdd984e55b73",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9896b9ec-6739-47ac-9eb2-851ffb64196f"
        },
        "item": {
          "id": "d7e959ad-46ae-444b-bae2-4dfc94ba45ed",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5871cd2c-d7ba-4e96-8bea-e7b24cd7251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f18ded-c12f-4846-97f1-f773b5781bdb",
        "cursor": {
          "ref": "f72a348a-9496-4e61-965f-cf1d2fa13fda",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4798cd61-32db-4b85-a1fd-2050b84bbe46"
        },
        "item": {
          "id": "14f18ded-c12f-4846-97f1-f773b5781bdb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84183b84-0dca-4859-95f9-2f6828d00574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a890be-403c-4a9a-9386-6fc0d05965c6",
        "cursor": {
          "ref": "16480bc7-d41f-4bc8-9630-db7a368a0e67",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eeb50c4f-a266-4812-b59a-174dbb985d8c"
        },
        "item": {
          "id": "f4a890be-403c-4a9a-9386-6fc0d05965c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6951a37e-2a8c-470d-8895-470da89d491c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e942d34-64f9-45b0-b39d-dc92f9ab19f1",
        "cursor": {
          "ref": "43716cef-5d58-48b9-a36f-3af31a6988af",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f1f6331b-55ea-4cae-8827-3e04ce091ef7"
        },
        "item": {
          "id": "6e942d34-64f9-45b0-b39d-dc92f9ab19f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5015fa1f-3d6e-4419-ba4d-5a9257bef686",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fdb81b-2008-4f7e-bc00-16128ff02140",
        "cursor": {
          "ref": "d650929a-9ed5-4e12-9a90-8ca025c6e349",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eff12c1b-e331-48ce-b0c5-97ba3b00bcf2"
        },
        "item": {
          "id": "71fdb81b-2008-4f7e-bc00-16128ff02140",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fdadd908-65e9-4bec-8c30-0375f3ccdecf",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed7bda5-3475-488f-85ab-26b0feb7d4b6",
        "cursor": {
          "ref": "e7ea02b3-376c-4e40-a4e1-fe6c0c78404e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e26a93b9-a232-4dcd-974e-4ea34cb74d17"
        },
        "item": {
          "id": "eed7bda5-3475-488f-85ab-26b0feb7d4b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4d413b62-0234-4a59-82ad-94de776dd706",
          "status": "Created",
          "code": 201,
          "responseTime": 284,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd73b900-4f03-42b9-b859-1c49b6978b4f",
        "cursor": {
          "ref": "b3d7e2f4-e515-4d54-83fe-eadef471b76c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b48177e7-1390-4df2-8ce6-fe2b4f415d46"
        },
        "item": {
          "id": "fd73b900-4f03-42b9-b859-1c49b6978b4f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "83ee2087-0ca2-4eba-ae52-d801a161d4d3",
          "status": "Created",
          "code": 201,
          "responseTime": 117,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "667c44f5-27f5-4463-ad30-33c1d44adf5a",
        "cursor": {
          "ref": "2cbab8cd-8266-4cb2-a151-6a2d11ee5411",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9be2849-baf4-4aa4-a270-96257626fd42"
        },
        "item": {
          "id": "667c44f5-27f5-4463-ad30-33c1d44adf5a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1204860-03cd-437e-9c27-83bcc54f59c9",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65137362-7c19-413f-9279-36323ad89d6a",
        "cursor": {
          "ref": "560487d2-9320-443f-b83f-d50d446161c4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2bf06f97-8e33-4548-8809-535e627a51cf"
        },
        "item": {
          "id": "65137362-7c19-413f-9279-36323ad89d6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bf766415-cf88-4140-baa3-21011513ee29",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaefc0d-0a27-4279-924a-c99d8ecaab23",
        "cursor": {
          "ref": "fe482547-0d02-4e68-aeac-6413624f013e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2fa49d66-435d-432d-89c1-e3dd32acbadf"
        },
        "item": {
          "id": "0aaefc0d-0a27-4279-924a-c99d8ecaab23",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f26091d3-109b-4f88-9343-507a4ed6892f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9b44d7-191f-42f7-80b8-3402bab66e92",
        "cursor": {
          "ref": "85311888-bd97-4a69-a991-cb2d203f5ad5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a93c7518-56ad-4b1e-aadd-8700372e7f2d"
        },
        "item": {
          "id": "de9b44d7-191f-42f7-80b8-3402bab66e92",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "91a14e34-e918-4e45-ac08-d4f5e07c44b1",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51839ac-a2a2-4438-91cc-a3d10908f081",
        "cursor": {
          "ref": "eaf18bec-a4ef-4a49-a427-f5ed92b871ea",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad26383b-3489-44fb-a64d-6d8e53b13e80"
        },
        "item": {
          "id": "e51839ac-a2a2-4438-91cc-a3d10908f081",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3c37e5d2-fb9c-43db-beb5-e8d388ab9064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec88a57-5ad4-4114-b613-e309a06ce877",
        "cursor": {
          "ref": "b079b942-06f8-4490-858d-b41787c5f0f0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7fa83eee-a069-43d8-9dad-798c53327b96"
        },
        "item": {
          "id": "4ec88a57-5ad4-4114-b613-e309a06ce877",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f1e584e-2ce5-4e1f-bc8a-a95ca3ae5b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b97e64b-b21d-41c7-8e29-3f132d864d6e",
        "cursor": {
          "ref": "7083fcde-92e7-467f-9b10-3854b416a15a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2a26fa1d-978b-431b-bdfc-ec775af2a2cc"
        },
        "item": {
          "id": "7b97e64b-b21d-41c7-8e29-3f132d864d6e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc69276e-8d2c-4f75-8b10-a78d7234f810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496b44c-d7f4-43a0-aa6c-4489900f2212",
        "cursor": {
          "ref": "90d573a2-8776-456c-81eb-da9f3e9013d7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6dc9dcde-c74e-460a-a4d9-f239c0e98a44"
        },
        "item": {
          "id": "7496b44c-d7f4-43a0-aa6c-4489900f2212",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e8f50b9-c4df-4024-b393-beff3893b4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e1b0cd-a973-4852-acca-bef0a0700770",
        "cursor": {
          "ref": "344ead10-51b4-4b23-b052-43d2e7f48863",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1aab1f9e-2077-43cd-8e31-31b02661e94f"
        },
        "item": {
          "id": "00e1b0cd-a973-4852-acca-bef0a0700770",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "32309866-f60b-42b4-9ef2-82259a141097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51200e5-e90b-4682-978d-088cba1d2901",
        "cursor": {
          "ref": "60595d80-f2fd-4040-8356-e4a7b9f71010",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0b8590b9-4c68-4814-9b17-913f5553daea"
        },
        "item": {
          "id": "d51200e5-e90b-4682-978d-088cba1d2901",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25b0ae91-626a-4052-8dd3-b2892a8ab920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8d36c4-9086-4e23-9158-9ae9ed222bc1",
        "cursor": {
          "ref": "5f8f45b5-f1bc-4087-b24f-b4965e9e04b7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6bb4563e-2b3c-4d7e-9a54-f97f8aceddee"
        },
        "item": {
          "id": "3d8d36c4-9086-4e23-9158-9ae9ed222bc1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7e444ed-fce3-4bb1-a754-97dd6bdd593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54075c32-3ecd-4260-814c-a54931af9f0a",
        "cursor": {
          "ref": "4408a5f8-ad53-4570-b5c7-9985d60d9439",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e6137945-10b1-471e-aeb4-289d2d93b184"
        },
        "item": {
          "id": "54075c32-3ecd-4260-814c-a54931af9f0a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4216ba1c-0027-45bb-b70f-78f0dc87e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834d87e-88db-41e1-8469-f06f3bd991dc",
        "cursor": {
          "ref": "bfa4766d-4efc-47ef-bc11-48a2e87e5f6a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6224946f-1e1b-447e-aeea-31ac186bdd2c"
        },
        "item": {
          "id": "3834d87e-88db-41e1-8469-f06f3bd991dc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7bb37cd8-68e0-44f7-9133-929d9a9b89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b178188-b0d1-430c-bcc9-a6154b94eef8",
        "cursor": {
          "ref": "ac1f162c-7d26-4878-82bf-2638d0ef03b6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e2aa78f0-e405-478f-bb16-d2b0062b928b"
        },
        "item": {
          "id": "5b178188-b0d1-430c-bcc9-a6154b94eef8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dad55b52-6fb0-4328-9e10-264d7ff46750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7edcabc-f904-4c26-8921-9c03c6b18294",
        "cursor": {
          "ref": "af7eaa2e-e4a9-44a8-a3fa-fe94ddcd9b93",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08954ebc-c796-448a-857c-a0a97801e5a4"
        },
        "item": {
          "id": "a7edcabc-f904-4c26-8921-9c03c6b18294",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0cc5d59-28d6-449a-86bc-14d7e60942f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f42ed0-07c4-455d-af19-edc50286c00f",
        "cursor": {
          "ref": "9836c227-d084-4994-b630-5f24a722ea22",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "64d4908b-fcab-42c7-ae08-64d292bccbcc"
        },
        "item": {
          "id": "89f42ed0-07c4-455d-af19-edc50286c00f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b664283f-9927-4802-8a7f-4583a69bd955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733ba5da-61d7-4a71-a2b9-7981ae67f914",
        "cursor": {
          "ref": "3d0d5225-3eec-4cfe-9335-72a23dd65885",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "39382bff-af18-44bf-8bbc-36b9fb7bafb2"
        },
        "item": {
          "id": "733ba5da-61d7-4a71-a2b9-7981ae67f914",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e00a0f9-dbec-46e3-939c-d0b9d557939c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fb1c0e-56b5-4ce6-b1f3-b0426720daef",
        "cursor": {
          "ref": "1c1a3278-d746-430a-8b8f-57925853f3cd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8cc7f294-bda3-4314-9ccf-9d445a5f127f"
        },
        "item": {
          "id": "56fb1c0e-56b5-4ce6-b1f3-b0426720daef",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e52da2e-1a62-48b3-b512-4f2d5877b46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cf0d25-2ceb-408c-9668-4d3b1c4164ef",
        "cursor": {
          "ref": "298296cc-f008-4b3c-96fa-5b1d9bdfb9e6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2bd9464f-eba9-4b34-b332-489a949b9472"
        },
        "item": {
          "id": "97cf0d25-2ceb-408c-9668-4d3b1c4164ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45d4201a-1e50-4389-b257-68747dc2fb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd283ca-2a5b-4412-9e9b-3c61f0758d88",
        "cursor": {
          "ref": "3c08eff7-5d11-4591-a1ba-98e78d804056",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "acf4f3cb-63f6-4332-90f5-4ea1e33563c6"
        },
        "item": {
          "id": "1fd283ca-2a5b-4412-9e9b-3c61f0758d88",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28695332-fc51-4f03-b82f-f8293ae4faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66da8ff1-6482-499d-ac39-10fb5f996bb5",
        "cursor": {
          "ref": "d09cae17-29ab-40e6-b851-b17f71ded93f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a03eaf0c-3d65-40bc-b699-086ca2ef2632"
        },
        "item": {
          "id": "66da8ff1-6482-499d-ac39-10fb5f996bb5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "563f44b1-0f8b-4d7a-bb2b-687082de5139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f1717-8283-46bc-8fe4-3424f70881af",
        "cursor": {
          "ref": "cdeb99e2-81a3-4fc9-85ee-0f5aebd9fc2c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ca787e88-6235-471d-b90b-2e87aa2be816"
        },
        "item": {
          "id": "d48f1717-8283-46bc-8fe4-3424f70881af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "778fe7ca-4240-417a-ba2e-089ffc1dd24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0245a882-8c28-4c49-9f29-5527bc7174db",
        "cursor": {
          "ref": "26396eae-6fed-42ad-9337-7c6938864a74",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4dc5d3a4-9bf8-4854-9ae8-68c34d9a6470"
        },
        "item": {
          "id": "0245a882-8c28-4c49-9f29-5527bc7174db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e0e1d44-b29a-41bd-9080-c34d6ff4e861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ef82c-fcab-4d32-b387-b8a553745522",
        "cursor": {
          "ref": "255f1681-ab5e-4028-9c40-23390e245c9c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42165f32-f45a-43b7-b603-7e5228ecb125"
        },
        "item": {
          "id": "341ef82c-fcab-4d32-b387-b8a553745522",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "333a1f60-86a0-425a-a8a3-49da4661b1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229eb6ad-a9a5-4347-aefb-3d61c6dfefad",
        "cursor": {
          "ref": "3c73cab6-cdc1-4121-bf8e-399cd934839a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3f57ef61-c0c1-4e9d-b542-3b3717e99e2f"
        },
        "item": {
          "id": "229eb6ad-a9a5-4347-aefb-3d61c6dfefad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "13f7c864-af82-4934-a2d6-0e778d5e1145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39d6e5-4e67-46da-abdc-19dd742220cf",
        "cursor": {
          "ref": "f9fb388c-fe68-452e-a443-d317c9d89328",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37b0e2ec-323f-4b01-b3d3-20476089f25f"
        },
        "item": {
          "id": "0e39d6e5-4e67-46da-abdc-19dd742220cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e6647ca4-90b4-4529-aaab-8f51fd9b1619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d092cee-7f74-4c4c-bee7-67e4888a0d78",
        "cursor": {
          "ref": "07667fc6-db77-4b2b-b2e2-4afb6fda17c6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "45780310-0455-41c5-9f64-d28017fc15a7"
        },
        "item": {
          "id": "3d092cee-7f74-4c4c-bee7-67e4888a0d78",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0906855b-40a1-45e8-ac3d-f4d97eccbdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ffdb02-a865-45a6-afc4-bed2e096274e",
        "cursor": {
          "ref": "4d134f63-549d-4f5f-94ef-c0bf9fc91ea2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4dd5a73-b4f3-4cb5-93bf-610248a7c03b"
        },
        "item": {
          "id": "f9ffdb02-a865-45a6-afc4-bed2e096274e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b84b0fc6-9aed-44fc-9e3b-7c661659964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c8a705-fa28-4c73-97df-9b3ce5d51cff",
        "cursor": {
          "ref": "21351ddb-c38c-41c1-818e-8c7c14dd3ccb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "96e289e9-6d5d-489a-a7c9-a96432f778f9"
        },
        "item": {
          "id": "e1c8a705-fa28-4c73-97df-9b3ce5d51cff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd54cd65-fa1c-4026-85e6-e6b1935bbd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace5b068-4f92-4412-9dff-f101d53c9fe8",
        "cursor": {
          "ref": "99fdc4a6-2112-444a-a4cb-c8416387e3ae",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7133168-d330-4762-8fc2-78a6aee1185f"
        },
        "item": {
          "id": "ace5b068-4f92-4412-9dff-f101d53c9fe8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85dffe81-f2ea-42fe-a3cb-f4a87aab2995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5712ed53-51a3-45cf-ae4e-4a092502d04a",
        "cursor": {
          "ref": "b20e4ec6-07c5-4e12-aa7f-a14cb90e8d3b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "95704e91-c9ca-4a29-98f3-6bedd35b202c"
        },
        "item": {
          "id": "5712ed53-51a3-45cf-ae4e-4a092502d04a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce2147c8-3672-4ebe-bb0c-bd7b4990dfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f80398-1c90-4705-bd49-17478471c407",
        "cursor": {
          "ref": "3fb2673a-5e23-42dd-bcf9-878e0246f88b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37545ef5-3bf5-415d-84b6-306df0e37de2"
        },
        "item": {
          "id": "44f80398-1c90-4705-bd49-17478471c407",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7e57c17f-e01e-408a-8f47-106bd2b40b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9180139-6f02-4bed-a2f2-c0068022a1b2",
        "cursor": {
          "ref": "e2f1c06b-bfcc-475f-aa4e-acfb79ae277d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "02036799-41c0-4b43-8957-6f5c0664a747"
        },
        "item": {
          "id": "c9180139-6f02-4bed-a2f2-c0068022a1b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ea771cb-f02a-4bae-a598-ba9544f9796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26648c0-16fe-452b-842c-c9b48d501e05",
        "cursor": {
          "ref": "a83045e8-2069-4f83-9440-c0bea85b834b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4c38e22b-c2cb-43cf-b375-c56cef00d476"
        },
        "item": {
          "id": "b26648c0-16fe-452b-842c-c9b48d501e05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b49156a-8238-4a9d-ad61-444a96f3ab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36992768-c0e7-4f9d-b86c-945146f3a6fe",
        "cursor": {
          "ref": "b8836588-96f0-47cb-8f61-ef25770d7e59",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f4bcaf2b-6c4b-47fa-92c2-b740ee6b6a3d"
        },
        "item": {
          "id": "36992768-c0e7-4f9d-b86c-945146f3a6fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9f31e5d3-5606-4217-b580-f7c4a2bc8270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121eaec7-4e72-4a3c-8e44-19a0d718555d",
        "cursor": {
          "ref": "698a8e7d-3cf1-48b5-b3f2-7df990a24bce",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "69fb7593-4681-49e6-85e5-8e17d6b81160"
        },
        "item": {
          "id": "121eaec7-4e72-4a3c-8e44-19a0d718555d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "86c4f86f-f317-462e-b1de-db2d90c5519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69562499-4c85-4ba1-adba-03b0ebb8a333",
        "cursor": {
          "ref": "2b5a7ba4-e03e-4244-9399-241b1f94da2c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "55cba046-294c-41d6-933f-fbdf69379fad"
        },
        "item": {
          "id": "69562499-4c85-4ba1-adba-03b0ebb8a333",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c914be90-9519-4278-a918-53dce2558182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37f7e06-0812-48cc-a714-8e6561ede136",
        "cursor": {
          "ref": "cc9e2003-9dff-4e1e-8971-b86257ea9946",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1881bf36-8466-425e-bc95-cf5a6aaf37b3"
        },
        "item": {
          "id": "f37f7e06-0812-48cc-a714-8e6561ede136",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1331149b-91bc-4f29-9dd2-ee387e58cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0b82a-b41f-4310-a7f1-226519f0dd93",
        "cursor": {
          "ref": "32072773-8074-4da2-8c98-ddeb292712db",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e9424b1c-8e1c-4796-a66b-30f6a82f40ba"
        },
        "item": {
          "id": "b7f0b82a-b41f-4310-a7f1-226519f0dd93",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "54dee438-0a9a-4189-9012-372100cead52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe7a943-bcd9-4035-b64b-129044662c41",
        "cursor": {
          "ref": "6beef65f-d317-4eae-9d39-741acd251c27",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "add4d925-df8e-4d15-aaf6-c73070cb7830"
        },
        "item": {
          "id": "cfe7a943-bcd9-4035-b64b-129044662c41",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f4e3410-607f-49d9-b15f-e7d76f53c301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03656aa-0488-4687-8abf-413a715c832d",
        "cursor": {
          "ref": "66d1bde1-942d-4d83-9cb1-1ef8a0fe180e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0ae0f7b8-5fa0-488e-8f9d-3991fad805ee"
        },
        "item": {
          "id": "f03656aa-0488-4687-8abf-413a715c832d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dfdd05c-16a2-404e-8055-c8620d72f9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adce59b1-f722-4eb8-80fe-422c8c700be3",
        "cursor": {
          "ref": "5c44069a-42a5-487c-beca-0a33169f0518",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b61c1e20-6f02-4392-850a-f76177fb9ff2"
        },
        "item": {
          "id": "adce59b1-f722-4eb8-80fe-422c8c700be3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea008acd-fae5-4cd6-806e-68eb27f71e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09774a3e-bd0f-460d-9f6a-d6d2f3521a57",
        "cursor": {
          "ref": "a53a4456-b3c7-408f-88c3-5594ba493ec7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f12b7d3a-1d7d-4f67-b7ef-012f8e805fcf"
        },
        "item": {
          "id": "09774a3e-bd0f-460d-9f6a-d6d2f3521a57",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4d3f782-2a6e-4cd5-a4ec-d6244d864a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d0d95-f794-422a-9ef5-e556889e09b9",
        "cursor": {
          "ref": "b263a096-880f-4006-ba55-e1a0d2d54827",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "af6468d5-6dc2-40e6-b73d-cc65bfd1ff37"
        },
        "item": {
          "id": "aa5d0d95-f794-422a-9ef5-e556889e09b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ce0c3df7-8f5b-4f29-963d-bb8cbcfc9000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fec45d-ee33-404c-a39b-498be1305f47",
        "cursor": {
          "ref": "f959e530-81be-40fc-8734-9aba79ee3bda",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0c1e9e1f-f61f-4211-b7fe-7897f36f57b7"
        },
        "item": {
          "id": "a3fec45d-ee33-404c-a39b-498be1305f47",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ac8d896d-b801-4278-a226-79faa92df232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451377b1-e8e1-4ee7-a267-04b8e3fc9236",
        "cursor": {
          "ref": "91fd5954-bd8a-4a80-8ba4-38528002b119",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "31e92138-595c-4169-bec7-4eda79555263"
        },
        "item": {
          "id": "451377b1-e8e1-4ee7-a267-04b8e3fc9236",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8e2b64c-2f1a-423f-89b6-cfc74d1ead06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3030df6-6afc-4775-9209-7ebd6b4d6a94",
        "cursor": {
          "ref": "1814bcc6-51c8-4082-866c-c9ad9c864dd0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cd8d7740-5052-4a67-93fd-49f0d15a48c0"
        },
        "item": {
          "id": "e3030df6-6afc-4775-9209-7ebd6b4d6a94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6d8f8f4-2df3-4825-8be3-cad547de1ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0636d83-3e07-4642-ad95-ac2ee44a9753",
        "cursor": {
          "ref": "044bbe47-01eb-4384-8229-3daaaa2adffb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1872acd0-b882-4019-b50b-690731a8de7a"
        },
        "item": {
          "id": "d0636d83-3e07-4642-ad95-ac2ee44a9753",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2bd0974d-8eb0-4610-a5f1-4aeb83eb661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594eba1-acd7-464e-a74e-75b423106364",
        "cursor": {
          "ref": "b8ef544c-e0ed-40fd-81c7-c5dacb066bb6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "957f5ff7-e188-4cd6-90e1-7ba4a7775bf7"
        },
        "item": {
          "id": "1594eba1-acd7-464e-a74e-75b423106364",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c72be51-7c24-4cdd-80c5-8165d1147dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbc0996-6121-4cbd-82b1-1defc09fc264",
        "cursor": {
          "ref": "c76549e0-bc01-40c7-aa3c-83a942c4305d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43c446c0-00b0-43b0-9cea-31b741554ab5"
        },
        "item": {
          "id": "fcbc0996-6121-4cbd-82b1-1defc09fc264",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88d4eb3f-81fa-490b-834b-ee6553f31008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdce097-352a-4ae0-96bd-3873c76f477c",
        "cursor": {
          "ref": "9ea79901-8770-46c7-b520-c7d2745a09ad",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef36db3f-d479-444b-9c0f-621f45889d87"
        },
        "item": {
          "id": "3bdce097-352a-4ae0-96bd-3873c76f477c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd477618-e208-405d-a839-4ada216083d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e419b6e-cf40-4352-997f-fcd859e1de4a",
        "cursor": {
          "ref": "8ba038cd-96bc-47e1-9929-3df65ff61e34",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "838998b7-c3b0-4e92-9ce7-3f10836e4f14"
        },
        "item": {
          "id": "4e419b6e-cf40-4352-997f-fcd859e1de4a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "199d3825-f82e-4c02-ba34-9b0a77f0b777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8869a36f-053f-43a8-8504-756e1580fa4a",
        "cursor": {
          "ref": "638df5dc-2453-4aef-a8a1-ab482b0b229b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2576869b-1782-4564-ab74-615d03fe0113"
        },
        "item": {
          "id": "8869a36f-053f-43a8-8504-756e1580fa4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "220c4e0e-14cc-48ea-b335-95c3c5d05d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758ef276-067d-4ff6-8007-00cb674e958d",
        "cursor": {
          "ref": "921e709f-bfc2-406b-846a-e03bba730092",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c6f9eb2a-9309-4a05-bc98-bf93f3e26366"
        },
        "item": {
          "id": "758ef276-067d-4ff6-8007-00cb674e958d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e320f728-69b4-4e2b-a238-207fedc9cb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a231f1-0d1b-471c-9abc-a643a7d10efd",
        "cursor": {
          "ref": "f25899bc-e1d4-48f0-8bca-7c3eb7eddece",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7feda96c-f028-43a1-b90c-11d356321cf7"
        },
        "item": {
          "id": "a7a231f1-0d1b-471c-9abc-a643a7d10efd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11d4bc4e-d116-4483-89f1-843ed43fc1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e02984-2eb5-4926-9ccb-5b229a8fe5f2",
        "cursor": {
          "ref": "c23d1d6b-4730-409e-8a90-51035ef4e9ba",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cbb61d7b-19e7-4710-b60a-1042df0b8e72"
        },
        "item": {
          "id": "41e02984-2eb5-4926-9ccb-5b229a8fe5f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e70eb21e-471a-4468-a2fc-d2dbeca6bbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c092a3-9b20-4c24-8ee4-eed9caaf118e",
        "cursor": {
          "ref": "4ebf8b56-b4b6-4b53-9a9e-940f8516c713",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3072697d-ed74-4b93-89ed-db24225c11ca"
        },
        "item": {
          "id": "10c092a3-9b20-4c24-8ee4-eed9caaf118e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d3583d8-922b-4283-abc2-57f9de798e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca8c6d4-efbc-4104-993f-610cfd06281a",
        "cursor": {
          "ref": "5f8bf04e-2114-45e6-8fd5-47f9fd3bdb1f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5c59217-e4ed-41eb-9729-77f7013e71f4"
        },
        "item": {
          "id": "bca8c6d4-efbc-4104-993f-610cfd06281a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "54f7cd10-2d6b-40af-a681-7efbb52ad570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1f0d57-e82e-45f0-9838-5b1637ece335",
        "cursor": {
          "ref": "7fdb5bb8-deb0-4c41-8bec-bf3efde7fc30",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "33155a14-f024-430a-adaa-7ee9a4116d8e"
        },
        "item": {
          "id": "cc1f0d57-e82e-45f0-9838-5b1637ece335",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a60782f0-add4-4249-80ba-ffa7a115ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570da4ed-8e5e-4d28-bc42-783cb33c113f",
        "cursor": {
          "ref": "625be7b1-a014-45b2-b80d-d84562544055",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3c8b3ef9-d929-4333-98e1-ea41feb0760a"
        },
        "item": {
          "id": "570da4ed-8e5e-4d28-bc42-783cb33c113f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f42aafe-f56d-4781-9c40-8232e22477f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137eb9a0-5719-484f-8b89-e415cb25f538",
        "cursor": {
          "ref": "8673406b-c796-4cb7-af5a-7b3de980308e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e93cc183-be14-4d69-b13b-f9e6ae72eff5"
        },
        "item": {
          "id": "137eb9a0-5719-484f-8b89-e415cb25f538",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4be7c66-3a1e-4733-a6cc-f6dfeddf2c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb1afc0-1b17-4580-aee0-779a7ad37661",
        "cursor": {
          "ref": "3229fb76-e8f3-4aa8-bab6-5c69466556a4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "76203ebd-97ad-492a-b57d-52efdc87b66c"
        },
        "item": {
          "id": "dbb1afc0-1b17-4580-aee0-779a7ad37661",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bcad8039-1302-4c64-a573-abdcf8a01a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40ba54-2e7a-4edd-a0e4-7b26036e1873",
        "cursor": {
          "ref": "0873e2f3-5608-4f4e-b2a8-ce6843b854fb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8812e39-dc96-44f5-a730-24d209606930"
        },
        "item": {
          "id": "2a40ba54-2e7a-4edd-a0e4-7b26036e1873",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c60a7378-ee91-4578-8b57-f5b01832d4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b4f61b-1d90-4ae5-a6d5-9bbfba402b17",
        "cursor": {
          "ref": "3da2e55d-97d2-45c2-bd5c-ebae6e39aa43",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1debacbe-17cd-4038-acf3-f10b12c57097"
        },
        "item": {
          "id": "c1b4f61b-1d90-4ae5-a6d5-9bbfba402b17",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8543eb9c-60b0-433c-849b-13164942b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b06485-9a12-4902-8884-6d3cc3b195a3",
        "cursor": {
          "ref": "4f31c0af-af60-4eea-9592-1eac529c605d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf1e4f62-fadf-4ed5-b2e4-7eefa66aaec5"
        },
        "item": {
          "id": "c2b06485-9a12-4902-8884-6d3cc3b195a3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d5941c40-a6f6-4f73-b0aa-f73d8726d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7232c9da-4c13-4e7f-9a86-79275cfdf05e",
        "cursor": {
          "ref": "36b92fff-3584-496f-ab46-53c3e9c3e653",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2d5f53ec-8c11-42fe-b686-45658436009b"
        },
        "item": {
          "id": "7232c9da-4c13-4e7f-9a86-79275cfdf05e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf757c3a-3595-47f2-9743-56908d589b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96a5e3f-f0f4-457d-87e0-0b158f5f407e",
        "cursor": {
          "ref": "254a937e-a31d-4a03-8c21-c27c1b9d7de4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b5c2526f-10e1-44bd-82e2-4c196347b675"
        },
        "item": {
          "id": "d96a5e3f-f0f4-457d-87e0-0b158f5f407e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0901e611-1bae-430c-96e6-aa6e9da30bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d22607f-c7a2-412b-bd7e-03aa5846b324",
        "cursor": {
          "ref": "24da0855-0e97-490d-beef-d1caf82e87ff",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b4fbd948-3403-4e21-b1f8-f1ffaa008dd8"
        },
        "item": {
          "id": "8d22607f-c7a2-412b-bd7e-03aa5846b324",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3b7dc733-c406-49ac-a00d-f8d6e5229e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2479f885-e17b-4617-969d-d9bbdc023f20",
        "cursor": {
          "ref": "4c37061d-45b9-4f94-83df-90415eab345b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cdf5048d-7e80-4dc6-900e-19998ee23387"
        },
        "item": {
          "id": "2479f885-e17b-4617-969d-d9bbdc023f20",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41f349c1-7db1-4b21-abe1-9ea483a4738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b50b8-46ac-47ce-a39e-1feb74372222",
        "cursor": {
          "ref": "3c5f1e35-c7b9-44a0-bb3c-68a372e3ad1f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fbff5e07-2e38-4454-9c35-20dda456c907"
        },
        "item": {
          "id": "364b50b8-46ac-47ce-a39e-1feb74372222",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "923ad554-e49d-465c-be77-764e1e618251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4547f3d-1fdb-430b-bd30-36b6be9bb3c6",
        "cursor": {
          "ref": "e54bb1fa-1e4e-4f5e-95a9-d923c2c654c3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85c58dd5-0881-4f2c-98fe-1cbe04e11c73"
        },
        "item": {
          "id": "b4547f3d-1fdb-430b-bd30-36b6be9bb3c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc2b736b-baa8-480c-ba2a-3f96130fa6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cabfa2-5fe1-4aa4-aa32-66b72d1c48d8",
        "cursor": {
          "ref": "263dc547-b7cf-4ddb-b5b9-7ee7fd997ddb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cc59f91b-34d8-4d49-931b-2638f23074a0"
        },
        "item": {
          "id": "f3cabfa2-5fe1-4aa4-aa32-66b72d1c48d8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1fe4e142-04af-43c1-a1c2-812ce540a98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683beeb3-9248-48b1-b55f-c47600e26fcc",
        "cursor": {
          "ref": "9b0754b9-2d4f-4d36-a27a-30643ef6ee3f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7fe740c2-fdf7-434a-b34a-c196a1386737"
        },
        "item": {
          "id": "683beeb3-9248-48b1-b55f-c47600e26fcc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "52bb6e96-8187-4299-90b0-c20a5e106253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6991a348-f207-45ea-81b9-815401cbb953",
        "cursor": {
          "ref": "6fbf4d4c-37cc-4f9b-b4ba-5ad96f321949",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "14d94c81-750a-4dcb-a64e-a246967e805a"
        },
        "item": {
          "id": "6991a348-f207-45ea-81b9-815401cbb953",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4fbf07c4-b18a-4d6b-bb6d-69f82735a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d16e6b-fa6a-4924-932b-1ea0b5fab2fd",
        "cursor": {
          "ref": "280cb4bd-ed65-4d24-91eb-c152248e2661",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "991b3a1d-90c3-401d-b242-5b53a52e1aa4"
        },
        "item": {
          "id": "a9d16e6b-fa6a-4924-932b-1ea0b5fab2fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2315d3f2-74ff-4472-bd1e-6b2dedac7fc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8862cb9-38bf-4eac-bbcf-47a593883195",
        "cursor": {
          "ref": "294c15e7-b129-4129-996f-3ff2a146e58d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ed9d429-ae78-4a03-95b1-34a1f990d235"
        },
        "item": {
          "id": "d8862cb9-38bf-4eac-bbcf-47a593883195",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5d045a7d-801a-488c-a4aa-ffd36c21eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97d3aa-af17-4fa1-b3ff-f2f5c7b69972",
        "cursor": {
          "ref": "c970ec29-fe7e-4fb6-ad2e-146038cd8cbb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65f89fab-7855-4155-9812-17401d21a305"
        },
        "item": {
          "id": "6e97d3aa-af17-4fa1-b3ff-f2f5c7b69972",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "595433ba-7fd4-4511-9604-5b7036c894cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627377b-f6fd-4cf1-aebc-8047e8d6abb1",
        "cursor": {
          "ref": "cba5155a-a314-4e15-83fb-db6e8a72f4d5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e6df5aa-a45b-4b62-a0bf-c54546cc8ee8"
        },
        "item": {
          "id": "b627377b-f6fd-4cf1-aebc-8047e8d6abb1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a886d1e-131d-42a5-87c7-0dad0d6d19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac17efe-c290-49c8-bf90-8241b19c4649",
        "cursor": {
          "ref": "a0c138d5-2a48-4cde-b361-4d48c1d7bd2b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f9476bdc-778b-4918-9f2a-1e70842b2a98"
        },
        "item": {
          "id": "fac17efe-c290-49c8-bf90-8241b19c4649",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "434dc17d-f5e6-4099-894d-db3f911bf608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65765b7-13b8-4d26-bdb0-0eca08a28cd7",
        "cursor": {
          "ref": "468d2662-4b7e-403b-a2b1-90453c155ed7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "70635970-83fe-414a-80f0-08c6c05ae373"
        },
        "item": {
          "id": "c65765b7-13b8-4d26-bdb0-0eca08a28cd7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "46fa49d4-8569-4ddb-a2c5-f45d03ad6fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d6e1f8-4e95-4aa6-9632-b538ff1db187",
        "cursor": {
          "ref": "2c9b59a0-9917-4060-8f28-f610edd2ec0a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "164251d7-e0de-4765-8bae-615ea20b0151"
        },
        "item": {
          "id": "78d6e1f8-4e95-4aa6-9632-b538ff1db187",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e08b6c9-32d3-4899-870c-50022d569b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36635c23-7b8d-4fdd-8d2c-ebd87235a152",
        "cursor": {
          "ref": "36d4003c-3bae-4149-afe0-63279ea3584f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9321ad86-4c2d-4539-b36e-b87538b5f21b"
        },
        "item": {
          "id": "36635c23-7b8d-4fdd-8d2c-ebd87235a152",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "27467095-b18c-46dd-8c28-eaabe044cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf13e249-bc81-41e7-bb6a-10c9508f90e5",
        "cursor": {
          "ref": "200ccc12-e217-4f04-9443-645812e74cb1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a499f653-d3bf-45ac-951e-cc5df73c5205"
        },
        "item": {
          "id": "cf13e249-bc81-41e7-bb6a-10c9508f90e5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "48fc431c-7834-4815-960e-3176261eee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea137e3b-f697-428d-94ec-f6b1926ae117",
        "cursor": {
          "ref": "a511e4b6-7f82-4489-8300-d4908f9ffdea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d2245b1d-8f0d-4891-b730-2efa5768dea7"
        },
        "item": {
          "id": "ea137e3b-f697-428d-94ec-f6b1926ae117",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61d38363-c925-436d-b676-f887bc8bccb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c3e466-f62c-4ede-9811-fa2eb3072151",
        "cursor": {
          "ref": "3a226696-c2ab-4a34-b3de-c6ec242f74a6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7811a0e9-a273-4d66-aee4-91b67bdec5e8"
        },
        "item": {
          "id": "b7c3e466-f62c-4ede-9811-fa2eb3072151",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "07059ac4-af9d-47b1-a26f-92c1ba96cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcfb22f-c749-4575-9da9-f971bec61e7c",
        "cursor": {
          "ref": "7ffc12cb-5bfa-4f09-bea8-8d797ddc3541",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee7afc4b-0bc8-4d8f-aea7-ebb0756d216b"
        },
        "item": {
          "id": "cbcfb22f-c749-4575-9da9-f971bec61e7c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b4c62870-e0fa-423b-9ddf-09c84a42f994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81258b6d-e03c-4a72-b557-6163044e7d5f",
        "cursor": {
          "ref": "d9a6c457-abfe-416b-97cb-ac90a07556ee",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4df5edf5-3f5f-4bd1-88fc-f45e2e25aa0f"
        },
        "item": {
          "id": "81258b6d-e03c-4a72-b557-6163044e7d5f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20a13410-214b-4b10-a83e-710ea60f0347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129593d7-7059-42bd-a20b-1feddb2bba0d",
        "cursor": {
          "ref": "04d131f7-de71-4ea5-af19-e0c0e0bc9415",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0ef0d525-2e52-42be-a263-3bc0a208c2d3"
        },
        "item": {
          "id": "129593d7-7059-42bd-a20b-1feddb2bba0d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fc5e6c52-7072-4eb3-bdb4-b1792c9682bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3453c115-0418-4ce0-bf62-3ca2b33f4bae",
        "cursor": {
          "ref": "79ed273e-e482-4bfb-b193-2413e978fbf9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be3720b5-34ec-4291-acd1-cfc5e2dc78d0"
        },
        "item": {
          "id": "3453c115-0418-4ce0-bf62-3ca2b33f4bae",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0d1b090c-935f-4f73-b0a0-4191a2b5c268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efa6f25-25af-411c-9ca9-0f39035b2f0d",
        "cursor": {
          "ref": "80eea7e5-abec-4f91-b3ed-1b45a2d434a6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "95f68f79-ffdd-4a2c-ab66-63c5b3b007e1"
        },
        "item": {
          "id": "3efa6f25-25af-411c-9ca9-0f39035b2f0d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f9a6ad82-249c-4221-972a-24d7a6a2bfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdfb304-c6f3-4a89-b5d8-3ae508b7001f",
        "cursor": {
          "ref": "8781f7f3-b839-43ad-a82a-cfdb407cfc76",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5663ff1d-9a81-45df-9f0f-328c342c5159"
        },
        "item": {
          "id": "dcdfb304-c6f3-4a89-b5d8-3ae508b7001f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b7cb7da4-e7e0-4f1d-9e6c-690046cae742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f3f2ae-caf4-4874-94d0-dc085b930593",
        "cursor": {
          "ref": "925dcecf-e40a-438f-9702-9905d0f25348",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b9dd7161-a095-4a00-9c11-229195c649f4"
        },
        "item": {
          "id": "e2f3f2ae-caf4-4874-94d0-dc085b930593",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5fa105d3-5a0c-48b5-80e3-f057ba21db43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab7786e-2a08-4650-b587-cc54d79646ee",
        "cursor": {
          "ref": "5a3d2312-a527-4179-b0f0-e3c41728c331",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef25e051-4cb2-495b-9c61-804aaf9d4d12"
        },
        "item": {
          "id": "bab7786e-2a08-4650-b587-cc54d79646ee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "599ce015-89af-420b-b025-17b86469a3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84486bb9-0225-42d9-b43d-02882a7119bc",
        "cursor": {
          "ref": "369212f8-25cc-46de-8ddf-d400e5a1e2ae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "85c3de44-67f7-48a0-b056-8d4b0e29a162"
        },
        "item": {
          "id": "84486bb9-0225-42d9-b43d-02882a7119bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bdecb805-a463-46d6-84e7-68b6e446afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b0cdb-aa6f-4c43-a4c1-e443fabcb059",
        "cursor": {
          "ref": "baa18978-a0a4-4980-8fb4-787d18f7a5ac",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f40b18ae-cf29-471e-a9f4-65844b420860"
        },
        "item": {
          "id": "498b0cdb-aa6f-4c43-a4c1-e443fabcb059",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a29a32a9-b1f1-4968-afa2-1701b9074e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f854a6-9512-45d4-92c7-adfa63355092",
        "cursor": {
          "ref": "59f7bc28-d68e-4ae8-b742-581b36056fe2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0d98e25a-178a-4e62-8ea7-f926c1bad6c2"
        },
        "item": {
          "id": "a0f854a6-9512-45d4-92c7-adfa63355092",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fda02000-f862-4ca5-8bf1-de2b29c4ad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a65c620-08ce-4e2f-b4d2-cc8c7749133f",
        "cursor": {
          "ref": "f6c2d7e6-15e2-4e74-b9c6-41ef05fcb02c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b32ea6eb-344c-4de3-ba08-86b528b773a7"
        },
        "item": {
          "id": "2a65c620-08ce-4e2f-b4d2-cc8c7749133f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ebf1831f-9896-4f84-80a9-8765c7833a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d942ffd1-0e41-4717-b404-0b211ebc7254",
        "cursor": {
          "ref": "3d39e772-6952-4fac-a4ec-030e005da66c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cde1350a-2e43-49d1-a191-c67b9c7ec2c1"
        },
        "item": {
          "id": "d942ffd1-0e41-4717-b404-0b211ebc7254",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "627a3a57-f708-40c9-8254-61f02bd2db07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a9b4c-35dd-4fdd-b553-f9f483d0ead1",
        "cursor": {
          "ref": "9e2f77f5-fd4e-48cb-9336-a2c03947213f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ebf0eb97-42c7-4f1e-a011-5bb12b13477c"
        },
        "item": {
          "id": "1a0a9b4c-35dd-4fdd-b553-f9f483d0ead1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cd03ed16-1d5b-4e90-9c54-e0e8909c8198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d936c1ce-c073-4da0-9fe6-2f717edee99a",
        "cursor": {
          "ref": "7850f975-567f-4f26-828a-b5153c9131ad",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b28e5086-b32a-42ac-8298-427552e69167"
        },
        "item": {
          "id": "d936c1ce-c073-4da0-9fe6-2f717edee99a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1d4149b5-cb26-4920-90f5-ff1c42c259ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080a94bf-8bec-4be6-9c11-212337648e07",
        "cursor": {
          "ref": "3518cf11-99d8-44a3-a076-311eefd13a14",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "16cc4188-fe29-48a4-bcad-853d275d6dae"
        },
        "item": {
          "id": "080a94bf-8bec-4be6-9c11-212337648e07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9279235f-ba8f-4642-b292-ea79659ece35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4306c4e4-9ee6-4952-875e-451edfe8f721",
        "cursor": {
          "ref": "29cc9697-9d3d-4166-99a6-92a9de976589",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "63e0c5d1-d472-4c40-9a4b-74233ea852f0"
        },
        "item": {
          "id": "4306c4e4-9ee6-4952-875e-451edfe8f721",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cdc302c-47cf-429e-adff-53796a06b4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d89a7b-1a54-4525-87c1-972e53683079",
        "cursor": {
          "ref": "55ea6d56-061c-47c7-82de-942d2b308a41",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "69d6d026-570c-4909-bee5-dc326146e378"
        },
        "item": {
          "id": "75d89a7b-1a54-4525-87c1-972e53683079",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ae1c779e-1dea-4f25-ab3b-e882c2045e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f45a2-e578-4481-b340-a93423f4f163",
        "cursor": {
          "ref": "1a3dea94-da81-460a-aa25-809d4aeed7aa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "83bce152-6072-4355-9d5c-3e902ef04cec"
        },
        "item": {
          "id": "520f45a2-e578-4481-b340-a93423f4f163",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f97473b1-7286-47de-bb1c-e6b67cd27e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb55adb-9282-48f8-aef2-b7827a4f1170",
        "cursor": {
          "ref": "2f5a84bf-838e-46a4-875e-655055b23fc7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bc22fd49-2ba1-4cb5-8094-8a291832baa7"
        },
        "item": {
          "id": "deb55adb-9282-48f8-aef2-b7827a4f1170",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "44dce492-fd16-478a-95c8-349f260cc3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d5f89d-e4fc-4913-b497-4a728ea521aa",
        "cursor": {
          "ref": "dcf5d4fb-b3aa-4758-811f-bf8d03181509",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f3cb5073-e252-4691-9cc5-90e17598f344"
        },
        "item": {
          "id": "c9d5f89d-e4fc-4913-b497-4a728ea521aa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b4616a14-75ad-4d58-9180-ea80738e0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b5bc7-4414-4e43-819e-e495a6ebbd25",
        "cursor": {
          "ref": "37f98ad3-4d3a-4142-ae28-0751a1043bdf",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cc66fc27-4e36-49e9-8826-9171355c8f16"
        },
        "item": {
          "id": "442b5bc7-4414-4e43-819e-e495a6ebbd25",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99fd2fc0-bd54-482d-a7c5-ebb4202e7593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e58c9a4-c0ca-4c93-b018-9abe73392ab9",
        "cursor": {
          "ref": "e2f75b38-12cc-40f2-a022-e04de990a45d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "08904df0-5f2e-4081-afb7-a668d554961a"
        },
        "item": {
          "id": "9e58c9a4-c0ca-4c93-b018-9abe73392ab9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "391e7b80-8209-48d7-b658-04b78e76b6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c34056b-a7bd-45d3-8bfd-05a07b4b19e4",
        "cursor": {
          "ref": "7c29c14e-d26d-4ffe-915a-4a70cc7446cb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e57b59ad-cf26-4613-a6c3-183325134fca"
        },
        "item": {
          "id": "7c34056b-a7bd-45d3-8bfd-05a07b4b19e4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1b25185a-dbe7-4c74-9ed8-1285c9aff3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b327a9f6-992d-4944-a337-8f6ce21c0946",
        "cursor": {
          "ref": "fb0110a5-9d8a-48e0-a0e4-ee145dc14c6f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "83df3988-0d82-437f-9031-edc59021304a"
        },
        "item": {
          "id": "b327a9f6-992d-4944-a337-8f6ce21c0946",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "314a4345-886b-4d30-9ea0-ae8fc68d1bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76512448-bf60-4492-945f-00aea46b6a2c",
        "cursor": {
          "ref": "4dbf798a-8a78-4708-a52f-7aa0c03945ed",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "530e2f1e-4f25-4d10-a78c-b649172f9b08"
        },
        "item": {
          "id": "76512448-bf60-4492-945f-00aea46b6a2c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e8643a36-a1d7-4169-8a55-c46c0a688cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b85a4-5485-4566-b1a8-ddea24d958e3",
        "cursor": {
          "ref": "675550a1-ffe5-4683-bdc9-11998e9f6250",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "693d7505-83c0-4f30-ae51-76a279fcc946"
        },
        "item": {
          "id": "7e9b85a4-5485-4566-b1a8-ddea24d958e3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "051b2f1d-a7f5-485d-9c45-8e540175435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b7b630-70da-4009-b4ca-b61417fad8ef",
        "cursor": {
          "ref": "edac4a83-c991-4a16-a0ea-61d9aee78df1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0967340d-3586-431f-bfb9-64b6a8cdea72"
        },
        "item": {
          "id": "77b7b630-70da-4009-b4ca-b61417fad8ef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "667036ee-5a56-4c32-9db8-a96b91926f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c6f6db-83a1-400a-b9f2-96364f6469e3",
        "cursor": {
          "ref": "1f667a4c-d9f6-4053-98e2-e60c19c1f157",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a70b1730-ac42-4b54-b4ab-d127f8c41555"
        },
        "item": {
          "id": "47c6f6db-83a1-400a-b9f2-96364f6469e3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f922cc6a-8ab0-45e3-bb0c-a90a857198ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425c7ba-6ab0-405d-98c0-b7ab1dd2ac83",
        "cursor": {
          "ref": "9b5e8737-b36e-4ed4-8f07-d31243a989cc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "35160114-4ae0-4ec4-88b6-88a9d4853b59"
        },
        "item": {
          "id": "a425c7ba-6ab0-405d-98c0-b7ab1dd2ac83",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "28b6d462-478e-4d43-97aa-40f6b01c77ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d905c3-7d95-4e47-a7c1-0af9e11795d2",
        "cursor": {
          "ref": "e487f102-ff5d-49bd-bb7a-b2c078b72ff9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4fda2eb6-2e28-44b9-a8c1-cc30216e88b3"
        },
        "item": {
          "id": "70d905c3-7d95-4e47-a7c1-0af9e11795d2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba264070-292f-41b2-b703-b945ecd0f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec869e3c-29e0-447b-b199-fe0fcc04cd6a",
        "cursor": {
          "ref": "b1f71078-0d70-4bce-bd90-b3677ca3f98a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5b2ed4be-3a1b-436e-96ce-16352578788e"
        },
        "item": {
          "id": "ec869e3c-29e0-447b-b199-fe0fcc04cd6a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "913fc556-c770-4814-9674-7cc4007a7ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfc34b-0c30-448f-8903-eeb809132228",
        "cursor": {
          "ref": "0f555cba-7019-4676-9417-6907d5c6686a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d88ac98-35fb-4850-a7e3-0274e34662c1"
        },
        "item": {
          "id": "13dfc34b-0c30-448f-8903-eeb809132228",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b0a9822c-aa1c-4f63-bea0-aec3b49d8b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283a7c9a-3dc0-4f35-bed1-0acad1b55b7d",
        "cursor": {
          "ref": "0203c78a-6d8b-4f82-94bd-80cd7c4ed576",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0e323b20-cfee-4a68-ae33-bc7d067b8752"
        },
        "item": {
          "id": "283a7c9a-3dc0-4f35-bed1-0acad1b55b7d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9bed64a8-99ab-4ffb-a0ae-bfa6176da6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5e80f4-b947-442a-9827-b88bdd087dd7",
        "cursor": {
          "ref": "1a7ef588-f179-4af5-a805-5bee6b3bae31",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "49132d61-d757-49f5-ab51-9ef09333ebf9"
        },
        "item": {
          "id": "5a5e80f4-b947-442a-9827-b88bdd087dd7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ba5a2467-063b-40af-964e-1ec63f4e713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff24fe9c-0463-4eef-bdc3-c2811397cdbd",
        "cursor": {
          "ref": "d4702727-6bac-4a0d-9f50-d0d0703c32cf",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08e24fb9-1be0-4871-b0da-e90ddc076717"
        },
        "item": {
          "id": "ff24fe9c-0463-4eef-bdc3-c2811397cdbd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d5abd09-5a29-431a-b25d-b1bda6b8f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66ba0de-0845-4db0-8a6c-896de5cdca7e",
        "cursor": {
          "ref": "9b33fa26-e5c9-47e3-a8d6-d935226fa356",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "23e4a1fe-a7c4-4fd7-bdd8-d699190b7c7c"
        },
        "item": {
          "id": "f66ba0de-0845-4db0-8a6c-896de5cdca7e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8eec9a96-f611-484c-ba30-e58cd6a34f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a289a4-c966-4b5c-9f42-326aeb39e63a",
        "cursor": {
          "ref": "98fbac20-350e-4c2c-acb2-c0c769fb41cd",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5b5fb1ef-056b-46cc-b464-8925be0476ba"
        },
        "item": {
          "id": "09a289a4-c966-4b5c-9f42-326aeb39e63a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3c7f9655-2586-4af7-927b-89f38226c8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f239cc86-0c5f-4c41-8b49-4fb87146d92a",
        "cursor": {
          "ref": "bc2cf5fc-3e7d-4602-acf7-884877651968",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ce1ee51a-e5de-45ec-9bd4-5c8e84c2defb"
        },
        "item": {
          "id": "f239cc86-0c5f-4c41-8b49-4fb87146d92a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0ec8bd69-d55e-4aef-893f-dbc859c53171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779aa6d9-01ab-47f8-8ca5-d014e464f6e2",
        "cursor": {
          "ref": "8b73cadd-6ede-4162-8d37-795e0f511b50",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c451cff1-7fa9-4ac6-af27-9c4570cfbd82"
        },
        "item": {
          "id": "779aa6d9-01ab-47f8-8ca5-d014e464f6e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "21a5ac84-ec2a-48a2-b1a7-52df79120d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5b3adf-1249-4e54-855d-ce8ea6b92938",
        "cursor": {
          "ref": "82dd2da3-5254-4da5-be31-bd7d4a1d9f9a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d9f1d8f1-f6c0-4bb0-b3ea-345896e33936"
        },
        "item": {
          "id": "4b5b3adf-1249-4e54-855d-ce8ea6b92938",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e9677b6f-1a12-4f56-93e7-92a2079bbe95",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "7e794a57-c400-49c6-b0c5-41aca6491dde",
        "cursor": {
          "ref": "d3900d4e-0a29-4b93-b36c-5305430d3a0e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fdf5ed40-d794-4237-b6f6-1249a1054507"
        },
        "item": {
          "id": "7e794a57-c400-49c6-b0c5-41aca6491dde",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5427ef99-89c3-428d-bd70-1f9cf74443b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b6dc4-200c-41c3-ab94-9efca85042d4",
        "cursor": {
          "ref": "becd69f9-7891-46a7-8500-df347d69af9b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bdbd1f92-acb9-4659-a812-ccafc0f260af"
        },
        "item": {
          "id": "d28b6dc4-200c-41c3-ab94-9efca85042d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4ba5e78e-2d0c-46e8-a1f1-315619d35a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dce1c27-a984-4bc4-91c0-0e17d1e5b8e8",
        "cursor": {
          "ref": "d74d2b8e-f6c2-4a28-b307-0916a6b4c2fa",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3d947f2a-1177-481f-85a2-3c62e7b929f3"
        },
        "item": {
          "id": "6dce1c27-a984-4bc4-91c0-0e17d1e5b8e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87ebfdb0-f14b-4846-955a-08f8d9c3bf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466a097-68f8-4cd8-847d-f97b571316d6",
        "cursor": {
          "ref": "83cc0541-fc09-4d6d-8db4-37f657717381",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3c9e1eac-bb38-4874-ba79-c440b0d8ce6c"
        },
        "item": {
          "id": "9466a097-68f8-4cd8-847d-f97b571316d6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "775a00a2-9123-43da-b176-aa15a1ffae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa88f722-bfbd-4927-b8d2-1d61aa8d58dc",
        "cursor": {
          "ref": "15387980-4ca5-40c0-aec6-c4f6318d997d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "871759c4-20ef-47ec-9ba8-4d9b09eebca3"
        },
        "item": {
          "id": "fa88f722-bfbd-4927-b8d2-1d61aa8d58dc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6cc4e335-0187-4a4f-b5e8-d0707609af36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566e7a1b-96c7-41fb-9dc5-443050674d72",
        "cursor": {
          "ref": "f7418604-6f24-4b3c-ada6-f7302673e34e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "51422e62-7028-4b4f-9249-69269f1a8804"
        },
        "item": {
          "id": "566e7a1b-96c7-41fb-9dc5-443050674d72",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e39c74f8-32af-48ed-8df2-443890046e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e099e44c-405a-4544-a1a6-0e104cbd439a",
        "cursor": {
          "ref": "ce6060c7-fc43-46d7-91a7-0a1b432a1049",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0aa7d780-316d-434a-899c-2a3ad3b8c0cb"
        },
        "item": {
          "id": "e099e44c-405a-4544-a1a6-0e104cbd439a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8d331793-ceac-46e3-9538-c5c526a91bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4e9b6-189d-4853-aac2-bc99f6e392d7",
        "cursor": {
          "ref": "622eb53f-52b7-438b-9a74-09a0eb6b0247",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8e5dc262-22e1-4d24-94a4-d9a9610c979e"
        },
        "item": {
          "id": "86b4e9b6-189d-4853-aac2-bc99f6e392d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "199c2310-a280-481c-9ff1-5638c6681c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f8bee-b12d-4f42-84bc-d39637264cc4",
        "cursor": {
          "ref": "1a001d78-fa73-4584-b477-8cf817d09e47",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "beb51a23-7946-47f9-a81e-558e38bb2d88"
        },
        "item": {
          "id": "ef4f8bee-b12d-4f42-84bc-d39637264cc4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "84ce4de9-94fb-4ce4-9fe3-aff66fd9cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374c322-1031-4d15-b9ef-c489e25d5818",
        "cursor": {
          "ref": "d7f8d92c-79e5-4fb0-bfdb-4ca31c4c1a57",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "31af881b-b8b7-40fa-9898-a856c4094acf"
        },
        "item": {
          "id": "e374c322-1031-4d15-b9ef-c489e25d5818",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2c75eb45-f1c5-443b-a1b3-e3a1c6dbe975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14341653-d5b7-4e42-be9c-5950d5e7d541",
        "cursor": {
          "ref": "539f7408-f579-4ca0-9e2c-555088589ac2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d983470c-8f60-4db3-925b-900f1a41afe5"
        },
        "item": {
          "id": "14341653-d5b7-4e42-be9c-5950d5e7d541",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "731beaad-02d7-4991-90de-32c6d558ca0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd13476-a118-4bad-8c15-7e7c64ca2e39",
        "cursor": {
          "ref": "ee816bf8-1f9e-478f-b0a0-5f6e9c5df799",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "812013de-e082-4c91-b1ba-06e6a76f6fb5"
        },
        "item": {
          "id": "4cd13476-a118-4bad-8c15-7e7c64ca2e39",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "84bfc9d0-16b0-40e8-9345-fedacda2e102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c0b8c2-88df-4de2-8011-df89e1abbfe8",
        "cursor": {
          "ref": "96a4c941-5f3b-4eaf-a042-14146392add2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae02960d-06f7-42bc-8c3c-577648f6cad1"
        },
        "item": {
          "id": "d3c0b8c2-88df-4de2-8011-df89e1abbfe8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "595424f0-5e33-4352-9fc9-b61d7ab19f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5961ef3a-5a00-4e8d-86bd-06f82bee7b3c",
        "cursor": {
          "ref": "5c1dddd6-a2ae-4c6c-a66f-e69b2c6d84ec",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5ea8055-c397-4061-bb28-2981f70eb2c1"
        },
        "item": {
          "id": "5961ef3a-5a00-4e8d-86bd-06f82bee7b3c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bda99876-66ec-49ff-918a-787c34827693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c07a92-793d-408e-a802-d7dbe915e46e",
        "cursor": {
          "ref": "75631b2f-4a40-4519-bbac-bc0f3e1d9837",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dae06ff9-24f3-4653-a713-a31e23cb211d"
        },
        "item": {
          "id": "60c07a92-793d-408e-a802-d7dbe915e46e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a6a35afc-ae80-4ecf-bf93-de3a5dbe7252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cc125c-c0f9-4560-8be2-783b7ec6b7a8",
        "cursor": {
          "ref": "5e33c334-2192-41b6-9219-48ee1a742757",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "318ff698-3656-499e-84f0-ba31233f60be"
        },
        "item": {
          "id": "73cc125c-c0f9-4560-8be2-783b7ec6b7a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "44b7ce56-bde8-45d8-976d-edbf337d0ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfccc9ba-ecfe-4848-b983-4babe783c196",
        "cursor": {
          "ref": "1a8cf4ff-21f1-4ce1-a475-30738df772e8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0324165-3c0a-469a-8354-049218ce1a94"
        },
        "item": {
          "id": "cfccc9ba-ecfe-4848-b983-4babe783c196",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5d7b74fe-c44f-4f48-b775-5e1477edc98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806f9a3-9462-4961-85b8-a623153f42c7",
        "cursor": {
          "ref": "7c651149-39c4-48cc-bf99-9af91ff7ca89",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6686b56-f3f4-4d1d-a669-26084911c98b"
        },
        "item": {
          "id": "5806f9a3-9462-4961-85b8-a623153f42c7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3328ee93-9c91-4182-91c3-cd75ffc20e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01dc3a7-bc45-4986-beee-9cde2899c3c8",
        "cursor": {
          "ref": "8b60aebc-ae16-4b95-a896-a33129d22534",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "09d29043-8488-4a31-8a13-5a5dc4a8aec5"
        },
        "item": {
          "id": "b01dc3a7-bc45-4986-beee-9cde2899c3c8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f4c65b6c-758e-4ce8-afd2-834a98e31314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c95813a-e630-460e-9400-d88841b3cecc",
        "cursor": {
          "ref": "80bcb7c5-632f-4f34-9ea0-8b39f27ca757",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "314a80a7-c752-4702-a0c3-968f61874b60"
        },
        "item": {
          "id": "0c95813a-e630-460e-9400-d88841b3cecc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bb351d6f-c3d4-41e6-bf84-288ab5aa1014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f3a6a2-72f3-49bb-a3a6-d36d14d4b966",
        "cursor": {
          "ref": "580b7024-bd05-4a0d-90d9-574d67a0092f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "57d82318-6870-4512-ac18-4c01367d8a3e"
        },
        "item": {
          "id": "18f3a6a2-72f3-49bb-a3a6-d36d14d4b966",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0ea6364f-fce5-4acb-8b09-d0a96e018935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aafb15-25d2-4092-ad1b-93c5f7e52eb8",
        "cursor": {
          "ref": "e8544fef-bb1d-4fad-a32a-675da42c8cfe",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2925b5fd-b2a0-4713-9615-f2804837cf7f"
        },
        "item": {
          "id": "a9aafb15-25d2-4092-ad1b-93c5f7e52eb8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3e8a3ffd-bd22-4a07-9c8b-f664a5141a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ce5b32-e580-4a34-b4c0-54b3affe3a9b",
        "cursor": {
          "ref": "7f95c063-5db3-4462-895c-2917cec86c4d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a631db84-8eb3-45c0-8a96-a85d5f768271"
        },
        "item": {
          "id": "d1ce5b32-e580-4a34-b4c0-54b3affe3a9b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "14d5e702-9fc8-44fd-a2fb-e1eb1f482841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1737576e-5eb4-4a4e-98d7-c2ebd6790366",
        "cursor": {
          "ref": "81fb3060-5934-4906-9997-30b78b80cc86",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2111fc90-0597-41c6-967b-cf608d910247"
        },
        "item": {
          "id": "1737576e-5eb4-4a4e-98d7-c2ebd6790366",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6ea1df92-5af6-414d-8157-9415cd0ababf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6434f37f-80e3-4478-8c71-fb72e0543fc5",
        "cursor": {
          "ref": "d50f34e2-4dd6-4f88-8830-d48d3775e611",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5cd349ad-e9ac-4367-b4c5-dbdca7b26c54"
        },
        "item": {
          "id": "6434f37f-80e3-4478-8c71-fb72e0543fc5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4b00cfd5-8a07-447d-9cbf-2422e86ae3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440c686-1857-4ec3-b242-d9337fce4014",
        "cursor": {
          "ref": "4a11892c-5bdc-40cf-88ba-a5aa2ede85f6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "62b39728-25fa-4042-a5cd-45e49ec880d6"
        },
        "item": {
          "id": "8440c686-1857-4ec3-b242-d9337fce4014",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "43dfc071-ef0c-43b2-b63f-d8de0bec10ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a6554-4efc-4293-9f77-d24dbccbe1f5",
        "cursor": {
          "ref": "0615e249-6db9-43d4-9fb9-4a704cf04145",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e0d11879-fa5e-461c-971f-f7e064bb68cd"
        },
        "item": {
          "id": "763a6554-4efc-4293-9f77-d24dbccbe1f5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a264568-4282-40dd-ad07-6d81eb500823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7edffb5-e982-4efc-9dcc-cd965d96d930",
        "cursor": {
          "ref": "2606f2eb-4046-4e64-b081-66d29c0f6445",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "db5fc808-732c-454a-bd3c-e1c3f698b96f"
        },
        "item": {
          "id": "d7edffb5-e982-4efc-9dcc-cd965d96d930",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dd1c4623-7b99-43e5-b1ff-ba7999d3dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d858c56b-cb80-4947-8cc2-972c8b815c82",
        "cursor": {
          "ref": "a13b2df2-3703-484c-a0e6-e5c19c2f7b7d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "025a277f-16a1-4284-af3a-d95fc2cca6c7"
        },
        "item": {
          "id": "d858c56b-cb80-4947-8cc2-972c8b815c82",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c770e4d-7039-4554-8509-a85b10dc5387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d922258d-a7a4-40b3-8935-4f4009528b03",
        "cursor": {
          "ref": "5bdd030c-2e14-4d61-a879-a6ef62381fda",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "511ebcf9-b941-494d-9554-a8aadd3850de"
        },
        "item": {
          "id": "d922258d-a7a4-40b3-8935-4f4009528b03",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "33e841f6-632e-42b3-aba1-bbae5d33867c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa7eba1-9051-44e8-be2b-619dcba17e41",
        "cursor": {
          "ref": "647c1a3b-3561-4b2b-aff0-14bcb64b2987",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0b1843ab-0dc7-4d8a-91b9-fedc029b3c9c"
        },
        "item": {
          "id": "aaa7eba1-9051-44e8-be2b-619dcba17e41",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aaf3e5ed-f2bd-4d78-be3d-496dd1c6eff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07939def-99e1-4868-a98f-97ce10b9f84a",
        "cursor": {
          "ref": "08574a45-df27-4093-b0fc-850b2c7ea9b9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5e70aa00-6588-4379-a980-485bc079644a"
        },
        "item": {
          "id": "07939def-99e1-4868-a98f-97ce10b9f84a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af2eb179-ff3a-4b81-a8c7-0ad5a402196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3c2837-26ae-4d12-a367-64b580b3c524",
        "cursor": {
          "ref": "b26e01d6-16a5-45d5-a166-f3de6127bfca",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "11559e8d-7861-4035-9cfb-6d8346dc6440"
        },
        "item": {
          "id": "ea3c2837-26ae-4d12-a367-64b580b3c524",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8cf95daf-7d0a-4d34-9da4-f4cf63e95293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331861c-44e6-40fc-bee4-dcb4c4bead2d",
        "cursor": {
          "ref": "9be56107-0258-4830-81b1-2e4641ce1620",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2d0fd853-8b6c-4d6c-a523-7c400ff68055"
        },
        "item": {
          "id": "7331861c-44e6-40fc-bee4-dcb4c4bead2d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "28841b6f-bfb1-43ff-9258-ecba97491dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a24a32-609b-48ef-8b68-5a56e11696b1",
        "cursor": {
          "ref": "0e91fa47-613a-4681-94c9-11c5c8514b77",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3c4b33f4-9497-4bc7-9bb7-6f545b605eb6"
        },
        "item": {
          "id": "28a24a32-609b-48ef-8b68-5a56e11696b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5e5473ba-cab9-424e-9837-bbd7e4c621bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f8824-5737-4b19-8fa6-0c4c5d6e79b6",
        "cursor": {
          "ref": "ef076d4d-036e-4938-a716-33ed2dbbce1c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8059519b-2070-443e-8799-cafde00afbc9"
        },
        "item": {
          "id": "a17f8824-5737-4b19-8fa6-0c4c5d6e79b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e2cb6f0d-d0c4-4262-bc6f-5346993b0526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e723b7c5-ec5f-4f0c-8741-f86dd163d5a4",
        "cursor": {
          "ref": "8056a814-e2c9-41f8-aaaf-bc75e96b1b18",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f4b3508a-b331-4a8a-926f-6df771e3da91"
        },
        "item": {
          "id": "e723b7c5-ec5f-4f0c-8741-f86dd163d5a4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e1145429-2cdc-424d-a5e9-21d782ad14a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2099be0e-ef27-4bcc-bcfe-e91da7eb61e3",
        "cursor": {
          "ref": "1ad25e15-49b0-4f60-9fe8-ce9453aab86b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b9b17a7c-4632-4d2c-9d52-ad60426d7db5"
        },
        "item": {
          "id": "2099be0e-ef27-4bcc-bcfe-e91da7eb61e3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4034af5d-93ec-4286-a361-f99ef1a5f1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732eb2f6-dfa8-4f4e-b430-3a74c120ba95",
        "cursor": {
          "ref": "6ac03e2c-fe07-40cd-b39f-35592c24e069",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "85aefcf4-9aa2-42d9-ac96-f4ae7a5fe377"
        },
        "item": {
          "id": "732eb2f6-dfa8-4f4e-b430-3a74c120ba95",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "73003834-3d21-4579-b05f-b1ebeaede818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd29328-1989-4cd7-931b-156557bab52d",
        "cursor": {
          "ref": "31783d09-ec27-44f2-9a82-f35c81f3d499",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "49bbb0cb-63de-4d6b-991b-cc2d04e241ba"
        },
        "item": {
          "id": "7dd29328-1989-4cd7-931b-156557bab52d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "56d56f38-ddf2-46d5-8417-26ed6d081f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea47ec5-fcc6-4909-a923-327ad3f84e11",
        "cursor": {
          "ref": "8c9e1923-24bd-40dd-b783-51394df0b488",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c1fdce10-c4b0-47b1-9579-e41d36572969"
        },
        "item": {
          "id": "1ea47ec5-fcc6-4909-a923-327ad3f84e11",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1d04f40d-0bf5-4247-ae75-6fe135eb8819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969e6820-aecc-4500-8218-696afedf2d5b",
        "cursor": {
          "ref": "a731d7dd-d1ae-414c-af69-5beb76c10d0a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ae692d1f-9dca-42fa-b388-12b84c7dbc18"
        },
        "item": {
          "id": "969e6820-aecc-4500-8218-696afedf2d5b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "511f2db7-4c01-4f20-ad86-db02f985dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c30f0a-664b-40a4-83cd-21dbfd86a9ac",
        "cursor": {
          "ref": "0ea5ab9a-38ff-480a-ae74-187ce293611c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0dd3d7ae-9e4c-447e-be44-fc6cb8c5aefa"
        },
        "item": {
          "id": "e9c30f0a-664b-40a4-83cd-21dbfd86a9ac",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a46f87e5-ca3d-469a-b929-b9494dfe3cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d1495-05e2-4027-9712-371f003f44fc",
        "cursor": {
          "ref": "6ad70c9f-95e6-4c58-bf63-529aca316554",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "faeaa856-f15d-44a4-851a-3912235b4648"
        },
        "item": {
          "id": "8b2d1495-05e2-4027-9712-371f003f44fc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7471099e-7553-41d6-839e-49762f4da72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ab9e6-9e46-4493-b8aa-cd2dfb1df12c",
        "cursor": {
          "ref": "dcd93f47-6b5a-4b20-8e4e-6f46d9a71e27",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "db3eb518-cf31-4293-880d-ad1a54138751"
        },
        "item": {
          "id": "f54ab9e6-9e46-4493-b8aa-cd2dfb1df12c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6886c09-05a5-4db5-84a9-b2b0007b48ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38984b1-c227-411b-819c-54d09c87a6fd",
        "cursor": {
          "ref": "98006000-542a-4cb1-9535-e409e155260a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "12c3bdd9-e314-4f84-86c8-5d4a2d98aa98"
        },
        "item": {
          "id": "b38984b1-c227-411b-819c-54d09c87a6fd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "17265dd1-7d56-4be4-a694-b7bd9304e0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a8cdb8-b894-40fe-a7c8-95b60690f0a6",
        "cursor": {
          "ref": "e6032be9-9bc2-4946-93e0-1da23fe6f5a9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "924e567a-1746-4280-a552-98225adba38b"
        },
        "item": {
          "id": "a7a8cdb8-b894-40fe-a7c8-95b60690f0a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "947e90ed-d2fb-490b-bdb6-e8075f6b376c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea8da4-7f8b-4984-95cd-55f58aff1c04",
        "cursor": {
          "ref": "d68c9bf7-c42e-4219-b173-80c7c45ec6a5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6c45c86a-6947-4483-a350-b507dcbe0428"
        },
        "item": {
          "id": "b8ea8da4-7f8b-4984-95cd-55f58aff1c04",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "90bc9b38-ab8d-4f08-b0c2-02b3f401f6fb",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e77cb6f-a174-4409-bdd1-3da25bfa3626",
        "cursor": {
          "ref": "cd32b7e2-4367-4272-8a45-5285c9dfb104",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "167e84f8-be4f-4186-a5c1-22ba1fcdf0bd"
        },
        "item": {
          "id": "1e77cb6f-a174-4409-bdd1-3da25bfa3626",
          "name": "credentials_verify"
        },
        "response": {
          "id": "776f9162-6efd-4ca7-bfa2-75c4de53cb28",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a176fc9-2207-45e5-b40e-5361f762c7de",
        "cursor": {
          "ref": "9c0f3d60-db62-42f3-a26c-5c3478d0e60c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75a33199-c995-46d6-bc00-34f6c3e148dd"
        },
        "item": {
          "id": "5a176fc9-2207-45e5-b40e-5361f762c7de",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "53285324-0af3-41f1-8142-d94d56bb1296",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69d4566-1230-4135-b09e-f38b4d971e1e",
        "cursor": {
          "ref": "9ea499c3-ffb7-430a-bf12-8d94162a9b09",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f42c7811-8552-422a-b051-8d7f6039a64a"
        },
        "item": {
          "id": "e69d4566-1230-4135-b09e-f38b4d971e1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66003829-58ad-4ec7-b927-5694188497c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69d4566-1230-4135-b09e-f38b4d971e1e",
        "cursor": {
          "ref": "9ea499c3-ffb7-430a-bf12-8d94162a9b09",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f42c7811-8552-422a-b051-8d7f6039a64a"
        },
        "item": {
          "id": "e69d4566-1230-4135-b09e-f38b4d971e1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66003829-58ad-4ec7-b927-5694188497c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2ac0f2-1ee0-46d8-90c6-0af9663adffb",
        "cursor": {
          "ref": "0d8d5f9e-2605-46aa-aeb4-e77ef130374b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "66b4a699-eaba-4d58-a516-c2dcf63fe0d3"
        },
        "item": {
          "id": "1b2ac0f2-1ee0-46d8-90c6-0af9663adffb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05e941aa-4d29-4702-bc60-a34457baa1b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb5eba1-11d3-4bb7-98e0-f75eaac67fc8",
        "cursor": {
          "ref": "2454b347-921e-4d67-814c-e21b65642f79",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "4d973938-06e9-44bd-94b6-09bb406bac12"
        },
        "item": {
          "id": "ceb5eba1-11d3-4bb7-98e0-f75eaac67fc8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff722fdc-1bda-40e1-a3da-96fb765df995",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}